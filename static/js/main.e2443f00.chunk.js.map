{"version":3,"sources":["../ /^/.*$","components/center/pages/blog/ReadingProgressBar/index.css","config/blog/2020-09/coding-java-1.md","config/blog/2020-09/coding-java-2.md","config/blog/2020-09/coding-java-3.md","config/blog/2020-09/coding-java-4.md","config/blog/2020-09/coding-java-5.md","config/blog/2020-09/coding-java-6.md","config/blog/2020-09/git-basics.md","config/blog/2020-09/spring-mapstruct.md","config/blog/2020-09/web-scraping-with-jsoup.md","config/blog/2020-10/new-jdk-features-since-8.md","config/blog/2020-10/react-web-1.md","config/blog/2020-10/using-lombok.md","config/blog/2020-10/web-scraping-with-selenide.md","config/blog/2020-10/writing-chrome-extensions.md","config/blog/2021-04/pull-data-with-retrofit.md","config/blog/2021-05/ffmpeg-basics.md","config/blog/2021-05/js-advanced-syntax.md","config/blog/2021-05/react-calculator.md","config/blog/2021-05/web-security.md","config/blog/2021-06/java-collections-generic-type-covariance.md","config/blog/2021-06/task-scheduling-issue.md","config/blog/2021-08/charles-proxy.md","config/blog/2021-08/sql-basics-sql-server.md","config/blog/2021-09/html-webp.md","config/blog/2021-09/java-8-group-list-items.md","config/blog/2021-09/java-8-hashmap.md","config/blog/2021-09/java-logging.md","config/blog/2021-09/java-test-junit.md","config/blog/2021-09/java-test-mockito.md","config/blog/2021-09/java-test-overview.md","config/blog/2021-09/jpa-usage.md","config/blog/2021-09/kafka-cli.md","config/blog/2021-09/markdown-basics.md","config/blog/2021-09/nodejs-cryptojs.md","config/blog/2021-09/spring-aop.md","config/blog/2021-09/spring-caching-redis.md","config/blog/2021-09/spring-graphql-api.md","config/blog/2021-10/spring-boot-elk-logging.md","config/blog/2021-10/spring-resttemplate-trap.md","config/blog/2021-11/java-remote-debug.md","config/blog/2022-06/spring-cloud-config-git.md","config/blog/2022-07/curl-basics.md","config/blog/2022-07/docker-basics.md","config/blog/2022-07/java-test-powermock.md","config/blog/2022-07/java-test-wiremock.md","config/blog/2022-07/redis-basics.md","config/blog/2022-07/spring-webflux-1.md","config/blog/2022-08/batch-download-files.md","config/blog/2023-01/spring-cloud-config-jdbc.md","config/blog/2023-04/kubectl-basics.md","config/blog/2023-04/spring-azure-service-bus.md","index.css","components/header/Styles.js","components/Styles.js","config/responsive.js","config/workProjects.js","config/hobbyProjects.js","config/blogPosts.js","config/blogPostTags.js","config/firebase.js","components/header/SiteHeader.js","redux/action/actionTypes.js","redux/action/index.js","components/center/pages/home/Avatar.js","components/center/pages/home/CircleShortcut.js","components/center/pages/home/ConsoleLogText.js","components/center/pages/home/Home.js","components/reusable/LoadingIndicator.js","components/reusable/Gallery.js","components/reusable/GradientButton.js","components/center/Project.js","components/center/pages/WorkExp.js","components/center/pages/HobbyProject.js","components/center/pages/PageNotFound.js","components/center/pages/ProjectDetail.js","components/center/pages/personality/HightlightedText.js","components/center/pages/personality/Personality.js","service/CommentService.js","service/LocalStorageService.js","service/NetworkService.js","components/center/pages/blog/Blog.js","components/center/pages/blog/Styles.js","components/center/pages/blog/TocMarkdown.js","components/center/pages/blog/CustomMarkdown.js","components/center/pages/blog/renderers/CustomParagraphRenderer.js","utils/ScrollUtils.js","utils/MarkdownTocUtils.js","components/center/pages/blog/renderers/CustomHeadingRenderer.js","components/center/pages/blog/renderers/CustomLinkRenderer.js","components/center/pages/blog/renderers/CustomTableRenderer.js","components/center/pages/blog/renderers/CustomImageRenderer.js","components/center/pages/blog/MarkdownContent.js","components/center/pages/blog/ReadingProgressBar/index.js","components/center/pages/blog/BlogPost.js","components/center/pages/Contact.js","components/footer/ContactItem.js","components/footer/SiteFooter.js","components/reusable/FullScreenGallery.js","components/Eportfolio.js","components/global/MenuItem.js","components/global/FullScreenMenu.js","components/global/button/AppButtons.js","components/global/button/NavMenuButton.js","components/global/CookiesConsent.js","App.js","redux/reducer/imagePopupReducer.js","redux/reducer/index.js","redux/store.js","index.js","components/center/pages/index.js","webpack:///./src/components/center/pages/blog/ReadingProgressBar/index.js?32c3","components/center/pages/blog/renderers/index.js","config/index.js","config/particles/index.js","webpack:///./src/redux/action/index.js?6d54","webpack:///./src/redux/reducer/index.js?5b93","service/index.js","utils/index.js","webpack:///./src/index.js?b008","webpack:///./src/App.js?bb8d","webpack:///./src/components/Eportfolio.js?055f","webpack:///./src/components/Styles.js?ae81","webpack:///./src/components/center/Project.js?c41b","webpack:///./src/components/center/pages/Contact.js?06f1","webpack:///./src/components/center/pages/HobbyProject.js?b882","webpack:///./src/components/center/pages/PageNotFound.js?15f0","webpack:///./src/components/center/pages/ProjectDetail.js?1eb5","webpack:///./src/components/center/pages/WorkExp.js?6408","webpack:///./src/components/center/pages/blog/Blog.js?748d","webpack:///./src/components/center/pages/blog/BlogPost.js?a0a7","webpack:///./src/components/center/pages/blog/CustomMarkdown.js?5daa","webpack:///./src/components/center/pages/blog/MarkdownContent.js?ebd9","webpack:///./src/components/center/pages/blog/Styles.js?e4c1","webpack:///./src/components/center/pages/blog/TocMarkdown.js?a4bb","webpack:///./src/components/center/pages/blog/renderers/CustomHeadingRenderer.js?fffe","webpack:///./src/components/center/pages/blog/renderers/CustomImageRenderer.js?1ed0","webpack:///./src/components/center/pages/blog/renderers/CustomLinkRenderer.js?1010","webpack:///./src/components/center/pages/blog/renderers/CustomParagraphRenderer.js?6c34","webpack:///./src/components/center/pages/blog/renderers/CustomTableRenderer.js?49ee","webpack:///./src/components/center/pages/home/Avatar.js?a7f3","webpack:///./src/components/center/pages/home/CircleShortcut.js?cbd5","webpack:///./src/components/center/pages/home/ConsoleLogText.js?6a69","webpack:///./src/components/center/pages/home/Home.js?bfa0","webpack:///./src/components/center/pages/personality/HightlightedText.js?1ab1","webpack:///./src/components/center/pages/personality/Personality.js?2c07","webpack:///./src/components/footer/ContactItem.js?821a","webpack:///./src/components/footer/SiteFooter.js?74f2","webpack:///./src/components/global/CookiesConsent.js?4a2a","webpack:///./src/components/global/FullScreenMenu.js?f1f0","webpack:///./src/components/global/MenuItem.js?aa20","webpack:///./src/components/global/button/AppButtons.js?1341","webpack:///./src/components/global/button/NavMenuButton.js?e275","webpack:///./src/components/header/SiteHeader.js?cebe","webpack:///./src/components/header/Styles.js?2a59","webpack:///./src/components/reusable/FullScreenGallery.js?7ac3","webpack:///./src/components/reusable/Gallery.js?462e","webpack:///./src/components/reusable/GradientButton.js?2727","webpack:///./src/components/reusable/LoadingIndicator.js?5df6","webpack:///./src/config/blogPostTags.js?e744","webpack:///./src/config/blogPosts.js?0152","webpack:///./src/config/firebase.js?0b3c","webpack:///./src/config/hobbyProjects.js?e0c3","webpack:///./src/config/responsive.js?275a","webpack:///./src/config/workProjects.js?5b9c","webpack:///./src/redux/action/actionTypes.js?dec9","webpack:///./src/redux/reducer/imagePopupReducer.js?b857","webpack:///./src/redux/store.js?8d6d","webpack:///./src/service/CommentService.js?ccd5","webpack:///./src/service/LocalStorageService.js?c689","webpack:///./src/service/NetworkService.js?3e76","webpack:///./src/utils/MarkdownTocUtils.js?be31","webpack:///./src/utils/ScrollUtils.js?e347","wdyr.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","NameAndRole","styled","div","Name","Role","Body","NoSelect","GradientText","NormalText","responsiveMaxWidth","window","devicePixelRatio","responsiveMinWidth","workProjects","projectId","projectName","projectNature","year","images","position","contractPeriod","workLocation","teamSize","descriptionOverview","descriptionContinued","hobbyProjects","description","className","target","rel","href","blogPosts","postId","src","title","date","thumbnail","tags","previousPostId","path","blogPostTags","name","icon","color","firebaseHost","SiteHeader","props","useState","openExp","setOpenExp","currentPath","useLocation","pathname","linkPath","to","as","Link","active","style","textAlign","pointerEvents","Responsive","minWidth","paddingBottom","Container","text","Menu","stackable","borderless","compact","widths","size","inverted","Item","draggable","Dropdown","item","simple","open","onMouseEnter","onMouseLeave","memoComponent","memo","prev","next","CHANGE_IMAGE_POPUP_SOURCE","changeImagePopupSource","data","type","Avatar","queryString","setQueryString","dispatch","useDispatch","paddingTop","srcSet","encodeURIComponent","replace","alt","onContextMenu","preventDefault","onClick","activeIndex","onError","setTimeout","Math","random","cursor","padding","background","CircleShortcutWrapper","themeColor","hovered","hoverBg","normalBg","hoverTextColor","normalTextColor","glowEffectBg","CircleShortcut","linkTo","normalColor","hoverColor","isHovered","setHovered","display","Segment","circular","onMouseOver","onTouchStart","onTouchEnd","onTouchCancel","Header","textTransform","CONSOLE_LOG_PREFIX","CONSOLE_LOG_PREFIX_MOBILE","CONSOLE_LOG_SUFFIX","MacTerminal","MacTerminalButtons","SelfTypingText","isMobile","ConsoleLogText","typewriter","options","delay","deleteSpeed","loop","onInit","consoleLogLines","pauseFor","forEach","line","i","arr","deleteChars","length","typeString","callFunction","document","console","log","start","typewriterOnInit","borderRadius","boxShadow","maxWidth","Home","age","moment","diff","Helmet","process","Grid","centered","Column","width","stretched","vertical","basic","padded","columns","LoadingIndicatorWrapper","LoadingIndicatorContainer","Array","fill","v","itemCountPerRow","index","Number","floor","toFixed","join","LoadingIndicator","GalleryWrapper","maxHeight","hiddenWidth","hiddenHeight","keyframes","scrollImageHorizontally","scrollImageVertically","loaded","GalleryButtons","IndexAndCount","span","Gallery","height","displayIndex","setDisplayIndex","setActiveIndex","isLoaded","setLoaded","preferredWidth","setPreferredWidth","setHiddenWidth","setHiddenHeight","undefined","originalWidth","setOriginalWidth","swipeConfig","onSwipedLeft","onSwipedRight","preventDefaultTouchmoveEvent","imageCenterSwipeHandlers","useSwipeable","buttonsSwipeHandlers","GalleryButton","clickToIndex","stopPropagation","backgroundColor","once","offset","onLoad","windowWidth","windowHeight","imgWidth","imgHeight","ButtonWrapper","capitalize","GradientButton","children","action","rest","HeaderLinkWrapper","Project","detail","leftToRight","colors","yearColor","isInteger","constructImage","verticalAlign","isEmpty","top","raised","Label","Icon","constructDescription","tag","float","transform","state","fromAllProjects","Subheader","justifyContent","alignItems","margin","reversed","relaxed","WorkExp","project","Divider","section","HobbyProject","projects","PageNotFound","Message","error","floating","header","content","CustomSegment","ProjectDetail","projectType","backPath","useParams","find","hoverImageIndex","setHoverImageIndex","location","navigate","useNavigate","backToAllProjectsButton","history","Button","labelPosition","Group","horizontal","opacity","image","zIndex","filter","HightlightedTextStyle","HightlightedText","url","openLink","personalityConfigs","fontWeight","personalities","isActive","personalityCombinationDescriptions","personalityNames","I","E","N","S","T","F","J","P","personalityLinks","personalityDescriptions","Personality","constructPersonalitySection","imageSrc","replaceAll","toLowerCase","slice","personality","postComment","firstName","lastName","phone","email","message","clientIp","Date","axios","post","getTime","dateISO","toISOString","getReadBlogPostIds","localStorage","getItem","split","LocalStorageService","getCookiesConsent","setCookiesConsent","accepted","setItem","addReadBlogPostId","readBlogPostIds","from","Set","getBlogPostFontSizeLevel","setBlogPostFontSizeLevel","fontSizeLevel","getClientIp","get","CustomItemGroup","CustomCardGroup","HeaderLink","fromAllBlogPosts","Blog","readBlogPostIdsFromLocalStorage","allBlogPostTags","uniqBy","flatMap","wantedTagNames","setWantedTagNames","unwantedTagNames","setUnwantedTagNames","filteredBlogPosts","intersection","reverse","toBlogTags","union","clearing","includes","without","divided","Image","Content","empty","marginLeft","Meta","format","Description","Extra","floated","Card","extra","info","MarkdownLink","CustomHeader","HeaderWrapper","TocMarkdown","markdown","tableOfContents","toc","json","minLevel","min","lvl","HashLink","slug","smooth","block","attached","paddingLeft","CustomMarkdown","CustomParagraphRenderer","isScrolledToBottom","abs","scrollingElement","scrollTop","offsetHeight","scrollHeight","ScrollUtils","isScrollToTopButtonVisible","scrollToElement","element","getBoundingClientRect","scrollIntoView","MarkdownTocUtils","generateTocJsonFromMarkdown","Heading","anchorRef","level","ref","useCallback","node","hash","decodeURIComponent","CustomHeadingRenderer","tocArray","headingText","CustomMarkdownLink","startsWith","CustomLinkRenderer","CustomTableRenderer","overflowX","marginTop","marginBottom","CustomMarkdownImage","CustomImageRenderer","MarkdownContent","processedMarkdown","headingRenderer","remarkPlugins","gfm","components","p","h1","h2","h3","h4","h5","h6","a","table","img","ReadingProgressBar","progress","max","value","HeaderWithAnchor","FontSizeButtonGroup","MarkdownLinkWrapper","BlogPost","setFontSizeLevel","allBlogPosts","currentPost","source","require","default","backToAllBlogPostsButton","newerPost","findIndex","newerButton","olderPost","olderButton","buttons","readingProgress","setReadingProgress","useEffect","scrollEventListener","postContentElement","getElementById","readProgress","clamp","documentElement","offsetTop","addEventListener","removeEventListener","disabled","prevLevel","newLevel","fontSize","lineHeight","first","objectFit","errorMessageMap","mapValues","headerIcon","buttonIcon","button","ContactFormWrapper","Contact","setFirstName","setLastName","setPhone","setEmail","setMessage","isSendButtonClicked","setSendButtonClicked","isSent","setSent","isErrorPopupOpen","setErrorPopupOpen","errorMissingEmailOrPhone","pointing","errorMissingMessage","errorInvalidEmail","RegExp","test","errorInvalidPhone","errorMessageType","isValidInput","Transition","visible","animation","duration","Modal","Actions","Form","loading","Input","fluid","label","placeholder","onChange","required","TextArea","rows","NetworkService","then","response","CommentService","catch","alert","ContactItemWrapper","ContactItem","iconRotation","subHeader","isUrl","rotated","SiteFooter","currentYear","getFullYear","lastUpdatedTime","gitInfo","lastUpdatedOn","commit","shortHash","hidden","FullScreenGalleryWrapper","show","FullScreenGallery","useSelector","imagePopupReducer","key","hasImage","onSwipedUp","onSwipedDown","Eportfolio","historyChangeCallback","navigationType","useNavigationType","scrollTo","caseSensitive","MenuItemWrapper","MenuItem","menuItemCallback","PATHS","Overlay","navMenuOpen","FullScreenMenu","ScrollToTopButton","NavMenuButtonShadow","ButtonsBackground","NavMenuButtonWrapper","NavMenuButtonLine","NavMenuButton","body","overflow","CookiesConsentWrapper","consent","CookiesConsentButton","CookiesConsent","setConsent","particlesConfig","getMonth","snowConfig","defaultConfig","App","isImagePopupVisible","setScrollToTopButtonVisible","isNavMenuOpen","setNavMenuOpen","escapeKeyListener","keyCode","transition","params","hasImages","allReducers","combineReducers","store","createStore","ReactDOM","render"],"mappings":"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,OAAe,qoU,iCCAf,OAAe,8oY,iCCAf,OAAe,g7H,iCCAf,OAAe,2+E,iCCAf,OAAe,oqB,iCCAf,OAAe,q3E,iCCAf,OAAe,osD,iCCAf,OAAe,k7D,iCCAf,OAAe,8/C,iCCAf,OAAe,wM,iCCAf,OAAe,0Z,iCCAf,OAAe,i6D,iCCAf,OAAe,gxH,iCCAf,OAAe,qoU,iCCAf,OAAe,2lH,iCCAf,OAAe,wiD,iCCAf,OAAe,qpM,iCCAf,OAAe,owD,iCCAf,OAAe,unH,iCCAf,OAAe,o9E,iCCAf,OAAe,87F,iCCAf,OAAe,qwE,iCCAf,OAAe,y7D,iCCAf,OAAe,iyG,iCCAf,OAAe,i7E,iCCAf,OAAe,wzB,iCCAf,OAAe,yzM,iCCAf,OAAe,m9R,iCCAf,OAAe,shE,iCCAf,OAAe,8gE,iCCAf,OAAe,ooC,iCCAf,OAAe,+otB,iCCAf,OAAe,4S,iCCAf,OAAe,qogD,sgBCAf,OAAe,iS,iCCAf,OAAe,qhpB,iCCAf,OAAe,0M,iCCAf,OAAe,q0B,iCCAf,OAAe,ic,iCCAf,OAAe,spB,iCCAf,OAAe,4pC,iCCAf,OAAe,uN,iCCAf,OAAe,8R,iCCAf,OAAe,gkC,iCCAf,OAAe,iQ","file":"static/js/main.e2443f00.chunk.js","sourcesContent":["var map = {\n\t\"./\": 375,\n\t\"./App\": 520,\n\t\"./App.js\": 520,\n\t\"./components/Eportfolio\": 521,\n\t\"./components/Eportfolio.js\": 521,\n\t\"./components/Styles\": 522,\n\t\"./components/Styles.js\": 522,\n\t\"./components/center/Project\": 523,\n\t\"./components/center/Project.js\": 523,\n\t\"./components/center/pages\": 270,\n\t\"./components/center/pages/\": 270,\n\t\"./components/center/pages/Contact\": 524,\n\t\"./components/center/pages/Contact.js\": 524,\n\t\"./components/center/pages/HobbyProject\": 525,\n\t\"./components/center/pages/HobbyProject.js\": 525,\n\t\"./components/center/pages/PageNotFound\": 526,\n\t\"./components/center/pages/PageNotFound.js\": 526,\n\t\"./components/center/pages/ProjectDetail\": 527,\n\t\"./components/center/pages/ProjectDetail.js\": 527,\n\t\"./components/center/pages/WorkExp\": 528,\n\t\"./components/center/pages/WorkExp.js\": 528,\n\t\"./components/center/pages/blog/Blog\": 529,\n\t\"./components/center/pages/blog/Blog.js\": 529,\n\t\"./components/center/pages/blog/BlogPost\": 530,\n\t\"./components/center/pages/blog/BlogPost.js\": 530,\n\t\"./components/center/pages/blog/CustomMarkdown\": 531,\n\t\"./components/center/pages/blog/CustomMarkdown.js\": 531,\n\t\"./components/center/pages/blog/MarkdownContent\": 532,\n\t\"./components/center/pages/blog/MarkdownContent.js\": 532,\n\t\"./components/center/pages/blog/ReadingProgressBar\": 271,\n\t\"./components/center/pages/blog/ReadingProgressBar/\": 271,\n\t\"./components/center/pages/blog/ReadingProgressBar/index\": 271,\n\t\"./components/center/pages/blog/ReadingProgressBar/index.css\": 1043,\n\t\"./components/center/pages/blog/ReadingProgressBar/index.js\": 271,\n\t\"./components/center/pages/blog/Styles\": 533,\n\t\"./components/center/pages/blog/Styles.js\": 533,\n\t\"./components/center/pages/blog/TocMarkdown\": 534,\n\t\"./components/center/pages/blog/TocMarkdown.js\": 534,\n\t\"./components/center/pages/blog/renderers\": 272,\n\t\"./components/center/pages/blog/renderers/\": 272,\n\t\"./components/center/pages/blog/renderers/CustomHeadingRenderer\": 535,\n\t\"./components/center/pages/blog/renderers/CustomHeadingRenderer.js\": 535,\n\t\"./components/center/pages/blog/renderers/CustomImageRenderer\": 536,\n\t\"./components/center/pages/blog/renderers/CustomImageRenderer.js\": 536,\n\t\"./components/center/pages/blog/renderers/CustomLinkRenderer\": 537,\n\t\"./components/center/pages/blog/renderers/CustomLinkRenderer.js\": 537,\n\t\"./components/center/pages/blog/renderers/CustomParagraphRenderer\": 538,\n\t\"./components/center/pages/blog/renderers/CustomParagraphRenderer.js\": 538,\n\t\"./components/center/pages/blog/renderers/CustomTableRenderer\": 539,\n\t\"./components/center/pages/blog/renderers/CustomTableRenderer.js\": 539,\n\t\"./components/center/pages/blog/renderers/index\": 272,\n\t\"./components/center/pages/blog/renderers/index.js\": 272,\n\t\"./components/center/pages/home/Avatar\": 540,\n\t\"./components/center/pages/home/Avatar.js\": 540,\n\t\"./components/center/pages/home/CircleShortcut\": 541,\n\t\"./components/center/pages/home/CircleShortcut.js\": 541,\n\t\"./components/center/pages/home/ConsoleLogText\": 542,\n\t\"./components/center/pages/home/ConsoleLogText.js\": 542,\n\t\"./components/center/pages/home/Home\": 543,\n\t\"./components/center/pages/home/Home.js\": 543,\n\t\"./components/center/pages/index\": 270,\n\t\"./components/center/pages/index.js\": 270,\n\t\"./components/center/pages/personality/HightlightedText\": 544,\n\t\"./components/center/pages/personality/HightlightedText.js\": 544,\n\t\"./components/center/pages/personality/Personality\": 545,\n\t\"./components/center/pages/personality/Personality.js\": 545,\n\t\"./components/footer/ContactItem\": 546,\n\t\"./components/footer/ContactItem.js\": 546,\n\t\"./components/footer/SiteFooter\": 547,\n\t\"./components/footer/SiteFooter.js\": 547,\n\t\"./components/global/CookiesConsent\": 548,\n\t\"./components/global/CookiesConsent.js\": 548,\n\t\"./components/global/FullScreenMenu\": 549,\n\t\"./components/global/FullScreenMenu.js\": 549,\n\t\"./components/global/MenuItem\": 550,\n\t\"./components/global/MenuItem.js\": 550,\n\t\"./components/global/button/AppButtons\": 551,\n\t\"./components/global/button/AppButtons.js\": 551,\n\t\"./components/global/button/NavMenuButton\": 552,\n\t\"./components/global/button/NavMenuButton.js\": 552,\n\t\"./components/header/SiteHeader\": 553,\n\t\"./components/header/SiteHeader.js\": 553,\n\t\"./components/header/Styles\": 554,\n\t\"./components/header/Styles.js\": 554,\n\t\"./components/reusable/FullScreenGallery\": 555,\n\t\"./components/reusable/FullScreenGallery.js\": 555,\n\t\"./components/reusable/Gallery\": 556,\n\t\"./components/reusable/Gallery.js\": 556,\n\t\"./components/reusable/GradientButton\": 557,\n\t\"./components/reusable/GradientButton.js\": 557,\n\t\"./components/reusable/LoadingIndicator\": 558,\n\t\"./components/reusable/LoadingIndicator.js\": 558,\n\t\"./config\": 273,\n\t\"./config/\": 273,\n\t\"./config/blog/2020-09/coding-java-1.md\": 1044,\n\t\"./config/blog/2020-09/coding-java-2.md\": 1045,\n\t\"./config/blog/2020-09/coding-java-3.md\": 1046,\n\t\"./config/blog/2020-09/coding-java-4.md\": 1047,\n\t\"./config/blog/2020-09/coding-java-5.md\": 1048,\n\t\"./config/blog/2020-09/coding-java-6.md\": 1049,\n\t\"./config/blog/2020-09/git-basics.md\": 1050,\n\t\"./config/blog/2020-09/spring-mapstruct.md\": 1051,\n\t\"./config/blog/2020-09/web-scraping-with-jsoup.md\": 1052,\n\t\"./config/blog/2020-10/new-jdk-features-since-8.md\": 1053,\n\t\"./config/blog/2020-10/react-web-1.md\": 1054,\n\t\"./config/blog/2020-10/using-lombok.md\": 1055,\n\t\"./config/blog/2020-10/web-scraping-with-selenide.md\": 1056,\n\t\"./config/blog/2020-10/writing-chrome-extensions.md\": 1057,\n\t\"./config/blog/2021-04/pull-data-with-retrofit.md\": 1058,\n\t\"./config/blog/2021-05/ffmpeg-basics.md\": 1059,\n\t\"./config/blog/2021-05/js-advanced-syntax.md\": 1060,\n\t\"./config/blog/2021-05/react-calculator.md\": 1061,\n\t\"./config/blog/2021-05/web-security.md\": 1062,\n\t\"./config/blog/2021-06/java-collections-generic-type-covariance.md\": 1063,\n\t\"./config/blog/2021-06/task-scheduling-issue.md\": 1064,\n\t\"./config/blog/2021-08/charles-proxy.md\": 1065,\n\t\"./config/blog/2021-08/sql-basics-sql-server.md\": 1066,\n\t\"./config/blog/2021-09/html-webp.md\": 1067,\n\t\"./config/blog/2021-09/java-8-group-list-items.md\": 1068,\n\t\"./config/blog/2021-09/java-8-hashmap.md\": 1069,\n\t\"./config/blog/2021-09/java-logging.md\": 1070,\n\t\"./config/blog/2021-09/java-test-junit.md\": 1071,\n\t\"./config/blog/2021-09/java-test-mockito.md\": 1072,\n\t\"./config/blog/2021-09/java-test-overview.md\": 1073,\n\t\"./config/blog/2021-09/jpa-usage.md\": 1074,\n\t\"./config/blog/2021-09/kafka-cli.md\": 1075,\n\t\"./config/blog/2021-09/markdown-basics.md\": 1076,\n\t\"./config/blog/2021-09/nodejs-cryptojs.md\": 1077,\n\t\"./config/blog/2021-09/spring-aop.md\": 1078,\n\t\"./config/blog/2021-09/spring-caching-redis.md\": 1079,\n\t\"./config/blog/2021-09/spring-graphql-api.md\": 1080,\n\t\"./config/blog/2021-10/spring-boot-elk-logging.md\": 1081,\n\t\"./config/blog/2021-10/spring-resttemplate-trap.md\": 1082,\n\t\"./config/blog/2021-11/java-remote-debug.md\": 1083,\n\t\"./config/blog/2022-06/spring-cloud-config-git.md\": 1084,\n\t\"./config/blog/2022-07/curl-basics.md\": 1085,\n\t\"./config/blog/2022-07/docker-basics.md\": 1086,\n\t\"./config/blog/2022-07/java-test-powermock.md\": 1087,\n\t\"./config/blog/2022-07/java-test-wiremock.md\": 1088,\n\t\"./config/blog/2022-07/redis-basics.md\": 1089,\n\t\"./config/blog/2022-07/spring-webflux-1.md\": 1090,\n\t\"./config/blog/2022-08/batch-download-files.md\": 1091,\n\t\"./config/blog/2023-01/spring-cloud-config-jdbc.md\": 1092,\n\t\"./config/blog/2023-04/kubectl-basics.md\": 1093,\n\t\"./config/blog/2023-04/spring-azure-service-bus.md\": 1094,\n\t\"./config/blogPostTags\": 559,\n\t\"./config/blogPostTags.js\": 559,\n\t\"./config/blogPosts\": 560,\n\t\"./config/blogPosts.js\": 560,\n\t\"./config/firebase\": 561,\n\t\"./config/firebase.js\": 561,\n\t\"./config/hobbyProjects\": 562,\n\t\"./config/hobbyProjects.js\": 562,\n\t\"./config/index\": 273,\n\t\"./config/index.js\": 273,\n\t\"./config/particles\": 274,\n\t\"./config/particles/\": 274,\n\t\"./config/particles/defaultConfig\": 563,\n\t\"./config/particles/defaultConfig.json\": 563,\n\t\"./config/particles/index\": 274,\n\t\"./config/particles/index.js\": 274,\n\t\"./config/particles/snowConfig\": 564,\n\t\"./config/particles/snowConfig.json\": 564,\n\t\"./config/responsive\": 565,\n\t\"./config/responsive.js\": 565,\n\t\"./config/workProjects\": 566,\n\t\"./config/workProjects.js\": 566,\n\t\"./index\": 375,\n\t\"./index.css\": 1095,\n\t\"./index.js\": 375,\n\t\"./redux/action\": 275,\n\t\"./redux/action/\": 275,\n\t\"./redux/action/actionTypes\": 567,\n\t\"./redux/action/actionTypes.js\": 567,\n\t\"./redux/action/index\": 275,\n\t\"./redux/action/index.js\": 275,\n\t\"./redux/reducer\": 276,\n\t\"./redux/reducer/\": 276,\n\t\"./redux/reducer/imagePopupReducer\": 568,\n\t\"./redux/reducer/imagePopupReducer.js\": 568,\n\t\"./redux/reducer/index\": 276,\n\t\"./redux/reducer/index.js\": 276,\n\t\"./redux/store\": 569,\n\t\"./redux/store.js\": 569,\n\t\"./service\": 277,\n\t\"./service/\": 277,\n\t\"./service/CommentService\": 570,\n\t\"./service/CommentService.js\": 570,\n\t\"./service/LocalStorageService\": 571,\n\t\"./service/LocalStorageService.js\": 571,\n\t\"./service/NetworkService\": 572,\n\t\"./service/NetworkService.js\": 572,\n\t\"./service/index\": 277,\n\t\"./service/index.js\": 277,\n\t\"./utils\": 278,\n\t\"./utils/\": 278,\n\t\"./utils/MarkdownTocUtils\": 573,\n\t\"./utils/MarkdownTocUtils.js\": 573,\n\t\"./utils/ScrollUtils\": 574,\n\t\"./utils/ScrollUtils.js\": 574,\n\t\"./utils/index\": 278,\n\t\"./utils/index.js\": 278,\n\t\"./wdyr\": 575,\n\t\"./wdyr.js\": 575\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1042;","export default \"#reading-progress-bar {\\r\\n\\tappearance: none;\\r\\n\\tposition: fixed;\\r\\n\\tbottom: 0;\\r\\n\\tleft: 0;\\r\\n\\tdisplay: block;\\r\\n\\twidth: 100%;\\r\\n\\theight: 20px;\\r\\n\\tbackground: none;\\r\\n\\tz-index: 1000;\\r\\n}\\r\\n\\r\\n#reading-progress-bar::-webkit-progress-bar {\\r\\n\\tbackground: transparent;\\r\\n}\\r\\n\\r\\n#reading-progress-bar::-webkit-progress-value {\\r\\n\\tdisplay: block;\\r\\n\\tbackground-color: rgba(253, 216, 53, 0.5);\\r\\n\\tborder-radius: 0 10px 10px 0;\\r\\n\\ttransition: background-color 500ms;\\r\\n}\\r\\n\\r\\n#reading-progress-bar[value=\\\"0\\\"]::-webkit-progress-value,\\r\\n#reading-progress-bar[value^=\\\"0.\\\"]::-webkit-progress-value,\\r\\n#reading-progress-bar[value^=\\\"1\\\"]::-webkit-progress-value,\\r\\n#reading-progress-bar[value^=\\\"2\\\"]::-webkit-progress-value,\\r\\n#reading-progress-bar[value^=\\\"3\\\"]::-webkit-progress-value,\\r\\n#reading-progress-bar[value^=\\\"4\\\"]::-webkit-progress-value,\\r\\n#reading-progress-bar[value^=\\\"5.\\\"]::-webkit-progress-value,\\r\\n#reading-progress-bar[value^=\\\"6.\\\"]::-webkit-progress-value,\\r\\n#reading-progress-bar[value^=\\\"7.\\\"]::-webkit-progress-value,\\r\\n#reading-progress-bar[value^=\\\"8.\\\"]::-webkit-progress-value,\\r\\n#reading-progress-bar[value^=\\\"9.\\\"]::-webkit-progress-value {\\r\\n\\tbackground-color: rgba(96, 125, 139, 0.5);\\r\\n}\\r\\n\\r\\n#reading-progress-bar[value^=\\\"97.\\\"]::-webkit-progress-value,\\r\\n#reading-progress-bar[value^=\\\"98.\\\"]::-webkit-progress-value,\\r\\n#reading-progress-bar[value^=\\\"99.\\\"]::-webkit-progress-value,\\r\\n#reading-progress-bar[value=\\\"100\\\"]::-webkit-progress-value {\\r\\n\\tbackground-color: rgba(67, 160, 71, 0.5);\\r\\n}\\r\\n\";","export default \"# 1 安裝所需程式\\r\\n\\r\\n## 1.1 Java Development Kit（JDK）（必須）\\r\\n\\r\\nProgramming language + JVM（用黎執行 Java bytecode）。\\r\\n\\r\\n去 [Oracle JDK 官網](https://www.oracle.com/java/technologies/downloads/#java8) 下載，需要 Oracle 帳號。\\r\\n\\r\\n或者直接去 [Michael 既 Google Drive](https://drive.google.com/file/d/1vo73oJDDQSX2CDMjy6nqoTYClZ-ZWXwo/view?usp=sharing)。\\r\\n\\r\\n亦可以用 Azul 推出既 OpenJDK 既 Zulu builds：\\r\\n\\r\\n-   [Azul OpenJDK Zulu builds](https://www.azul.com/downloads/?version=java-8-lts&os=windows&architecture=x86-64-bit&package=jdk)\\r\\n-   [Azul OpenJDK 8u322 Zulu build（ZIP 檔）](https://cdn.azul.com/zulu/bin/zulu8.60.0.21-ca-jdk8.0.322-win_x64.zip)\\r\\n\\r\\n需要執行 + 安裝。\\r\\n\\r\\n建議至少安裝 Java 8 或 11。新版 Eclipse 可能需要 Java 11 先用到（但可以用 JDK 8 黎 compile code）。\\r\\n\\r\\n### 1.1.1 Double-click 執行 JAR 檔\\r\\n\\r\\n如果安裝左唔同版本既 JDKs，又想 double-click JAR 檔（`.jar`）可以用自己揀既 JDK 黎開，可以用下面既 registry 檔案黎直接改。\\r\\n\\r\\n1. 先指定用 JDK 裡面既 `bin/javaw.exe` 檔作為開啟 `.jar` 檔既默認程式。\\r\\n1. 根據 JDK 安裝路徑修改下面既內容，然後儲存做一個 `.reg` 檔。\\r\\n1. Double-click 呢個檔案。\\r\\n\\r\\n如果你既 JDK 係用 `.exe` 檔安裝既（適用於 Oracle JDK，其他唔清楚）：\\r\\n\\r\\n```plaintext\\r\\nWindows Registry Editor Version 5.00\\r\\n\\r\\n[HKEY_CLASSES_ROOT\\\\jarfile\\\\shell\\\\open\\\\command]\\r\\n@=\\\"\\\\\\\"C:\\\\\\\\Program Files\\\\\\\\Java\\\\\\\\jdk1.8.0_333\\\\\\\\bin\\\\\\\\javaw.exe\\\\\\\" -jar \\\\\\\"%1\\\\\\\" %*\\\"\\r\\n```\\r\\n\\r\\n如果你既 JDK 係 portable 安裝（解壓縮 `.zip` 檔），未必會有上面既 registry，咁就建議改以下既 registry：\\r\\n\\r\\n```plaintext\\r\\nWindows Registry Editor Version 5.00\\r\\n\\r\\n[HKEY_CLASSES_ROOT\\\\Applications\\\\javaw.exe\\\\shell\\\\open\\\\command]\\r\\n@=\\\"\\\\\\\"C:\\\\\\\\Users\\\\\\\\Michael\\\\\\\\Desktop\\\\\\\\Apps\\\\\\\\zulu11\\\\\\\\bin\\\\\\\\javaw.exe\\\\\\\" -jar \\\\\\\"%1\\\\\\\" %*\\\"\\r\\n```\\r\\n\\r\\n完成之後我地以後 double-click 黎開 JAR 檔既時候就會用到我地指定既 JDK。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [StackOverflow - How to run .jar file by double click on Windows 7 64-bit?](https://stackoverflow.com/questions/8511063/how-to-run-jar-file-by-double-click-on-windows-7-64-bit)\\r\\n-   [Difference between Java.exe and Javaw.exe](https://howtodoinjava.com/java/basics/difference-between-java-exe-and-javaw-exe/)\\r\\n\\r\\n---\\r\\n\\r\\n## 1.2 Eclipse IDE（必須）\\r\\n\\r\\n強大既 Java 專用 editor，用黎方便開發，可以 highlight syntax、compile 以及 debug with breakpoints。\\r\\n\\r\\n[Eclipse IDE for Enterprise Java and Web Developers 官方下載](https://www.eclipse.org/downloads/packages/release/2022-06/r/eclipse-ide-enterprise-java-and-web-developers)\\r\\n\\r\\n喺 Download Links 下面選擇返相應平台下載，然後解壓縮就得，執行之前必須先安裝 JRE 或 JDK，否則會開唔到。\\r\\n\\r\\n### 1.2.1 選擇 JDK\\r\\n\\r\\n去 menu bar > Window > Preferences > 左邊 filter text 打 `jre` > 揀 Installed JREs > Add... > Standard VM > JRE home 揀返 JDK 既 folder > 再揀返 default 既 JDK。\\r\\n\\r\\n---\\r\\n\\r\\n### 1.2.2 關於 perspective\\r\\n\\r\\nPerspective 都算係 Eclipse 既獨有設置，用黎畀我地根據唔同情境而快速改變 IDE 顯示緊既資訊排版。\\r\\n\\r\\n常用 perspectives：\\r\\n\\r\\n| Perspective | 幾時用                      |\\r\\n| ----------- | --------------------------- |\\r\\n| Java        | 改 code 既時候用            |\\r\\n| Debug       | Debug program 既時候用      |\\r\\n| Git         | 搞 version control 既時候用 |\\r\\n\\r\\n一個 perspective 由多個 views 組成。\\r\\n\\r\\n比如喺 Java perspective 之下，左手邊就係 Package Explorer，中間就係 source code，右邊就有 Outline 等等；\\r\\n喺 Debug perspective 之下，見到既野就會唔同，例如右邊會顯示 breakpoints。\\r\\n\\r\\nJava perspective：\\r\\n\\r\\n![](blog/2020-09/coding-java-1/eclipse-java-perspective.png)\\r\\n\\r\\nDebug perspective：\\r\\n\\r\\n![](blog/2020-09/coding-java-1/eclipse-debug-perspective.png)\\r\\n\\r\\nGit perspective：\\r\\n\\r\\n![](blog/2020-09/coding-java-1/eclipse-git-perspective.png)\\r\\n\\r\\n#### 1.2.2.1 Perspective 建議配置\\r\\n\\r\\nMenu bar 下面，打橫既果條滿曬 icons 既 tool bar 既最右邊，有兩三個 icons，用黎 control perspectives，right click 落去，撳 Show Text。\\r\\n如果顯示緊 Java EE，咁就切換成 Java。如果冇顯示 Java 而只有 Java EE，咁就去 menu bar > Window > Perspective > Open Perspective > Other... > Java。\\r\\n\\r\\n---\\r\\n\\r\\n### 1.2.3 關於 view\\r\\n\\r\\nView 係組成整個 Eclipse UI perspective 既組件。\\r\\n\\r\\n如果 mess up 左啲 views，搞到錯位，或者唔見左，可以去 menu bar > Window > Perspective > Reset Perspective...。\\r\\n\\r\\n#### 1.2.3.1 View 建議配置\\r\\n\\r\\n針對 Java perspective，建議採用以下配置（其實同默認配置相近）：\\r\\n\\r\\n左方：\\r\\n\\r\\n-   Package Explorer\\r\\n-   JUnit（行 test 會自動 show 出黎）\\r\\n\\r\\n下方：\\r\\n\\r\\n-   Problems\\r\\n-   Javadoc\\r\\n-   Search\\r\\n-   Coverage\\r\\n-   Console\\r\\n\\r\\n右方（建議長期縮小，有需要時先開返出黎）：\\r\\n\\r\\n-   Outline\\r\\n\\r\\n如果冇顯示 Console，去 menu bar > Window > Show View > Console。Console 係用黎睇 program 既 log（用 `System.out.println()` 或 `System.err.println()`）。\\r\\n\\r\\n---\\r\\n\\r\\n### 1.2.4 Shortcuts 快捷鍵\\r\\n\\r\\n以下 shortcuts 都係喺 Java class 度打。\\r\\n輸入法要英文。\\r\\n\\r\\n| 用途                 | Shortcut keys / 步驟                                                   | 解釋                                                                                                                                                                                                                                                                                                                                           |\\r\\n| -------------------- | ---------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n| Content assist       | Ctrl+Space                                                             | 針對而家 caret 左邊既 code 給予提示同幫助。喺 class 名度打既話（caret 可以喺 class 名中間或尾端），會顯示 caret 前既 class 名開頭既 classes（範圍係 JDK 內建 classes + 呢個 project 既 3rd party libraries 既 classes）；喺 method 開括號 `(` 後打的話，會顯示該 method 既 Javadoc。撳左之後可以用 left arrow 或 right arrow 黎調校 caret 位置 |\\r\\n| 一般 log             | 喺 method 裡面打 `syso`，然後打 Ctrl+Space                             | `System.out.println()` 既簡寫                                                                                                                                                                                                                                                                                                                  |\\r\\n| Error log            | 喺 method 裡面打 `syse`，然後打 Ctrl+Space                             | `System.err.println()` 既簡寫                                                                                                                                                                                                                                                                                                                  |\\r\\n| `main` method        | 喺 class 裡面打 `main`，然後打 Ctrl+Space，見到 main method 再打 Enter | 最快生成 `public static void main(String[] args) {}` 既方法                                                                                                                                                                                                                                                                                    |\\r\\n| 刪行                 | Ctrl+D                                                                 | 刪除 caret 果行 code，下面既 code 往上移動一行                                                                                                                                                                                                                                                                                                 |\\r\\n| 複製本行至上一行     | Ctrl+Alt+Up                                                            | 將 caret 果行複製到本行之上                                                                                                                                                                                                                                                                                                                    |\\r\\n| 複製行在至下一行     | Ctrl+Alt+Down                                                          | 將 caret 果行複製到本行之下                                                                                                                                                                                                                                                                                                                    |\\r\\n| Organize imports     | Ctrl+Shift+O                                                           | 如果有 classes 未 import，佢會 resolve（如果有撞名，佢會畀你揀）；如果有多餘既 imports，佢會移除                                                                                                                                                                                                                                               |\\r\\n| Comment out code     | Ctrl+/                                                                 | 將 caret 果行前面加 `//` 或拎走 `//`（toggle comment）                                                                                                                                                                                                                                                                                         |\\r\\n| Format code          | Ctrl+Shift+F                                                           | 將整個 class 既 code 以 Eclipse 既設定黎 format（結果出黎未必好睇）                                                                                                                                                                                                                                                                            |\\r\\n| Text search/replace  | Ctrl+F                                                                 | Search 而家個 file 或 replace 文字                                                                                                                                                                                                                                                                                                             |\\r\\n| Select 括號內既 code | Double click `{`、`}`、`(` 或 `)`                                      | Select 一個 class 既 class body，或者一個 method 既 method body，或者一個 method call 既 arguments，或者一個 method signature 既 parameters                                                                                                                                                                                                    |\\r\\n| 改名                 | Ctrl+1 > Rename in file 或 Rename in workspace                         | 對 variable、method 或 class 名進行改名操作                                                                                                                                                                                                                                                                                                    |\\r\\n| Open type            | Ctrl+Shift+T                                                           | 搵成個 workspace 有既 types，包括 JDK 內建既、你喺 workspace 既 projects 裡面寫既，以及 workspace 所有 projects 用到既 3rd party libraries 裡面有既                                                                                                                                                                                            |\\r\\n| Open resource        | Ctrl+Shift+R                                                           | 搵成個 workspace 有既檔案（如 text files，亦包括 types）                                                                                                                                                                                                                                                                                       |\\r\\n\\r\\n註：[Caret 既意思](https://en.wikipedia.org/wiki/Caret_navigation)\\r\\n\\r\\n如果 shortcuts 打左但冇效，可去 menu bar > Window > Preferences > 左邊 filter text 打 `keys` > 揀 Keys > 右邊 search 返，睇下而家 set 左啲咩 shortcut key combination。\\r\\n\\r\\n---\\r\\n\\r\\n### 1.2.5 Compiler errors/warnings 建議配置\\r\\n\\r\\nIDE 可以幫我地寫出好 code，所以要用盡佢啲功能，例如 compiler errors/warnings。\\r\\n\\r\\n去 menu bar > Window > Preferences > 左邊 filter text 打 `warning` > 揀 Errors/Warnings > 右邊 search `null` > Null analysis > 將三項都改成 `Warning`：\\r\\n\\r\\n-   Null pointer access\\r\\n-   Potential null pointer access\\r\\n-   Redundant null check\\r\\n\\r\\n咁可以解決一部分因為冇處理 null 情況而導致既 `NullPointerException`，或者多餘既 null check。\\r\\n\\r\\n---\\r\\n\\r\\n### 1.2.6 Hierarchical package presentation\\r\\n\\r\\n去 Package Explorer > 三點 > Package Presentation > Hierarchical\\r\\n\\r\\n![](blog/2020-09/coding-java-1/eclipse-hierarchical-package-presentation.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 1.3 Postman（必須）\\r\\n\\r\\n用黎測試 backend server 既 endpoints（主要係 HTTP APIs）。\\r\\n\\r\\n[官方下載](https://www.postman.com/downloads/)，揀 64-bit。\\r\\n\\r\\n![](blog/2020-09/coding-java-1/postman-layout.jpg)\\r\\n\";","export default \"# 2 建立 project\\r\\n\\r\\n## 2.1 全新 project（基本）\\r\\n\\r\\n喺 Eclipse 左手邊 Package Explorer 度 right click > New > Java Project，輸入 project 名，撳 Finish。\\r\\n\\r\\n基本既 project 就完成。注意呢個 setup 係冇 dependency management（雖然都可以照用到 3rd party libraries），\\r\\n因為係一個好 pure 既 Java project。\\r\\n\\r\\n![](blog/2020-09/coding-java-2/eclipse-create-java-project.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 Import 現有 Maven project\\r\\n\\r\\n喺 Eclipse 左手邊 Package Explorer 度 right click > Import... > Maven > Existing Maven Projects，選取 project root path，\\r\\n會見到中間顯示 `pom.xml`，隔籬有個 tick 左既 checkbox，撳 Finish。\\r\\n\\r\\n前提係個 project 必須有 `pom.xml`，而裡面係 Maven 理解既格式。\\r\\n\\r\\n註：Eclipse 所用既 Maven 版本係內建既，如有需要，去 menu bar > Window > Preferences > 左邊 filter text 打 `maven` > 揀 Maven 下面既 Installations > 右邊 Add... 加入本地某個 Maven 安裝 folder > 選擇新加入既 Maven installation。\\r\\n\\r\\n![](blog/2020-09/coding-java-2/eclipse-import-maven-project.png)\\r\\n\\r\\n![](blog/2020-09/coding-java-2/eclipse-import-maven-project-finish.png)\\r\\n\";","export default \"# 3 Java 基礎知識\\r\\n\\r\\n## 3.1 關於 Java\\r\\n\\r\\n### 3.1.1 Compiled language\\r\\n\\r\\nJava 係一隻 object-oriented programming (OOP) 程式語言，需要 JVM 黎運行。\\r\\n\\r\\nJava 需要 compilation 過程，由 Java code（`.java` 檔） compile 成 bytecode（`.class` 檔），\\r\\n然後選擇性地用 JAR 或 WAR 黎再 zip 起多個 `.class` 檔以及 project resources。\\r\\n\\r\\n當 Java code compile 左成 bytecode，係可以反向 decompile 返做 Java code，但唔會原汁原味，因為 compiler 有時會優化代碼，\\r\\n所以 decompilers（非官方既工具）好難估到本身係點寫。另外，如果我地係寫 Java API 畀其他人用（通常係高手先會寫），\\r\\n可以打包埋 sources 同 Javadoc，方便其他 developers 理解我地寫左既 code。\\r\\n\\r\\n比較之下，JavaScript 就係一隻 scripting language，不需要 compile，如果冇 IDE，要到運行果一刻先知有冇寫錯。\\r\\nJS 需要一個 enable 左 JS 既瀏覽器，或者 JS runtime environment（如 NodeJS）。\\r\\n\\r\\nIDE 會幫我地做呢個 compilation 過程，當我地改左 code 但錯 syntax，IDE 會「鬧」我地寫錯野。\\r\\n當我地 Ctrl+S 去 save 一個 Java type，IDE 都會 trigger compilation。\\r\\n\\r\\n如果我地用 Maven 做 dependency management（方便我地用 3rd party libraries 同做版本管理）既話，當我地改左 `pom.xml` 然後 save，\\r\\nIDE 都會幫我地 build 過個 project，包括 compile code。\\r\\n\\r\\n當我地用部分 JDK 內建既 classes，或者所有 3rd party libraries，都需要 import 先可以用到，否則連 compile 都唔成功。\\r\\n\\r\\n---\\r\\n\\r\\n### 3.1.2 特殊既 `main` method\\r\\n\\r\\n`public static void main(String[] args) {}` 係一個特殊既 method，係用黎做程底既入口。\\r\\n每個 class 都可以有一個 `main` method，所以每個 Java project 都可以有 N 個入口。\\r\\n但係一般都唔會寫多過一個。除非需要唔同既入口，否則只需要一個 `main` method。\\r\\n當我地 build 個 project 成一個 JAR（`.jar` 檔），我地需要提供 `Main-Class` 資訊。\\r\\n\\r\\n[詳情](https://docs.oracle.com/javase/tutorial/deployment/jar/appman.html)\\r\\n\\r\\n如果用 Maven，可以喺 Maven project 既 `pom.xml` 裡面設置。如果用左 Spring 既 build plugin，`Main-Class` 既 config 係可以省略。\\r\\n\\r\\n![](blog/2020-09/coding-java-3/java-main-method.png)\\r\\n\\r\\n---\\r\\n\\r\\n### 3.1.3 Compile time 及 runtime\\r\\n\\r\\nJava 有 compile time 同 runtime。\\r\\n\\r\\n-   Compile time：你寫緊 code，compiler compile 你啲 code 既時候\\r\\n-   Runtime：個程式 deploy 左，run 緊既時候\\r\\n\\r\\n![](blog/2020-09/coding-java-3/compile-time-vs-runtime.jpg)\\r\\n\\r\\n---\\r\\n\\r\\n### 3.1.4 如何 deploy Java apps\\r\\n\\r\\n一般而言，Java apps 可以分為以下幾類：\\r\\n\\r\\n| 類別                         | 格式          | `main` | 描述                                                                                                                                                                                                             |\\r\\n| ---------------------------- | ------------- | ------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n| Java API                     | `.jar`        | 冇     | 畀其他相關既 projects 去 import，為左重用代碼或者高級 developers 提供 API 畀世人享用，如 Apache Commons Lang3                                                                                                    |\\r\\n| 於 background 直接執行       | `.jar`        | 有     | 可以 Command Prompt、Task Scheduler、cron 等 callers 去 call 個 Java app 去做啲 background tasks，只能通過 console 或 log files 見到個程式做左啲咩（前提係要 developers 有 code 到個 app 會 print log messages） |\\r\\n| 可直接執行既 GUI             | `.jar`        | 有     | 會顯示 GUI（圖形使用者介面），Java GUI 技術有 Swing、SWT、JavaFX                                                                                                                                                 |\\r\\n| Web application              | `.jar` `.war` | 冇     | 需要 deploy 去一個 web container，如 Apache Tomcat、 Eclipse Jetty、JBoss WildFly、IBM WebSphere Application Server。呢個做法較舊派                                                                              |\\r\\n| 可直接執行既 web application | `.jar`        | 有     | 如 Spring Boot，因為已經內嵌左一個 Tomcat container，係一個可以直接用 Java Runtime Environment（JRE）運行既 web app。呢個做法係新主流                                                                            |\\r\\n\\r\\n我地唔會拎住成抽 bytecode `.class` 檔去 deploy，但會將佢地連埋 manifest（一啲 metadata）打包成 `.jar` 或 `.war` 檔。其實本質上都係一個 `.zip` 格式。\\r\\n\\r\\n如果用緊 Eclipse，我地可以喺 Eclipse 度行。直接撳個 launch 掣去 run as Java application 就得。\\r\\n\\r\\n如果係可執行既 Java apps，唔想喺 Eclipse 度面行，可以 build/export 左做 JAR 先，然後打 command 黎執行：\\r\\n\\r\\n```bash\\r\\njava -jar My-Application-1.0.jar\\r\\n```\\r\\n\\r\\n如果係 Spring Boot app 而且用左 Maven，可以打 command 等 Maven 幫我地 call JDK 去 compile 然後執行：\\r\\n\\r\\n```bash\\r\\nmvn spring-boot:run\\r\\n```\\r\\n\\r\\n註：當我地個 `pom.xml` 用左 `spring-boot-maven-plugin` 呢個 Maven build plugin 既時候，個 Maven project 就會多左一個 `run` goal。\\r\\n\\r\\n[詳情](https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/html/#goals-run)\\r\\n\\r\\nJAR 檔其實都係 ZIP：\\r\\n\\r\\n![](blog/2020-09/coding-java-3/jar-file-content.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 Modifiers 修飾符\\r\\n\\r\\n用於：\\r\\n\\r\\n-   Type\\r\\n-   Class/instance variable\\r\\n-   Constructor\\r\\n-   Method\\r\\n-   Local variable\\r\\n-   Constructor/method parameter\\r\\n\\r\\n註：如果用錯左 modifiers，compiler 會話你知。\\r\\n\\r\\n### 3.2.1 Access modifiers\\r\\n\\r\\n| Modifier                               | 常用程度 | 作用                                      |\\r\\n| -------------------------------------- | -------- | ----------------------------------------- |\\r\\n| `public`                               | 高       | 最開放，所有 classes 都用得呢樣野         |\\r\\n| `protected`                            | 中       | 所有 subclasses 都用得呢樣野              |\\r\\n| 乜都唔打，即係 default access modifier | 低       | 只有同一個 package 既 subclass 用得呢樣野 |\\r\\n| `private`                              | 高       | 只係 within 呢個 class 先用得呢樣野       |\\r\\n\\r\\n註：將所有野用曬 `public` 係一定 work，但係會令 access 太濫，影響 code maintenance，因為你唔知邊啲野係要 expose 畀其他 classes 用，\\r\\n所以最好係 limit access，最有限既 access 夠做就用果個。\\r\\n\\r\\n---\\r\\n\\r\\n### 3.2.2 Non-access modifiers\\r\\n\\r\\n| Modifier       | 常用程度 | 作用                                                                                                                                    |\\r\\n| -------------- | -------- | --------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n| `static`       | 高       | 當呢樣野屬於 class（所有 object copies 都 share 一樣既）而唔係 instance（唔同既 object copies 會有唔同）                                |\\r\\n| `final`        | 高       | 當一個 class 唔可以被 subclass；當一個 method 唔可以被 override；當一個 variable 只可以並且必須 assign 一次 value（assign `null` 都算） |\\r\\n| `abstract`     | 中       | 當一個 class 既 methods 唔齊全；當一個 method 冇 method body                                                                            |\\r\\n| `default`      | 低       | 喺 interface 裡面可以 declare 一啲有 method body（implementation）既 methods                                                            |\\r\\n| `synchronized` | 低       | 多線程編程會用到                                                                                                                        |\\r\\n| `transient`    | 低       | JDK 自帶既 serialization 功能會用到，但不影響 3rd party library 如 Jackson Databind 既 serialization                                    |\\r\\n| `volatile`     | 低       | 多線程編程會用到                                                                                                                        |\\r\\n| `native`       | 低       | 當一個 method 係以 Java Native Interface（JNI）呼叫底層 code                                                                            |\\r\\n\\r\\n---\\r\\n\\r\\n### 3.2.3 Modifiers 既例子\\r\\n\\r\\n```java\\r\\npublic class Foo { // type: public\\r\\n    private static final String MESSAGE = \\\"Hello World\\\"; // class variable: private static final\\r\\n\\r\\n    private final String name; // instance variable: private final\\r\\n\\r\\n    public Foo(final String name) { // constructor: public; constructor parameter: final\\r\\n        this.name = name;\\r\\n    }\\r\\n\\r\\n    public String sayHi() { // method: public\\r\\n        final String message = MESSAGE; // local variable: final\\r\\n        return toLowerCase(message);\\r\\n    }\\r\\n\\r\\n    public String sayHi(final String message) { // method: public; method parameter: final\\r\\n        return toLowerCase(message);\\r\\n    }\\r\\n\\r\\n    private String toLowerCase(String str) { // method: private\\r\\n        return str==null ? \\\"\\\" : str.toLowerCase();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.3 Classes / types\\r\\n\\r\\nJava 有 primitive types 同 object types（classes）。所有 primitive types 都有對應既 wrapper object types。\\r\\n\\r\\n### 3.3.1 Primitive data types 原始數據類型\\r\\n\\r\\nPrimitive types：\\r\\n\\r\\n-   `boolean` (`true` / `false`)\\r\\n-   `int`（自然數）\\r\\n-   `long`（自然數，正負數範圍比 `int` 大）\\r\\n-   `float`（有小數點）\\r\\n-   `double`（有小數點，，正負數範圍比 `float` 大）\\r\\n-   `byte`（較少用）\\r\\n-   `char`（單字/符號，幾乎唔需要用到）\\r\\n\\r\\n以上都唔係 object。\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.2 Primitive data type conversion/casting\\r\\n\\r\\nPrimitive data types 之間可以轉換（conversion/casting），但要注意每隻 data type 既 value 上下限，同埋留意轉換過程可唔可以保留精確度。\\r\\n\\r\\n喺需要處理金額之類需要百分百精確度既情境，一律建議使用 `BigDecimal`。另外仲有 `BigInteger`，都一樣係 _arbitrary-precision_。\\r\\n\\r\\n![](blog/2020-09/coding-java-3/primitive-data-type-conversion.png)\\r\\n\\r\\n| 箭嘴 | 解釋                                                                                                            |\\r\\n| ---- | --------------------------------------------------------------------------------------------------------------- |\\r\\n| 實線 | Automatic/implicit type conversion 自動轉換/隱式轉換（如要反方向轉換，必須進行 explicit type casting 顯式轉換） |\\r\\n| 虛線 | 轉換後有可能會失去精確度                                                                                        |\\r\\n\\r\\n#### 3.3.2.1 Automatic type conversion 示範\\r\\n\\r\\n以下為示範：\\r\\n\\r\\n```java\\r\\nbyte b = 1;\\r\\n\\r\\nshort s = b; // implicit type conversion\\r\\nbyte b2 = s; // compilation error, Type mismatch: cannot convert from short to byte\\r\\nbyte b3 = (byte) s; // explicit type casting\\r\\n\\r\\nint i = s; // implicit type conversion\\r\\nshort s2 = i; // compilation error, Type mismatch: cannot convert from int to short\\r\\nshort s3 = (short) i; // explicit type casting\\r\\n\\r\\nchar c = 1;\\r\\nint i2 = c; // implicit type conversion\\r\\nchar c2 = i2; // compilation error, Type mismatch: cannot convert from int to char\\r\\nchar c3 = (char) i2; // explicit type casting\\r\\n\\r\\nlong l = i2; // implicit type conversion\\r\\nint i3 = l; // compilation error, Type mismatch: cannot convert from long to int\\r\\nint i4 = (int) l; // explicit type casting\\r\\n\\r\\nfloat f = i2; // implicit type conversion\\r\\nint i5 = f; // compilation error, Type mismatch: cannot convert from float to int\\r\\nint i6 = (int) f; // explicit type casting\\r\\n\\r\\ndouble d = l; // implicit type conversion\\r\\nlong l2 = d; // compilation error, Type mismatch: cannot convert from double to long\\r\\nlong l3 = (long) d; // explicit type casting\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.3 Primitive data types 既 wrapper classes\\r\\n\\r\\nPrimitive data types 唔容許 `null`，所以一定有一個明確既 value。但如果我地唔想咁，我地可以用 wrapper classes。\\r\\n\\r\\nPrimitive types 對應既 wrapper classes（大部分都係將第一隻字轉大草）：\\r\\n\\r\\n-   `Boolean` (`true` / `false`)\\r\\n-   `Integer`\\r\\n-   `Long`\\r\\n-   `Float`\\r\\n-   `Double`\\r\\n-   `Byte`\\r\\n-   `Character`\\r\\n\\r\\n以上 wrapper classes 通常用喺 DTO（data transfer objects），因為容許 `null`。\\r\\n\\r\\n文字既 data type 係 `String`，呢個就冇 primitive type，一定係 object。\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.4 Autoboxing 及 unboxing\\r\\n\\r\\n為左方便使用 primitive types 同 primitives 既 wrapper classes，Java 原生支持 autoboxing 同 unboxing（autoboxing 既反方向）。\\r\\n\\r\\nAutoboxing，即係由 primitive 自動 box/wrap 成 wrapper class，會喺以下情況下發生：\\r\\n\\r\\n```java\\r\\nInteger num = 1;\\r\\n```\\r\\n\\r\\n```java\\r\\npublic static void main(String[] args) {\\r\\n\\r\\n    // autobox int 1 成 Integer 1\\r\\n\\r\\n    foo(1);\\r\\n}\\r\\n\\r\\nprivate static void foo(Integer num) {\\r\\n    // do sth\\r\\n}\\r\\n```\\r\\n\\r\\nUnboxing，即係由 wrapper class 自動 unbox/unwrap 成 primitive，會喺以下情況下發生：\\r\\n\\r\\n```java\\r\\nint num = new Integer(1);\\r\\n```\\r\\n\\r\\n```java\\r\\npublic static void main(String[] args) {\\r\\n\\r\\n    // unbox Integer 1 成 int 1\\r\\n\\r\\n    foo(new Integer(1));\\r\\n}\\r\\n\\r\\nprivate static void foo(int num) {\\r\\n    // do sth\\r\\n}\\r\\n```\\r\\n\\r\\nAutoboxing 同 unboxing 同時發生：\\r\\n\\r\\n```java\\r\\n// 先 unbox Integer 3 成 int 3\\r\\n// 再計 int 3 + int 2\\r\\n// 再將 int 5 autobox 成 Integer 5\\r\\nInteger num = new Integer(3) + 2;\\r\\n\\r\\n// 先 unbox Integer num 成 int 5 同 unbox Integer 4 成 int 4\\r\\n// 再計 int 5 + int 4\\r\\n// 再將 int 9 autobox 成 Integer 9\\r\\nnum += new Integer(4);\\r\\n```\\r\\n\\r\\n注意如果 unbox 既時候 object value 係 `null`，咁喺 runtime 就會出現 `NullPointerException`。\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.5 Array / `Collection` / `Map`\\r\\n\\r\\n當我地想將好幾個同一個 type 既 data 放埋一齊成為一個組合，我地可以用 array、`Collection` 或者 `Map`。不過 array 基本上好少機會會用到，因為功能唔及得上 `Collection` 咁多，例如 `add`、`remove` 之類能夠改變長度既操作；或者 `TreeSet` 咁既會自己排序既 implementation；又可以喺 getter 度 return `Collections.unmodifiableList(list)`，防止修改 DTO object 既 property value，達到 immutability。喺 web application 裡面更加可以話係冇人會用 array。\\r\\n\\r\\nArray 既長度係固定既：\\r\\n\\r\\n```java\\r\\nString[] arr = new String[4];\\r\\n```\\r\\n\\r\\n```java\\r\\nint[] arr = new int[] { 3, 6 };\\r\\narr[0] = 7;\\r\\narr[2] = 3; // 因為只有 0 同 1 兩個 index，呢行會爆 ArrayIndexOutOfBoundsException\\r\\n```\\r\\n\\r\\n`Collection`（`List`、`Set`）及 `Map` 既長度係 dynamic 既，任得你加（上限非常大）。\\r\\n\\r\\n`Collection` 既 `List` subinterface：\\r\\n\\r\\n```java\\r\\nList<String> list = new ArrayList<>();\\r\\n```\\r\\n\\r\\n```java\\r\\nList<String> list = new LinkedList<>();\\r\\n```\\r\\n\\r\\n```java\\r\\nList<String> list = new Vector<>();\\r\\n```\\r\\n\\r\\n```java\\r\\nlist.add(\\\"Michael\\\");\\r\\nlist.add(\\\"Ben\\\");\\r\\n// 可以繼續 add 落去\\r\\n```\\r\\n\\r\\n註：`List` 係會保留插入順序。\\r\\n\\r\\n`Collection` 既 `Set` subinterface（唔容許重複）：\\r\\n\\r\\n```java\\r\\nSet<String> set = new HashSet<>(); // 不保留插入順序\\r\\n```\\r\\n\\r\\n```java\\r\\nSet<String> set = new LinkedHashSet<>(); // 保留插入順序\\r\\n```\\r\\n\\r\\n```java\\r\\nSet<String> set = new TreeSet<>(); // 自然順序\\r\\n```\\r\\n\\r\\n```java\\r\\nset.add(\\\"Michael\\\");\\r\\nset.add(\\\"Michael\\\"); // 因為已經存在，add 完唔會有分別\\r\\n// 可以繼續 add 落去\\r\\n```\\r\\n\\r\\n至於 `Map`，就可以放 key-value pairs（唔容許重複既 key，否則新既 entry 會 overwrite 舊既 entry）：\\r\\n\\r\\n```java\\r\\nMap<String, Object> map = new HashMap<>(); // 不保留插入順序\\r\\n```\\r\\n\\r\\n```java\\r\\nMap<String, Object> map = new LinkedHashMap<>(); // 保留插入順序\\r\\n```\\r\\n\\r\\n```java\\r\\nMap<String, Object> map = new TreeMap<>(); // 自然順序\\r\\n```\\r\\n\\r\\n```java\\r\\nmap.put(\\\"Michael\\\", 25);\\r\\nmap.put(\\\"Michael\\\", 30); // overwrite 左 Michael=25\\r\\n// 可以繼續 put 落去\\r\\n```\\r\\n\\r\\n以上既 `list`、`set` 同 `map` 都用左 polymorphism，即係 assign subclass 或 implementation class 去一個用 superclass 或 interface 既 type 去 declare 既 variable（`List<String> list`）度。\\r\\n\\r\\n-   `List` 係 interface，而 `ArrayList`、`LinkedList`、`Vector` 都係 `implements` 左 `List`\\r\\n-   `Set` 係 interface，而 `HashSet`、`LinkedHashSet` 都係 `implements` 左 `Set`\\r\\n-   `Map` 係 interface，而 `HashMap`、`LinkedHashMap` 都係 `implements` 左 `Map`\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.6 自定義 types\\r\\n\\r\\n當我地自定義 types，要知道有以下幾種叫法（或者形容關係）：\\r\\n\\r\\n| Java type 既款式     | 解釋                                                                                                                                                                                                                                                                                                                                                         |\\r\\n| -------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\\r\\n| Concrete class       | 只要所有 methods 都有 method body（implementation）就可被視為 concrete class，可以直接 `new`，如 `new Foo()`                                                                                                                                                                                                                                                 |\\r\\n| Implementation class | 一個 `implements` 左某個 interface 既 class                                                                                                                                                                                                                                                                                                                  |\\r\\n| Abstract class       | 抽象層，當一個 class 有至少一個 method 缺少 method body（即係 abstract 左，原因可以係因為寫明左係 `abstract`，或者 `implements` 左個 interface 而繼承左佢既 abstract methods），呢個 class 就必須加上 `abstract`。Abstract class 可以成為 superclass 畀 subclass 去 `extends`。唔可以直接 `new`，除非你「就地」建立 anonymous class                          |\\r\\n| Subclass             | 一個 `extends` 左某個 superclass（可以係 concrete class，亦可以係 abstract class）                                                                                                                                                                                                                                                                           |\\r\\n| Superclass           | 當一個 class（無論係 concrete class 抑或係 abstract class）被 `extends`，就可以被視為係 superclass                                                                                                                                                                                                                                                           |\\r\\n| Anonymous class      | 匿名 class，其實冇必要用，因為寫 concret class 會更好，亦有助於 unit testing。有兩個情況會用到 anonymous class，一係想用一個 abstract class 或 interface 但又唔想寫 concrete implementation class，一係想就地 override 一個 concrete class 既某啲 methods。寫 anonymous class 既時候要加 `{}`，即 `new Foo() { /* 為 abstract methods 提供 method body */ }` |\\r\\n| Interface            | 所有非 `default` 既 methods 都冇 method body（冇 implementation，亦係 abstract），亦冇 property。等於一份 contract，迫啲 `implements` 左呢個 interface 既 concrete class 一定要實現曬呢個 interface 有既 methods。唔可以直接 `new`，除非你「就地」建立 anonymous class                                                                                       |\\r\\n| Superinterface       | 就好似 superclass 咁，當一個 interface 被一個 interface `extends` 時，就可以被視為係 superinterface                                                                                                                                                                                                                                                          |\\r\\n| Subinterface         | 就好似 subclass 咁，係一個 `extends` 左一個或多個 interfaces 既 interface                                                                                                                                                                                                                                                                                    |\\r\\n| Enum                 | 一舊野，主要用黎對比（`if`-`else` 或者 `switch`）。用於 ORM 時可以對應 MySQL 既 `ENUM` type                                                                                                                                                                                                                                                                  |\\r\\n| Annotation           | 用黎標籤 type、method、property 或 parameter（不包括 local variable），要透過 reflection 先可以用到                                                                                                                                                                                                                                                          |\\r\\n\\r\\n#### 3.3.6.1 Concrete class 既例子\\r\\n\\r\\n```java\\r\\npublic class Foo {\\r\\n\\r\\n    // 只要所有 methods 都有 method body，就係 concrete class\\r\\n\\r\\n    public void play() {\\r\\n        // do sth\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n#### 3.3.6.2 Abstract class 既例子\\r\\n\\r\\n例子一：\\r\\n\\r\\n```java\\r\\npublic abstract class AbstractFoo {\\r\\n\\r\\n    // 因為有至少一個 abstract method，所以呢個 class 要係 abstract\\r\\n\\r\\n    protected abstract void play();\\r\\n}\\r\\n```\\r\\n\\r\\n例子二：\\r\\n\\r\\n```java\\r\\npublic abstract class AbstractFoo extends Bar {\\r\\n\\r\\n    // 繼承左 abstract 既 play()\\r\\n}\\r\\n\\r\\nabstract class Bar {\\r\\n\\r\\n    // 下面有一個 abstract method\\r\\n\\r\\n    protected abstract void play();\\r\\n}\\r\\n```\\r\\n\\r\\n例子三：\\r\\n\\r\\n```java\\r\\npublic abstract class AbstractFoo implements Bar {\\r\\n\\r\\n    // 繼承左 abstract 既 play()\\r\\n}\\r\\n\\r\\ninterface Bar {\\r\\n\\r\\n    // interface 既所有 methods 都係 abstract\\r\\n\\r\\n    void play();\\r\\n}\\r\\n```\\r\\n\\r\\n#### 3.3.6.3 Subclass 及 superclass 既例子\\r\\n\\r\\n```java\\r\\npublic class Foo extends Bar {\\r\\n\\r\\n    // extends 左 Bar，所以係一個 subclass（methods 有齊 method body，所以亦係 concrete class）\\r\\n\\r\\n    @Override\\r\\n    protected void play() {\\r\\n        // do sth\\r\\n    }\\r\\n}\\r\\n\\r\\nabstract class Bar {\\r\\n\\r\\n    // 被 Foo extends，所以算係 Foo 既 superclass\\r\\n\\r\\n    protected abstract void play();\\r\\n}\\r\\n```\\r\\n\\r\\n#### 3.3.6.4 Implementation class 及 interface 既例子\\r\\n\\r\\n```java\\r\\npublic class Foo implements Bar {\\r\\n\\r\\n    // implements 左 Bar，所以係一個 implementation class（methods 有齊 method body，所以亦係 concrete class）\\r\\n\\r\\n    @Override\\r\\n    public void doSth() {\\r\\n        // do sth\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface Bar {\\r\\n\\r\\n    // interface 裡面既 methods 一定係 public 同 abstract\\r\\n\\r\\n    void doSth();\\r\\n}\\r\\n```\\r\\n\\r\\n#### 3.3.6.5 Anonymous class 既例子\\r\\n\\r\\n```java\\r\\npublic class Example {\\r\\n    public static void main(String[] args) {\\r\\n\\r\\n        new Thread(new Runnable() {\\r\\n            @Override\\r\\n            public void run() {\\r\\n                // do sth\\r\\n            }\\r\\n        }).start();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n上面段 code 既 `new Runnable() {}` 就係 anonymous class。\\r\\n\\r\\n由於 `Runnable` 係一個 interface，我地唔可以直接 `new` 佢，除非以 anonymous class 既做法，即係加 `{}`，同埋為所有 abstract methods 提供 method body。\\r\\n當然我地可以寫一個 class 去 `implements Runnable`，然後 `new` 呢個自定義 class。\\r\\n\\r\\n參考：[Runnable (JDK 8)](https://docs.oracle.com/javase/8/docs/api/java/lang/Runnable.html)\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.7 以 lambda 取代 anonymous class\\r\\n\\r\\n以下呢個例子既 anonymous class 可以被新式 lambda 寫法取代：\\r\\n\\r\\n```java\\r\\npublic class Example {\\r\\n    public static void main(String[] args) {\\r\\n\\r\\n        // new Runnable() {} 係 anonymous class\\r\\n\\r\\n        new Thread(new Runnable() {\\r\\n            @Override\\r\\n            public void run() {\\r\\n                // do sth\\r\\n            }\\r\\n        }).start();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n以 Java 8 既新 lambda 功能黎簡化：\\r\\n\\r\\n```java\\r\\npublic class Example {\\r\\n\\r\\n    public static void main(String[] args) {\\r\\n\\r\\n        new Thread(() -> { /* do sth */ }).start();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n`() -> {}` 係 lambda 語法。上面兩段 code call 緊既都係 `Thread(Runnable)` 既 constructor，只係自從 JDK 8 開始，\\r\\n我地有一個方便簡潔啲既方法去寫，避免 anonymous class 要寫咁多行 code。\\r\\n\\r\\n因為 JDK 既 `Runnable` 只有一個叫 `run` 既 method，所以我地先可以用 lambda。\\r\\n亦因為咁，所以 `Runnable` 可以 annotate `@FunctionalInterface`。\\r\\n\\r\\n參考：[Runnable (JDK 8)](https://docs.oracle.com/javase/8/docs/api/java/lang/Runnable.html)\\r\\n\\r\\n註：C# 同 JavaScript 都有 lambda syntax。\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.8 Naming convention 命名原則/慣例\\r\\n\\r\\nJava 既命名慣例係：\\r\\n\\r\\n-   `UpperCamelCase`：type 名\\r\\n-   `lowerCamelCase`：property、local variable、method 名、parameter\\r\\n-   `UPPER_UNDERSCORE_CASE`：constant 名（不變值）\\r\\n\\r\\n---\\r\\n\\r\\n## 3.4 如何設計 class\\r\\n\\r\\n一般我地會有以下幾種 class 設計：\\r\\n\\r\\n| 設計                                                                                | 描述                                                                                                                                                                                                                                                     | 例子                                                                         |\\r\\n| ----------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------- |\\r\\n| Service class                                                                       | 擁有 business logic 既 class                                                                                                                                                                                                                             | 自定義，冇例子                                                               |\\r\\n| Data Access Object (DAO) class                                                      | 用黎 access DB，每個 method 可以被視為一句 SQL                                                                                                                                                                                                           | 任何 `implements JpaRepository` 既 class                                     |\\r\\n| Plain old Java object（POJO）、Value Object（VO）、Data transfer object（DTO）class | 用黎儲住 data，喺不同既 class 之間使用                                                                                                                                                                                                                   | 自定義，以 properties、getters、setters 為主既 class，可以有啲自定義 methods |\\r\\n| Utility class                                                                       | 工具類，與 helper class 相似，stateless（唔會有 non-static properties），而且全部都係 static methods（有啲情況下會令到某啲 test 較難寫）                                                                                                                 | Apache Commons Lang3 既 `StringUtils`                                        |\\r\\n| Helper class                                                                        | 工具類，與 utility class 相似，可以係 stateful（可以有 non-static properties），未必有 static methods，呢個 class 可以係需要 construct（e.g. `new MyHelper()`）或者用 singleton pattern（runtime 只有一個 object copy）（e.g. `MyHelper.getInstance()`） | JDK 既 `Calendar`                                                            |\\r\\n\\r\\n註：如果我地 apply 唔同既 design patterns，亦可以有更多不同種類既 class。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.5 如何寫 method\\r\\n\\r\\n一個 method 有以下部分：\\r\\n\\r\\n| 部分        | 描述                                                                        |\\r\\n| ----------- | --------------------------------------------------------------------------- |\\r\\n| Modifiers   | Access modifier、`static`、`abstract`、`final` 及 `synchronized`            |\\r\\n| Return type | 冇野 return 就 `void`，有就畀個 type 佢                                     |\\r\\n| Method 名   | 應以 `lowerCamelCase` 命名                                                  |\\r\\n| Parameters  | 冇就留空，有就加上去，最後一個 parameter 可以係 `...` varargs（等同 array） |\\r\\n| Method body | Implementation，如果 method 係 `abstract`，就唔需要 `{}`，直接 `;` 就得     |\\r\\n\\r\\n冇 return type 既例子：\\r\\n\\r\\n```java\\r\\npublic void foo(String message) {\\r\\n\\r\\n    // do sth\\r\\n\\r\\n    if (new Random().nextInt()==0) {\\r\\n        System.out.println(\\\"Lucky!\\\");\\r\\n        return; // 用黎控制 flow，提早返回\\r\\n    }\\r\\n\\r\\n    System.out.println(\\\"No luck!\\\");\\r\\n\\r\\n    return; // 如果寫喺最後一行，就可以省略，否則用黎控制 flow\\r\\n}\\r\\n```\\r\\n\\r\\n有 return type 既例子：\\r\\n\\r\\n```java\\r\\npublic String fullCapitalLetters(String message) {\\r\\n    return message==null ? null : message.toUpperCase();\\r\\n}\\r\\n```\\r\\n\\r\\n### 3.5.1 Overload 一個 method\\r\\n\\r\\nMethod overloading 即係同一個 method 名，但 method parameters 唔同。\\r\\n\\r\\n以下例子中，`sayHi` method 有三個，當中運用左 method overloading。\\r\\n\\r\\n喺 Java 裡面 call methods，一定要中曬 delcare 左既 parameters 既數量、argument type 適合（subclass 或 implementation 都可以）先得。\\r\\n\\r\\n```java\\r\\npublic class Foo {\\r\\n\\r\\n    public static void main(String[] args) {\\r\\n        sayHi(); // Hi\\r\\n        sayHi(\\\"Michael\\\"); // Hi, Michael\\r\\n        sayHi(\\\"Michael\\\", true); // Hi, MCIHAEL\\r\\n    }\\r\\n\\r\\n    private static void sayHi() {\\r\\n        sayHi(null, false);\\r\\n    }\\r\\n\\r\\n    private static void sayHi(String message) {\\r\\n        sayHi(message, false);\\r\\n    }\\r\\n\\r\\n    private static void sayHi(String message, boolean isUpperCase) {\\r\\n        if (message==null) {\\r\\n            System.out.println(\\\"Hi\\\");\\r\\n        } else {\\r\\n            System.out.println(\\\"Hi, \\\" + (isUpperCase ? message.toUpperCase() : message));\\r\\n        }\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\nJavaScript 就冇需要咁寫，因為 JavaScript 可以用同一個 function 名，但落曬有可能畀既 parameters 去個 function 度，\\r\\n然後 call function 既時候畀少啲 arguments 都係可以既，甚至畀多過個 function 接受既都得。除此之外，JavaScript 既 non-arrow function 仲可以用一個叫 `arguments` 既 array 黎拎到 caller pass 入去既 arguments，換言之 JavaScript 既 function 係可以唔 declare parameters 但都拎到 arguments，自由度完勝 Java。\\r\\n\\r\\n```javascript\\r\\n// 所有可能出現或需要用到既 parameters\\r\\nfunction sayHi(message, isUpperCase) {\\r\\n\\tif (message) {\\r\\n\\t\\tconsole.log(\\\"Hi, \\\" + (isUpperCase ? message.toUpperCase() : message));\\r\\n\\t} else {\\r\\n\\t\\tconsole.log(\\\"Hi, who are you?\\\");\\r\\n\\t}\\r\\n}\\r\\n\\r\\n// 喺 arguments 裡面攞需要用到既 arguments\\r\\nfunction sayHello() {\\r\\n\\tconst message = arguments && arguments.length >= 1 ? arguments[0] : undefined;\\r\\n\\tconst isUpperCase = arguments && arguments.length >= 2 ? arguments[1] : undefined;\\r\\n\\r\\n\\tsayHi(message, isUpperCase);\\r\\n}\\r\\n\\r\\n// ----- 任意 arguments -----\\r\\n\\r\\nsayHi(); // Hi, who are you?\\r\\nsayHi(\\\"Michael\\\"); // Hi, Michael\\r\\nsayHi(\\\"Michael\\\", true); // Hi, MICHAEL\\r\\n\\r\\n// ----- 畀多過個 method 接受既都得 -----\\r\\n\\r\\nsayHi(\\\"Michael\\\", true, \\\"extra\\\"); // Hi, MICHAEL\\r\\n\\r\\n// ----- 個 function 用左 arguments 而唔係 declare parameters -----\\r\\n\\r\\nsayHello(); // Hi, who are you?\\r\\nsayHello(\\\"Michael\\\"); // Hi, Michael\\r\\nsayHello(\\\"Michael\\\", true); // Hi, MICHAEL\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.5.2 Override 一個 method\\r\\n\\r\\n喺一個 subclass 或者 implementation class 裡面，我地可以 override methods，即係將繼承左既 method 重新定義 implementation。\\r\\n\\r\\n```java\\r\\nabstract class AbstractFoo {\\r\\n\\r\\n    protected abstract void sayHi();\\r\\n}\\r\\n\\r\\ninterface Playable {\\r\\n\\r\\n    void play();\\r\\n\\r\\n    default void playTogether() {\\r\\n        // do sth\\r\\n    }\\r\\n}\\r\\n\\r\\npublic class Foo extends AbstractFoo implements Playable {\\r\\n\\r\\n    @Override\\r\\n    protected void sayHi() {\\r\\n        // do sth\\r\\n    }\\r\\n\\r\\n    @Override\\r\\n    public void play() {\\r\\n        // do sth\\r\\n    }\\r\\n\\r\\n    @Override\\r\\n    public void playTogether() {\\r\\n        // do sth\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\nEclipse 中間個版面既左手邊既 line number 旁邊會顯示邊啲 methods 有被 overridden，如下圖既白色、綠色箭嘴：\\r\\n\\r\\n![](blog/2020-09/coding-java-3/eclipse-method-overriding.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 3.6 睇 libraries 既 Javadoc 以及實際 source code\\r\\n\\r\\n### 3.6.1 喺 Eclipse 裡面睇\\r\\n\\r\\n無論你想睇既係 JDK 內建既 class 或 method 既定義抑或係 3rd party library 既定義，都可以喺 IDE 度做到。\\r\\n\\r\\n1. 將 cursor 放喺 class 或 method 上面，等一兩秒，佢會顯示一個帶有 Javadoc 既 popup，除非 API developer 冇寫，否則都會有文字描述。\\r\\n   呢個時候可以撳 F2，或將 cursor 放喺呢個 popup 上面，等一秒，mouse 撳一撳個 popup 既文字，呢個時候就可以有多啲操作。\\r\\n1. 你亦可以按住 Ctrl 鍵，然後 mouse 撳落個 class 或 method 上，就可以直接踩入 API developer 寫既 code 裡面。\\r\\n\\r\\n![](blog/2020-09/coding-java-3/hover-cursor-javadoc.png)\\r\\n\\r\\n![](blog/2020-09/coding-java-3/ctrl-hover-open-implementation.png)\\r\\n\\r\\n#### 3.6.1.1 安裝 Enhanced Class Decompiler plugin\\r\\n\\r\\n[Enhanced Class Decompiler - Eclipse Marketplace 地址](https://marketplace.eclipse.org/content/enhanced-class-decompiler)\\r\\n\\r\\n1. Drag 個 Install 掣去 Eclipse 度安裝。\\r\\n1. 安裝最基本既 Core component 就夠。\\r\\n1. 去 menu bar > Window > Preferences > 左邊 filter text 打 `file asso` > 揀 File Associations > 右邊 File types 揀 `.class without source` > 下面 set Class Decompiler Viewer 做 default。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Java decompiler plugin for Eclipse IDE](https://mkyong.com/java/java-decompiler-plugin-for-eclipse)\\r\\n-   [Eclipse 中安裝反編譯工具 Fernflower（Enhanced Class Decompiler）](https://www.gushiciku.cn/pl/gkXy/zh-tw)\\r\\n\\r\\n---\\r\\n\\r\\n### 3.6.2 上官網睇 Javadoc\\r\\n\\r\\nGoogle search：class 名 + `8` 即可，通常都會搵到，唔得就 + `java 8`。\\r\\n\\r\\n如 `inputstream 8`，就會搵到 `InputStream (Java Platform SE 8 ) - Oracle Help Center`。\\r\\n\\r\\n![](blog/2020-09/coding-java-3/oracle-online-javadoc.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 3.7 JDK 內建實用 classes\\r\\n\\r\\n下面係一啲基本既 JDK 內建 classes。如果唔夠用，我地可以利用 Maven repository 上面既其他 libraries。\\r\\n\\r\\n| Classes                                                                 | 描述                                                                                                                                                                                                  |\\r\\n| ----------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n| `System`                                                                | 用黎簡單咁 print 下 log（開發用）、攞 environment variable 或者 system properties。                                                                                                                   |\\r\\n| `File`                                                                  | 同本地檔案、資料夾有關既操作都要用到。                                                                                                                                                                |\\r\\n| `Date`（舊）、`Calendar`（舊）、`LocalDate`、`LocalDateTime`、`Instant` | 日期、時間相關。                                                                                                                                                                                      |\\r\\n| `BigDecimal`                                                            | 當我地處理含有小數點金額既時候，要小心小數點因為數學運算而失去精確度。我地應該用 JDK 既 `BigDecimal`（major unit）或者 Joda-Money library 裡面含貨幣訊息既 `Money`（支持 major unit 及 minor unit）。 |\\r\\n| `Pattern` 及 `Matcher`                                                  | 用黎做 regular expression（RegEx）運算。                                                                                                                                                              |\\r\\n| `Thread`                                                                | 令程式可以 multithreading，畀多個線程同時運作，同時執行唔同既 `Runnable`。                                                                                                                            |\\r\\n\";","export default \"# 4 Spring 基礎知識\\r\\n\\r\\n## 4.1 簡介 - 認識 Spring 框架\\r\\n\\r\\n最熱門、最強大既 Java framework，沒有「之一」。任何一份 Java developer report 都會見到 Spring framework 係 dominate 左個 market。\\r\\n\\r\\n佢最重要既功能為：\\r\\n\\r\\n-   用 container 管理 application 既 beans（尤其是 singleton beans，即係有啲 class 喺成個 application 裡面只有一個 instance）\\r\\n-   Dependency injection 依賴注入（透過使用 annotations 或 XML config）\\r\\n-   Aspect-oriented programming (AOP)，即係以不同切面去介入，簡單講就係當我地想監控某特定 packages 既 Spring beans 既 public methods，\\r\\n    當佢地一被 call 就落 log，log 低 parameter values 同 return values，方便日後 debug/troubleshoot 用，就可以用 AOP 實現。\\r\\n    好處係咁樣做就唔需要任何 inheritance 或者 每個 class 每個 target method 都要 自己寫一堆 code 去做 logging。\\r\\n    AOP 亦都被 Spring framework 自身好多功能所使用。\\r\\n-   寫 backend web server 用（Maven 既 `spring-boot-starter-web` dependency）\\r\\n-   整合 container（i.e. Tomcat），不必再拎住個 JAR 或 WAR file，再額外下載 container program 黎 deploy 個 web app。\\r\\n\\r\\n用曬 annotation（如 `@Component`），好多野用曬 declarative programming 而唔係 imperative programming。\\r\\n\\r\\n---\\r\\n\\r\\n## 4.2 Spring 既項目\\r\\n\\r\\nSpring 既項目眾多，包括：\\r\\n\\r\\n-   Spring core framework（包括 Spring Web MVC）\\r\\n-   Spring Boot\\r\\n-   Spring Data\\r\\n-   Spring Cloud\\r\\n-   Spring Security\\r\\n-   Spring Session\\r\\n-   Spring Integration\\r\\n-   Spring HATEOAS\\r\\n-   Spring REST Docs\\r\\n-   Spring Batch\\r\\n-   Spring AMQP\\r\\n-   Spring for Apache Kafka\\r\\n-   Spring LDAP\\r\\n\\r\\n---\\r\\n\\r\\n## 4.3 Spring Boot 與 microservice 微服務背景\\r\\n\\r\\n作為一個 back-end application，我地想以最快最簡單既方法去設計 HTTP APIs 畀 client 去使用。\\r\\n\\r\\n有別於舊派做法，which is 將 front-end 同 Spring Web MVC 既 back-end 結合埋一齊，同時喺同一個 code base 裡面，\\r\\n亦作為一個整體 couple 埋一齊去 deploy，我地而家用 Spring Boot 會想做到前後端分離（separating front-end and back-end），\\r\\nback-end 只負責提供 HTTP APIs 畀 front-end 去使用，而 front-end 將會係另一個獨立既 project，放喺唔同既 Git 或 SVN repository。\\r\\n\\r\\n我地更可以做到將一個大既 back-end 以 business domain 去拆分，每一個 Spring Boot microservice 交由一個獨立既 development team 負責。\\r\\n而上游 microservice development team 可以用 API contract 去話畀下游 microservice development team 知道點樣用佢既 HTTP APIs（endpoints）。\\r\\n\\r\\n至於 DB，最好係每個 microservice application 各自有一個獨立既 DB，table schema 都係只有該 domain 既野。\\r\\n\\r\\nClients 可以包括：\\r\\n\\r\\n-   另一個 domain 既 back-end microservice application\\r\\n-   Front-end web application（如 Angular、React、Vue 等 web projects）\\r\\n\\r\\nHTTP APIs 一般都以 JSON 格式去交換資訊。以下為一個典型例子：\\r\\n\\r\\n```json\\r\\n{\\r\\n\\t\\\"departments\\\": [\\r\\n\\t\\t{\\r\\n\\t\\t\\t\\\"name\\\": \\\"dev\\\",\\r\\n\\t\\t\\t\\\"staff\\\": [\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"Ben\\\",\\r\\n\\t\\t\\t\\t\\t\\\"salary\\\": 50000.0\\r\\n\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"Ivan\\\",\\r\\n\\t\\t\\t\\t\\t\\\"salary\\\": 45000.0\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t]\\r\\n\\t\\t}\\r\\n\\t]\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.4 Spring Boot 開發簡介\\r\\n\\r\\n### 4.4.1 基本 project structure\\r\\n\\r\\n一般至少會有以下 packages（或類似名）：\\r\\n\\r\\n-   `<root package>`\\r\\n    -   `controller`\\r\\n    -   `entity`\\r\\n    -   `repository`\\r\\n    -   `service`\\r\\n\\r\\n---\\r\\n\\r\\n### 4.4.2 基本 class 種類\\r\\n\\r\\n以下主要幾類 classes，佢地幾時 construct（`new`）、被 dependency inject 到第啲 beans，都係交由 Spring 負責，所以又可以叫做 Spring beans。\\r\\n\\r\\n-   Controller layer\\r\\n    -   啲 classes 會被 annotate `@Controller` 或 `@RestController`\\r\\n    -   用黎 expose HTTP APIs（endpoints）\\r\\n    -   增減 classes/methods 可以增減 HTTP APIs\\r\\n    -   一般為 singleton\\r\\n-   Service layer\\r\\n    -   啲 classes 會被 annotate `@Service`，甚或 `@Transactional` 黎增添事務處理去確保 DB 既 ACID\\r\\n    -   用黎放置 business logic\\r\\n    -   會 depends on 各個 repositories\\r\\n    -   增減 classes/methods 可以增減 business 情境\\r\\n    -   一般為 singleton\\r\\n-   Repository layer\\r\\n    -   啲 classes 會被 annotate `@Repository`\\r\\n    -   用黎同 DB 溝通\\r\\n    -   增減 classes 可以增減 tables 既 CRUD，一般黎講至少每個 entity 都會有對應既一個 repository\\r\\n    -   增減 methods 可以增減對應 table 既 CRUD SQLs（[參考](https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#jpa.query-methods.query-creation)）\\r\\n    -   一般為 singleton\\r\\n-   Entity\\r\\n    -   啲 classes 會被 annotate `@Entity` 同 `@Table`\\r\\n    -   用黎做同 DB 之間既 Object-Relational Mapping (ORM)，class 就對應返 DB 既 table，property 就對應返該 table 既 columns\\r\\n    -   增減 classes 可以增減 table 既 ORM\\r\\n    -   增減 properties 可以增減 table 既 column mappings\\r\\n\\r\\n![](blog/2020-09/coding-java-4/controller-service-repository.png)\\r\\n\\r\\n---\\r\\n\\r\\n### 4.4.3 基本 Spring Boot classes 既例子\\r\\n\\r\\n#### 4.4.3.1 Controller 既例子\\r\\n\\r\\n```java\\r\\n@RestController\\r\\n@RequestMapping(\\\"sales\\\")\\r\\npublic void SalesController {\\r\\n\\r\\n    @Autowired\\r\\n    SalesService salesService;\\r\\n\\r\\n    /**\\r\\n     * <p>Endpoint：/sales/total</p>\\r\\n     * <p>將返回 JSON 格式：{ \\\"salesTotal\\\": 1000.00 }</p>\\r\\n     */\\r\\n    @GetMapping(\\\"total\\\")\\r\\n    public Map<String, Object> getTotal() {\\r\\n        final Map<String, Object> result = new HashMap<>();\\r\\n        result.put(\\\"salesTotal\\\", salesService.calculateTotal());\\r\\n        return result;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n#### 4.4.3.2 Service 既例子\\r\\n\\r\\n```java\\r\\n@Service\\r\\npublic class SalesService {\\r\\n\\r\\n    @Autowired\\r\\n    SalesRepository salesRepository;\\r\\n\\r\\n    public BigDecimal calculateTotal() {\\r\\n        return salesRepository.findAll()\\r\\n                              .stream()\\r\\n                              .map(Sales::getAmount)\\r\\n                              .reduce(BigDecimal.ZERO, BigDecimal::add);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n#### 4.4.3.3 Repository 既例子\\r\\n\\r\\n```java\\r\\n@Repository\\r\\npublic interface SalesRepository extends JpaRepository<Sales, Long> {\\r\\n\\r\\n    List<Sales> findAll();\\r\\n}\\r\\n```\\r\\n\\r\\n#### 4.4.3.4 Entity 既例子\\r\\n\\r\\n```java\\r\\n@Entity\\r\\n@Table(name = \\\"sales\\\")\\r\\npublic class Sales {\\r\\n\\r\\n    @Id\\r\\n    @GeneratedValue(strategy = IDENTITY)\\r\\n    @Column(name = \\\"id\\\")\\r\\n    private Long id;\\r\\n\\r\\n    @Column(name = \\\"amount\\\")\\r\\n    private BigDecimal amount;\\r\\n\\r\\n    public Long getId() {\\r\\n        return id;\\r\\n    }\\r\\n\\r\\n    public void setId(Long id) {\\r\\n        this.id = id;\\r\\n    }\\r\\n\\r\\n    public BigDecimal getAmount() {\\r\\n        return amount;\\r\\n    }\\r\\n\\r\\n    public void setAmount(BigDecimal amount) {\\r\\n        this.amount = amount;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.5 Application 配置\\r\\n\\r\\nSpring Boot 啟動既時候，會讀取特定既配置檔，如 `application.properties`、`application.yml` 或包含環境名既 `application-dev.yml`。\\r\\n\\r\\n由於 Spring Boot 已經整合左 Tomcat container，所有 Tomcat 相關既配置都需要放喺上述檔案。\\r\\n呢個 application 行喺咩 port 位都一樣。\\r\\n\\r\\n另外，如果需要連接 DB，相關既配置如 JDBC connection URL、username、password 以及用既 driver class 都需要喺上述檔案列出。\\r\\n\\r\\n`application.yml` 例子：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\nserver:\\r\\n  port: 8080\\r\\n\\r\\n# MySQL\\r\\nspring:\\r\\n  datasource:\\r\\n    url: jdbc:mysql://localhost:3306/learnjpa?useSSL=false\\r\\n    username: root\\r\\n    password: \\r\\n    driver-class-name: com.mysql.cj.jdbc.Driver\\r\\n    tomcat: # Spring Boot 1\\r\\n      test-while-idle: true\\r\\n      validation-query: SELECT 1\\r\\n      time-between-eviction-runs-millis: 360000\\r\\n    hikari: # Spring Boot 2\\r\\n      connection-test-query: \\r\\n  jpa:\\r\\n    show-sql: true\\r\\n    open-in-view: false\\r\\n    hibernate:\\r\\n      ddl-auto: update\\r\\n    properties:\\r\\n      hibernate:\\r\\n        dialect: org.hibernate.dialect.MySQL57Dialect\\r\\n  jackson:\\r\\n    default-property-inclusion: non_null\\r\\n    serialization:\\r\\n      indent-output: true\\r\\n      fail-on-empty-beans: false\\r\\n      write-dates-as-timestamps: true\\r\\n    visibility.field: any\\r\\n    visibility.getter: none\\r\\n    visibility.setter: none\\r\\n    visibility.is-getter: none\\r\\n\\r\\n# SQL Server\\r\\nspring:\\r\\n  datasource:\\r\\n    url: jdbc:sqlserver://localhost:1433;databaseName=learnjpa\\r\\n    username: michael\\r\\n    password: \\r\\n    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\\r\\n  jpa:\\r\\n    show-sql: true\\r\\n    open-in-view: false\\r\\n    hibernate:\\r\\n      ddl-auto: update\\r\\n    properties:\\r\\n      hibernate:\\r\\n        dialect: org.hibernate.dialect.SQLServer2012Dialect\\r\\n  jackson:\\r\\n    default-property-inclusion: non_null\\r\\n    serialization:\\r\\n      indent-output: true\\r\\n      fail-on-empty-beans: false\\r\\n      write-dates-as-timestamps: true\\r\\n    visibility.field: any\\r\\n    visibility.getter: none\\r\\n    visibility.setter: none\\r\\n    visibility.is-getter: none\\r\\n\\r\\n# H2\\r\\nspring:\\r\\n  datasource:\\r\\n    url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=4\\r\\n    username: sa\\r\\n    password: \\r\\n    driver-class-name: org.h2.Driver\\r\\n  h2:\\r\\n    console:\\r\\n      enabled: true\\r\\n      path: /h2-console\\r\\n  jpa:\\r\\n    show-sql: true\\r\\n    open-in-view: false\\r\\n    hibernate:\\r\\n      ddl-auto: update\\r\\n    properties:\\r\\n      hibernate:\\r\\n        dialect: org.hibernate.dialect.H2Dialect\\r\\n  jackson:\\r\\n    default-property-inclusion: non_null\\r\\n    serialization:\\r\\n      indent-output: true\\r\\n      fail-on-empty-beans: false\\r\\n      write-dates-as-timestamps: true\\r\\n    visibility.field: any\\r\\n    visibility.getter: none\\r\\n    visibility.setter: none\\r\\n    visibility.is-getter: none\\r\\n```\\r\\n\\r\\n註：實際情況下不應重覆配置，除非需要連接多過一個 database（需要特別處理）。\\r\\n\\r\\n`application.properties` 例子：\\r\\n\\r\\n```properties\\r\\nserver.port=8080\\r\\n\\r\\n# MySQL\\r\\nspring.datasource.url=jdbc:mysql://localhost:3306/learnjpa?useSSL=false\\r\\nspring.datasource.username=root\\r\\nspring.datasource.password=\\r\\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\\r\\n# Spring Boot 1\\r\\nspring.datasource.tomcat.test-while-idle=true\\r\\nspring.datasource.tomcat.validation-query=SELECT 1\\r\\nspring.datasource.tomcat.time-between-eviction-runs-millis=360000\\r\\n# Spring Boot 2\\r\\nspring.datasource.hikari.xxx=xxx\\r\\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect\\r\\n\\r\\n# SQL Server\\r\\nspring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=learnjpa\\r\\nspring.datasource.username=michael\\r\\nspring.datasource.password=\\r\\nspring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver\\r\\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect\\r\\n\\r\\n# H2\\r\\nspring.datasource.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=4\\r\\nspring.datasource.username=sa\\r\\nspring.datasource.password=\\r\\nspring.datasource.driver-class-name=org.h2.Driver\\r\\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect\\r\\nspring.h2.console.enabled=true\\r\\nspring.h2.console.path=/h2-console\\r\\n\\r\\n# Common\\r\\nspring.jpa.show-sql=true\\r\\nspring.jpa.open-in-view=false\\r\\nspring.jpa.hibernate.ddl-auto=update\\r\\nspring.jpa.properties.hibernate.show_sql=true\\r\\nspring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl\\r\\n\\r\\n# Jackson\\r\\nspring.jackson.default-property-inclusion=non_null\\r\\nspring.jackson.serialization.indent-output=true\\r\\nspring.jackson.serialization.fail-on-empty-beans=false\\r\\nspring.jackson.serialization.write-dates-as-timestamps=true\\r\\nspring.jackson.visibility.field=any\\r\\nspring.jackson.visibility.getter=none\\r\\nspring.jackson.visibility.setter=none\\r\\nspring.jackson.visibility.is-getter=none\\r\\n```\\r\\n\";","export default \"# 5 幾款超有用必學 3rd party libraries\\r\\n\\r\\n今時今日以下幾款 3rd party libraries 已經被廣泛使用，亦係好成熟：\\r\\n\\r\\n| Library 名           | 用途                                                                   |\\r\\n| -------------------- | ---------------------------------------------------------------------- |\\r\\n| Lombok               | 寫少啲重複又重複既 boilerplate code                                    |\\r\\n| Apache Commons Lang3 | 處理 string                                                            |\\r\\n| Google Guava         | 多功能，可以處理 collection、thread pool 等                            |\\r\\n| Jackson Databind     | Serialization / deserialization（object-to-string / string-to-object） |\\r\\n| JUnit                | Unit testing 單元測試用                                                |\\r\\n| Mockito              | Unit testing 單元測試用（輔助）                                        |\\r\\n\\r\\n仲有好幾隻 Apache libraries 都有特長，例如：\\r\\n\\r\\n-   要進行基本既文件操作，如寫入純文字檔、讀取純文字檔、遞歸列出目錄文件等等，可以用 Apache Commons IO\\r\\n-   要處理 Base64 既 encoding 可以用 Apache Commons Codec\\r\\n-   要發起 HTTP call 可以用 Apache HttpClient Fluent API\\r\\n\\r\\n註：`spring-boot-starter-parent` 有對以上部分 libraries 提供 dependency 版本管理，\\r\\n所以某啲 dependency 寫左落 `pom.xml` 可以省卻 `<version>` tag。\\r\\n\\r\\nSpring 係 framework（較大）而唔算 library（較細小），佢直頭改變左成個 application 既寫法。\\r\\n\\r\\n## 5.1 Lombok\\r\\n\\r\\n由於 Java VO/DTO/entity classes 既 getters、setters 太 boilerplate，而絕大多數情況下，佢地全部都由 IDE 根據 properties 黎 gen 出黎，\\r\\n根本自己寫黎多舊魚，亦對 version control 係多左一丁點負擔（要用肉眼對啲 code）。\\r\\n\\r\\n所以就有左 Lombok 呢個 annotation-based 既 compile-time processor。佢會喺 compile time 階段 gen code。\\r\\nGen 左出黎既 bytecode，可以用 IDE 或者 decompiler 去睇下有冇 gen 錯 access modifiers、methods 既數量同名稱等等。\\r\\n\\r\\n唔用 Lombok：\\r\\n\\r\\n```java\\r\\npublic class Foo {\\r\\n    private String name;\\r\\n    private Date dateOfBirth;\\r\\n\\r\\n    public String getName() {\\r\\n        return name;\\r\\n    }\\r\\n\\r\\n    public void setName(String name) {\\r\\n        this.name = name;\\r\\n    }\\r\\n\\r\\n    public Date getDateOfBirth() {\\r\\n        return dateOfBirth;\\r\\n    }\\r\\n\\r\\n    public void setDateOfBirth(Date dateOfBirth) {\\r\\n        this.dateOfBirth = dateOfBirth;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n用左 Lombok：\\r\\n\\r\\n```java\\r\\n@Getter\\r\\n@Setter\\r\\n@FieldDefaults(level = PRIVATE)\\r\\npublic class Foo {\\r\\n    String name;\\r\\n    Date dateOfBirth;\\r\\n\\r\\n}\\r\\n```\\r\\n\\r\\n### 5.1.1 喺 Eclipse 使用 Lombok\\r\\n\\r\\n想喺 Eclipse 用 Lombok annotations 而 compile 到無問題既話，必須額外安裝 Lombok plugin。\\r\\n\\r\\n1. 去 [Project Lombok](https://projectlombok.org/download) 度下載 Lombok 既 plugin JAR file\\r\\n1. Double click 個 JAR，會顯示一個介面\\r\\n1. 揀返你個 Eclipse 既 directory\\r\\n1. Restart Eclipse\\r\\n\\r\\n---\\r\\n\\r\\n## 5.2 Jackson Databind\\r\\n\\r\\n用黎將某個 class 既 object 轉成 string（默認為 JSON format），呢個過程叫 serialization；調返轉就係 deserialization。\\r\\n\\r\\nSpring Boot 都有用 Jackson Databind 黎做 serialization 同 deserialization。\\r\\n\\r\\n1. 先係 deserialization，就係當我地用 POST HTTP API request 去訪問 Spring Boot 既 back-end 時，POST request body 係 JSON 格式，\\r\\n   當 Spring Boot 收到既時候就會將個 JSON 轉成 Java objects，然後進入 controller\\r\\n1. 之後係 serialization，就係 Spring Boot 做完曬啲 business logic，controller 返回結果之後，\\r\\n   會轉成 JSON 格式去作為 response body（不限於 POST request）\\r\\n\\r\\n### 5.2.1 用 ObjectMapper 黎做 serialization\\r\\n\\r\\n```java\\r\\npublic class ObjectMapperSerializationExample {\\r\\n    public static void main(String[] args) throws Exception {\\r\\n        final Foo foo = new Foo(\\\"Michael\\\");\\r\\n        System.out.println(convertToString(foo)); // 出 {\\\"name\\\":\\\"Michael\\\"}\\r\\n    }\\r\\n\\r\\n    private static String convertToString(Foo foo) throws Exception {\\r\\n        return new ObjectMapper().writeValueAsString(foo);\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Foo {\\r\\n    private String name;\\r\\n\\r\\n    public Foo(String name) {\\r\\n        setName(name);\\r\\n    }\\r\\n\\r\\n    public String getName() {\\r\\n        return name;\\r\\n    }\\r\\n\\r\\n    public void setName(String name) {\\r\\n        this.name = name;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 5.2.2 用 ObjectMapper 黎做 deserialization\\r\\n\\r\\n```java\\r\\npublic class ObjectMapperDeserializationExample {\\r\\n\\r\\n    public static void main(String[] args) throws Exception {\\r\\n        final String json = \\\"{ \\\\\\\"name\\\\\\\": \\\\\\\"Michael\\\\\\\"}\\\";\\r\\n        System.out.println(convertToBar(json).getName()); // 出 Michael\\r\\n    }\\r\\n\\r\\n    private static Bar convertToBar(String barJson) throws Exception {\\r\\n        return new ObjectMapper().readValue(barJson, Bar.class);\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Bar {\\r\\n    private String name;\\r\\n\\r\\n    public String getName() {\\r\\n        return name;\\r\\n    }\\r\\n\\r\\n    public void setName(String name) {\\r\\n        this.name = name;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 5.3 Apache Commons Lang3\\r\\n\\r\\n呢個 library 提供左 JDK 非常缺乏既 string manipulation methods。用呢啲 methods 我地可以寫少好多 code。\\r\\n個 API 設計初衷係想消滅 `NullPointerException`，所以佢既一個好大既賣點就係接受 `null` arguments。\\r\\n亦因為係 static methods，佢地唔會好似 instance methods 咁，因為個 string variable `null` 左而當你一 call method 就 `NullPointerException`。\\r\\n\\r\\nJDK 既 `str.toLowerCase()` vs Commons Lang3 既 `StringUtils.lowerCase(str)`，\\r\\n前者有可能因為 `str` 係 `null` 而爆 `NullPointerException`；相反，後者容錯。\\r\\n\\r\\n要輕鬆處理 string 可以用 `StringUtils`，要處理數字可以用 `NumberUtils`。\\r\\n呢啲 utility classes 不需要 `new`，只需要直接 call 佢地既 static methods 就可以用。\\r\\n\\r\\n其中較有用既 `StringUtils` 有以下功能：\\r\\n\\r\\n| Method                              | 用途                                                                                  |\\r\\n| ----------------------------------- | ------------------------------------------------------------------------------------- |\\r\\n| `trim(str)`                         | 將 `str` 既頭同尾空白字元刪走                                                         |\\r\\n| `strip(str)`                        | 將 `str` 既頭同尾空白字元刪走                                                         |\\r\\n| `stripToNull(str)`                  | 如果 `str` 係 `null`、empty 或 blank，返回 `null`                                     |\\r\\n| `leftPad(str, size, padStr)`        | 喺 `str` 既頭部填充 `padStr` 直至 `str` 既長度達到 `size`                             |\\r\\n| `rightPad(str, size, padStr)`       | 喺 `str` 既尾部填充 `padStr` 直至 `str` 既長度達到 `size`                             |\\r\\n| `isEmpty(str)` / `isNotEmpty(str)`  | check `str` 係 `null` 或 empty                                                        |\\r\\n| `isBlank(str)` / `isNotBlank(str)`  | check `str` 係 `null` 或 blank                                                        |\\r\\n| `isAnyEmpty(str1, str2, ...)`       | check 下有冇任何一個 string 係 `null` 或 empty                                        |\\r\\n| `isAnyBlank(str1, str2, ...)`       | check 下有冇任何一個 string 係 `null` 或 blank                                        |\\r\\n| `defaultIfBlank(str, defaultValue)` | 如果 `str` 係 `null` 或 blank，返回 `defaultValue`                                    |\\r\\n| `join(collection, separator)`       | 將 `collection` 既 elements 串連起成一個 string，每個 element 之間用 `separator` 分隔 |\\r\\n\\r\\n---\\r\\n\\r\\n## 5.4 Google Guava\\r\\n\\r\\n功能非常豐富，參考：[官方 GitHub](https://github.com/google/guava/wiki)\\r\\n\\r\\n有針對 collection data type 既 utility classes：\\r\\n\\r\\n-   `Lists`\\r\\n-   `Sets`\\r\\n-   `Maps`\\r\\n-   `ImmutableList`\\r\\n-   `ImmutableSet`\\r\\n-   `ImmutableMap`\\r\\n\\r\\n---\\r\\n\\r\\n## 5.5 JUnit 4 或 5\\r\\n\\r\\nJUnit 係最多人用既 Java unit testing library。\\r\\n\\r\\n使用：\\r\\n\\r\\n-   喺 `src/test/java` 度 create 一個 package，裡面再 create 一個 class\\r\\n-   加一個 `public void test() {}` 既 method，annotate with `@Test`\\r\\n-   Method body 打啲 production code，例如你 test 一個 utility class，就用佢既某個 method（你要 test 既果個 method）\\r\\n-   之後 call `Assert.assertEquals`、`Assert.assertTrue`、`Assert.assertFalse`、`Assert.assertNull`、\\r\\n    `Assert.assertNotNull` 黎 compare expected value（你預期既結果）同 actual value（你要 test 既果個 method 實際返回既結果）\\r\\n\\r\\n例子：\\r\\n\\r\\n```java\\r\\npublic class ConfigUtilsTest {\\r\\n\\r\\n    @Test\\r\\n    public void testConfig() {\\r\\n        final Config config = ConfigUtils.getConfigData();\\r\\n        Assert.assertNotNull(config);\\r\\n        Assert.assertEquals(\\\"1.0.0\\\", config.getVersion());\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n只需要喺 IDE 用 JUnit 4 或 5 黎運行呢個 class 就可以見到 JUnit 既 view。綠燈代表 pass；紅燈代表有 test fail 左。\\r\\n\\r\\n如果係 Maven project 既話，當你行部分 Maven 既 commands，佢會默認咁同我地行 test，而 Maven 係根據 Java class 個名黎睇邊啲係 test class。\\r\\n所以我地命名所有 test classes 時，都要 `Test` 字尾。\\r\\n\\r\\n---\\r\\n\\r\\n## 5.6 Mockito\\r\\n\\r\\n幻想一個情境，我地寫左一個 service class，呢個 class 充滿 business logic，而啲 business logic 都係都係基於佢既 dependencies 所返回既結果。\\r\\n我地個 service class 同呢啲 dependencies 係（[has-a/composition 關係](https://en.wikipedia.org/wiki/Has-a)）。\\r\\n呢啲 dependencies 最後係會連接 DB 行 SQL 去拎 data，再返回畀個 service class 去通過一連串 business logic 運算而得出結果。\\r\\n\\r\\n我地想寫一個 unit test 去淨係 test 呢個 class 既 business logic，但如果要連接 DB 先行得到個 test 就變左係 integration test，壞處係時間會長。\\r\\n\\r\\n為左簡化 dependencies 背後會做既野，我地就用直接假設呢啲 dependencies 會返回我地想佢地返回既結果，從而去單獨地測試呢個 service class。\\r\\n\\r\\n### 5.6.1 Mockito 例子\\r\\n\\r\\n```java\\r\\n/**\\r\\n * src/main/java/code/repo/SalesRepository.java\\r\\n */\\r\\n@Repository\\r\\npublic interface SalesRepository extends JpaRepository<Sales, Long> {\\r\\n\\r\\n    List<Sales> findAll();\\r\\n}\\r\\n\\r\\n/**\\r\\n * src/main/java/code/service/SalesService.java\\r\\n */\\r\\n@Service\\r\\npublic class SalesService {\\r\\n\\r\\n    @Autowired\\r\\n    SalesRepository salesRepository;\\r\\n\\r\\n    public BigDecimal calculateTotal() {\\r\\n        return salesRepository.findAll()\\r\\n                              .stream()\\r\\n                              .map(Sales::getAmount)\\r\\n                              .reduce(BigDecimal.ZERO, BigDecimal::add);\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * src/test/java/code/SalesServiceTest.java\\r\\n */\\r\\npublic class SalesServiceTest {\\r\\n\\r\\n    @InjectMocks\\r\\n    SalesService salesService;\\r\\n\\r\\n    @Mock\\r\\n    SalesRepository salesRepository;\\r\\n\\r\\n    @Before\\r\\n    public void setUp() {\\r\\n\\r\\n        // Mockito 會將 @Mock 既值植入去 @InjectMocks 既 object 裡面\\r\\n\\r\\n//        MockitoAnnotations.initMocks(this); // 舊式寫法\\r\\n        MockitoAnnotations.openMocks(this).close(); // 新式寫法\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n    public void testSalesTotal() {\\r\\n\\r\\n        final Sales sales1 = new Sales();\\r\\n        sales1.setAmount(new BigDecimal(\\\"400\\\"));\\r\\n\\r\\n        final Sales sales2 = new Sales();\\r\\n        sales2.setAmount(new BigDecimal(\\\"600\\\"));\\r\\n\\r\\n        Mockito.when(salesRepository.findAll()).thenReturn(Arrays.asList(sales1, sales2));\\r\\n\\r\\n        final BigDecimal salesTotal = salesService.calculateTotal();\\r\\n\\r\\n        Assert.assertEquals(new BigDecimal(\\\"1000\\\"), salesTotal);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\";","export default \"# 6 Dependency Management\\r\\n\\r\\nDependency management tool 可以幫我地下載同管理我地呢一個 project 需要用到既 3rd party libraries，同埋 build project 時既相關設定。\\r\\n\\r\\n當第個 developer 要開發呢個 project，佢只需要用個 Maven command 就可以自動下載返所需既 dependency JAR files，\\r\\n唔洗你 copy 啲 IDE 特定 format 既 settings 畀果個 developer。\\r\\n\\r\\n最熱門既 dependency management tool 係 Maven，而第二多人用既係 Gradle。\\r\\n\\r\\n## 6.1 冇 dependency management 之下點做\\r\\n\\r\\n就算冇用 dependency management tool，喺 Eclipse 都可以加到 3rd party libraries。\\r\\n\\r\\n1. 喺 Eclipse 左邊 Package Explorer 度 right click 個 non-Maven/Gradle Java project\\r\\n1. Context menu > Properties\\r\\n1. Java build path\\r\\n1. Add External JAR...\\r\\n1. 揀個係 API 既 JAR file\\r\\n1. Apply and close\\r\\n1. 喺 Package Explorer 你個 Java project 底下，expand Referenced Libraries\\r\\n1. 你會見到有你 add 左既 JAR file\\r\\n\\r\\n但當我地將 source code 交畀第個 developer 開發既時候，要 keep 住 `.classpath` 呢個檔案，否則會冇曬啲 Referenced Libraries。\\r\\n\\r\\n![](blog/2020-09/coding-java-6/eclipse-java-build-path.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 6.2 喺 Eclipse 用 Maven\\r\\n\\r\\n如果要 import 一個 Maven project，可以睇返呢篇：[Java 開發筆記（二） - Import 現有 Maven project](/blog/coding-java-2#22-import-現有-maven-project)。\\r\\n\\r\\n一般黎講，當我地喺 Eclipse 改左 Maven project 既 `pom.xml` 檔案之後，Eclipse 會自動更新 project。\\r\\n\\r\\n但如果冇發生到，我地可以 right-click 個 project > Maven > Update project...。\\r\\n\\r\\n---\\r\\n\\r\\n## 6.3 取得 Maven library\\r\\n\\r\\n無論係 Maven 定係 Gradle，用既都係 Maven public repository `https://repo1.maven.org/maven2/`。\\r\\n\\r\\n可以 google search library 名 + `maven`，例如 `jsoup maven`，就會搵到 `org.jsoup » jsoup - Maven Repository`。\\r\\n\\r\\n揀左特定版本之後，copy Maven 配置：\\r\\n\\r\\n```xml\\r\\n<!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->\\r\\n<dependency>\\r\\n    <groupId>org.jsoup</groupId>\\r\\n    <artifactId>jsoup</artifactId>\\r\\n    <version>1.13.1</version>\\r\\n</dependency>\\r\\n```\\r\\n\\r\\n然後喺 `pom.xml` 裡面呢個位 paste 上面既 XML code：\\r\\n\\r\\n```xml\\r\\n<dependencies>\\r\\n    <!-- paste here -->\\r\\n</dependencies>\\r\\n```\\r\\n\\r\\n如果用 Gradle：\\r\\n\\r\\n```\\r\\n// https://mvnrepository.com/artifact/org.jsoup/jsoup\\r\\ncompile group: 'org.jsoup', name: 'jsoup', version: '1.13.1'\\r\\n```\\r\\n\\r\\n去 `build.gradle`：\\r\\n\\r\\n```\\r\\ndependencies {\\r\\n    // paste here\\r\\n}\\r\\n```\\r\\n\\r\\n喺 Eclipse 度 save 左個 `pom.xml` 檔（或 `build.gradle` 檔，如果係 Gradle）之後，Eclipse 就會自動 refresh 同 resolve，\\r\\n下載 library 既 JAR 檔，再幫你重新 build 過個 project。\\r\\n\\r\\n![](blog/2020-09/coding-java-6/maven-jsoup.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 6.4 使用 Maven commands\\r\\n\\r\\n如果要用 `mvn` command 既話，就要去系統設定修改 environment variables，加入 `JAVA_HOME`（例如 `C:\\\\Program Files\\\\Java\\\\jdk1.8.0_333`）。\\r\\n\\r\\n註：一定要用 JDK，而唔係 JRE。\\r\\n\\r\\n以下係常用既 Maven commands。\\r\\n\\r\\n生成 project artifact（如 JAR 檔）：\\r\\n\\r\\n```bash\\r\\nmvn clean package\\r\\n```\\r\\n\\r\\n生成 project artifact（如 JAR 檔），跳過所有 unit tests：\\r\\n\\r\\n```shell\\r\\nmvn clean package -Dmaven.test.skip=true\\r\\n```\\r\\n\\r\\n生成 project artifact（如 JAR 檔）並安裝到自己既 `.m2` folder，跳過所有 unit tests：\\r\\n\\r\\n```shell\\r\\nmvn clean install -Dmaven.test.skip=true\\r\\n```\\r\\n\\r\\nCompile Maven project：\\r\\n\\r\\n```bash\\r\\nmvn compile\\r\\n```\\r\\n\\r\\nCheck Maven 以及 JDK 版本：\\r\\n\\r\\n```bash\\r\\nmvn -v\\r\\n```\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [StackOverflow - Should JAVA_HOME point to JDK or JRE?](https://stackoverflow.com/questions/17601827/should-java-home-point-to-jdk-or-jre)\\r\\n\\r\\n---\\r\\n\\r\\n## 6.5 本地 `.m2` folder\\r\\n\\r\\n如果需要重新由線上既 Maven repository 下載返啲 3rd party libraries，或者之前做 project 既時候經 `mvn install` 安裝過舊版既 project artifact，\\r\\n而令到 Maven 一直用左本地 `.m2` folder 裡面既 JAR 檔而唔係重新 compile + install，咁我地可以清空本地 Maven repository 既某啲 folders，\\r\\n甚或成個本地 Maven repository（重新下載可能比較需時）。\\r\\n\\r\\n| OS      | 位置                                     |\\r\\n| ------- | ---------------------------------------- |\\r\\n| Windows | `%HOMEDRIVE%/%HOMEPATH%/.m2/repository/` |\\r\\n| macOS   | `~/.m2/repository/`                      |\\r\\n\\r\\n裡面既資料夾係以 Maven `pom.xml` 既 `<groupId>` 黎開既，所以 Spring framework 果啲 `<groupId>` 以 `org.springframework` 開頭，\\r\\n就會出現喺 `org/springframework/` 資料夾裡面。\\r\\n\\r\\n![](blog/2020-09/coding-java-6/m2-repository-spring.png)\\r\\n\";","export default \"# 1 Git 簡介\\r\\n\\r\\nGit 係一個同 SVN 相似，但比 SVN 出色既 version control 工具，今時今日 Git 已經取代左 SVN。而因為有啲 Git 服務提供者（例如 GitHub）有提供免費既網上個人 Git 服務，所以令到 Git 有時可以被用作個人既 cloud storage（當然都有容量甚或文件大小既限制）。以下係最出名既幾個 Git 服務提供者：\\r\\n\\r\\n-   GitHub（已被 Microsoft 收購）\\r\\n-   GitLab\\r\\n-   Bitbucket（Atlassian 既產品）\\r\\n-   Gitee（國內）\\r\\n\\r\\n## 1.1 Git 概念\\r\\n\\r\\n-   一個 Git 既 repository 可以有 `2` 種形式。\\r\\n    -   Offline／local\\r\\n        -   完全 offline，冇對應既 remote repository。\\r\\n        -   以 `git init` 形式產生 `.git` folder。\\r\\n    -   Remote repository\\r\\n        -   如果要修改，就要將成個 repository clone 落 local 度，之後作出變更，然後提交變更到 remote repository 既某個 branch。\\r\\n        -   有啲 Git 服務提供者（例如 GitHub）簡化左新增或者刪除檔案既步驟，畀我地喺網頁都做到。\\r\\n        -   當需要將 local branch 同 remote branch 同步或者更新 branch 資訊，就需要連網絡。\\r\\n        -   一般既個人既業餘項目，或者多人同時協作既私人公司項目、open source 項目都會咁做。\\r\\n-   每一個 Git 既 repository 既結構都係類似一個 directed graph，而如果從 branch 既角度睇就會係類似 singly linked list，而每一個 node 就叫做 commit（喺呢篇文裡面，我地會叫佢做打包左既變更）。\\r\\n-   較新既 commit 會有 pointer 指向前一個 commit。\\r\\n-   Git 既 branch 其實就係一個 pointer（叫 `HEAD`），一個 branch 名只係某一個 commit 既自定義名稱既 label／tag。\\r\\n    -   通常都會從一個現有既 branch 既 `HEAD` 去開一個新既 branch，喺果度分叉出新既支節。\\r\\n-   當某個 branch 有新 commit，Git 就自動將 branch 既 `HEAD` pointer 指向新 commit。\\r\\n-   Branches 再多都好，到左開發階段既中後期，唔同 branches 既 commits 最終都會 merge 埋一齊——深層既支節會 merge 埋一齊，之後到淺層既支節 merge 返落主幹既 branch（通常係用返默認既 branch）。\\r\\n    -   個別 developers 既 branches 會 merge 落 integration branch。\\r\\n    -   Integration branches 會 merge 落主幹既 branch（e.g. `master`）。\\r\\n-   正因為結構係 directed graph／linked list，所以支持毀滅性既操作。\\r\\n    -   例如刪除已打包既變更，Git 只需要將 `HEAD` pointer 指返去上一個 commit 就得。\\r\\n-   除非個 repository 係新既（冇 source code），否則至少會有一個 branch。\\r\\n-   多 branches 既作用係畀我地應付開發項目既時候需要多個 deployment environments。\\r\\n    -   可以開 dev、SIT、UAT、pre-production、production 等等 environments 對應既 branches，而 commits 可以因應測試進度一層一層往後既 branches 推。\\r\\n\\r\\n關於 Git 默認 branch 名：\\r\\n\\r\\n-   以前無論係 Git 服務提供者或者係 Git 既 CLI 工具，默認既 branch 名都係 `master`。\\r\\n-   但因為近年 IT 界著重反歧視，避免使用 master 或者 slave 既字眼，所以有啲 Git 服務提供者開始改左默認既 branch 既名，例如 GitHub 就改左新既 repositories 既默認 branch 會叫 `main`。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 下載 remote repository\\r\\n\\r\\n無論係公司既 project，亦可以係個人、私人既 project，只要有條 Git URL（公司通常會用 SSH protocol），就可以下載整個 project 既 source。呢條 Git URL 通常喺 GitHub、Bitbucket、GitLab 等既 project 網頁都會顯示出黎。\\r\\n\\r\\n```bash\\r\\ngit clone \\\"https://github.com/user/project.git\\\"\\r\\n```\\r\\n\\r\\n如果我地想直接下載某個 branch，而唔係默認既 branch（一般為 `master`），咁我地可以用：\\r\\n\\r\\n```bash\\r\\ngit clone -b \\\"master\\\" \\\"https://github.com/user/project.git\\\"\\r\\n```\\r\\n\\r\\n以上都會建立一個同我地 project 名一樣既 folder。如果想指定新 folder 名，可以用：\\r\\n\\r\\n```bash\\r\\ngit clone \\\"https://github.com/user/project.git\\\" \\\"specific-folder-name\\\"\\r\\ngit clone -b \\\"master\\\" \\\"https://github.com/user/project.git\\\" \\\"specific-folder-name\\\"\\r\\n```\\r\\n\\r\\n如果個 Git repo 啟用左 SSH key（[Deploy keys](https://docs.github.com/en/developers/overview/managing-deploy-keys#deploy-keys)），我地可以用：\\r\\n\\r\\n```bat\\r\\n:: Windows Command Prompt\\r\\nSET \\\"GIT_SSH_COMMAND=ssh -i my-key.rsa -o IdentitiesOnly=yes\\\"\\r\\ngit clone ssh://git@github.com/my-username/my-repo.git\\r\\n```\\r\\n\\r\\n## 2.1 獲取源 Git URL\\r\\n\\r\\n當我地已經 clone 左個 project 落黎，呢個時候想搵返條 Git URL 出黎，其實唔需要下下都去返 GitHub、Bitbucket、GitLab 等既 project 網頁度抄，有個簡單既方法：\\r\\n\\r\\n```bash\\r\\ngit remote -v\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 3 更新 branch 資訊\\r\\n\\r\\n有時我地喺 web 上 create 左 branch（如 JIRA ticket 上），咁我地喺切換去新 branch 之前需要更新一下 branch 資訊：\\r\\n\\r\\n```bash\\r\\ngit fetch\\r\\n```\\r\\n\\r\\n如果唔介意下載埋變更／同 remote branch 同步埋：\\r\\n\\r\\n```bash\\r\\ngit pull\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 4 切換去另一個 branch\\r\\n\\r\\n當我地有左需要既 branch 資訊，就可以切換去果個指定既 branch：\\r\\n\\r\\n```bash\\r\\ngit checkout \\\"feature/some_feature\\\"\\r\\n```\\r\\n\\r\\n## 4.1 查看身處既 branch\\r\\n\\r\\n有時自己唔記得左自己喺邊個 branch，想知道返就用：\\r\\n\\r\\n```bash\\r\\ngit branch\\r\\n```\\r\\n\\r\\n曾經用過既 branches 都會出現喺結果清單上，打星（`*`）果個就係而家個 branch。\\r\\n\\r\\n---\\r\\n\\r\\n## 4.2 搵 remote branch\\r\\n\\r\\n當我地想知道 remote repository 上面有冇存在住某個 branch，我地可以列曬 remote branches 出黎先，再用 keyword 去 filter 出我地想要既結果。\\r\\n\\r\\nmacOS：\\r\\n\\r\\n```bash\\r\\ngit branch -r | grep \\\"master\\\"\\r\\n```\\r\\n\\r\\nWindows：\\r\\n\\r\\n```bash\\r\\ngit branch -r | findstr \\\"master\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 5 下載變更／同 remote branch 同步\\r\\n\\r\\n隨時間過去，其他同事可能會對我地既 branch 有代碼變更，咁我地想更新自己 local branch 既 source，同步一下，以免唔好令自己 local branch 落後太多，\\r\\n搞到自己 based on 啲舊既 source code 去做改動，增加之後 integrate 完唔 work 既風險，我地可以間中下載變更：\\r\\n\\r\\n```bash\\r\\ngit pull\\r\\n```\\r\\n\\r\\n行完句 command 之後，以下係常見既結果：\\r\\n\\r\\n-   冇變更\\r\\n-   有變更，自動更新 local branch 成功\\r\\n-   有變更，自動更新 local branch 過程中發現 conflicts，需要手動 merge 去解決 merge conflicts\\r\\n\\r\\n呢個 command 亦會更新埋 branch 資訊。\\r\\n\\r\\n---\\r\\n\\r\\n# 6 了解 local branch 現時情況\\r\\n\\r\\n有時想知道而家個 local branch 咩情況，下一步有咩可以做，我地可以用：\\r\\n\\r\\n```bash\\r\\ngit status\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 7 提交變更\\r\\n\\r\\n呢度指既變更（commit）可以係一次修改（一個全新既變更），亦可以係針對 remote repository 上既變更作二次修改（覆寫已經喺雲端既資料）。\\r\\n\\r\\n一般黎講，如果冇野需要中途返轉頭改，提交變更既流程係：\\r\\n\\r\\n1. 檢視變更\\r\\n1. 揀需要既檔案，將佢地提交至暫存區\\r\\n1. 將暫存區打包，同時提供修改內容概要\\r\\n1. 提交已打包既變更\\r\\n\\r\\n如果有野需要中途返轉頭改，提交變更既流程就會係：\\r\\n\\r\\n1. 檢視變更\\r\\n1. 揀需要既檔案，將佢地提交至暫存區\\r\\n1. 重覆步驟 `1` 至 `2`\\r\\n1. 將暫存區打包，同時提供修改內容概要\\r\\n1. 重覆步驟 `3` 至 `4`\\r\\n1. 提交已打包既變更\\r\\n\\r\\n註：\\r\\n\\r\\n-   提交至暫存區既唔單止係檔案清單，仲包括埋實際修改既內容，所以喺提交至暫存區之後仲有野要改，係需要重覆返提交至暫存區既步驟，先可以改到暫存區既內容，暫存區唔會因為檔案內容有後續既修改而自動同步\\r\\n-   無論上左 remote repository 未，已打包既變更都唔會再因為暫存區既內容有後續既修改而自動同步，所以將暫存區打包之後仲有野要由暫存區同步到之前已打包既變更，係需要喺上次既變更上作二次修改\\r\\n\\r\\n## 7.1 檢視變更\\r\\n\\r\\n檢視有改動既檔案既文本變更：\\r\\n\\r\\n```bash\\r\\ngit diff\\r\\n```\\r\\n\\r\\n檢視指定檔案既變更：\\r\\n\\r\\n```bash\\r\\ngit diff \\\"pom.xml\\\"\\r\\n```\\r\\n\\r\\n如果有太多行既文字或者太多個檔案有改動，咁我地可以用 `up arrow` 或 `down arrow` 黎喺 CLI navigate，會有類似網頁既 scroll 效果。想退出可以撳 `q`。\\r\\n\\r\\n---\\r\\n\\r\\n## 7.2 揀需要提交既檔案\\r\\n\\r\\n如果所有變更都需要提交，就先將佢地加曬入暫存區（stage）：\\r\\n\\r\\n```bash\\r\\ngit add .\\r\\n```\\r\\n\\r\\n如果想將指定檔案加入暫存區（stage）：\\r\\n\\r\\n```bash\\r\\ngit add \\\"pom.xml\\\"\\r\\n```\\r\\n\\r\\n之後，如果喺變更推上 remote repository 之前仲有野改又想包括埋，都要行呢一步。\\r\\n\\r\\n### 7.2.1 檢視暫存區內檔案既變更\\r\\n\\r\\n如果檔案已經暫存（staged），呢個時候我地仲想檢視返變更，可以咁做：\\r\\n\\r\\n```bash\\r\\ngit diff --staged\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 7.2.2 取消暫存已經暫存既檔案\\r\\n\\r\\n如果檔案已經暫存（staged），呢個時候我地想將佢地回復至未暫存既狀態（unstaged），可以咁做：\\r\\n\\r\\n```bash\\r\\ngit reset\\r\\n```\\r\\n\\r\\n如果想將指定既檔案回復至未暫存既狀態（unstaged）：\\r\\n\\r\\n```bash\\r\\ngit reset \\\"pom.xml\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 7.3 打包變更、加概要\\r\\n\\r\\n如果要打包成一個新既變更，應提供修改內容概要：\\r\\n\\r\\n```bash\\r\\ngit commit -m \\\"Fixed some bugs.\\\"\\r\\n```\\r\\n\\r\\n如果想喺上次既變更（無論上左 remote repository 未）上作二次修改，然後更改修改內容概要：\\r\\n\\r\\n```bash\\r\\ngit commit --amend\\r\\n```\\r\\n\\r\\n如果想更改文本編輯器第一行顯示既修改內容概要，可以撳 `a`，然後更改，完成之後撳 `Esc`，否則跳過呢步。\\r\\n\\r\\n然後喺 CLI 既文字編輯器裡面打 `:wq`，再拍 `Enter`。\\r\\n\\r\\n如果唔需要更改修改內容概要，可以用：\\r\\n\\r\\n```bash\\r\\ngit commit --amend --no-edit\\r\\n```\\r\\n\\r\\n### 7.3.1 取消打包已打包既變更\\r\\n\\r\\n如果想將一個打包左既變更回復至暫存既狀態（staged）：\\r\\n\\r\\n```bash\\r\\ngit reset --soft HEAD~1\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   `~` 後面既數字係想刪除既變更數目。\\r\\n    -   如果個變更係黎自 `--no-ff` 既 merge，咁我地要刪既只係一個 merge commit。\\r\\n    -   如果係 fast forward 既 merge，因為所有打包左既變更都喺曬度，所以全部 merge 過黎既已打包既變更都要刪除。\\r\\n-   如果涉及既變更本身存在喺 remote repository，咁呢個就係一個毀滅性既操作，因為需要刪除左 remote repository 既變更，所以需要 force push。\\r\\n\\r\\n---\\r\\n\\r\\n### 7.3.2 刪除已打包既變更\\r\\n\\r\\n如果想刪除打包左既一個變更：\\r\\n\\r\\n```bash\\r\\ngit reset --hard HEAD~1\\r\\ngit push --force-with-lease\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   `~` 後面既數字係想刪除既變更數目。\\r\\n    -   如果個變更係黎自 `--no-ff` 既 merge，咁我地要刪既只係一個 merge commit。\\r\\n    -   如果係 fast forward 既 merge，因為所有打包左既變更都喺曬度，所以全部 merge 過黎既已打包既變更都要刪除。\\r\\n-   如果有任何已經存在喺 remote repository 既變更喺 local 被刪除左，咁呢個就係一個毀滅性既操作，因為需要刪除 remote repository 既變更，所以需要 force push。\\r\\n\\r\\n![](blog/2020-09/git-basics/ff-vs-noff-merge.png)\\r\\n\\r\\n---\\r\\n\\r\\n### 7.3.3 將多個變更合併成一個\\r\\n\\r\\n如果唔想個變更紀錄存在太多個變更，但又想保留所有變更內容，有好幾個方法可以將幾個變更合併成 `1` 個。\\r\\n\\r\\n方法一：將多個已打包既變更回復至暫存既狀態（staged），再打包成 `1` 個變更。\\r\\n\\r\\n假如我地想合併 `2` 個變更：\\r\\n\\r\\n```bash\\r\\ngit reset --soft HEAD~2\\r\\n```\\r\\n\\r\\n方法二：刪除多個已打包既變更，再用合併變更既方式將後來既所有變更喺暫存區（stage）合併。\\r\\n\\r\\n假如我地想合併 `2` 個變更：\\r\\n\\r\\n```bash\\r\\ngit reset --hard HEAD~2\\r\\ngit merge --squash HEAD@{1}\\r\\ngit commit -m \\\"Combined commit message.\\\"\\r\\n```\\r\\n\\r\\n方法三：用比較強大既 rebase 功能。\\r\\n\\r\\n假如我地想合併 `2` 個變更：\\r\\n\\r\\n```bash\\r\\ngit rebase -i HEAD~2\\r\\n```\\r\\n\\r\\n1. Interactive rebase 會開啟文字編輯器，將 commits（`HEAD~2` 就會係 `2` 個）依時間順序由上至下咁列出黎，而每個 commit ID 既左邊都會寫住 `pick`。\\r\\n1. 除左最頂果 `1` 個 commit 留返係 `pick`，其餘改成 `s`（意思係 squash），完成之後撳 `Esc`，然後打 `:wq`，再拍 `Enter`。\\r\\n1. 之後會進入變更概要既文字編輯器，我地可以喺裡面修改變更概要，完成之後撳 `Esc`，然後打 `:wq`，再拍 `Enter`。\\r\\n\\r\\n註：\\r\\n\\r\\n-   `~` 後面既數字係想處理既變更數目，如果要合併 `3` 個變更，就要用 `HEAD~3`。\\r\\n    -   如果個變更係黎自 `--no-ff` 既 merge，咁我地要刪既只係一個 merge commit。\\r\\n    -   如果係 fast forward 既 merge，因為所有打包左既變更都喺曬度，所以全部 merge 過黎既已打包既變更都要刪除。\\r\\n-   如果有任何已經存在喺 remote repository 既變更喺 local 被刪除左，咁呢個就係一個毀滅性既操作，因為需要刪除 remote repository 既變更，所以需要 force push。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [StackOverflow - Squash my last X commits together using Git](https://stackoverflow.com/questions/5189560/squash-my-last-x-commits-together-using-git)\\r\\n\\r\\n---\\r\\n\\r\\n### 7.3.4 還原毀滅性既操作\\r\\n\\r\\n如果做錯左刪除既操作，除左搵有保留到相關 commits 既同事幫手之外，仲有一個補救既方法。\\r\\n\\r\\n```bash\\r\\ngit reset --hard ORIG_HEAD\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   進行毀滅性既操作既時候，Git 會將之前既 `HEAD` pointer 覆蓋一個叫 `ORIG_HEAD` 既 pointer。\\r\\n-   如果有任何已經存在喺 remote repository 既變更喺 local 被刪除左，咁呢個就係一個毀滅性既操作，因為需要刪除 remote repository 既變更，所以需要 force push。\\r\\n\\r\\n---\\r\\n\\r\\n## 7.4 將變更推上 remote repository\\r\\n\\r\\n如果係新既變更，可以直接行：\\r\\n\\r\\n```bash\\r\\ngit push\\r\\n```\\r\\n\\r\\n行完句 command 之後，以下係常見既結果：\\r\\n\\r\\n-   成功推上 remote repository\\r\\n-   因為 remote repository 有變更，我地個變更唔可以推上去住，需要先下載變更落黎，有可能需要解決 merge conflicts\\r\\n\\r\\n但如果係喺上次既變更上作二次修改，就必須 force push：\\r\\n\\r\\n```bash\\r\\ngit push --force-with-lease\\r\\n```\\r\\n\\r\\n要注意既係 force push 唔係一個好既習慣，除非你係果個 branch 既唯一作者，因為呢個動作有可能會覆寫其他作者喺你最後更新 local branch 至 force push 既呢段時間做過既修改（例如另一個作者基於你上次提交既變更去做修改）。Force push 呢個動作係冇紀錄冇痕跡（Git 本身冇做紀錄，CLI 睇唔出，但 GitHub、Bitbucket 喺某啲情況或者配置下可能會有）。\\r\\n\\r\\n一個好啲既做法係用 force with lease：\\r\\n\\r\\n```bash\\r\\ngit push --force-with-lease\\r\\n```\\r\\n\\r\\n解釋：如果有其他人搶先一步改左野，令到個 branch 既 remote ref 唔同左，咁就同我 local branch 既 ref 唔同，咁 Git 就會 reject 我個 push，而原因就係 `stale info`（陳舊資訊）。\\r\\n\\r\\n另外，force push 都會令 commit ID 隨著修改內容甚或相關 metadata 而改變。\\r\\n\\r\\n---\\r\\n\\r\\n## 7.5 重設 local branch\\r\\n\\r\\n如果想 reset local branch，刪曬所有新增過既檔案、復原返刪左既檔案，及還原所有檔案既文本變更，我地可以用：\\r\\n\\r\\n```bash\\r\\ngit clean -f -d -x && git reset --hard\\r\\n```\\r\\n\\r\\n當然最好都係重新 clone 過。\\r\\n\\r\\n---\\r\\n\\r\\n# 8 查看 branch 最近既變更\\r\\n\\r\\n使用以下 commands，我地可以睇到變更概要，但唔會顯示檔案清單或者文本既實際改動內容。\\r\\n\\r\\n基本（顯示既 layout 難睇，亦冇火車軌，唔推薦）：\\r\\n\\r\\n```bash\\r\\ngit log\\r\\n```\\r\\n\\r\\n連埋改左既檔案名：\\r\\n\\r\\n```bash\\r\\ngit log --stat\\r\\n```\\r\\n\\r\\n一行過、連火車軌：\\r\\n\\r\\n```bash\\r\\ngit log --graph --oneline\\r\\n```\\r\\n\\r\\n一行過（包含火車軌、作者、提交日期時間、修改內容概要，最推薦，可以自定義 alias 黎簡化）：\\r\\n\\r\\n```bash\\r\\ngit log --graph --pretty=format:\\\"%C(cyan)%h%d   %C(green)%ai   %C(white)%<(15)%an%C(yellow)%s\\\"\\r\\n```\\r\\n\\r\\n如果有太多行既文字，咁我地可以用 `up arrow` 或 `down arrow` 黎喺 CLI navigate，會有類似網頁既 scroll 效果。想退出可以撳 `q`。\\r\\n\\r\\n---\\r\\n\\r\\n# 9 合併另一個 branch 既變更\\r\\n\\r\\n假如我地有兩個 branches，`master` 及 `feature_branch`，而 `feature_branch` 係由 `master` 開出黎，之後我地喺 `feature_branch` 有一個或以上既打包左既變更，咁我地就可以將我地喺開 `feature_branch` 之後所打包既變更合併到 `master` branch。\\r\\n\\r\\n```bash\\r\\ngit merge --no-ff feature_branch\\r\\ngit push\\r\\n```\\r\\n\\r\\n|    Merge 方式    | 解釋|\\r\\n| :--------------: ||\\r\\n|   Fast forward   | `git merge` 既默認策略。FF merge 會直接將 source branch 既 `HEAD` pointer 指去 feature branch 既 `HEAD` pointer。呢個方法比起 non fast forward 既壞處係我地睇 log 唔會知道邊啲 commits 係關連，因為 merge 左去 target branch 上面既變更同我地喺 target branch 度直接打包變更係一樣。另外，萬一喺開 branch 之後、merge 之前，有人喺 target branch（上面例子既 `master`）度加左變更，咁 Git 就冇辦法就咁搬個 pointer 去 source branch（上面例子既 `feature_branch`）既 `HEAD`，因為咁做會令到 target branch 上面新既 commits 唔見左，咁 Git 就會自動轉用 non fast forward merge，command line 會見到寫住 `Merge made by the 'recursive' strategy.`，睇返 log 會見到多左一個 merge commit，因為 Git 幫我地既變更再打包放喺 target branch。 |\\r\\n| Non fast forward | `--no-ff` 既 merge 會將 source branch（上面例子既 `feature_branch`）既所有需要 merge 既變更打包成一個 merge commit 放喺 target branch（上面例子既 `master`）。|\\r\\n\\r\\n![](blog/2020-09/git-basics/ff-vs-noff-merge.png)\\r\\n\\r\\n合併完成之後，我地可以刪除 `feature_branch`，因為我地既變更已經喺 `master` branch；亦可以繼續保留 `feature_branch`，如果日後再有變更要 merge 可以再行上面既 commands。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Pull Request Merge Strategies: The Great Debate](https://blog.developer.atlassian.com/pull-request-merge-strategies-the-great-debate/)\\r\\n-   [Merging vs. Rebasing](https://www.atlassian.com/git/tutorials/merging-vs-rebasing)\\r\\n\\r\\n## 9.1 解決 merge conflicts\\r\\n\\r\\n如果 `master` branch 有啲變更改既檔案同我地既變更改既檔案相同，而 Git 又冇辦法幫我地自動 merge，咁就會有 merge conflicts，只能自行解決。我地要話畀 Git 知我地想用邊個版本，或者開個檔案黎自行修正返：\\r\\n\\r\\n```plaintext\\r\\n...\\r\\n<<<<<<< HEAD\\r\\nHello!\\r\\n=======\\r\\nHello World\\r\\n>>>>>>> 09f8da31045621b1c2d26d4130763e8f9253db81\\r\\n...\\r\\n```\\r\\n\\r\\n我地可以自己修正返個檔案，而另一個方法係用：\\r\\n\\r\\n```bash\\r\\ngit mergetool\\r\\n```\\r\\n\\r\\n默認係用 vimdiff，但如果想方便啲既話，我地可以用一個內建 merge Git conflicts 功能既 IDE，例如 IntelliJ IDEA，又或者用一個支援 merge Git conflicts 既 file diff/merge tool，例如 Beyond Compare。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Using Beyond Compare with Version Control Systems](https://www.scootersoftware.com/support.php?zz=kb_vcs#gitwindows)\\r\\n-   [Using Beyond Compare with Version Control Systems (macOS)\\r\\n    ](https://www.scootersoftware.com/support.php?zz=kb_vcs_osx#git)\\r\\n\\r\\n---\\r\\n\\r\\n# 10 隱藏變更\\r\\n\\r\\n## 10.1 暫時收埋目前既變更\\r\\n\\r\\n如果我地做做下改動既時候，想做一啲冇關係既 Git 操作，例如將一個 branch merge 去另一個 branch，但又唔想搵個新 folder 重新 clone 過啲 source code，咁呢個 command 就好有用：\\r\\n\\r\\n```bash\\r\\ngit stash\\r\\n```\\r\\n\\r\\n又或者：\\r\\n\\r\\n```bash\\r\\ngit stash push\\r\\n```\\r\\n\\r\\nGit 會將我地目前既變更放到去一個臨時既儲存空間裡面。\\r\\n\\r\\n註：如果變更包括新建立既檔案而我地又想包括埋佢地，咁就要打包入暫存區（stage）先。\\r\\n\\r\\n之後我地行呢句 command 就會見到我地既變更唔見左：\\r\\n\\r\\n```bash\\r\\ngit status\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 10.2 攞返變更出黎\\r\\n\\r\\n當我地完成冇關係既操作之後，想回復返之前工作既狀態，咁我地行呢句 command 就可以攞返啲變更出黎：\\r\\n\\r\\n```bash\\r\\ngit stash pop\\r\\n```\\r\\n\\r\\n之後我地行呢句 command 就會見到我地先前既變更喺返曬度：\\r\\n\\r\\n```bash\\r\\ngit status\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 11 加入已存在變更\\r\\n\\r\\n如果我地想將某一個 branch 既一個變更加落呢個 branch 度，我地可以用：\\r\\n\\r\\n```bash\\r\\ngit cherry-pick <commit ID>\\r\\n```\\r\\n\\r\\n註：行完之後，會多左一個帶有新 commit ID 既變更。\\r\\n\\r\\n---\\r\\n\\r\\n# 12 修改過往變更概要\\r\\n\\r\\n我地要用 rebase 功能，而因為呢個係一個毀滅性既操作，所以 rebase 完之後要 force push。\\r\\n\\r\\n假如最近既 `2` 個有個變更既概要輸入錯左，我地想修改，\\r\\n\\r\\n```bash\\r\\ngit rebase -i HEAD~2\\r\\n```\\r\\n\\r\\n1. Interactive rebase 會開啟文字編輯器，將 commits（`HEAD~2` 就會係 `2` 個）依時間順序由上至下咁列出黎，而每個 commit ID 既左邊都會寫住 `pick`。\\r\\n1. 將需要修改既變更由 `pick` 改成 `reword`，完成之後撳 `Esc`，然後打 `:wq`，再拍 `Enter`。\\r\\n1. 之後會進入變更概要既文字編輯器，我地可以喺裡面修改變更概要，完成之後撳 `Esc`，然後打 `:wq`，再拍 `Enter`。\\r\\n\\r\\n註：\\r\\n\\r\\n-   `~` 後面既數字係想處理既變更數目，如果要合併 `3` 個變更，就要用 `HEAD~3`。\\r\\n\\r\\n---\\r\\n\\r\\n# 13 自定義指令別名\\r\\n\\r\\n用 `git b` 執行 `git branch`：\\r\\n\\r\\n```bash\\r\\ngit config --global --replace-all alias.b \\\"branch\\\"\\r\\n```\\r\\n\\r\\n```bash\\r\\ngit b\\r\\n```\\r\\n\\r\\n用 `git co` 執行 `git checkout`：\\r\\n\\r\\n```bash\\r\\ngit config --global --replace-all alias.co \\\"checkout\\\"\\r\\n```\\r\\n\\r\\n```bash\\r\\ngit co master\\r\\n```\\r\\n\\r\\n用 `git amend` 執行 `git commit --amend --no-edit`：\\r\\n\\r\\n```bash\\r\\ngit config --global --replace-all alias.amend \\\"commit --amend --no-edit\\\"\\r\\n```\\r\\n\\r\\n```bash\\r\\ngit amend\\r\\n```\\r\\n\\r\\n用 `git lg` 執行 `git log` 連自定義顯示格式：\\r\\n\\r\\n```bash\\r\\ngit config --global --replace-all alias.lg \\\"log --pretty=format:'%C(cyan)%h%d   %C(green)%ai   %C(white)%<(15)%an%C(yellow)%s'\\\"\\r\\n```\\r\\n\\r\\n```bash\\r\\ngit lg\\r\\ngit lg --all\\r\\n```\\r\\n\\r\\n自定義 diff tool 用 Beyond Compare 4：\\r\\n\\r\\n```bash\\r\\ngit config --global diff.tool bc\\r\\ngit config --global difftool.bc.path \\\"/path/to/Beyond Compare 4/BComp.exe\\\"\\r\\n```\\r\\n\\r\\n自定義 merge tool 用 Beyond Compare 4：\\r\\n\\r\\n```bash\\r\\ngit config --global merge.tool bc\\r\\ngit config --global mergetool.bc.path \\\"/path/to/Beyond Compare 4/BComp.exe\\\"\\r\\n```\\r\\n\\r\\n話畀 Git 知 merge 完唔需要 backup 原檔做 `.orig`：\\r\\n\\r\\n```bash\\r\\ngit config --global mergetool.keepBackup false\\r\\n```\\r\\n\";","export default \"# 1 背景\\r\\n\\r\\n當我地做一個大型既 Spring project，我地有唔少 entity／DO／DTO／VO／POJO classes，而呢啲 classes 一般只有 instance fields、getters 以及 setters。我地好多時候都需要將啲不同 types 但擁有部分相同 fields 既 objects 既 field values 抄黎抄去，令到啲 service classes 有好多將 type `XxxEntity` 轉換成 type `XxxDto` 既 boilerplate code。\\r\\n\\r\\n如果 `2` 個 types 既 fields 係一樣名，我地可以用以下既 libraries 去做 shallow object copy／clone：\\r\\n\\r\\n-   Apache Commons BeanUtils\\r\\n    -   `BeanUtils.copyProperties(dest, orig)`\\r\\n    -   `PropertyUtils.copyProperties(dest, orig)`\\r\\n-   cglib（code generation library）\\r\\n    -   `BeanCopier.create(clazz, clazz, false).copy(from, to, null)`\\r\\n-   Spring Core / Spring Beans\\r\\n    -   `BeanUtils.copyProperties(source, target)`（Spring Beans 引入左 Apache Commons BeanUtils 既 source code）\\r\\n    -   `BeanCopier.create(source, target)`（Spring Core 引入左 cglib 既 source code）\\r\\n\\r\\n要 deep copy／clone 既話：\\r\\n\\r\\n-   Jackson Databind\\r\\n    -   `new ObjectMapper().convertValue(fromValue, toValueType)`\\r\\n    -   `new ObjectMapper().readValue(new ObjectMapper().writeValueAsString(value), valueType)`\\r\\n\\r\\n| Object copy／clone 既類別 | 解釋                                                                                            |\\r\\n| :-----------------------: | ----------------------------------------------------------------------------------------------- |\\r\\n|          Shallow          | 只會 copy values。如果有 custom types，佢地既 memory references 會係一樣。                      |\\r\\n|           Deep            | 成個 object 既表層到最深果層都會 copy。如果有 custom types，佢地既 memory references 會唔一樣。 |\\r\\n\\r\\n另外，非常值得注意既係我地仲要 handle one-to-one、one-to-many、many-to-many 既 has-a relationship，必須避免 circular reference 導致 serialization 既過程中出現無限既 recursion。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 MapStruct 簡介\\r\\n\\r\\n-   MapStruct 有啲似 Lombok，係一個 compile time 既 annotation processor library，利用 annotations 黎 generate code。\\r\\n-   有別於其他 object copy 既 libraries，MapStruct 用既係 declarative programming 既方式，所以我地只需要寫 interfaces，而 MapStruct 會自動 generate implementation classes。\\r\\n-   MapStruct 可以做到唔同 field 名之間既 mapping，亦可以 copy 不同層既 fields。\\r\\n-   MapStruct 可以 reuse mapper methods，或者 mapper annotations 既 rules。\\r\\n-   MapStruct 所 generate 出黎既 mapper classes 可以帶有 `@Component`，用於 Spring projects。\\r\\n\\r\\n---\\r\\n\\r\\n# 3 MapStruct 例子\\r\\n\\r\\n假如我地而家有以下既 DTO classes：\\r\\n\\r\\n-   `Author` entity（ORM 用）\\r\\n-   `AuthorDto` DTO（API 用）\\r\\n-   `Book` entity（ORM 用）\\r\\n-   `BookDto` DTO（API 用）\\r\\n\\r\\n而 `Author` 裡面 has-a `List<Book>`，而 `Book` 裡面 has-a `Author`。\\r\\n\\r\\n相同地，`AuthorDto` 裡面 has-a `List<BookDto>`，而 `BookDto` 裡面 has-a `AuthorDto`。\\r\\n\\r\\n---\\r\\n\\r\\n# 4 Eclipse 安裝 m2e-apt\\r\\n\\r\\n首先，Eclipse 要安裝 `m2e-apt` plugin，否則唔會 generate 到 code 去 `target/generated-sources/annotations`。\\r\\n\\r\\n---\\r\\n\\r\\n# 5 動手寫\\r\\n\\r\\nProject structure：\\r\\n\\r\\n-   `src/main/java`\\r\\n    -   `/code`\\r\\n        -   `/dto`\\r\\n            -   `AuthorDto.java`\\r\\n            -   `BookDto.java`\\r\\n        -   `/entity`\\r\\n            -   `Author.java`\\r\\n            -   `Book.java`\\r\\n\\r\\n## 5.1 Maven dependencies\\r\\n\\r\\n```xml\\r\\n<properties>\\r\\n    <org.mapstruct.version>1.4.2.Final</org.mapstruct.version>\\r\\n    <lombok.version>1.18.24</lombok.version>\\r\\n\\r\\n    <m2e.apt.activation>jdt_apt</m2e.apt.activation>\\r\\n</properties>\\r\\n\\r\\n<dependency>\\r\\n    <groupId>org.mapstruct</groupId>\\r\\n    <artifactId>mapstruct</artifactId>\\r\\n    <version>${org.mapstruct.version}</version>\\r\\n</dependency>\\r\\n\\r\\n<plugin>\\r\\n    <groupId>org.apache.maven.plugins</groupId>\\r\\n    <artifactId>maven-compiler-plugin</artifactId>\\r\\n    <version>3.8.1</version>\\r\\n    <configuration>\\r\\n        <source>1.8</source>\\r\\n        <target>1.8</target>\\r\\n        <annotationProcessorPaths>\\r\\n            <path>\\r\\n                <groupId>org.projectlombok</groupId>\\r\\n                <artifactId>lombok</artifactId>\\r\\n                <version>${lombok.version}</version>\\r\\n            </path>\\r\\n            <path>\\r\\n                <groupId>org.mapstruct</groupId>\\r\\n                <artifactId>mapstruct-processor</artifactId>\\r\\n                <version>${org.mapstruct.version}</version>\\r\\n            </path>\\r\\n        </annotationProcessorPaths>\\r\\n        <compilerArgs>\\r\\n            <compilerArg>\\r\\n                -Amapstruct.defaultComponentModel=spring\\r\\n            </compilerArg>\\r\\n            <compilerArg>\\r\\n                -Amapstruct.suppressGeneratorTimestamp=true\\r\\n            </compilerArg>\\r\\n            <compilerArg>\\r\\n                -Amapstruct.suppressGeneratorVersionInfoComment=true\\r\\n            </compilerArg>\\r\\n        </compilerArgs>\\r\\n    </configuration>\\r\\n</plugin>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 5.2 寫 Java code\\r\\n\\r\\n### 5.2.1 Entity\\r\\n\\r\\n`Author.java`：\\r\\n\\r\\n```java\\r\\n@Getter\\r\\n@Setter\\r\\n@ToString\\r\\n@FieldDefaults(level = PRIVATE)\\r\\n@Entity(name = \\\"author_1toM\\\")\\r\\n@Table(name = \\\"`author_1toM`\\\")\\r\\npublic class Author {\\r\\n\\r\\n    @Id\\r\\n    @GeneratedValue(strategy = IDENTITY)\\r\\n    @Column(name = \\\"`id`\\\")\\r\\n    Long id;\\r\\n\\r\\n    @Column(name = \\\"`first_name`\\\", nullable = false)\\r\\n    String firstName;\\r\\n\\r\\n    @Column(name = \\\"`last_name`\\\", nullable = false)\\r\\n    String lastName;\\r\\n\\r\\n    @ToString.Exclude\\r\\n    @OneToMany(mappedBy = \\\"author\\\", cascade = ALL, orphanRemoval = true)\\r\\n    List<Book> books = new ArrayList<>();\\r\\n\\r\\n    public void addBook(Book book) {\\r\\n        books.add(book);\\r\\n        book.setAuthor(this);\\r\\n    }\\r\\n\\r\\n    public void removeBook(Book book) {\\r\\n        books.remove(book);\\r\\n        book.setAuthor(null);\\r\\n    }\\r\\n\\r\\n    public void removeAllBooks() {\\r\\n        books.forEach(e -> e.setAuthor(null));\\r\\n        books.clear();\\r\\n    }\\r\\n\\r\\n    @Override\\r\\n    public boolean equals(Object obj) {\\r\\n        if (this == obj)\\r\\n            return true;\\r\\n        if (!(obj instanceof Author))\\r\\n            return false;\\r\\n        Author other = (Author) obj;\\r\\n        return Objects.equals(id, other.id);\\r\\n    }\\r\\n\\r\\n    @Override\\r\\n    public int hashCode() {\\r\\n        return 2021;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n`Book.java`：\\r\\n\\r\\n```java\\r\\n@Data\\r\\n@FieldDefaults(level = PRIVATE)\\r\\n@EqualsAndHashCode(onlyExplicitlyIncluded = true)\\r\\n@Entity(name = \\\"book_1toM\\\")\\r\\n@Table(name = \\\"`book_1toM`\\\")\\r\\npublic class Book {\\r\\n\\r\\n    @Id\\r\\n    @GeneratedValue(strategy = IDENTITY)\\r\\n    @Column(name = \\\"`id`\\\")\\r\\n    Long id;\\r\\n\\r\\n    @Column(name = \\\"`title`\\\", nullable = false)\\r\\n    String title;\\r\\n\\r\\n    @EqualsAndHashCode.Include\\r\\n    @NaturalId\\r\\n    @Column(name = \\\"`isbn`\\\", nullable = false)\\r\\n    String isbn;\\r\\n\\r\\n    @ToString.Exclude\\r\\n    @ManyToOne(fetch = LAZY)\\r\\n    Author author;\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 5.2.2 DTO\\r\\n\\r\\n`AuthorDto.java`：\\r\\n\\r\\n```java\\r\\n@Getter\\r\\n@Setter\\r\\n@FieldDefaults(level = PRIVATE)\\r\\npublic class AuthorDto {\\r\\n    Long authorId;\\r\\n    String firstName;\\r\\n    String lastName;\\r\\n\\r\\n    @JsonManagedReference\\r\\n    List<BookDto> books;\\r\\n}\\r\\n```\\r\\n\\r\\n`BookDto.java`：\\r\\n\\r\\n```java\\r\\n@Getter\\r\\n@Setter\\r\\n@FieldDefaults(level = PRIVATE)\\r\\npublic class BookDto {\\r\\n    Long bookId;\\r\\n    String title;\\r\\n    String isbn;\\r\\n\\r\\n    @JsonBackReference\\r\\n    AuthorDto author;\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 5.2.3 Mapper\\r\\n\\r\\n我地想喺 `Author` entity 同 `AuthorDto` DTO，以及 `Book` entity 同 `BookDto` DTO 之間做 bean mapping，以便之後需要將 ORM 用既 beans 轉成我地 API 需要既樣。\\r\\n\\r\\n`MyMapper.java`：\\r\\n\\r\\n```java\\r\\n@Mapper(nullValuePropertyMappingStrategy = IGNORE)\\r\\npublic interface OneToManyAuthorViewMapper {\\r\\n\\r\\n    @Mapping(source = \\\"id\\\", target = \\\"authorId\\\")\\r\\n    AuthorDto toDto(Author author, @Context BidirectionalMappingContext context);\\r\\n\\r\\n    @InheritInverseConfiguration\\r\\n    Author toEntity(AuthorDto author, @Context BidirectionalMappingContext context);\\r\\n\\r\\n    @Mapping(source = \\\"id\\\", target = \\\"bookId\\\")\\r\\n    BookDto toDto(Book book, @Context BidirectionalMappingContext context);\\r\\n\\r\\n    @InheritInverseConfiguration\\r\\n    Book toEntity(BookDto book, @Context BidirectionalMappingContext context);\\r\\n}\\r\\n```\\r\\n\\r\\n`BidirectionalMappingContext.java`：\\r\\n\\r\\n```java\\r\\n/**\\r\\n * This mapping context can help mapping DTO objects with bidirectional relationship to entity objects\\r\\n * without losing the bidirectional relationship.<br>\\r\\n * To be used with MapStruct's {@link Context} annotation in mappers.\\r\\n *\\r\\n * @see <a href=\\\"https://github.com/jannis-baratheon/stackoverflow--mapstruct-mapping-graph-with-cycles\\\">MapStruct bidirectional mapping</a>\\r\\n * @see <a href=\\\"https://github.com/mapstruct/mapstruct/issues/1347\\\">ClassCastException for CycleAvoidingMappingContext when hierarchy is not exactly the same</a>\\r\\n */\\r\\npublic final class BidirectionalMappingContext {\\r\\n    private final Map<Object, Object> knownInstances = new IdentityHashMap<>();\\r\\n\\r\\n    @BeforeMapping\\r\\n    public <T> T getMappedInstance(Object source, @TargetType Class<T> targetType) {\\r\\n        final Object knownInstance = knownInstances.get(source);\\r\\n        return targetType.isInstance(knownInstance) ? targetType.cast(knownInstance) : null;\\r\\n    }\\r\\n\\r\\n    @BeforeMapping\\r\\n    public void storeMappedInstance(Object source, @MappingTarget Object target) {\\r\\n        knownInstances.put(source, target);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n#### 5.2.3.1 MapStruct 生成既 implementation class\\r\\n\\r\\n以上既 code 可以令 MapStruct annotation processor generate 出以下既 implementation class：\\r\\n\\r\\n```java\\r\\n@Generated(\\r\\n    value = \\\"org.mapstruct.ap.MappingProcessor\\\"\\r\\n)\\r\\n@Component\\r\\npublic class OneToManyAuthorViewMapperImpl implements OneToManyAuthorViewMapper {\\r\\n\\r\\n    @Override\\r\\n    public AuthorDto toDto(Author author, BidirectionalMappingContext context) {\\r\\n        AuthorDto target = context.getMappedInstance( author, AuthorDto.class );\\r\\n        if ( target != null ) {\\r\\n            return target;\\r\\n        }\\r\\n\\r\\n        if ( author == null ) {\\r\\n            return null;\\r\\n        }\\r\\n\\r\\n        AuthorDto authorDto = new AuthorDto();\\r\\n\\r\\n        context.storeMappedInstance( author, authorDto );\\r\\n\\r\\n        authorDto.setAuthorId( author.getId() );\\r\\n        authorDto.setBooks( bookListToBookDtoList( author.getBooks(), context ) );\\r\\n        authorDto.setFirstName( author.getFirstName() );\\r\\n        authorDto.setLastName( author.getLastName() );\\r\\n\\r\\n        return authorDto;\\r\\n    }\\r\\n\\r\\n    @Override\\r\\n    public Author toEntity(AuthorDto author, BidirectionalMappingContext context) {\\r\\n        Author target = context.getMappedInstance( author, Author.class );\\r\\n        if ( target != null ) {\\r\\n            return target;\\r\\n        }\\r\\n\\r\\n        if ( author == null ) {\\r\\n            return null;\\r\\n        }\\r\\n\\r\\n        Author author1 = new Author();\\r\\n\\r\\n        context.storeMappedInstance( author, author1 );\\r\\n\\r\\n        author1.setId( author.getAuthorId() );\\r\\n        author1.setBooks( bookDtoListToBookList( author.getBooks(), context ) );\\r\\n        author1.setFirstName( author.getFirstName() );\\r\\n        author1.setLastName( author.getLastName() );\\r\\n\\r\\n        return author1;\\r\\n    }\\r\\n\\r\\n    @Override\\r\\n    public BookDto toDto(Book book, BidirectionalMappingContext context) {\\r\\n        BookDto target = context.getMappedInstance( book, BookDto.class );\\r\\n        if ( target != null ) {\\r\\n            return target;\\r\\n        }\\r\\n\\r\\n        if ( book == null ) {\\r\\n            return null;\\r\\n        }\\r\\n\\r\\n        BookDto bookDto = new BookDto();\\r\\n\\r\\n        context.storeMappedInstance( book, bookDto );\\r\\n\\r\\n        bookDto.setBookId( book.getId() );\\r\\n        bookDto.setAuthor( toDto( book.getAuthor(), context ) );\\r\\n        bookDto.setIsbn( book.getIsbn() );\\r\\n        bookDto.setTitle( book.getTitle() );\\r\\n\\r\\n        return bookDto;\\r\\n    }\\r\\n\\r\\n    @Override\\r\\n    public Book toEntity(BookDto book, BidirectionalMappingContext context) {\\r\\n        Book target = context.getMappedInstance( book, Book.class );\\r\\n        if ( target != null ) {\\r\\n            return target;\\r\\n        }\\r\\n\\r\\n        if ( book == null ) {\\r\\n            return null;\\r\\n        }\\r\\n\\r\\n        Book book1 = new Book();\\r\\n\\r\\n        context.storeMappedInstance( book, book1 );\\r\\n\\r\\n        book1.setId( book.getBookId() );\\r\\n        book1.setAuthor( toEntity( book.getAuthor(), context ) );\\r\\n        book1.setIsbn( book.getIsbn() );\\r\\n        book1.setTitle( book.getTitle() );\\r\\n\\r\\n        return book1;\\r\\n    }\\r\\n\\r\\n    protected List<BookDto> bookListToBookDtoList(List<Book> list, BidirectionalMappingContext context) {\\r\\n        List<BookDto> target = context.getMappedInstance( list, List.class );\\r\\n        if ( target != null ) {\\r\\n            return target;\\r\\n        }\\r\\n\\r\\n        if ( list == null ) {\\r\\n            return null;\\r\\n        }\\r\\n\\r\\n        List<BookDto> list1 = new ArrayList<BookDto>( list.size() );\\r\\n        context.storeMappedInstance( list, list1 );\\r\\n\\r\\n        for ( Book book : list ) {\\r\\n            list1.add( toDto( book, context ) );\\r\\n        }\\r\\n\\r\\n        return list1;\\r\\n    }\\r\\n\\r\\n    protected List<Book> bookDtoListToBookList(List<BookDto> list, BidirectionalMappingContext context) {\\r\\n        List<Book> target = context.getMappedInstance( list, List.class );\\r\\n        if ( target != null ) {\\r\\n            return target;\\r\\n        }\\r\\n\\r\\n        if ( list == null ) {\\r\\n            return null;\\r\\n        }\\r\\n\\r\\n        List<Book> list1 = new ArrayList<Book>( list.size() );\\r\\n        context.storeMappedInstance( list, list1 );\\r\\n\\r\\n        for ( BookDto bookDto : list ) {\\r\\n            list1.add( toEntity( bookDto, context ) );\\r\\n        }\\r\\n\\r\\n        return list1;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 5.2.4 Mapper 使用方法\\r\\n\\r\\n我地只需要喺一個 Spring manage 緊既 component 裡面 inject mapper 既 dependency 就得：\\r\\n\\r\\n```java\\r\\nimport org.springframework.transaction.annotation.Transactional;\\r\\n\\r\\n@Service(\\\"oneToManyAuthorService\\\")\\r\\n@Transactional(rollbackFor = Throwable.class)\\r\\npublic class AuthorService {\\r\\n\\r\\n    @Autowired AuthorRepository authorRepository;\\r\\n    @Autowired OneToManyAuthorViewMapper authorMapper;\\r\\n\\r\\n    @GetMapping\\r\\n    public List<AuthorDto> getAuthors() {\\r\\n        return authorRepository.findAll().stream()\\r\\n                 .map(e -> authorMapper.toDto(e, new BidirectionalMappingContext()))\\r\\n                 .collect(toList());\\r\\n    }\\r\\n\\r\\n    @PostMapping\\r\\n    public AuthorDto upsertAuthor(AuthorDto author) {\\r\\n        Author authorEntity = authorMapper.toEntity(author, new BidirectionalMappingContext());\\r\\n        authorEntity = authorRepository.save(authorEntity);\\r\\n\\r\\n        return authorMapper.toDto(authorEntity, new BidirectionalMappingContext());\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 6 筆記\\r\\n\\r\\n## 6.1 MapStruct annotations\\r\\n\\r\\n| Annotation                                                                                  | 解釋                                                                                                                                                                                                                                                                                                                                             |\\r\\n| ------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\\r\\n| `@Mapping(source = \\\"id\\\", target = \\\"authorId\\\", qualifiedByName = \\\"customMappingMethodName\\\")` | 如果有 property 名不相同就需要用呢個 annotation，將 `source.id` map 去 `target.authroId`。而 `qualifiedByName` 可以畀我地用自己寫既 static method 黎做客製化 mapping，例如轉換 data type 或者做一啲特別既處理。                                                                                                                                  |\\r\\n| `@InheritInverseConfiguration`                                                              | 示意 MapStruct 用相反方向既 mapper method 配置黎作為而家呢個 mapping 既配置。                                                                                                                                                                                                                                                                    |\\r\\n| `@InheritConfiguration`                                                                     | 用喺 update/patch method 上，將第一個 parameter 既 object 既 fields 抄去第二個 parameter 既 object 度，規則跟返現有既 return type 係 parameter 2 既 type 而 parameter type 係 parameter 1 既 type 既 mapper method。                                                                                                                             |\\r\\n| `@Named(\\\"customMappingMethodName\\\")`                                                         | 如果需要做一啲特別既處理，可以寫一個 static method，例如 `public static TargetType customMappingMethodName(SourceType source) { return convertSourceToTarget(source); }` 可以轉換 data type，亦可以同時做啲特別既邏輯處理；夾埋 `@Mapping(source = \\\"sourceField\\\", target = \\\"targetField\\\", qualifiedByName = \\\"customMappingMethodName\\\")` 一齊用。 |\\r\\n\\r\\n---\\r\\n\\r\\n## 6.2 Lombok、`equals`、`hashCode`\\r\\n\\r\\n-   `@ToString.Exclude`\\r\\n    -   因為 Lombok 既 `@Data` 包括左 `@ToString`，默認情況下 generate 出黎既 `toString` method 會包括曬所有 instance fields。\\r\\n    -   我地唔可以畀 `toString` method 包括有 relationship 既 fields，因為當 call `toString` 果陣就會不知不覺間令 entity 既 proxy object 背後 trigger JPA／Hibernate 去自動執行 SQL 去 fetch 有 relationship 既 table records。\\r\\n    -   呢個 annotation 可以令 Lombok generate `toString` method 果陣唔包括呢個 field。\\r\\n-   `@EqualsAndHashCode(onlyExplicitlyIncluded = true)`、`@EqualsAndHashCode.Include`\\r\\n    -   因為 Lombok 既 `@Data` 包括左 `@EqualsAndHashCode`，默認情況下 generate 出黎既 `equals` 以及 `hashCode` methods 會包括曬所有 instance fields。\\r\\n    -   如果係 `@OneToMany` 既 relationship，我地會用 `List`（容許重複）或者 `Set`（唔容許重複）。\\r\\n        -   因為我地既 entity objects 係 mutable，如果用左 `Set`，而 `equals` 以及 `hashCode` methods 用左會變既 fields，咁就有可能會出問題，因為 `HashSet` 內部係用 `HashMap` 黎實現。\\r\\n    -   我地喺 JPA／Hibernate project 裡面寫既 `equals` 以及 `hashCode` methods 應該要喺唔同既 Hibernate states 都返回一致既結果。\\r\\n        -   Hibernate states\\r\\n            -   Transient／new\\r\\n            -   Managed／persistent\\r\\n            -   Detached\\r\\n            -   Removed\\r\\n        -   Database auto-increment 既 primary key（surrogate key）column 唔適合用喺 `equals` 以及 `hashCode` methods。\\r\\n            -   當個 entity object 處於 transient／new state 既時候呢個 field 既 value 係 `null`。\\r\\n            -   當個 entity object 變成 managed／persistent state 既時候 database 會賦予呢個 field 一個 auto-increment 出黎既 value。\\r\\n            -   如果個 entity object 喺一個 `Set` 入面，。\\r\\n        -   `equals` 以及 `hashCode` methods 應該要用 `1` 個業務層面上 value 唔會重複既 column（business key）。\\r\\n            -   例子\\r\\n                -   `tbl_user` table 可以用 `email` column。\\r\\n                -   `tbl_book` table 可以用 `isbn` column。\\r\\n            -   如果冇既話，`equals` method 可以用 surrogate key（必須 check `null`），而 `hashCode` method 可以用一個不變值（例如 `2021`）。\\r\\n                -   用不變值既話，如果 entity objects 放喺 `Set` 或者 `Map` 裡面，而 `Set` 或者 `Map` 好大既話，有可能會會影響性能。\\r\\n                    -   其實點都好，用得 JPA／Hibernate，我地都唔應該一次過喺 database 查詢太多紀錄。\\r\\n    -   呢 `2` 個 annotations 一齊用可以令 Lombok generate `equals` 以及 `hashCode` methods 果陣只包括 `@EqualsAndHashCode.Include` 既 fields。\\r\\n\\r\\n---\\r\\n\\r\\n## 6.3 其他 object copy 方法\\r\\n\\r\\n`RootLayer.java`：\\r\\n\\r\\n```java\\r\\n@Data\\r\\n@NoArgsConstructor\\r\\n@AllArgsConstructor\\r\\n@FieldDefaults(level = PRIVATE)\\r\\npublic class RootLayer {\\r\\n    SecondLayer second;\\r\\n}\\r\\n```\\r\\n\\r\\n`SecondLayer.java`：\\r\\n\\r\\n```java\\r\\n@Data\\r\\n@NoArgsConstructor\\r\\n@AllArgsConstructor\\r\\n@FieldDefaults(level = PRIVATE)\\r\\npublic class SecondLayer {\\r\\n    ThirdLayer third;\\r\\n}\\r\\n```\\r\\n\\r\\n`ThirdLayer.java`：\\r\\n\\r\\n```java\\r\\n@Data\\r\\n@NoArgsConstructor\\r\\n@AllArgsConstructor\\r\\n@FieldDefaults(level = PRIVATE)\\r\\npublic class ThirdLayer {\\r\\n    String data;\\r\\n}\\r\\n```\\r\\n\\r\\n`ObjectCopyTest.java`：\\r\\n\\r\\n```java\\r\\nimport org.apache.commons.beanutils.BeanUtils;\\r\\nimport net.sf.cglib.beans.BeanCopier;\\r\\n\\r\\npublic class ObjectCopyTest {\\r\\n    private static final RootLayer SOURCE = new RootLayer(new SecondLayer(new ThirdLayer(\\\"abc\\\")));\\r\\n\\r\\n    @Test\\r\\n    public void test_ApacheCommonsBeanUtils() throws Exception {\\r\\n        final RootLayer result = new RootLayer();\\r\\n        BeanUtils.copyProperties(result, SOURCE);\\r\\n\\r\\n        System.out.println(\\\"BeanUtils: \\\" + result);\\r\\n\\r\\n        Assert.assertNotNull(result);\\r\\n        Assert.assertNotNull(result.getSecond());\\r\\n        Assert.assertNotNull(result.getSecond().getThird());\\r\\n        Assert.assertEquals(\\\"abc\\\", result.getSecond().getThird().getData());\\r\\n\\r\\n        // shallow copy\\r\\n        Assert.assertTrue(result.getSecond()==SOURCE.getSecond());\\r\\n        Assert.assertTrue(result.getSecond().getThird()==SOURCE.getSecond().getThird());\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n    public void test_cglib() {\\r\\n        final RootLayer result = new RootLayer();\\r\\n        BeanCopier.create(SOURCE.getClass(), result.getClass(), false).copy(SOURCE, result, null);\\r\\n\\r\\n        System.out.println(\\\"cglib: \\\" + result);\\r\\n\\r\\n        Assert.assertNotNull(result);\\r\\n        Assert.assertNotNull(result.getSecond());\\r\\n        Assert.assertNotNull(result.getSecond().getThird());\\r\\n        Assert.assertEquals(\\\"abc\\\", result.getSecond().getThird().getData());\\r\\n\\r\\n        // shallow copy\\r\\n        Assert.assertTrue(result.getSecond()==SOURCE.getSecond());\\r\\n        Assert.assertTrue(result.getSecond().getThird()==SOURCE.getSecond().getThird());\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n    public void test_jacksonDatabind_convertValue() {\\r\\n        final RootLayer result = new ObjectMapper().convertValue(SOURCE, RootLayer.class);\\r\\n\\r\\n        System.out.println(\\\"Jackson (convertValue): \\\" + result);\\r\\n\\r\\n        Assert.assertNotNull(result);\\r\\n        Assert.assertNotNull(result.getSecond());\\r\\n        Assert.assertNotNull(result.getSecond().getThird());\\r\\n        Assert.assertEquals(\\\"abc\\\", result.getSecond().getThird().getData());\\r\\n\\r\\n        // deep copy\\r\\n        Assert.assertFalse(result.getSecond()==SOURCE.getSecond());\\r\\n        Assert.assertFalse(result.getSecond().getThird()==SOURCE.getSecond().getThird());\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n    public void test_jacksonDatabind_serializeAndDeserialize() throws Exception {\\r\\n        final ObjectMapper mapper = new ObjectMapper();\\r\\n        final RootLayer result = mapper.readValue(mapper.writeValueAsString(SOURCE), RootLayer.class);\\r\\n\\r\\n        System.out.println(\\\"Jackson (serialize and deserialize): \\\" + result);\\r\\n\\r\\n        Assert.assertNotNull(result);\\r\\n        Assert.assertNotNull(result.getSecond());\\r\\n        Assert.assertNotNull(result.getSecond().getThird());\\r\\n        Assert.assertEquals(\\\"abc\\\", result.getSecond().getThird().getData());\\r\\n\\r\\n        // deep copy\\r\\n        Assert.assertFalse(result.getSecond()==SOURCE.getSecond());\\r\\n        Assert.assertFalse(result.getSecond().getThird()==SOURCE.getSecond().getThird());\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 7 參考資料\\r\\n\\r\\n-   [MapStruct 官網 - Reference Guide](https://mapstruct.org/documentation/stable/reference/html/)\\r\\n-   [七種對象複製工具類，阿粉該 Pick 誰？](http://www.justdojava.com/2020/08/23/beancopy/)\\r\\n-   [Spring Boot Persistence Best Practices（e-book）](https://www.apress.com/gp/book/9781484256251)\\r\\n-   [Lombok & Hibernate: How to Avoid Common Pitfalls](https://thorben-janssen.com/lombok-hibernate-how-to-avoid-common-pitfalls/#Be_Careful_with_ToString)\\r\\n-   [StackOverflow - The JPA hashCode() / equals() dilemma](https://stackoverflow.com/questions/5031614/the-jpa-hashcode-equals-dilemma)\\r\\n\";","export default \"# 1 關於 web scraping\\r\\n\\r\\nWeb scraping 即係網頁抓取，相關既技術更可以用黎做自動化。只要對象係網頁，我地都可以用呢篇文章教既 3rd party Java libraries 黎處理。\\r\\n\\r\\n## 1.1 技術簡介\\r\\n\\r\\nWeb scrapers 既技術可以簡單分為以下兩種：\\r\\n\\r\\n| 種類                                       | 描述                                                                                                                                                                                                                                                                                                                           | 例子     |\\r\\n| ------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------- |\\r\\n| HTML parser                                | 目標網頁既目標資訊必須係以 static 網頁方式黎呈現，唔支援抓取個網頁以運行 JavaScript 黎獲取既資訊                                                                                                                                                                                                                               | jsoup    |\\r\\n| HTML parser (支援以 JavaScript 生成既元素) | 支援 static 網頁之餘，亦支援抓取個網頁以運行 JavaScript 黎獲取既資訊。因為背後其實係用左瀏覽器既 API 黎駁去瀏覽器，所以運行既時候係需要運行埋一個真既瀏覽器（可以係 under automated testing mode），然後配合一個瀏覽器既 driver（瀏覽器既相關官網都會提供埋，如 Chrome/Chromium 既 for developer 既網站有提供埋 chromedriver） | Selenium |\\r\\n\\r\\n註：個網頁以運行 JavaScript 黎獲取既資訊——意思即係目標網頁既目標資訊係透過 HTTP request，又稱 AJAX 既方式，動態咁改個網頁 HTML DOM，\\r\\n而唔係成版 HTML source 同一時間、一炮過，以一個 HTTP GET request（下載網頁）咁下載。例子有某啲實時股價報價網頁，佢地可以係用 JavaScript（如 jQuery）去處理 DOM。\\r\\n\\r\\n## 1.2 注意事項\\r\\n\\r\\n### 1.2.1 可行性\\r\\n\\r\\n基本上一般網頁都可以成為 web scraping 既目標，因為佢地就算有措施防範 DDoS，都好可能會疏於防範 web scraping。\\r\\n\\r\\n不過最重視資訊安全既網站，例如 Google（Google Search 等）以及需要用 captcha、reCAPTCHA 登入或進行其他操作既時候證明唔係機械人既網站，就未必畀我地無限量咁去做 web scraping，因為佢地有完善既防 web scraping 安全措施，例如以 JavaScript 黎判斷 cursor 既移動路徑、撳按鈕既時候撳既位置等等。另外都有部分網站應用左 Cloudflare 既 anti-DDoS solution，所以呢啲網站都未必可以畀我地進行 web scraping。\\r\\n\\r\\n只要目標網頁既 HTML DOM 結構冇點樣大改，我地個程式都仍然可以正常運作。\\r\\n\\r\\n---\\r\\n\\r\\n### 1.2.2 法律風險\\r\\n\\r\\n網頁上既資訊有各式各樣既版權，如果獲取既資訊係要商用，必須先了解清楚法律條文。另外就係如果自動化既 web scraper 運行得太密，以致被定性為 DDoS，\\r\\n咁都有可能帶黎法律風險。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 動手使用 jsoup 抓取靜態網頁\\r\\n\\r\\n## 2.1 幾時用 jsoup\\r\\n\\r\\njsoup 係一個 HTML parser，擁有強大既 API 畀我地根據 HTML source 既 tags 同各種 attributes 去定位 DOM nodes。\\r\\n\\r\\n佢只係適用於 static 網頁，如果網頁上既資訊黎自於 HTTP request（Chrome developer tools 既 Network 分頁下屬於 XHR 既分類），如果唔係一啲簡單到我地可以用 Postman 試都試到出黎既 HTTP request，咁就唔應該用 jsoup，而係要用更強大、可以行到 JavaScript（擁有 JavaScript engine）既工具先得。咁既情況就要用 Selenium/Selenide，而唔係單純既 HTML parser。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 需求情境\\r\\n\\r\\n試想像我地而家想寫一個程式，可以幫我地喺不同既軟件網站獲取軟件版本資訊，以便我地知道我地手上既軟件清單上面邊啲軟件有更新（基本上就係我寫過既 Software Version Checker 工具）。\\r\\n\\r\\n其中一個通用得黎又簡單直接既方法就係用 jsoup 呢一個 HTML parser library 去將成個網頁既 HTML 下載落黎，然後 parse 個 HTML，定位我地想要既資訊。\\r\\n\\r\\n![](blog/2020-09/web-scraping-with-jsoup/software-version-checker.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 分析\\r\\n\\r\\nNotepad++ 包含版本資訊既官方網站網址係 [https://notepad-plus-plus.org/downloads/](https://notepad-plus-plus.org/downloads/)。\\r\\n\\r\\n從頁面可以睇到，有兩個位置都提供最新版本既資訊：\\r\\n\\r\\n-   左手邊既 `Current Version`\\r\\n-   中間 Downloads 既第一個 item\\r\\n\\r\\n咁既然佢都已經寫到明 `Current Version`，我地就信佢呢個 value 啦。\\r\\n\\r\\n![](blog/2020-09/web-scraping-with-jsoup/notepadplusplus-downloads.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 2.4 添加 Maven dependencies\\r\\n\\r\\n`pom.xml` 裡面需要以下 dependency：\\r\\n\\r\\n```xml\\r\\n<dependency>\\r\\n    <groupId>org.jsoup</groupId>\\r\\n    <artifactId>jsoup</artifactId>\\r\\n    <version>1.13.1</version>\\r\\n</dependency>\\r\\n```\\r\\n\\r\\n如果想 build 一個 JAR 出黎運行，可以加上 Maven build plugin：\\r\\n\\r\\n```xml\\r\\n<build>\\r\\n    <plugins>\\r\\n        <plugin>\\r\\n            <groupId>org.apache.maven.plugins</groupId>\\r\\n            <artifactId>maven-shade-plugin</artifactId>\\r\\n            <version>3.2.4</version>\\r\\n            <executions>\\r\\n                <execution>\\r\\n                    <phase>package</phase>\\r\\n                    <goals>\\r\\n                        <goal>shade</goal>\\r\\n                    </goals>\\r\\n                    <configuration>\\r\\n                        <transformers>\\r\\n                            <transformer\\r\\n                                implementation=\\\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\\\">\\r\\n                                <mainClass>code.Main</mainClass> <!-- 改成你既 main class -->\\r\\n                            </transformer>\\r\\n                        </transformers>\\r\\n                    </configuration>\\r\\n                </execution>\\r\\n            </executions>\\r\\n        </plugin>\\r\\n    </plugins>\\r\\n</build>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.5 寫 Java code\\r\\n\\r\\n### 2.5.1 下載網頁 HTML\\r\\n\\r\\n我地先寫到佢可以下載到 Notepad++ 下載頁既 HTML：\\r\\n\\r\\n```java\\r\\npublic class Main {\\r\\n\\r\\n    public static void main(String[] args) throws Exception {\\r\\n\\r\\n        final Document doc = Jsoup.connect(\\\"https://notepad-plus-plus.org/downloads/\\\").get();\\r\\n        final String html = doc.body().html();\\r\\n\\r\\n        System.out.println(html);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n運行程式，我地可以得到：\\r\\n\\r\\n```xml\\r\\n<a href=\\\"#main\\\">skip to content</a>\\r\\n<svg style=\\\"display: none\\\"> <symbol id=\\\"bookmark\\\" viewbox=\\\"0 0 40 50\\\">\\r\\n  <g transform=\\\"translate(2266 3206.2)\\\">\\r\\n   <path style=\\\"stroke:currentColor;stroke-width:3.2637;fill:none\\\" d=\\\"m-2262.2-3203.4-.2331 42.195 16.319-16.318 16.318 16.318.2331-42.428z\\\" />\\r\\n  </g>\\r\\n </symbol> <symbol id=\\\"w3c\\\" viewbox=\\\"0 0 127.09899 67.763\\\">\\r\\n  <text font-size=\\\"83\\\" style=\\\"font-size:83px;font-family:Trebuchet;letter-spacing:-12;fill-opacity:0\\\" letter-spacing=\\\"-12\\\" y=\\\"67.609352\\\" x=\\\"-26.782778\\\">\\r\\n   W3C\\r\\n  </text>\\r\\n  <text font-size=\\\"83\\\" style=\\\"font-size:83px;font-weight:bold;font-family:Trebuchet;fill-opacity:0\\\" y=\\\"67.609352\\\" x=\\\"153.21722\\\" font-weight=\\\"bold\\\">\\r\\n   SVG\\r\\n  </text>\\r\\n  <path style=\\\"fill:currentColor;image-rendering:optimizeQuality;shape-rendering:geometricPrecision\\\" d=\\\"m33.695.377 12.062 41.016 12.067-41.016h8.731l-19.968 67.386h-.831l-12.48-41.759-12.479 41.759h-.832l-19.965-67.386h8.736l12.061 41.016 8.154-27.618-3.993-13.397h8.737z\\\" />\\r\\n  <path style=\\\"fill:currentColor;image-rendering:optimizeQuality;shape-rendering:geometricPrecision\\\" d=\\\"m91.355 46.132c0 6.104-1.624 11.234-4.862 15.394-3.248 4.158-7.45 6.237-12.607 6.237-3.882 0-7.263-1.238-10.148-3.702-2.885-2.47-5.02-5.812-6.406-10.022l6.82-2.829c1.001 2.552 2.317 4.562 3.953 6.028 1.636 1.469 3.56 2.207 5.781 2.207 2.329 0 4.3-1.306 5.909-3.911 1.609-2.606 2.411-5.738 2.411-9.401 0-4.049-.861-7.179-2.582-9.399-1.995-2.604-5.129-3.912-9.397-3.912h-3.327v-3.991l11.646-20.133h-14.062l-3.911 6.655h-2.493v-14.976h32.441v4.075l-12.31 21.217c4.324 1.385 7.596 3.911 9.815 7.571 2.22 3.659 3.329 7.953 3.329 12.892z\\\" />\\r\\n  <path style=\\\"fill:currentColor;image-rendering:optimizeQuality;shape-rendering:geometricPrecision\\\" d=\\\"m125.21 0 1.414 8.6-5.008 9.583s-1.924-4.064-5.117-6.314c-2.693-1.899-4.447-2.309-7.186-1.746-3.527.73-7.516 4.938-9.258 10.13-2.084 6.21-2.104 9.218-2.178 11.978-.115 4.428.58 7.043.58 7.043s-3.04-5.626-3.011-13.866c.018-5.882.947-11.218 3.666-16.479 2.404-4.627 5.954-7.404 9.114-7.728 3.264-.343 5.848 1.229 7.841 2.938 2.089 1.788 4.213 5.698 4.213 5.698l4.94-9.837z\\\" />\\r\\n  <path style=\\\"fill:currentColor;image-rendering:optimizeQuality;shape-rendering:geometricPrecision\\\" d=\\\"m125.82 48.674s-2.208 3.957-3.589 5.48c-1.379 1.524-3.849 4.209-6.896 5.555-3.049 1.343-4.646 1.598-7.661 1.306-3.01-.29-5.807-2.032-6.786-2.764-.979-.722-3.486-2.864-4.897-4.854-1.42-2-3.634-5.995-3.634-5.995s1.233 4.001 2.007 5.699c.442.977 1.81 3.965 3.749 6.572 1.805 2.425 5.315 6.604 10.652 7.545 5.336.945 9.002-1.449 9.907-2.031.907-.578 2.819-2.178 4.032-3.475 1.264-1.351 2.459-3.079 3.116-4.108.487-.758 1.276-2.286 1.276-2.286l-1.276-6.644z\\\" />\\r\\n </symbol> <symbol id=\\\"tag\\\" viewbox=\\\"0 0 177.16535 177.16535\\\">\\r\\n  <g transform=\\\"translate(0 -875.2)\\\">\\r\\n   <path style=\\\"fill-rule:evenodd;stroke-width:0;fill:currentColor\\\" d=\\\"m159.9 894.3-68.79 8.5872-75.42 77.336 61.931 60.397 75.429-76.565 6.8495-69.755zm-31.412 31.835a10.813 10.813 0 0 1 1.8443 2.247 10.813 10.813 0 0 1 -3.5174 14.872l-.0445.0275a10.813 10.813 0 0 1 -14.86 -3.5714 10.813 10.813 0 0 1 3.5563 -14.863 10.813 10.813 0 0 1 13.022 1.2884z\\\" />\\r\\n  </g>\\r\\n </symbol> <symbol id=\\\"balloon\\\" viewbox=\\\"0 0 141.73228 177.16535\\\">\\r\\n  <g transform=\\\"translate(0 -875.2)\\\">\\r\\n   <g>\\r\\n    <path style=\\\"fill:currentColor\\\" d=\\\"m68.156 882.83-.88753 1.4269c-4.9564 7.9666-6.3764 17.321-5.6731 37.378.36584 10.437 1.1246 23.51 1.6874 29.062.38895 3.8372 3.8278 32.454 4.6105 38.459 4.6694-.24176 9.2946.2879 14.377 1.481 1.2359-3.2937 5.2496-13.088 8.886-21.623 6.249-14.668 8.4128-21.264 10.253-31.252 1.2464-6.7626 1.6341-12.156 1.4204-19.764-.36325-12.93-2.1234-19.487-6.9377-25.843-2.0833-2.7507-6.9865-7.6112-7.9127-7.8436-.79716-.20019-6.6946-1.0922-6.7755-1.0248-.02213.0182-5.0006-.41858-7.5248-.22808l-2.149-.22808h-3.3738z\\\" />\\r\\n    <path style=\\\"fill:currentColor\\\" d=\\\"m61.915 883.28-3.2484.4497c-1.7863.24724-3.5182.53481-3.8494.63994-2.4751.33811-4.7267.86957-6.7777 1.5696-.28598 0-1.0254.20146-2.3695.58589-5.0418 1.4418-6.6374 2.2604-8.2567 4.2364-6.281 7.6657-11.457 18.43-12.932 26.891-1.4667 8.4111.71353 22.583 5.0764 32.996 3.8064 9.0852 13.569 25.149 22.801 37.517 1.3741 1.841 2.1708 2.9286 2.4712 3.5792 3.5437-1.1699 6.8496-1.9336 10.082-2.3263-1.3569-5.7831-4.6968-21.86-6.8361-33.002-.92884-4.8368-2.4692-14.322-3.2452-19.991-.68557-5.0083-.77707-6.9534-.74159-15.791.04316-10.803.41822-16.162 1.5026-21.503 1.4593-5.9026 3.3494-11.077 6.3247-15.852z\\\" />\\r\\n    <path style=\\\"fill:currentColor\\\" d=\\\"m94.499 885.78c-.10214-.0109-.13691 0-.0907.0409.16033.13489 1.329 1.0675 2.5976 2.0723 6.7003 5.307 11.273 14.568 12.658 25.638.52519 4.1949.24765 14.361-.5059 18.523-2.4775 13.684-9.7807 32.345-20.944 53.519l-3.0559 5.7971c2.8082.76579 5.7915 1.727 8.9926 2.8441 11.562-11.691 18.349-19.678 24.129-28.394 7.8992-11.913 11.132-20.234 12.24-31.518.98442-10.02-1.5579-20.876-6.7799-28.959-.2758-.4269-.57803-.86856-.89617-1.3166-3.247-6.13-9.752-12.053-21.264-16.131-2.3687-.86369-6.3657-2.0433-7.0802-2.1166z\\\" />\\r\\n    <path style=\\\"fill:currentColor\\\" d=\\\"m32.52 892.22c-.20090-.13016-1.4606.81389-3.9132 2.7457-11.486 9.0476-17.632 24.186-16.078 39.61.79699 7.9138 2.4066 13.505 5.9184 20.562 5.8577 11.77 14.749 23.219 30.087 38.74.05838.059.12188.1244.18052.1838 1.3166-.5556 2.5965-1.0618 3.8429-1.5199-.66408-.32448-1.4608-1.3297-3.8116-4.4602-5.0951-6.785-8.7512-11.962-13.051-18.486-5.1379-7.7948-5.0097-7.5894-8.0586-13.054-6.2097-11.13-8.2674-17.725-8.6014-27.563-.21552-6.3494.13041-9.2733 1.775-14.987 2.1832-7.5849 3.9273-10.986 9.2693-18.07 1.7839-2.3656 2.6418-3.57 2.4409-3.7003z\\\" />\\r\\n    <path style=\\\"fill:currentColor\\\" d=\\\"m69.133 992.37c-6.2405.0309-12.635.76718-19.554 2.5706 4.6956 4.7759 9.935 10.258 12.05 12.625l4.1272 4.6202h11.493l3.964-4.4516c2.0962-2.3541 7.4804-7.9845 12.201-12.768-8.378-1.4975-16.207-2.6353-24.281-2.5955z\\\" />\\r\\n    <rect style=\\\"stroke-width:0;fill:currentColor\\\" ry=\\\"2.0328\\\" height=\\\"27.746\\\" width=\\\"22.766\\\" y=\\\"1017.7\\\" x=\\\"60.201\\\" />\\r\\n   </g>\\r\\n  </g>\\r\\n </symbol> <symbol id=\\\"info\\\" viewbox=\\\"0 0 41.667 41.667\\\">\\r\\n  <g transform=\\\"translate(-37.035 -1004.6)\\\">\\r\\n   <path style=\\\"stroke-linejoin:round;stroke:currentColor;stroke-linecap:round;stroke-width:3.728;fill:none\\\" d=\\\"m76.25 1030.2a18.968 18.968 0 0 1 -23.037 13.709 18.968 18.968 0 0 1 -13.738 -23.019 18.968 18.968 0 0 1 23.001 -13.768 18.968 18.968 0 0 1 13.798 22.984\\\" />\\r\\n   <g transform=\\\"matrix(1.1146 0 0 1.1146 -26.276 -124.92)\\\">\\r\\n    <path style=\\\"stroke:currentColor;stroke-linecap:round;stroke-width:3.728;fill:none\\\" d=\\\"m75.491 1039.5v-8.7472\\\" />\\r\\n    <path style=\\\"stroke-width:0;fill:currentColor\\\" transform=\\\"scale(-1)\\\" d=\\\"m-73.193-1024.5a2.3719 2.3719 0 0 1 -2.8807 1.7142 2.3719 2.3719 0 0 1 -1.718 -2.8785 2.3719 2.3719 0 0 1 2.8763 -1.7217 2.3719 2.3719 0 0 1 1.7254 2.8741\\\" />\\r\\n   </g>\\r\\n  </g>\\r\\n </symbol> <symbol id=\\\"warning\\\" viewbox=\\\"0 0 48.430474 41.646302\\\">\\r\\n  <g transform=\\\"translate(-1.1273 -1010.2)\\\">\\r\\n   <path style=\\\"stroke-linejoin:round;stroke:currentColor;stroke-linecap:round;stroke-width:4.151;fill:none\\\" d=\\\"m25.343 1012.3-22.14 37.496h44.28z\\\" />\\r\\n   <path style=\\\"stroke:currentColor;stroke-linecap:round;stroke-width:4.1512;fill:none\\\" d=\\\"m25.54 1027.7v8.7472\\\" />\\r\\n   <path style=\\\"stroke-width:0;fill:currentColor\\\" d=\\\"m27.839 1042.8a2.3719 2.3719 0 0 1 -2.8807 1.7143 2.3719 2.3719 0 0 1 -1.718 -2.8785 2.3719 2.3719 0 0 1 2.8763 -1.7217 2.3719 2.3719 0 0 1 1.7254 2.8741\\\" />\\r\\n  </g>\\r\\n </symbol> <symbol id=\\\"menu\\\" viewbox=\\\"0 0 50 50\\\">\\r\\n  <rect style=\\\"stroke-width:0;fill:currentColor\\\" height=\\\"10\\\" width=\\\"50\\\" y=\\\"0\\\" x=\\\"0\\\" />\\r\\n  <rect style=\\\"stroke-width:0;fill:currentColor\\\" height=\\\"10\\\" width=\\\"50\\\" y=\\\"20\\\" x=\\\"0\\\" />\\r\\n  <rect style=\\\"stroke-width:0;fill:currentColor\\\" height=\\\"10\\\" width=\\\"50\\\" y=\\\"40\\\" x=\\\"0\\\" />\\r\\n </symbol> <symbol id=\\\"link\\\" viewbox=\\\"0 0 50 50\\\">\\r\\n  <g transform=\\\"translate(0 -1002.4)\\\">\\r\\n   <g transform=\\\"matrix(.095670 0 0 .095670 2.3233 1004.9)\\\">\\r\\n    <g>\\r\\n     <path style=\\\"stroke-width:0;fill:currentColor\\\" d=\\\"m452.84 192.9-128.65 128.65c-35.535 35.54-93.108 35.54-128.65 0l-42.881-42.886 42.881-42.876 42.884 42.876c11.845 11.822 31.064 11.846 42.886 0l128.64-128.64c11.816-11.831 11.816-31.066 0-42.9l-42.881-42.881c-11.822-11.814-31.064-11.814-42.887 0l-45.928 45.936c-21.292-12.531-45.491-17.905-69.449-16.291l72.501-72.526c35.535-35.521 93.136-35.521 128.64 0l42.886 42.881c35.535 35.523 35.535 93.141-.001 128.66zm-254.28 168.51-45.903 45.9c-11.845 11.846-31.064 11.817-42.881 0l-42.884-42.881c-11.845-11.821-11.845-31.041 0-42.886l128.65-128.65c11.819-11.814 31.069-11.814 42.884 0l42.886 42.886 42.876-42.886-42.876-42.881c-35.54-35.521-93.113-35.521-128.65 0l-128.65 128.64c-35.538 35.545-35.538 93.146 0 128.65l42.883 42.882c35.51 35.54 93.11 35.54 128.65 0l72.496-72.499c-23.956 1.597-48.092-3.784-69.474-16.283z\\\" />\\r\\n    </g>\\r\\n   </g>\\r\\n  </g>\\r\\n </symbol> <symbol id=\\\"doc\\\" viewbox=\\\"0 0 35 45\\\">\\r\\n  <g transform=\\\"translate(-147.53 -539.83)\\\">\\r\\n   <path style=\\\"stroke:currentColor;stroke-width:2.4501;fill:none\\\" d=\\\"m149.38 542.67v39.194h31.354v-39.194z\\\" />\\r\\n   <g style=\\\"stroke-width:25\\\" transform=\\\"matrix(.098003 0 0 .098003 133.69 525.96)\\\">\\r\\n    <path d=\\\"m220 252.36h200\\\" style=\\\"stroke:currentColor;stroke-width:25;fill:none\\\" />\\r\\n    <path style=\\\"stroke:currentColor;stroke-width:25;fill:none\\\" d=\\\"m220 409.95h200\\\" />\\r\\n    <path d=\\\"m220 488.74h200\\\" style=\\\"stroke:currentColor;stroke-width:25;fill:none\\\" />\\r\\n    <path d=\\\"m220 331.15h200\\\" style=\\\"stroke:currentColor;stroke-width:25;fill:none\\\" />\\r\\n   </g>\\r\\n  </g>\\r\\n </symbol> <symbol id=\\\"tick\\\" viewbox=\\\"0 0 177.16535 177.16535\\\">\\r\\n  <g transform=\\\"translate(0 -875.2)\\\">\\r\\n   <rect style=\\\"stroke-width:0;fill:currentColor\\\" transform=\\\"rotate(30)\\\" height=\\\"155\\\" width=\\\"40\\\" y=\\\"702.99\\\" x=\\\"556.82\\\" />\\r\\n   <rect style=\\\"stroke-width:0;fill:currentColor\\\" transform=\\\"rotate(30)\\\" height=\\\"40\\\" width=\\\"90.404\\\" y=\\\"817.99\\\" x=\\\"506.42\\\" />\\r\\n  </g>\\r\\n </symbol>\\r\\n</svg>\\r\\n<div class=\\\"wrapper\\\">\\r\\n <header class=\\\"intro-and-nav\\\" role=\\\"banner\\\">\\r\\n  <div>\\r\\n   <div class=\\\"intro\\\"> <a class=\\\"logo\\\" href=\\\"/\\\" aria-label=\\\"Notepad++ home page\\\"> <img src=\\\"https://notepad-plus-plus.org/images/logo.svg\\\" alt=\\\"\\\"> </a>\\r\\n    <p class=\\\"library-desc\\\"> <a href=\\\"/downloads/v7.9/\\\"><strong>Current Version 7.9</strong></a> </p>\\r\\n   </div>\\r\\n   <nav id=\\\"patterns-nav\\\" class=\\\"patterns\\\" role=\\\"navigation\\\">\\r\\n    <h2 class=\\\"vh\\\">Main navigation</h2> <button id=\\\"menu-button\\\" aria-expanded=\\\"false\\\">\\r\\n     <svg viewbox=\\\"0 0 50 50\\\" aria-hidden=\\\"true\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#menu\\\"></use>\\r\\n     </svg> Menu </button>\\r\\n    <ul id=\\\"patterns-list\\\">\\r\\n     <li class=\\\"pattern\\\"> <a href=\\\"/\\\">\\r\\n       <svg class=\\\"bookmark-icon\\\" aria-hidden=\\\"true\\\" focusable=\\\"false\\\" viewbox=\\\"0 0 40 50\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n       </svg> <span class=\\\"text\\\">Home</span> </a> </li>\\r\\n     <li class=\\\"pattern\\\"> <a href=\\\"/downloads/\\\" aria-current=\\\"page\\\">\\r\\n       <svg class=\\\"bookmark-icon\\\" aria-hidden=\\\"true\\\" focusable=\\\"false\\\" viewbox=\\\"0 0 40 50\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n       </svg> <span class=\\\"text\\\">Download</span> </a> </li>\\r\\n     <li class=\\\"pattern\\\"> <a href=\\\"/news/\\\">\\r\\n       <svg class=\\\"bookmark-icon\\\" aria-hidden=\\\"true\\\" focusable=\\\"false\\\" viewbox=\\\"0 0 40 50\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n       </svg> <span class=\\\"text\\\">News</span> </a> </li>\\r\\n     <li class=\\\"pattern\\\"> <a href=\\\"/online-help/\\\">\\r\\n       <svg class=\\\"bookmark-icon\\\" aria-hidden=\\\"true\\\" focusable=\\\"false\\\" viewbox=\\\"0 0 40 50\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n       </svg> <span class=\\\"text\\\">Online Help</span> </a> </li>\\r\\n     <li class=\\\"pattern\\\"> <a href=\\\"/resources/\\\">\\r\\n       <svg class=\\\"bookmark-icon\\\" aria-hidden=\\\"true\\\" focusable=\\\"false\\\" viewbox=\\\"0 0 40 50\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n       </svg> <span class=\\\"text\\\">Resources</span> </a> </li>\\r\\n     <li class=\\\"pattern\\\"> <a href=\\\"/index.xml\\\">\\r\\n       <svg class=\\\"bookmark-icon\\\" aria-hidden=\\\"true\\\" focusable=\\\"false\\\" viewbox=\\\"0 0 40 50\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n       </svg> <span class=\\\"text\\\">RSS</span> </a> </li>\\r\\n     <li class=\\\"pattern\\\"> <a href=\\\"/donate/\\\">\\r\\n       <svg class=\\\"bookmark-icon\\\" aria-hidden=\\\"true\\\" focusable=\\\"false\\\" viewbox=\\\"0 0 40 50\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n       </svg> <span class=\\\"text\\\">Donate</span> </a> </li>\\r\\n     <li class=\\\"pattern\\\"> <a href=\\\"/author/\\\">\\r\\n       <svg class=\\\"bookmark-icon\\\" aria-hidden=\\\"true\\\" focusable=\\\"false\\\" viewbox=\\\"0 0 40 50\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n       </svg> <span class=\\\"text\\\">Author</span> </a> </li>\\r\\n    </ul>\\r\\n   </nav>\\r\\n   <div id=\\\"carbon-block\\\"></div>\\r\\n   <script>\\r\\n\\r\\n\\r\\nif (window.location.href === \\\"https://notepad-plus-plus.org/downloads/\\\" || window.location.href.indexOf('/downloads/') === -1){\\r\\n    var carbonScript = document.createElement(\\\"script\\\");\\r\\n    carbonScript.src = \\\"//cdn.carbonads.com/carbon.js?serve=CKYIE53I&placement=notepad-plus-plusorg\\\";\\r\\n    carbonScript.id = \\\"_carbonads_js\\\";\\r\\n    document.getElementById(\\\"carbon-block\\\").appendChild(carbonScript);\\r\\n}\\r\\nelse {\\r\\n    try {\\r\\n      fetch(new Request(\\\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\\\", { method: 'HEAD', mode: 'no-cors' })).then(function(response) {\\r\\n        return true;\\r\\n      }).catch(function(e) {\\r\\n        var carbonScript = document.createElement(\\\"script\\\");\\r\\n        carbonScript.src = \\\"//cdn.carbonads.com/carbon.js?serve=CE7DVKJM&placement=notepad-plus-plusorg\\\";\\r\\n        carbonScript.id = \\\"_carbonads_js\\\";\\r\\n        document.getElementById(\\\"carbon-block\\\").appendChild(carbonScript);\\r\\n      });\\r\\n    } catch (error) {\\r\\n      console.log(error);\\r\\n    }\\r\\n}\\r\\n\\r\\n</script>\\r\\n  </div>\\r\\n </header>\\r\\n <div class=\\\"main-and-footer\\\">\\r\\n  <div>\\r\\n   <main id=\\\"main\\\">\\r\\n    <h1>Downloads</h1>\\r\\n    <ul class=\\\"patterns-list\\\">\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.9/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.9: Stand with Hong Kong </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.8.9/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.8.9: Stand with Hong Kong </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.8.8/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.8.8 release </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.8.7/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.8.7 release </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.8.6/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.8.6 release </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.8.5/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.8.5 release </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.8.4/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.8.4 release </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.8.3/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.8.3: Free Uyghur </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.8.2/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.8.2: Free Uyghur </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.8.1/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.8.1: Free Uyghur </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.8/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.8 release </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.7.1/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.7.1 release </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.7/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.7 release </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.6.6/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.6.6 release </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.6.4/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.6.4 release </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.6.3/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.6.3 release </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.6.2/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.6.2 Gilet Jaune Edition </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.5.6/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.5.6 release </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.5.4/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.5.4 release </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.3.3/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7.3.3 - CIA Hack fixed </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v7.0/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 7 - 64 bits </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v6.9/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 6.9 </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v6.8.7/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 6.8.7 Black Friday Discount </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v6.7.4/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 6.7.4 - Je suis Charlie edition </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v6.6.6/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 666 </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v6.6.4/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 6.6.4 - Tiananmen June Fourth Incident Edition </a> </h2> </li>\\r\\n     <li> <h2> <a href=\\\"https://notepad-plus-plus.org/downloads/v6.2.3/\\\">\\r\\n        <svg class=\\\"bookmark\\\" aria-hidden=\\\"true\\\" viewbox=\\\"0 0 40 50\\\" focusable=\\\"false\\\"> <use xlink:href=\\\"#bookmark\\\"></use>\\r\\n        </svg> Notepad++ 6.2.3 release </a> </h2> </li>\\r\\n    </ul>\\r\\n   </main>\\r\\n   <footer role=\\\"contentinfo\\\">\\r\\n    <div> <label for=\\\"themer\\\"> dark theme: <input type=\\\"checkbox\\\" id=\\\"themer\\\" class=\\\"vh\\\"> <span aria-hidden=\\\"true\\\"></span> </label>\\r\\n    </div>\\r\\n   </footer>\\r\\n  </div>\\r\\n </div>\\r\\n</div>\\r\\n<script src=\\\"https://notepad-plus-plus.org/js/prism.js\\\"></script>\\r\\n<script src=\\\"https://notepad-plus-plus.org/js/dom-scripts.js\\\"></script>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 2.5.2 取得定點資訊\\r\\n\\r\\n拎到 HTML source 之後，我地可以根據 `Current Version` 既 DOM 定位，定點咁取得版本 value。\\r\\n\\r\\n以下係 `Current Version` 果段既節錄：\\r\\n\\r\\n```xml\\r\\n<p class=\\\"library-desc\\\"> <a href=\\\"/downloads/v7.9/\\\"><strong>Current Version 7.9</strong></a> </p>\\r\\n```\\r\\n\\r\\n其實用 `Current Version` 呢隻字都已經夠。\\r\\n\\r\\n```java\\r\\npublic class Main {\\r\\n\\r\\n    public static void main(String[] args) throws Exception {\\r\\n\\r\\n        final Document doc = Jsoup.connect(\\\"https://notepad-plus-plus.org/downloads/\\\").get();\\r\\n//        final String html = doc.body().html();\\r\\n\\r\\n//        System.out.println(html);\\r\\n\\r\\n        final Element currentVersionElement = doc.body().getElementsMatchingOwnText(\\\"Current Version\\\").first();\\r\\n        final String currentVersion = currentVersionElement.ownText();\\r\\n\\r\\n        System.out.println(currentVersion);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n結果如下：\\r\\n\\r\\n```plaintext\\r\\nCurrent Version 7.9\\r\\n```\\r\\n\\r\\n之後攞淨個 version number 就 ok，點樣 manipulate string 唔詳細講了。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.6 DOM node 定位方法\\r\\n\\r\\n喺例子裡面，我地用左 `Element#getElementsMatchingOwnText(regex)` 去定位 `Current Version` 字眼既 DOM node，但其實有好幾個方法。\\r\\n\\r\\n唯一美中不足既無 jsoup 唔支援 XPath 格式既 selector，which is 一個比 CSS selector 更強大既方法。\\r\\n\\r\\n### 2.6.1 根據字眼定位\\r\\n\\r\\n呢個係最簡單直接既方法，有時可能連 Chrome developer tools 都唔需要用到。\\r\\n\\r\\nMethods 有：\\r\\n\\r\\n-   `getElementsContainingText(searchText)`\\r\\n-   `getElementsContainingOwnText(searchText)`\\r\\n-   `getElementsMatchingText(regex)`\\r\\n-   `getElementsMatchingOwnText(regex)`\\r\\n\\r\\n---\\r\\n\\r\\n### 2.6.2 用 id 定位\\r\\n\\r\\n另一個準確既定位方法係用 Chrome developer tools 裡面見到既 `id` 或者 `name` attribute 黎定位 DOM node。\\r\\n\\r\\nMethod 有：\\r\\n\\r\\n-   `getElementById(id)`\\r\\n\\r\\n---\\r\\n\\r\\n### 2.6.3 用 class 定位\\r\\n\\r\\n我地可以喺 Chrome developer tools 裡面見到個 tag 既 `class` attribute 就用佢黎定位 DOM node，如 `class=\\\"btn\\\"`。\\r\\n\\r\\nMethod 有：\\r\\n\\r\\n-   `getElementsByClass(className)`\\r\\n\\r\\n---\\r\\n\\r\\n### 2.6.4 用 attribute 定位\\r\\n\\r\\n我地可以喺 Chrome developer tools 裡面見到 `id`、`class` 以外既 attributes 就用佢地黎定位 DOM node，例如 `name`、`style`、`href` 等等。\\r\\n\\r\\nMethods 有：\\r\\n\\r\\n-   `getElementsByAttribute(key)`\\r\\n-   `getElementsByAttributeValueMatching(key, regex)`\\r\\n\\r\\n---\\r\\n\\r\\n### 2.6.5 用 tag 定位\\r\\n\\r\\n我地可以喺 Chrome developer tools 裡面見到個 tag 名就用佢黎定位 DOM node，例如 `<div>`、`<h3>`、`<ul>`。\\r\\n但一般都係先用左比較準確咁 narrow down 到 HTML DOM node 去好接近既兩三層先再用呢個方法黎定位 child node 或者 sibling node。\\r\\n\\r\\nMethod 有：\\r\\n\\r\\n-   `getElementsByTag(tagName)`\\r\\n\\r\\n---\\r\\n\\r\\n### 2.6.6 用 CSS selector 定位\\r\\n\\r\\n有寫過網頁既人都應該會識寫 CSS selector。比起其他方法有時候要我地串連多個 methods，用 CSS selector 係一個相對簡潔既選擇。\\r\\n\\r\\nMethods 有：\\r\\n\\r\\n-   `select(cssQuery)`\\r\\n-   `selectFirst(cssQuery)`\\r\\n\\r\\n例子——以下係用 jsoup 既 DSL methods 既寫法：\\r\\n\\r\\n```java\\r\\nfinal String smallestVersionOnDownloadsPage = Jsoup.connect(\\\"https://notepad-plus-plus.org/downloads/\\\").get()\\r\\n    .getElementsByClass(\\\"patterns-list\\\").first()\\r\\n    .getElementsByTag(\\\"li\\\").last()\\r\\n    .getElementsByTag(\\\"h2\\\").first()\\r\\n    .getElementsByTag(\\\"a\\\").first()\\r\\n    .ownText();\\r\\n```\\r\\n\\r\\n而以下就係用 CSS selector 既寫法：\\r\\n\\r\\n```java\\r\\nfinal String smallestVersionOnDownloadsPage = Jsoup.connect(\\\"https://notepad-plus-plus.org/downloads/\\\").get()\\r\\n    .selectFirst(\\\".patterns-list li:last-child h2 a\\\")\\r\\n    .ownText();\\r\\n```\\r\\n\\r\\n結果都一樣係：\\r\\n\\r\\n```plaintext\\r\\nNotepad++ 6.2.3 release\\r\\n```\\r\\n\";","export default \"## 1 Java 9 帶黎既改變\\r\\n\\r\\n### 1.1 模組化 - Java Platform Module System (JPMS)\\r\\n\\r\\nJava 9 提供左 module system，呢個功能亦叫做 Project Jigsaw。\\r\\n\\r\\n模組化功能主要係想解決：\\r\\n\\r\\n-   JAR 檔定義喺類別路徑中既順序，經常會有同名類別遮蓋既問題\\r\\n-   JAR 對包裝既類別沒有封裝機制，即使開發中既程式庫想隱藏底層使用到既實作品，但只要係 `public` 既類型，API 開發者就見得到、用得到\\r\\n-   JAR 檔案充其量只係個方便傳送既器皿，佢冇辦法表示彼此之間既依賴關係，當發生 `ClassNotFoundException` 既時候，我地好難知道到底缺少左邊個 JAR 檔\\r\\n-   JDK 1.1 由 10MB 以下到而家 JDK 8+ 既 200+ MB，越黎越大，模組化亦可以令到需要既 JRE 細啲\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Java 9 模組化概觀](https://www.ithome.com.tw/voice/112345)\\r\\n-   [理解 Java 9 的模組](https://medium.com/java-magazine-translation/%E7%90%86%E8%A7%A3-java-9-%E7%9A%84%E6%A8%A1%E7%B5%84-4aa30e1c7df9)\\r\\n-   [【JDK 11】關於 Java 模組系統，看這一篇就夠了](https://www.mdeditor.tw/pl/pZVS/zh-tw)\\r\\n\\r\\n---\\r\\n\\r\\n### 1.2 `interface` 支援 `private` methods\\r\\n\\r\\nJava 9 既 `interface` 既 methods 可以有 `private` access modifier，令到 interface 更加似 class。\\r\\n\\r\\n呢啲 `private` methods 唔可以係 `abstract`。\\r\\n\\r\\n```java\\r\\npublic interface Foo {\\r\\n\\r\\n    private void sayHi() {\\r\\n        // do sth\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 1.3 Anonymous class 可以用 `<>`\\r\\n\\r\\n`<>` 又叫 diamond operator，係用黎表示 generic type(s) 重複。\\r\\n\\r\\nJava 9 之前，anonymous class 要我地寫清楚 generic type(s) 或重複前面定義變數既 generic type(s)，但 Java 9 既 anonymous class 就唔需要再重複 `<>` 裡面既 generic type(s)，留空就可以。\\r\\n\\r\\n---\\r\\n\\r\\n### 1.4 Try-with-resources 支援 `try` 前定義既變數\\r\\n\\r\\n只要變數係 final 或 effectively final，就可以用喺 `try` block。\\r\\n\\r\\nJava 9 之前既 try-with-resources：\\r\\n\\r\\n```java\\r\\ntry (Scanner scanner = new Scanner(new File(\\\"testRead.txt\\\"));\\r\\n     PrintWriter writer = new PrintWriter(new File(\\\"testWrite.txt\\\"))) {\\r\\n    // ...\\r\\n}\\r\\n```\\r\\n\\r\\nJava 9 既 try-with-resources：\\r\\n\\r\\n```java\\r\\nfinal Scanner scanner = new Scanner(new File(\\\"testRead.txt\\\"));\\r\\nPrintWriter writer = new PrintWriter(new File(\\\"testWrite.txt\\\"));\\r\\n\\r\\ntry (scanner; writer) {\\r\\n    // ...\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 1.5 Collections API 新增 `of` 既 method\\r\\n\\r\\n就好似 `Arrays.asList` 咁，Java 9 既 collection classes 新增左 `of` static method：\\r\\n\\r\\n```java\\r\\nList<Integer> myList = List.of(1, 2, 3);\\r\\nSet<Integer> mySet = Set.of(1, 2, 3);\\r\\nMap<String, Integer> myMap = Map.of(\\\"one\\\", 1, \\\"two\\\", 2);\\r\\n```\\r\\n\\r\\n以上既 `of` methods 都會返回一個 immutable 既 collection object。\\r\\n\\r\\n---\\r\\n\\r\\n### 1.6 Reactive streams publisher/subscriber framework（反應式流發布/訂閱框架）\\r\\n\\r\\nJava 9 新增左 reactive streams publish-subscribe framework for asynchronous stream processing with non-blocking backpressure（支援異步非阻塞背壓流式處理既反應式流發布/訂閱框架）。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Java 9 Reactive Streams](https://www.baeldung.com/java-9-reactive-streams)\\r\\n-   [The Reactive Manifesto](https://www.reactivemanifesto.org/)\\r\\n\\r\\n---\\r\\n\\r\\n### 1.7 `Stream` 新增 methods\\r\\n\\r\\nJava 9 既 `Stream` 新增左以下 methods：\\r\\n\\r\\n-   `dropWhile`\\r\\n-   `takeWhile`\\r\\n-   `ofnullable`\\r\\n-   `iterate​(T seed, Predicate<? super T> hasNext, UnaryOperator<T> next)`\\r\\n\\r\\n---\\r\\n\\r\\n### 1.8 `Arrays` 新增 `mismatch` method\\r\\n\\r\\nJava 9 既 `Arrays` 新增左 `mismatch` static method，可以搵出兩個 arrays 既第一個唔同既元素。\\r\\n\\r\\n---\\r\\n\\r\\n### 1.9 StackWalker API\\r\\n\\r\\nJava 9 新增既 StackWalker API 可以畀我地遊歷、流處理 method call 既整個 stack。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Introduction to Java 9 StackWalking API](https://www.baeldung.com/java-9-stackwalking-api)\\r\\n\\r\\n---\\r\\n\\r\\n### 1.10 Process API 改良\\r\\n\\r\\nJava 9 改良左 Process API 既 `ProcessHandle`，而家我地可以攞到：\\r\\n\\r\\n-   Process ID（PID）\\r\\n-   User\\r\\n-   開始時間\\r\\n-   用左幾多 CPU 時間\\r\\n-   幾多個本地 processes 運行緊\\r\\n\\r\\n---\\r\\n\\r\\n## 2 Java 10 帶黎既改變\\r\\n\\r\\n### 2.1 新增 `var` keyword\\r\\n\\r\\nJava 10 新增左 `var` keyword 用於簡化定義 local 變數。Java compiler 會根據 value 去推斷變量既 type。\\r\\n\\r\\n```java\\r\\nvar greeting = \\\"Hello World!\\\";\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3 Java 11 帶黎既改變\\r\\n\\r\\n### 3.1 `String` 新增 methods\\r\\n\\r\\n-   `isBlank`\\r\\n-   `lines`\\r\\n-   `repeat`\\r\\n-   `strip`\\r\\n\\r\\n---\\r\\n\\r\\n### 3.2 `HttpClient` API 支援 HTTP/2\\r\\n\\r\\nJava 9 之前，`HttpClient` 只係支援 HTTP/1.1，Java 9 既 `HttpClient` 就支援 HTTP/1.1 同 HTTP/2（默認）。\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3 移除 Java EE\\r\\n\\r\\nJava 11 移除左 Java EE––包括 JAX-WS、JAXB、JSR-250 既 annotations（如 `@PostConstruct`、`@PreDestroy` 等），但我地仲可以透過加入如 `javax.annotation` 既 `javax.annotation-api` 等 Maven dependencies 黎重新取得相關 Java EE 功能。\\r\\n\\r\\n---\\r\\n\\r\\n### 3.4 移除 JavaFX\\r\\n\\r\\n為左更好咁發展 JavaFX，Oracle 認為應該將 JavaFX 獨立出黎，所以 Java 11 移除左 JavaFX，以後想以最新既 Java graphical user interface（GUI）rich client 技術開發 desktop apps 就要自行將 OpenJFX 既 JavaFX 加入 project 既 classpath。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Oracle - JavaFX 2 Downloads](https://www.oracle.com/java/technologies/javafx2-archive-downloads.html)\\r\\n-   [OpenJFX 官網](https://openjfx.io/)\\r\\n\\r\\n---\\r\\n\\r\\n## 4 Java 12 帶黎既改變\\r\\n\\r\\n### 4.1 `Collectors` 新增 `teeing` method\\r\\n\\r\\nJava 12 既 `Collectors` 新增左 `teeing` 既 method，可以將兩個 `Collector` 既結果合併，放落一個 object 裡面，例如 `Map`。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Collectors teeing() method examples](https://howtodoinjava.com/java12/collectors-teeing-example/)\\r\\n\\r\\n---\\r\\n\\r\\n### 4.2 `Files` 新增 `mismatch` method\\r\\n\\r\\nJava 12 既 `Files` 新增左 `mismatch` static method，可以比較兩個 `Path` 既檔案內容，並且搵出第一個唔同既 byte。\\r\\n\\r\\n---\\r\\n\\r\\n## 5 Java 13 帶黎既改變\\r\\n\\r\\n### 5.1 重寫 Socket API\\r\\n\\r\\nJava 13 將好舊既 Socket API 底層 Java + C code 重寫左。\\r\\n\\r\\n---\\r\\n\\r\\n## 6 Java 14 帶黎既改變\\r\\n\\r\\n### 6.1 `switch` 語句改良\\r\\n\\r\\nJava 14 既 `switch` 語句可以直接返回一樣野。\\r\\n\\r\\n```java\\r\\nint numLetters = switch (day) {\\r\\n    case MONDAY, FRIDAY, SUNDAY -> 6;\\r\\n    case TUESDAY                -> 7;\\r\\n    default      -> {\\r\\n      String s = day.toString();\\r\\n      int result = s.length();\\r\\n      yield result;\\r\\n    }\\r\\n};\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 7 Java 15 帶黎既改變\\r\\n\\r\\n### 7.1 Text block（文本塊）、`String` 新增 `formatted` method\\r\\n\\r\\nJava 15 畀我地將多行既 string 直接放喺 source code 度，唔需要用 newline（`\\\\n`）甚或自己分開幾行然後用 `+` 號。\\r\\n\\r\\n```java\\r\\nString html = \\\"\\\"\\\"\\r\\n<html>\\r\\n    <body>\\r\\n        <p>Hello, world</p>\\r\\n    </body>\\r\\n</html>\\r\\n\\\"\\\"\\\";\\r\\n```\\r\\n\\r\\nJava compiler 會根據咁多行而搵出最大既共同縮排距離，然後將全部行移除相同既縮排距離。如果唔想出到黎既 string 有縮排，但又想寫出黎既 code 有縮排，formatting 好睇一啲，可以將最後一行加多啲空格增加縮排距離。\\r\\n\\r\\nJava 15 既 `String` 亦新增左 `formatted` 既 instance method，作用同 `String` 既 `format` static method 無異。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Java Text Blocks](https://www.baeldung.com/java-text-blocks)\\r\\n\\r\\n---\\r\\n\\r\\n### 7.2 詳細既 `NullPointerException` error message\\r\\n\\r\\nJava 15 既 `NullPointerException` 帶黎既 error message 會提供詳細既資訊畀我地知道邊個變數 `null` 左。\\r\\n\\r\\n```plaintext\\r\\nException in thread \\\"main\\\" java.lang.NullPointerException:\\r\\n      Cannot read field \\\"c\\\" because \\\"a.b\\\" is null\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 7.3 移除 Nashorn JavaScript engine\\r\\n\\r\\nJava 15 移除左 Nashorn JavaScript engine。\\r\\n\\r\\n---\\r\\n\\r\\n## 8 Java 16 帶黎既改變\\r\\n\\r\\n### 8.1 `record` type\\r\\n\\r\\nJava 14 既 `record` type 可以實現 Lombok 既部分功能，減少寫 boilerplate code。\\r\\n\\r\\n```\\r\\nrecord Point(int x, int y) { }\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 8.2 `instanceof` 既 pattern matching\\r\\n\\r\\nJava 14 既 `instanceof` 可以直接 cast 成某個 type 再拎黎用。\\r\\n\\r\\n```java\\r\\nif (obj instanceof String str) {\\r\\n    String value = str;\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 8.3 `Stream` 新增 `mapMulti` method\\r\\n\\r\\n寫法一：\\r\\n\\r\\n```java\\r\\nfinal List<String> result = input.stream().mapMulti((Object element, Consumer<String> consumer) -> {\\r\\n\\tconsumer.accept(element + \\\"-1\\\");\\r\\n\\tconsumer.accept(element + \\\"-2\\\");\\r\\n}).collect(toList());\\r\\n\\r\\nSystem.out.println(result); // [a-1, a-2, b-1, b-2, c-1, c-2]\\r\\n```\\r\\n\\r\\n寫法二：\\r\\n\\r\\n```java\\r\\nfinal List<String> result2 = input.stream().<String>mapMulti((element, consumer) -> {\\r\\n\\tconsumer.accept(element + \\\"-1\\\");\\r\\n\\tconsumer.accept(element + \\\"-2\\\");\\r\\n}).collect(toList());\\r\\n\\r\\nSystem.out.println(result2); // [a-1, a-2, b-1, b-2, c-1, c-2]\\r\\n```\\r\\n\\r\\n參考：\\r\\n\\r\\n-   [A Complete Guide to Java Stream mapMulti](https://javadevcentral.com/a-complete-guide-to-java-stream-mapmulti)\\r\\n\\r\\n---\\r\\n\\r\\n## 9 Java 17 帶黎既改變\\r\\n\\r\\n### 9.1 新增 `sealed` modifier、`permits` keyword\\r\\n\\r\\nJava 15 新增左 `sealed` type-level modifier 及 `permits` keyword，只有 `permits` 後面既 type(s) 先可以 `extends` 或者 `implements` 呢個 class 或者 interface，畀我地更好咁控制 inheritance。Java 15 之前只有加上 `final` 或者唔加 `final` 既選擇，冇辦法揀某啲 subtype(s) 黎開放 inheritance。\\r\\n\\r\\n`permits` 後面既 type(s) 必須要有 `final`、`sealed` 或 `non-sealed` 既 modifier。\\r\\n\\r\\n例子：\\r\\n\\r\\n`Shape.java`：\\r\\n\\r\\n```java\\r\\npublic sealed class Shape permits Circle, Square, Rectangle {\\r\\n    // ...\\r\\n}\\r\\n```\\r\\n\\r\\n`Circle.java`：\\r\\n\\r\\n```java\\r\\npublic final class Circle extends Shape {\\r\\n    // ...\\r\\n}\\r\\n```\\r\\n\\r\\n`Square.java`：\\r\\n\\r\\n```java\\r\\npublic non-sealed class Square extends Shape {\\r\\n    // ...\\r\\n}\\r\\n```\\r\\n\\r\\n`Rectangle.java`：\\r\\n\\r\\n```java\\r\\npublic sealed class Rectangle extends Shape permits FilledRectangle {\\r\\n    // ...\\r\\n}\\r\\n```\\r\\n\\r\\n`FilledRectangle.java`：\\r\\n\\r\\n```java\\r\\npublic final class FilledRectangle extends Rectangle {\\r\\n    // ...\\r\\n}\\r\\n```\\r\\n\\r\\n如果 subclass 或者 subinterface 係喺同一個 Java class file 裡面定義，就可以唔洗打 `permits`，自動賦予 inheritance 權利畀呢啲 subclass 或者 subinterface。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [StackOverflow - What is the difference between a final and a non-sealed class in Java 15's sealed-classes feature?](https://stackoverflow.com/questions/63972130/what-is-the-difference-between-a-final-and-a-non-sealed-class-in-java-15s-seale)\\r\\n\\r\\n---\\r\\n\\r\\n## 10 【預覽功能】\\r\\n\\r\\n預覽既功能已經喺 JDK 裡面，用到、function 到，只係未被定為最終完成版，之後可能仲會有改動，應該會喺後續既新版推出。\\r\\n\\r\\n### 10.1 Vector API\\r\\n\\r\\nJava 16 新增左 Vector API，其作用係使用 CPU 既 SIMD（Single Instruction Multiple Data）指令黎提升 CPU 處理 int、float、long、double、short、byte 既 array 既運算效率，有別於現時既 for loop 對每一個 array element 逐一單獨處理。\\r\\n\\r\\n![](blog/2020-10/new-jdk-features-since-8/vector-processing.png)\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Looking into the JDK 16 vector API](https://www.javacodegeeks.com/2021/04/looking-into-the-jdk-16-vector-api.html)\\r\\n-   [Vectorized Algorithms in Java](https://dzone.com/articles/vectorised-algorithms-in-java)\\r\\n-   [為什麼向量化計算（Vectorization）會這麼快？](https://zhuanlan.zhihu.com/p/72953129)\\r\\n-   [官方 Javadoc - Class Vector<E>](https://docs.oracle.com/en/java/javase/16/docs/api/jdk.incubator.vector/jdk/incubator/vector/Vector.html)\\r\\n-   [Intel 官方 - Vector API Developer Program for Java Software](https://software.intel.com/content/www/us/en/develop/articles/vector-api-developer-program-for-java.html)\\r\\n\\r\\n---\\r\\n\\r\\n### 10.2 `switch` 既 pattern matching\\r\\n\\r\\n```java\\r\\nswitch (o) {\\r\\n    case null        -> System.out.println(\\\"null\\\");\\r\\n    case String s    -> System.out.println(\\\"String\\\");\\r\\n    case int[] arr   -> System.out.println(\\\"Array length\\\" + arr.length);\\r\\n    case MyClass obj -> System.out.println(obj.toString());\\r\\n    default          -> System.out.println(\\\"Something else\\\");\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 10.3 Virtual threads\\r\\n\\r\\n參考：\\r\\n\\r\\n-   [Java 19 虛擬線程都來了，我正在寫的線程代碼會被淘汰掉嗎？](https://www.itzhai.com/articles/virtual-thread-in-java19.html)（[備用一](http://web.archive.org/web/20230503012235/https://www.itzhai.com/articles/virtual-thread-in-java19.html)／[備用二](https://archive.ph/wU491)）\\r\\n-   [Java 19 正式 GA！看虛擬線程如何大幅提高系統吞吐量](https://my.oschina.net/u/3883669/blog/5579537)\\r\\n\\r\\n---\\r\\n\\r\\n## 11 參考資料\\r\\n\\r\\n-   [A categorized list of all Java and JVM features since JDK 8 to 18](https://advancedweb.hu/a-categorized-list-of-all-java-and-jvm-features-since-jdk-8-to-18/)\\r\\n-   [What is new in Java 11](https://mkyong.com/java/what-is-new-in-java-11/)\\r\\n-   [What is new in Java 12](https://mkyong.com/java/what-is-new-in-java-12/)\\r\\n-   [What is new in Java 13](https://mkyong.com/java/what-is-new-in-java-13/)\\r\\n-   [What is new in Java 14](https://mkyong.com/java/what-is-new-in-java-14/)\\r\\n-   [What is new in Java 15](https://mkyong.com/java/what-is-new-in-java-15/)\\r\\n-   [What is new in Java 16](https://mkyong.com/java/what-is-new-in-java-16/)\\r\\n-   [What is new in Java 17](https://mkyong.com/java/what-is-new-in-java-17/)\\r\\n-   [What is new in Java 18](https://mkyong.com/java/what-is-new-in-java-18/)\\r\\n-   [What is new in Java 19](https://mkyong.com/java/what-is-new-in-java-19/)\\r\\n-   [Latest Java 19 : JDK 19 Arrived- What's new features in Java 19](https://www.techgeeknext.com/java/java19-features)\\r\\n-   [New Features Between Java 8 and Java 19](https://ondro.inginea.eu/index.php/new-features-in-java-versions-since-java-8/)\\r\\n\";","export default \"# 1 安裝所需程式\\r\\n\\r\\n## 1.1 網頁瀏覽器（必須）\\r\\n\\r\\n因為 Chrome 最多人用，所以建議一定要安裝 Chrome。\\r\\n\\r\\n### 1.1.1 安裝 extensions（可選）\\r\\n\\r\\nChrome 或者 Firefox 官方應用程式商店都有以下既 extensions 或 add-ons：\\r\\n\\r\\n-   React Developer Tools\\r\\n-   Redux DevTools\\r\\n\\r\\n自行下載安裝。\\r\\n\\r\\n---\\r\\n\\r\\n## 1.2 Node.js（必須）\\r\\n\\r\\nModern web development 必備既工具，有別於以往既傳統 web development，淨係需要 `.html`、`.css` 及 `.js` 檔。而好處係好多 libraries 會被動咁幫我地 handle 曬大部分開發方面既細節，例如儲存一個 source file 既時候，網頁會自動 refresh，令我地即時見到效果。\\r\\n\\r\\n官網下載 LTS 版：[Node.js - Downloads](https://nodejs.org/en/download/)\\r\\n\\r\\nNode.js 已經包括 npm（Node.js package manager），而 npm 都係必須既工具。\\r\\n\\r\\n解壓縮之後，將 root folder 及 `node_modules/npm/bin` 設置成 `PATH` 環境變數一部分。\\r\\n\\r\\n然後喺 Command Prompt（Windows）或者 Terminal（macOS）執行以下指令黎確認設定成功：\\r\\n\\r\\n```bash\\r\\nnode -v\\r\\nnpm -v\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 1.3 Visual Studio Code IDE（必須）\\r\\n\\r\\n我地可以安裝 VSCodium，佢同 Visual Studio Code 功能完全一樣，但前者既好處係佢唔會將我地既資料 send 去畀 Microsoft。\\r\\n\\r\\n下載最新版（portable）：[VSCodium/vscodium GitHub](https://github.com/vscodium/vscodium/releases)\\r\\n\\r\\n### 1.3.1 安裝 extensions（必須）\\r\\n\\r\\n有啲 React JS 用既 extensions 係必裝既：\\r\\n\\r\\n-   ES7 React/Redux/GraphQL/React-Native snippets\\r\\n-   ESLint\\r\\n-   Prettier\\r\\n-   npm\\r\\n\\r\\n---\\r\\n\\r\\n### 1.3.2 自訂配置\\r\\n\\r\\n撳 Ctrl+`,`，然後右上角既 Open Settings (JSON) 掣。\\r\\n\\r\\n以下係我既自訂配置：\\r\\n\\r\\n```json\\r\\n{\\r\\n\\t\\\"telemetry.enableCrashReporter\\\": false,\\r\\n\\t\\\"telemetry.enableTelemetry\\\": false,\\r\\n\\t\\\"editor.minimap.enabled\\\": false,\\r\\n\\t\\\"editor.formatOnSave\\\": true,\\r\\n\\t\\\"editor.detectIndentation\\\": false,\\r\\n\\t\\\"editor.insertSpaces\\\": false,\\r\\n\\t\\\"editor.fontFamily\\\": \\\"Monaco, Consolas, 'Courier New', monospace, Microsoft JhengHei\\\",\\r\\n\\t\\\"workbench.startupEditor\\\": \\\"newUntitledFile\\\",\\r\\n\\t\\\"workbench.editor.enablePreview\\\": false,\\r\\n\\t\\\"workbench.tree.indent\\\": 24,\\r\\n\\t\\\"workbench.list.horizontalScrolling\\\": true,\\r\\n\\t\\\"workbench.colorCustomizations\\\": {\\r\\n\\t\\t\\\"activityBar.activeBorder\\\": \\\"#007ac7\\\",\\r\\n\\t\\t\\\"activityBar.activeBackground\\\": \\\"#294a5b\\\"\\r\\n\\t},\\r\\n\\t\\\"explorer.autoReveal\\\": true,\\r\\n\\t\\\"explorer.confirmDelete\\\": false,\\r\\n\\t\\\"explorer.openEditors.visible\\\": 0,\\r\\n\\t\\\"javascript.updateImportsOnFileMove.enabled\\\": \\\"always\\\",\\r\\n\\t\\\"emmet.includeLanguages\\\": {\\r\\n\\t\\t\\\"javascript\\\": \\\"javascriptreact\\\"\\r\\n\\t},\\r\\n\\r\\n\\t\\\"git.path\\\": \\\"C:/Users/Michael/Desktop/PortableGit/bin/git.exe\\\",\\r\\n\\t// macOS: \\\"/usr/bin/git\\\"\\r\\n\\t\\\"git.allowForcePush\\\": true,\\r\\n\\r\\n\\t\\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\",\\r\\n\\t\\\"prettier.tabWidth\\\": 4,\\r\\n\\t\\\"prettier.printWidth\\\": 120,\\r\\n\\t\\\"prettier.useTabs\\\": true\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 1.3.3 自訂 shortcut 配置\\r\\n\\r\\n撳左下角既 Manage 掣 > Keyboard Shortcuts，然後右上角既 Open Keyboard Shortcuts (JSON) 掣。\\r\\n\\r\\n以下係我既自訂 shortcut 配置：\\r\\n\\r\\n```json\\r\\n[\\r\\n\\t{\\r\\n\\t\\t\\\"key\\\": \\\"ctrl+d\\\", // macOS: cmd+d\\r\\n\\t\\t\\\"command\\\": \\\"editor.action.deleteLines\\\",\\r\\n\\t\\t\\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"key\\\": \\\"ctrl+shift+k\\\", // macOS: cmd+shift+k\\r\\n\\t\\t\\\"command\\\": \\\"-editor.action.deleteLines\\\",\\r\\n\\t\\t\\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"key\\\": \\\"ctrl+alt+up\\\",\\r\\n\\t\\t\\\"command\\\": \\\"editor.action.copyLinesUpAction\\\",\\r\\n\\t\\t\\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"key\\\": \\\"shift+alt+up\\\",\\r\\n\\t\\t\\\"command\\\": \\\"-editor.action.copyLinesUpAction\\\",\\r\\n\\t\\t\\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"key\\\": \\\"ctrl+alt+down\\\",\\r\\n\\t\\t\\\"command\\\": \\\"editor.action.copyLinesDownAction\\\",\\r\\n\\t\\t\\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"key\\\": \\\"shift+alt+down\\\",\\r\\n\\t\\t\\\"command\\\": \\\"-editor.action.copyLinesDownAction\\\",\\r\\n\\t\\t\\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"key\\\": \\\"ctrl+right\\\", // macOS: alt+right\\r\\n\\t\\t\\\"command\\\": \\\"cursorWordPartRight\\\",\\r\\n\\t\\t\\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"key\\\": \\\"ctrl+shift+right\\\", // macOS: shift+alt+right\\r\\n\\t\\t\\\"command\\\": \\\"cursorWordPartRightSelect\\\",\\r\\n\\t\\t\\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"key\\\": \\\"ctrl+left\\\", // macOS: alt+left\\r\\n\\t\\t\\\"command\\\": \\\"cursorWordPartLeft\\\",\\r\\n\\t\\t\\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"key\\\": \\\"ctrl+shift+left\\\", // macOS: shift+alt+left\\r\\n\\t\\t\\\"command\\\": \\\"cursorWordPartLeftSelect\\\",\\r\\n\\t\\t\\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"key\\\": \\\"ctrl+backspace\\\", // macOS: alt+backspace\\r\\n\\t\\t\\\"command\\\": \\\"deleteWordPartLeft\\\",\\r\\n\\t\\t\\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"key\\\": \\\"ctrl+shift+backspace\\\", // macOS: alt+delete\\r\\n\\t\\t\\\"command\\\": \\\"deleteWordPartRight\\\",\\r\\n\\t\\t\\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"key\\\": \\\"ctrl+delete\\\", // macOS: alt+delete\\r\\n\\t\\t\\\"command\\\": \\\"-deleteWordRight\\\",\\r\\n\\t\\t\\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"key\\\": \\\"ctrl+,\\\", // macOS: cmd+,\\r\\n\\t\\t\\\"command\\\": \\\"-workbench.action.openSettings\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"key\\\": \\\"ctrl+,\\\", // macOS: cmd+,\\r\\n\\t\\t\\\"command\\\": \\\"workbench.action.openSettingsJson\\\"\\r\\n\\t}\\r\\n]\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 1.4 安裝 Create-React-App（必須）\\r\\n\\r\\nReact 有一個 npm package 可以幫我地快速生成一個 React project 既 template。\\r\\n\\r\\n安裝 npm package 既 command：\\r\\n\\r\\n```bash\\r\\nnpm install -g create-react-app\\r\\n```\\r\\n\\r\\n或者用 `install` 既 short form —— `i`：\\r\\n\\r\\n```bash\\r\\nnpm i -g create-react-app\\r\\n```\\r\\n\\r\\n`-g` 係 global 既意思，即係我地呢個 package 並唔係跟 project（喺 `package.json` 既 dependencies），而係一個「安裝喺我地系統既程式」既存在。\\r\\n\\r\\n### 1.4.1 快速生成 project template\\r\\n\\r\\n執行以下 command：\\r\\n\\r\\n```bash\\r\\ncreate-react-app my-sample-react-project\\r\\n```\\r\\n\\r\\n之後 Create-React-App 就會喺 console（Windows Command Prompt、macOS Terminal 等）現時既路徑生成一個 `my-sample-react-project` folder，裡面有齊曬一個 React project 需要既野，包括 `node_modules`。\\r\\n\\r\\n---\\r\\n\\r\\n### 1.4.2 試行 React project template\\r\\n\\r\\n生成左之後，喺 project root folder 行以下 command：\\r\\n\\r\\n```bash\\r\\nnpm start\\r\\n```\\r\\n\\r\\n### 1.4.3 了解 React project template 內既文件\\r\\n\\r\\n| 檔案／folder            | 用途                                                                                                                                                                                                                                                                                                     |\\r\\n| ----------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n| `package.json`          | 呢個 project 要用到既 npm packages 都寫曬喺度，每當我地執行 `npm i`，Node.js package manager（npm）就會根據呢個檔案內既 dependency npm packages 生成 `package-lock.json`，然後下載所有 JavaScript libraries 到 `node_modules` folder                                                                     |\\r\\n| `package-lock.json`     | 如果想更新所有呢個 project 用到既 npm packages 佢地背後既 dependency npm packages，咁我地可以刪除呢個檔案，但就有可能會因為後面既一啲 JavaScript libraries 更新之後有 bug 而令到個 project 既 behavior 唔同左或者有野無意之間 break 左，所以刪除之前要諗清楚，刪除之後都要試清楚                         |\\r\\n| `node_modules`          | 我地呢個 project 用到既 JavaScript libraries，呢啲檔案都係喺 npm 既 public registry 度下載落黎，至於佢個 registry 有冇畀人 hack 過，有冇惡意代碼，到底可唔可信，呢一點就要自己考慮                                                                                                                       |\\r\\n| `src`                   | 呢個 project 既所有 JavaScript source code，裡面有 Create-React-App 生成出黎既 Hello World                                                                                                                                                                                                               |\\r\\n| `public`                | 呢個 HTML project 既公開文件，瀏覽呢個網站既用戶可以透過 `<host>/<文件名>` URL 下載到                                                                                                                                                                                                                    |\\r\\n| `.git`（hidden folder） | 係 Git 用黎 version control 呢個 folder 用既一啲 metadata。如果唔需要用 Git 做 version control，可以刪除。如果冇呢個 folder 而又想用 Git，可以執行 `git init` 生成。如果係 `git clone` 落黎既 project，Git 會自動生成 `.git`，commit 然後 push 就可以直接改到 remote repository 上既 project source code |\\r\\n| `.gitignore`            | Git ignore 係我地話畀 Git 知我地邊啲 pattern 既 files 或者 folders 唔應該畀 Git 做 version control，例如 `node_modules` 呢個 folder 裡面既 JavaScript libraries 都係根據 `package-lock.json` 下載落黎／洐生出黎，咁我地冇必要 commit `node_modules` 上 Git repo                                          |\\r\\n| `README.md`             | Markdown 格式既 project readme 檔案，GitHub、GitLab 等等既 repository 首頁會顯示呢個檔案，可以用 Visual Studio Code 編輯 Markdown 檔案，右上角有個按鈕可以 side-by-side 一邊打字一邊睇結果                                                                                                               |\\r\\n\\r\\n#### 1.4.3.1 了解 `src` 內既文件\\r\\n\\r\\n`src` folder 裡面既文件以 JavaScript `.js` 檔為主，亦都有啲 CSS `.css` 檔案：\\r\\n\\r\\n| 檔案        | 用途|\\r\\n| ----------- ||\\r\\n| `index.js`  | 網頁既入口。唔用 React/Angular/Vue 既話，一個最 basic 最 vanilla 最 minimal 既網頁只需要一個 `index.html` 檔案，而我地 `public/index.html` 就係呢個檔案。但係 React/Angular/Vue 呢啲 modern web development library/framework 係 rely on JavaScript 去 call `document.createElement(...)`，然後改左 `index.html` 上面既一個特定 `id` 既 DOM element（React：`<div id=\\\"root\\\"></div>`） 做我地 `index.js` 寫既 `<App />`，所以我地係唔需要改 `public/index.html` 裡面既 `<body>` 裡面既任何野，要改就改 `index.js` 裡面會顯示既 `<App />`，亦即係 `src/App.js` |\\r\\n| `index.css` | 呢個係 global 既|\\r\\n| `App.js`    | 呢個網頁既 root element，一開始由 Create-React-App 生成出黎，可以清空                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\\r\\n| `App.css`   | `App.js` 會 import 呢張 CSS stylesheet|\\r\\n\\r\\n至於其他檔案，例如 `App.test.js`、`reportWebVitals.js`、`setupTests.js`，佢地就唔太重要，純粹 for testing，可以刪除。`logo.svg` 就係 Create-React-App 生成既 template 既 Hello World，清空左 `App.js` 之後可以刪除。\\r\\n\";","export default \"# 1 關於 Lombok\\r\\n\\r\\n一般黎講，我地多數會喺啲只有 properties 既 VO（value object）、DTO（data transfer object）、entity classes 上使用 Lombok。\\r\\n\\r\\n呢啲 classes 有以下既特徵：\\r\\n\\r\\n-   有好多 properties，如 `private` 或 `protected` 既非 `static` properties，但絕對唔會係 `public`（除非冇跟到 best practice）\\r\\n-   至少有一個 constructor\\r\\n-   容許我地建立多個 objects（換言之呢個 class 唔可以係 singleton）\\r\\n-   每個 property 都有對應既 getter（`get` 開頭，冇 parameter，有 return type，如 `String getName()`），而如果係 mutable class 就會有埋 setter（`set` 開頭，有 parameter，`void` return type，如 `void setName(String name)`），呢啲 getters/setters 都係 `public`，應該佔呢個 class 既 methods 既大部分，而 getters/setters 其實用 Eclipse 都可以 gen 到出黎，所以被稱為 boilerplate code\\r\\n\\r\\n## 1.1 唔用 Lombok 既例子\\r\\n\\r\\n```java\\r\\npublic class Person {\\r\\n    private String firstName;\\r\\n    private String lastName;\\r\\n\\r\\n    public String getFirstName() {\\r\\n        return firstName;\\r\\n    }\\r\\n\\r\\n    public String getLastName() {\\r\\n        return lastName;\\r\\n    }\\r\\n\\r\\n    public void setFirstName(String firstName) {\\r\\n        this.firstName = firstName;\\r\\n    }\\r\\n\\r\\n    public void setLastName(String lastName) {\\r\\n        this.lastName = lastName;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 1.2 用左 Lombok 既例子\\r\\n\\r\\n以下例子用左 `@Getter` 同 `@Setter` 黎為所有 properties 去 gen getters 同 setters，以及 `@FieldDefaults(level = PRIVATE)` 去為所有 properties 加上 `private` 既 access modifier。\\r\\n\\r\\n```java\\r\\n@Getter\\r\\n@Setter\\r\\n@FieldDefaults(level = PRIVATE)\\r\\npublic class Person {\\r\\n    String firstName;\\r\\n    String lastName;\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 2 喺 Eclipse 安裝 Lombok\\r\\n\\r\\n先去 [Lombok 官網下載 JAR 檔](https://projectlombok.org/download)。\\r\\n\\r\\nDouble click 個 JAR 檔，選擇 Eclipse 既安裝路徑，然後完成安裝。\\r\\n\\r\\n最後，重新開啟 Eclipse。\\r\\n\\r\\n---\\r\\n\\r\\n# 3 正式使用 Lombok\\r\\n\\r\\n## 3.1 添加 Maven dependencies\\r\\n\\r\\n`pom.xml` 裡面需要以下 dependency：\\r\\n\\r\\n```xml\\r\\n<dependency>\\r\\n    <groupId>org.projectlombok</groupId>\\r\\n    <artifactId>lombok</artifactId>\\r\\n    <version>1.18.24</version>\\r\\n    <scope>provided</scope>\\r\\n</dependency>\\r\\n\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 寫 Java code\\r\\n\\r\\n```java\\r\\n@Getter\\r\\n@Setter\\r\\n@FieldDefaults(level = PRIVATE)\\r\\npublic class Person {\\r\\n    String firstName;\\r\\n    String lastName;\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.3 喺 Eclipse 查看 Outline\\r\\n\\r\\nEclipse 會話畀我地知我地既 properties 實際上係 `private` 同埋呢個 class 有咩 methods，我地應該會見到對應既 getters 同 setters 都已經 gen 左出黎。\\r\\n\\r\\n雖然個 class 既 source code 睇唔到有 getters/setters，但因為 Lombok 已經喺 compile time 幫我地 gen 左 code，所以其實同我地自己寫既 code 冇任何分別。\\r\\n\\r\\n![](blog/2020-10/using-lombok/eclipse-outline.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 3.4 運用 Lombok generate 出黎既 code\\r\\n\\r\\n試驗一下 Lombok gen 出黎同自己寫既有冇分別，毫不意外地 Eclipse 正常 compile 到，冇報任何 error，而運行程式都可以正常咁 call 到 setters 去 set properties、call 到 getters 去 get 返出黎。\\r\\n\\r\\n![](blog/2020-10/using-lombok/use-lombok-generated-code.png)\\r\\n\\r\\n---\\r\\n\\r\\n# 4 更多 Lombok annotations\\r\\n\\r\\nLombok 有以下既 annotations 都好有用：\\r\\n\\r\\n| Lombok annotation          | 描述                                                                                                                                                                                                                                                                                                                                                                                | 參考                                                                  |\\r\\n| -------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------- |\\r\\n| `@Getter`                  | 根據 properties 去 gen getters                                                                                                                                                                                                                                                                                                                                                      | [官網](https://projectlombok.org/features/GetterSetter)               |\\r\\n| `@Setter`                  | 根據 properties 去 gen setters，可以加上 `chain = true` 去令 setters 既 return type 由 `void` 改為個 property 屬於既 class，從而支援 method chaining（`new Person().setFirstName(\\\"Michael\\\").setLastName(\\\"Chung\\\")`）                                                                                                                                                                 | [官網](https://projectlombok.org/features/GetterSetter)               |\\r\\n| `@ToString`                | 根據 properties 去 gen `toString` method                                                                                                                                                                                                                                                                                                                                            | [官網](https://projectlombok.org/features/ToString)                   |\\r\\n| `@EqualsAndHashCode`       | 根據 properties 去 gen `equals` 及 `hashCode` methods                                                                                                                                                                                                                                                                                                                               | [官網](https://projectlombok.org/features/EqualsAndHashCode)          |\\r\\n| `@Data`                    | 懶人包——包括曬 `@ToString`、`@EqualsAndHashCode`、`@Getter`、`@Setter` 及 `@RequiredArgsConstructor`                                                                                                                                                                                                                                                                                | [官網](https://projectlombok.org/features/Data)                       |\\r\\n| `@Value`                   | 懶人包（immutable 版）——包括曬 `@ToString`、`@EqualsAndHashCode`、`@AllArgsConstructor`、`@FieldDefaults(makeFinal = true, level = PRIVATE)` 及 `@Getter`，而呢個 class 都會係 `final`                                                                                                                                                                                              | [官網](https://projectlombok.org/features/Value)                      |\\r\\n| `@Builder`                 | 根據 properties 去 gen 一個 inner class 叫 `XxxBuilder`（如 `PersonBuilder`），builder class 裡面有非 `set` 開頭既 setters 同一個 `build` method，畀我地用 builder 黎 construct objects，從而做到 builder pattern，亦支援 method chaining                                                                                                                                           | [官網](https://projectlombok.org/features/Builder)                    |\\r\\n| `@FieldDefaults`           | 為啲冇 access modifier（default）既 properties 加上 access modifier，如 `private`                                                                                                                                                                                                                                                                                                   | [官網](https://projectlombok.org/features/experimental/FieldDefaults) |\\r\\n| `@NoArgsConstructor`       | Gen 一個冇 argument 既 constructor，如 `public Person() {}`                                                                                                                                                                                                                                                                                                                         | [官網](https://projectlombok.org/features/constructor)                |\\r\\n| `@RequiredArgsConstructor` | 根據 class 內 `final` 或 `@NonNull` 既 properties 去 gen 一個 constructor                                                                                                                                                                                                                                                                                                           | [官網](https://projectlombok.org/features/constructor)                |\\r\\n| `@AllArgsConstructor`      | Gen 一個有齊所有 properties 既 constructor                                                                                                                                                                                                                                                                                                                                          | [官網](https://projectlombok.org/features/constructor)                |\\r\\n| `@Slf4j`                   | Gen 一個 `static` 既 Slf4j `log` object 出黎，for 出 log 用（一般都係用 `log.debug` 或 `log.info` 代替 `System.out.println`，用 `log.warn` 或 `log.error` 代替 `System.err.println`），而個 project 需要 `org.slf4j` 既 `slf4j-api` 及 `ch.qos.logback` 既 `logback-classic` 兩個 dependencies。另外，我地可以喺 `main/resources` 度加個 `logback.xml` 檔黎設定 Logback，例子喺下面 | [官網](https://projectlombok.org/features/log)                        |\\r\\n\\r\\n`logback.xml`：\\r\\n\\r\\n```xml\\r\\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\r\\n<configuration>\\r\\n\\r\\n    <property name=\\\"LOG_FOLDER\\\" value=\\\"logs\\\" />\\r\\n    <property name=\\\"LOG_FILE\\\" value=\\\"app\\\" />\\r\\n    <property name=\\\"STYLE_LOG_PATTERN\\\" value=\\\"%magenta(%d{yyyy-MM-dd HH:mm:ss.SSS}) %highlight(%-5level) [%-5t] %cyan(%-50.50replace(%replace(%caller{1}){'Caller.*?at ', 'at '}){'(\\\\r)?\\\\n', ''}) - %msg%n\\\" />\\r\\n    <property name=\\\"PLAIN_LOG_PATTERN\\\" value=\\\"%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%-5t] %-50.50replace(%replace(%caller{1}){'Caller.*?at ', 'at '}){'(\\\\r)?\\\\n', ''} - %msg%n\\\" />\\r\\n\\r\\n\\r\\n\\r\\n    <appender name=\\\"STDOUT\\\" class=\\\"ch.qos.logback.core.ConsoleAppender\\\">\\r\\n        <layout class=\\\"ch.qos.logback.classic.PatternLayout\\\">\\r\\n            <Pattern>${STYLE_LOG_PATTERN}</Pattern>\\r\\n        </layout>\\r\\n    </appender>\\r\\n\\r\\n\\r\\n\\r\\n    <appender name=\\\"FILE\\\" class=\\\"ch.qos.logback.core.rolling.RollingFileAppender\\\">\\r\\n        <file>${LOG_FOLDER}/${LOG_FILE}.log</file>\\r\\n        <encoder class=\\\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\\\">\\r\\n            <Pattern>${PLAIN_LOG_PATTERN}</Pattern>\\r\\n        </encoder>\\r\\n\\r\\n        <rollingPolicy class=\\\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\\\">\\r\\n            <!-- rollover daily -->\\r\\n            <fileNamePattern>${LOG_FOLDER}/archived/${LOG_FILE}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>\\r\\n            <timeBasedFileNamingAndTriggeringPolicy class=\\\"ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP\\\">\\r\\n                <maxFileSize>10MB</maxFileSize>\\r\\n            </timeBasedFileNamingAndTriggeringPolicy>\\r\\n        </rollingPolicy>\\r\\n    </appender>\\r\\n\\r\\n\\r\\n\\r\\n    <root level=\\\"info\\\">\\r\\n        <appender-ref ref=\\\"STDOUT\\\" />\\r\\n        <appender-ref ref=\\\"FILE\\\" />\\r\\n    </root>\\r\\n\\r\\n</configuration>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 5 Lombok 配置檔\\r\\n\\r\\n我地可以喺 project root folder 新增一個 `lombok.config` 檔，然後根據上述官網提及既 config properties 黎設定呢個 project 既 Lombok。\\r\\n\\r\\n`lombok.config` 檔既例子：\\r\\n\\r\\n```properties\\r\\nlombok.getter.noIsPrefix=true\\r\\nlombok.accessors.chain=true\\r\\n```\\r\\n\\r\\n以上 config 帶黎既效果：\\r\\n\\r\\n-   `@Getter` 為 property `boolean exist` gen 出黎既 getter 就會係 `getExist` 而唔係 `isExist`\\r\\n-   `@Setter` 為 property `boolean exist` gen 出黎既 setter 既 return type 就會係個 property 屬於既 class 而唔係 `void`\\r\\n\\r\\n---\\r\\n\\r\\n# 6 Spring Boot Maven Plugin：JAR 檔排除 Lombok\\r\\n\\r\\n如果我地喺 Spring Boot projects 裡面用 `spring-boot-maven-plugin`，我地唔需要 Lombok dependency 出現喺最終果個 artifact JAR 檔裡面。\\r\\n\\r\\n咁係因為 compile 階段已經 generate 曬啲 code，所以最終果個 artifact JAR 檔裡面既 Lombok JAR 檔就再冇利用價值。\\r\\n\\r\\n不過，用 Maven `<dependency>` 既 `<scope>provided</scope>` 係唔會 work，因為我地喺 Maven `package` phase 裡面用左 Spring Boot Maven plugin 既 `repackage` goal，佢依然係會將所有 dependencies 既 JAR 檔打包喺 `BOOT-INF/lib` 裡面。\\r\\n\\r\\n要解決呢個問題，我地就要自行配置 Spring Boot Maven plugin 去 exclude 佢：\\r\\n\\r\\n```xml\\r\\n<build>\\r\\n    <plugins>\\r\\n        <plugin>\\r\\n            <groupId>org.springframework.boot</groupId>\\r\\n            <artifactId>spring-boot-maven-plugin</artifactId>\\r\\n            <executions>\\r\\n                <execution>\\r\\n                    <goals>\\r\\n                        <goal>repackage</goal>\\r\\n                    </goals>\\r\\n                </execution>\\r\\n            </executions>\\r\\n            <configuration>\\r\\n                <excludes>\\r\\n                    <exclude>\\r\\n                        <groupId>org.projectlombok</groupId>\\r\\n                        <artifactId>lombok</artifactId>\\r\\n                    </exclude>\\r\\n                </excludes>\\r\\n            </configuration>\\r\\n        </plugin>\\r\\n    </plugins>\\r\\n</build>\\r\\n```\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Maven 官網 - A Build Lifecycle is Made Up of Phases](http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#a-build-lifecycle-is-made-up-of-phases)\\r\\n-   [Spring Boot Maven plugin 官網 - Packaging Executable Archives](https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#packaging)\\r\\n-   [Spring Boot Maven plugin 官網 - Dependency Exclusion](https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#packaging.examples.exclude-dependency)\\r\\n\\r\\n---\\r\\n\\r\\n# 7 Java 14 既 `record`\\r\\n\\r\\nJava 14 新加既 `record` type 嘗試做緊部分 Lombok 既功能。\\r\\n\\r\\n`record` 會 gen 到以下既野：\\r\\n\\r\\n-   `equals` method\\r\\n-   `hashCode` method\\r\\n-   `toString` method\\r\\n-   `private` access modifier\\r\\n-   `final` modifier\\r\\n-   `public` constructor\\r\\n\\r\\n參考文章：[Java 14 Record Keyword](https://www.baeldung.com/java-record-keyword)\\r\\n\";","export default \"# 3 動手使用 Selenium/Selenide 抓取動態網頁\\r\\n\\r\\n## 3.1 幾時用 Selenium/Selenide\\r\\n\\r\\nSelenium 係一個用黎測試網頁既 testing library，但係佢既 use case 其實不限於做測試，可以用喺不同既網頁自動化流程上。\\r\\n\\r\\n至於 Selenide 就係基於 Selenium 再擴充 API 既 library。\\r\\n\\r\\nSelenium、Selenide 同上述既 jsoup 一樣，都係擁有強大既 API 畀我地根據 HTML source 既 tags 同各種 attributes 去定位 DOM node，但因為佢地係用瀏覽器既 driver（由瀏覽器官方開發者提供）去駁住一個實實在在咁運行緊既瀏覽器，所以佢會額外有「等待直至頁面出現 DOM node」（出現左喺 DOM，或者要視覺上顯示左）既功能。\\r\\n\\r\\n用 Selenium/Selenide 比用 jsoup 既好處係，我地除左用 jsoup 都支援既所有方法之外，仲可以用 XPath 黎定位 DOM node。XPath 同 CSS selector 類似，但功能上更強大。其中主要既分別有：\\r\\n\\r\\n-   XPath 可以用 `text()` 黎根據字眼定位 DOM node；相反，CSS selector 就冇辦法根據字眼黎定位 DOM node\\r\\n-   XPath 可以用 `/..`、`/parent::*`、`/ancestor::*` 黎返返上上一層或上幾層（parent/ancstor node）；相反，CSS selector 就冇辦法返返去 parent/ancestor node，只能由上至下咁 navigate DOM tree\\r\\n\\r\\n注意 Selenium/Selenide 因為要駁住瀏覽器，所以會明顯慢過 jsoup fetch 完網頁然後 parse，所以如果 jsoup 夠做就用 jsoup 做，要 handle JavaScript 先好用 Selenium/Selenide。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 需求情境\\r\\n\\r\\n為左簡單咁示範我地必須用 Selenium/Selenide 而唔可以用 jsoup 黎抓取資料，用呢個 e-portfolio 網站黎做例子就最好不過，因為呢個 e-portfolio 網站係用 React JS 寫既冇 server-side rendering 既網站，必須要有 JavaScript 先可以喺 user 瀏覽果刻即時令 DOM tree 出現到本身寫既 components。\\r\\n\\r\\n今次我地想要寫一個程式，去我既 e-portfolio 既 All Blog Posts 頁面上面，睇下有冇新既 blog post。假設呢個程式會定時自動喺背景執行，我地要做既就係處理網頁上既資訊，搵出所有 blog post 既標題。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.3 分析\\r\\n\\r\\n呢個 e-portfolio 網站 All Blog Posts 既網址係 [https://blackr1234.github.io/eportfolio/#/blog/](https://blackr1234.github.io/eportfolio/#/blog/)。\\r\\n\\r\\n從頁面可以睇到，只有一個位置提供 blog post 標題既資訊。\\r\\n\\r\\n![](blog/2020-10/web-scraping-with-selenide/blog-post-header.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 3.4 添加 Maven dependencies\\r\\n\\r\\n`pom.xml` 裡面需要以下 dependency：\\r\\n\\r\\n```xml\\r\\n<dependency>\\r\\n    <groupId>com.codeborne</groupId>\\r\\n    <artifactId>selenide</artifactId>\\r\\n    <version>5.15.1</version>\\r\\n</dependency>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.5 寫 Java code\\r\\n\\r\\n### 3.5.1 如果使用 jsoup 下載網頁 HTML 會如何？\\r\\n\\r\\n參考返上次既 [「網頁抓取（一） - jsoup - 下載網頁 HTML」](/blog/web-scraping-with-jsoup#251-%E4%B8%8B%E8%BC%89%E7%B6%B2%E9%A0%81-html)，如果我地用同樣既 code 黎下載網頁其實又得唔得呢？\\r\\n\\r\\n```java\\r\\npublic class Main {\\r\\n\\r\\n    public static void main(String[] args) throws Exception {\\r\\n\\r\\n        final Document doc = Jsoup.connect(\\\"https://blackr1234.github.io/eportfolio/#/blog/\\\").get();\\r\\n        final String html = doc.body().html();\\r\\n\\r\\n        System.out.println(html);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n我地睇下下載返黎既係咩 HTML source…非常可惜，今次我地用 jsoup 係唔 work 既，因為冇 JavaScript engine 既關係，jsoup 執行唔到 JavaScript，就冇辦法令本身既內容出現喺 HTML source 度。\\r\\n\\r\\n```xml\\r\\n<noscript>\\r\\n You need to enable JavaScript to run this app.\\r\\n</noscript>\\r\\n<div id=\\\"root\\\"></div>\\r\\n<script>!function(e){function r(r){for(var n,l,f=r[0],i=r[1],p=r[2],c=0,s=[];c<f.length;c++)l=f[c],Object.prototype.hasOwnProperty.call(o,l)&&o[l]&&s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n]);for(a&&a(r);s.length;)s.shift()();return u.push.apply(u,p||[]),t()}function t(){for(var e,r=0;r<u.length;r++){for(var t=u[r],n=!0,f=1;f<t.length;f++){var i=t[f];0!==o[i]&&(n=!1)}n&&(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(e,\\\"__esModule\\\",{value:!0})},l.t=function(e,r){if(1&r&&(e=l(e)),8&r)return e;if(4&r&&\\\"object\\\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,\\\"default\\\",{enumerable:!0,value:e}),2&r&&\\\"string\\\"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(r,\\\"a\\\",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p=\\\"/eportfolio/\\\";var f=this.webpackJsonpeportfolio=this.webpackJsonpeportfolio||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var p=0;p<f.length;p++)r(f[p]);var a=i;t()}([])</script>\\r\\n<script src=\\\"/eportfolio/static/js/2.aa0813bd.chunk.js\\\"></script>\\r\\n<script src=\\\"/eportfolio/static/js/main.c5cc27be.chunk.js\\\"></script>\\r\\n```\\r\\n\\r\\n### 3.5.2 使用 Selenide 下載網頁 HTML\\r\\n\\r\\n我地先寫到佢可以下載到 All Blog Posts 頁既 HTML：\\r\\n\\r\\n```java\\r\\npublic class Main {\\r\\n\\r\\n    public static void main(String[] args) throws Exception {\\r\\n\\r\\n        Selenide.open(\\\"https://blackr1234.github.io/eportfolio/#/blog/\\\");\\r\\n        System.out.println(WebDriverRunner.source());\\r\\n        Selenide.closeWebDriver();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n運行程式，我地可以得到以下結果。因為用左 HTML formatter 所以先係 pretty format。\\r\\n\\r\\n我地可以見到已經有曬我地要既 blog post 標題。\\r\\n\\r\\n```xml\\r\\n<html lang=\\\"en\\\">\\r\\n    <head>\\r\\n        <meta charset=\\\"utf-8\\\">\\r\\n        <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\">\\r\\n        <link rel=\\\"shortcut icon\\\" href=\\\"/eportfolio/favicon.ico\\\">\\r\\n        <link rel=\\\"apple-touch-icon\\\" sizes=\\\"180x180\\\" href=\\\"/eportfolio/apple-touch-icon.png\\\">\\r\\n        <link rel=\\\"icon\\\" type=\\\"image/png\\\" sizes=\\\"32x32\\\" href=\\\"/eportfolio/favicon-32x32.png\\\">\\r\\n        <link rel=\\\"icon\\\" type=\\\"image/png\\\" sizes=\\\"16x16\\\" href=\\\"/eportfolio/favicon-16x16.png\\\">\\r\\n        <link rel=\\\"mask-icon\\\" href=\\\"/eportfolio/safari-pinned-tab.svg\\\" color=\\\"#5bbad5\\\">\\r\\n        <link rel=\\\"manifest\\\" href=\\\"/eportfolio/manifest.json\\\">\\r\\n        <meta name=\\\"msapplication-TileColor\\\" content=\\\"#da532c\\\">\\r\\n        <meta name=\\\"theme-color\\\" content=\\\"#f8bbd0\\\">\\r\\n        <title>Michael Chung's e-Portfolio</title>\\r\\n        <link href=\\\"/eportfolio/static/css/2.e4bde519.chunk.css\\\" rel=\\\"stylesheet\\\">\\r\\n        <link href=\\\"/eportfolio/static/css/main.5f04d1e0.chunk.css\\\" rel=\\\"stylesheet\\\">\\r\\n        <style data-styled=\\\"active\\\" data-styled-version=\\\"5.2.0\\\"></style>\\r\\n    </head>\\r\\n    <body data-aos-easing=\\\"ease\\\" data-aos-duration=\\\"500\\\" data-aos-delay=\\\"0\\\">\\r\\n        <noscript>You need to enable JavaScript to run this app.</noscript>\\r\\n        <div id=\\\"root\\\">\\r\\n            <a href=\\\"#/blog/\\\"><button class=\\\"ui yellow big circular compact icon button sc-fnVYJo aqTZb\\\" style=\\\"opacity: 0; pointer-events: none;\\\"><i aria-hidden=\\\"true\\\" class=\\\"chevron up icon\\\"></i></button></a>\\r\\n            <div class=\\\"sc-fFSRdu iimMZr\\\" style=\\\"opacity: 1;\\\"><span class=\\\"sc-iemXMA KstKn top\\\"></span><span class=\\\"sc-iemXMA KstKn middle\\\"></span><span class=\\\"sc-iemXMA KstKn bottom\\\"></span></div>\\r\\n            <div class=\\\"sc-bkbjAj gDLPQT\\\" style=\\\"opacity: 1;\\\"></div>\\r\\n            <div id=\\\"nav-menu-buttons-background\\\" class=\\\"sc-dIvqjp ciTSxc\\\"></div>\\r\\n            <div class=\\\"sc-hBMVcZ hahZCc\\\">\\r\\n                <nav>\\r\\n                    <ul>\\r\\n                        <li data-is-nav-menu-open=\\\"false\\\"><a class=\\\"code\\\" href=\\\"#/\\\">Home</a></li>\\r\\n                        <li data-is-nav-menu-open=\\\"false\\\"><a class=\\\"code\\\" href=\\\"#/workExp\\\">Work Experiences</a></li>\\r\\n                        <li data-is-nav-menu-open=\\\"false\\\"><a class=\\\"code\\\" href=\\\"#/hobbyProject\\\">Hobby Projects</a></li>\\r\\n                        <li data-is-nav-menu-open=\\\"false\\\"><a class=\\\"code\\\" href=\\\"#/personality\\\">Personality</a></li>\\r\\n                        <li data-is-nav-menu-open=\\\"false\\\"><a class=\\\"code\\\" href=\\\"#/blog\\\">Blog</a></li>\\r\\n                    </ul>\\r\\n                </nav>\\r\\n            </div>\\r\\n            <div style=\\\"width: 100%; opacity: 1; transition: all 250ms ease 0s;\\\">\\r\\n                <div class=\\\"sc-bdnylx jMhaxE\\\"><code class=\\\"sc-gtssRu gmjWml\\\">Chung Cheuk Hang Michael</code><code class=\\\"sc-dlnjPT cuIYFB\\\">Web Developer</code></div>\\r\\n                <div class=\\\"sc-hKFyIo bdDYJz\\\" style=\\\"padding-bottom: 1em;\\\">\\r\\n                    <div class=\\\"ui text center aligned container\\\">\\r\\n                        <div class=\\\"ui tiny borderless compact inverted stackable four item menu\\\">\\r\\n                            <a draggable=\\\"false\\\" class=\\\"blue item\\\" href=\\\"#/\\\" style=\\\"text-align: center;\\\">Home</a>\\r\\n                            <div role=\\\"listbox\\\" aria-expanded=\\\"false\\\" class=\\\"ui item simple dropdown\\\" tabindex=\\\"0\\\">\\r\\n                                <div aria-atomic=\\\"true\\\" aria-live=\\\"polite\\\" role=\\\"alert\\\" class=\\\"divider text\\\">My Experiences</div>\\r\\n                                <i aria-hidden=\\\"true\\\" class=\\\"dropdown icon\\\"></i>\\r\\n                                <div class=\\\"menu transition\\\"><a draggable=\\\"false\\\" role=\\\"option\\\" aria-checked=\\\"false\\\" class=\\\"item\\\" href=\\\"#/workExp\\\" style=\\\"text-align: center;\\\">Work</a><a draggable=\\\"false\\\" role=\\\"option\\\" aria-checked=\\\"false\\\" class=\\\"item\\\" href=\\\"#/hobbyProject\\\" style=\\\"text-align: center;\\\">Hobby Projects</a></div>\\r\\n                            </div>\\r\\n                            <a draggable=\\\"false\\\" class=\\\"purple item\\\" href=\\\"#/personality\\\" style=\\\"text-align: center;\\\">Personality</a><a draggable=\\\"false\\\" class=\\\"teal item\\\" href=\\\"#/blog\\\" style=\\\"text-align: center;\\\">Blog</a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"sc-hKFyIo bdDYJz\\\">\\r\\n                    <div class=\\\"ui huge header\\\">All Blog Posts</div>\\r\\n                    <div class=\\\"ui section divider\\\"></div>\\r\\n                    <div class=\\\"ui vertical segment\\\">\\r\\n                        <div class=\\\"ui divided relaxed items sc-iqAbSa gfcIZQ\\\">\\r\\n                            <div class=\\\"item\\\">\\r\\n                                <a class=\\\"ui tiny image\\\" href=\\\"#/blog/git-basics\\\" style=\\\"margin: auto;\\\"><img src=\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Git-logo.svg/1280px-Git-logo.svg.png\\\"></a>\\r\\n                                <div class=\\\"content\\\">\\r\\n                                    <a class=\\\"header\\\" href=\\\"#/blog/git-basics\\\">Git 基本操作</a>\\r\\n                                    <div class=\\\"meta\\\"><span>2020-09-27</span></div>\\r\\n                                    <div class=\\\"description\\\">如何使用 Git 既基本 commands 進行版本控制</div>\\r\\n                                    <div class=\\\"extra\\\">\\r\\n                                        <a class=\\\"ui pink basic compact right floated button\\\" role=\\\"button\\\" href=\\\"#/blog/git-basics\\\">Continue reading<i aria-hidden=\\\"true\\\" class=\\\"right chevron icon\\\"></i></a>\\r\\n                                        <div class=\\\"sc-eCApGN htLRdL\\\">\\r\\n                                            <div class=\\\"ui labels\\\"><a class=\\\"ui orange label\\\"><i aria-hidden=\\\"true\\\" class=\\\"github icon\\\"></i>Git</a></div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"item\\\">\\r\\n                                <a class=\\\"ui tiny image\\\" href=\\\"#/blog/web-scraping\\\" style=\\\"margin: auto;\\\"><img src=\\\"https://selenide.org/images/selenide-logo-big.png\\\"></a>\\r\\n                                <div class=\\\"content\\\">\\r\\n                                    <a class=\\\"header\\\" href=\\\"#/blog/web-scraping\\\">網頁抓取（Web scraping）</a>\\r\\n                                    <div class=\\\"meta\\\"><span>2020-09-26</span></div>\\r\\n                                    <div class=\\\"description\\\">如何使用 jsoup 及 Selenium/Selenide 工具抓取網頁，喺網頁獲取有用資訊</div>\\r\\n                                    <div class=\\\"extra\\\">\\r\\n                                        <a class=\\\"ui pink basic compact right floated button\\\" role=\\\"button\\\" href=\\\"#/blog/web-scraping\\\">Continue reading<i aria-hidden=\\\"true\\\" class=\\\"right chevron icon\\\"></i></a>\\r\\n                                        <div class=\\\"sc-eCApGN htLRdL\\\">\\r\\n                                            <div class=\\\"ui labels\\\"><a class=\\\"ui blue label\\\"><i aria-hidden=\\\"true\\\" class=\\\"code icon\\\"></i>Java</a><a class=\\\"ui brown label\\\"><i aria-hidden=\\\"true\\\" class=\\\"chrome icon\\\"></i>Web Scraping</a></div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"item\\\">\\r\\n                                <a class=\\\"ui tiny image\\\" href=\\\"#/blog/spring-mapstruct\\\" style=\\\"margin: auto;\\\"><img src=\\\"https://mapstruct.org/images/mapstruct.png\\\"></a>\\r\\n                                <div class=\\\"content\\\">\\r\\n                                    <a class=\\\"header\\\" href=\\\"#/blog/spring-mapstruct\\\">在 Spring Boot 中使用 MapStruct</a>\\r\\n                                    <div class=\\\"meta\\\"><span>2020-09-23</span></div>\\r\\n                                    <div class=\\\"description\\\">MapStruct 的用途，以及如何在 Spring Boot 中使用 MapStruct</div>\\r\\n                                    <div class=\\\"extra\\\">\\r\\n                                        <a class=\\\"ui pink basic compact right floated button\\\" role=\\\"button\\\" href=\\\"#/blog/spring-mapstruct\\\">Continue reading<i aria-hidden=\\\"true\\\" class=\\\"right chevron icon\\\"></i></a>\\r\\n                                        <div class=\\\"sc-eCApGN htLRdL\\\">\\r\\n                                            <div class=\\\"ui labels\\\"><a class=\\\"ui blue label\\\"><i aria-hidden=\\\"true\\\" class=\\\"code icon\\\"></i>Java</a><a class=\\\"ui green label\\\"><i aria-hidden=\\\"true\\\" class=\\\"leaf icon\\\"></i>Spring</a></div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"item\\\">\\r\\n                                <a class=\\\"ui tiny image\\\" href=\\\"#/blog/coding-java-6\\\" style=\\\"margin: auto;\\\"><img src=\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Maven_logo.svg/1200px-Maven_logo.svg.png\\\"></a>\\r\\n                                <div class=\\\"content\\\">\\r\\n                                    <a class=\\\"header\\\" href=\\\"#/blog/coding-java-6\\\">Java 開發筆記（六）</a>\\r\\n                                    <div class=\\\"meta\\\"><span>2020-09-15</span></div>\\r\\n                                    <div class=\\\"description\\\">Java 開發筆記 - Dependency Management</div>\\r\\n                                    <div class=\\\"extra\\\">\\r\\n                                        <a class=\\\"ui pink basic compact right floated button\\\" role=\\\"button\\\" href=\\\"#/blog/coding-java-6\\\">Continue reading<i aria-hidden=\\\"true\\\" class=\\\"right chevron icon\\\"></i></a>\\r\\n                                        <div class=\\\"sc-eCApGN htLRdL\\\">\\r\\n                                            <div class=\\\"ui labels\\\"><a class=\\\"ui blue label\\\"><i aria-hidden=\\\"true\\\" class=\\\"code icon\\\"></i>Java</a><a class=\\\"ui red label\\\"><i aria-hidden=\\\"true\\\" class=\\\"code icon\\\"></i>Maven</a></div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"item\\\">\\r\\n                                <a class=\\\"ui tiny image\\\" href=\\\"#/blog/coding-java-5\\\" style=\\\"margin: auto;\\\"><img src=\\\"https://upload.wikimedia.org/wikipedia/fr/thumb/2/2e/Java_Logo.svg/1200px-Java_Logo.svg.png\\\"></a>\\r\\n                                <div class=\\\"content\\\">\\r\\n                                    <a class=\\\"header\\\" href=\\\"#/blog/coding-java-5\\\">Java 開發筆記（五）</a>\\r\\n                                    <div class=\\\"meta\\\"><span>2020-09-15</span></div>\\r\\n                                    <div class=\\\"description\\\">Java 開發筆記 - 幾款超有用必學 3rd party libraries</div>\\r\\n                                    <div class=\\\"extra\\\">\\r\\n                                        <a class=\\\"ui pink basic compact right floated button\\\" role=\\\"button\\\" href=\\\"#/blog/coding-java-5\\\">Continue reading<i aria-hidden=\\\"true\\\" class=\\\"right chevron icon\\\"></i></a>\\r\\n                                        <div class=\\\"sc-eCApGN htLRdL\\\">\\r\\n                                            <div class=\\\"ui labels\\\"><a class=\\\"ui blue label\\\"><i aria-hidden=\\\"true\\\" class=\\\"code icon\\\"></i>Java</a></div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"item\\\">\\r\\n                                <a class=\\\"ui tiny image\\\" href=\\\"#/blog/coding-java-4\\\" style=\\\"margin: auto;\\\"><img src=\\\"https://cdn.worldvectorlogo.com/logos/spring-3.svg\\\"></a>\\r\\n                                <div class=\\\"content\\\">\\r\\n                                    <a class=\\\"header\\\" href=\\\"#/blog/coding-java-4\\\">Java 開發筆記（四）</a>\\r\\n                                    <div class=\\\"meta\\\"><span>2020-09-15</span></div>\\r\\n                                    <div class=\\\"description\\\">Java 開發筆記 - Spring 基礎知識</div>\\r\\n                                    <div class=\\\"extra\\\">\\r\\n                                        <a class=\\\"ui pink basic compact right floated button\\\" role=\\\"button\\\" href=\\\"#/blog/coding-java-4\\\">Continue reading<i aria-hidden=\\\"true\\\" class=\\\"right chevron icon\\\"></i></a>\\r\\n                                        <div class=\\\"sc-eCApGN htLRdL\\\">\\r\\n                                            <div class=\\\"ui labels\\\"><a class=\\\"ui blue label\\\"><i aria-hidden=\\\"true\\\" class=\\\"code icon\\\"></i>Java</a><a class=\\\"ui green label\\\"><i aria-hidden=\\\"true\\\" class=\\\"leaf icon\\\"></i>Spring</a></div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"item\\\">\\r\\n                                <a class=\\\"ui tiny image\\\" href=\\\"#/blog/coding-java-3\\\" style=\\\"margin: auto;\\\"><img src=\\\"https://upload.wikimedia.org/wikipedia/fr/thumb/2/2e/Java_Logo.svg/1200px-Java_Logo.svg.png\\\"></a>\\r\\n                                <div class=\\\"content\\\">\\r\\n                                    <a class=\\\"header\\\" href=\\\"#/blog/coding-java-3\\\">Java 開發筆記（三）</a>\\r\\n                                    <div class=\\\"meta\\\"><span>2020-09-15</span></div>\\r\\n                                    <div class=\\\"description\\\">Java 開發筆記 - Java 基礎知識</div>\\r\\n                                    <div class=\\\"extra\\\">\\r\\n                                        <a class=\\\"ui pink basic compact right floated button\\\" role=\\\"button\\\" href=\\\"#/blog/coding-java-3\\\">Continue reading<i aria-hidden=\\\"true\\\" class=\\\"right chevron icon\\\"></i></a>\\r\\n                                        <div class=\\\"sc-eCApGN htLRdL\\\">\\r\\n                                            <div class=\\\"ui labels\\\"><a class=\\\"ui blue label\\\"><i aria-hidden=\\\"true\\\" class=\\\"code icon\\\"></i>Java</a></div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"item\\\">\\r\\n                                <a class=\\\"ui tiny image\\\" href=\\\"#/blog/coding-java-2\\\" style=\\\"margin: auto;\\\"><img src=\\\"https://upload.wikimedia.org/wikipedia/fr/thumb/2/2e/Java_Logo.svg/1200px-Java_Logo.svg.png\\\"></a>\\r\\n                                <div class=\\\"content\\\">\\r\\n                                    <a class=\\\"header\\\" href=\\\"#/blog/coding-java-2\\\">Java 開發筆記（二）</a>\\r\\n                                    <div class=\\\"meta\\\"><span>2020-09-15</span></div>\\r\\n                                    <div class=\\\"description\\\">Java 開發筆記 - 建立 project</div>\\r\\n                                    <div class=\\\"extra\\\">\\r\\n                                        <a class=\\\"ui pink basic compact right floated button\\\" role=\\\"button\\\" href=\\\"#/blog/coding-java-2\\\">Continue reading<i aria-hidden=\\\"true\\\" class=\\\"right chevron icon\\\"></i></a>\\r\\n                                        <div class=\\\"sc-eCApGN htLRdL\\\">\\r\\n                                            <div class=\\\"ui labels\\\"><a class=\\\"ui blue label\\\"><i aria-hidden=\\\"true\\\" class=\\\"code icon\\\"></i>Java</a></div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"item\\\">\\r\\n                                <a class=\\\"ui tiny image\\\" href=\\\"#/blog/coding-java-1\\\" style=\\\"margin: auto;\\\"><img src=\\\"https://upload.wikimedia.org/wikipedia/fr/thumb/2/2e/Java_Logo.svg/1200px-Java_Logo.svg.png\\\"></a>\\r\\n                                <div class=\\\"content\\\">\\r\\n                                    <a class=\\\"header\\\" href=\\\"#/blog/coding-java-1\\\">Java 開發筆記（一）</a>\\r\\n                                    <div class=\\\"meta\\\"><span>2020-09-15</span></div>\\r\\n                                    <div class=\\\"description\\\">Java 開發筆記 - 安裝所需程式</div>\\r\\n                                    <div class=\\\"extra\\\">\\r\\n                                        <a class=\\\"ui pink basic compact right floated button\\\" role=\\\"button\\\" href=\\\"#/blog/coding-java-1\\\">Continue reading<i aria-hidden=\\\"true\\\" class=\\\"right chevron icon\\\"></i></a>\\r\\n                                        <div class=\\\"sc-eCApGN htLRdL\\\">\\r\\n                                            <div class=\\\"ui labels\\\"><a class=\\\"ui blue label\\\"><i aria-hidden=\\\"true\\\" class=\\\"code icon\\\"></i>Java</a></div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"sc-hKFyIo bdDYJz\\\">\\r\\n                    <div class=\\\"ui horizontal section divider\\\">\\r\\n                        <h5 class=\\\"ui header\\\" style=\\\"opacity: 0.5;\\\"><i aria-hidden=\\\"true\\\" class=\\\"react icon\\\"></i>Reach Me Now!</h5>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui stackable padded three column grid\\\">\\r\\n                        <div class=\\\"column\\\">\\r\\n                            <a href=\\\"tel:+85263301333\\\">\\r\\n                                <h4 class=\\\"ui header\\\" style=\\\"opacity: 0.75; transform: scale(1);\\\">\\r\\n                                    <i aria-hidden=\\\"true\\\" class=\\\"teal phone clockwise rotated icon\\\"></i>\\r\\n                                    <div class=\\\"content\\\">\\r\\n                                        Mobile\\r\\n                                        <div class=\\\"sub header\\\">6330 1333</div>\\r\\n                                    </div>\\r\\n                                </h4>\\r\\n                            </a>\\r\\n                        </div>\\r\\n                        <div class=\\\"column\\\">\\r\\n                            <a href=\\\"mailto:michaelboyboy@gmail.com\\\">\\r\\n                                <h4 class=\\\"ui header\\\" style=\\\"opacity: 0.75; transform: scale(1);\\\">\\r\\n                                    <i aria-hidden=\\\"true\\\" class=\\\"red mail icon\\\"></i>\\r\\n                                    <div class=\\\"content\\\">\\r\\n                                        Email\\r\\n                                        <div class=\\\"sub header\\\">michaelboyboy@gmail.com</div>\\r\\n                                    </div>\\r\\n                                </h4>\\r\\n                            </a>\\r\\n                        </div>\\r\\n                        <div class=\\\"column\\\">\\r\\n                            <a href=\\\"https://hk.linkedin.com/in/mickchung\\\" target=\\\"_blank\\\" rel=\\\"external nofollow noopener noreferrer\\\">\\r\\n                                <h4 class=\\\"ui header\\\" style=\\\"opacity: 0.75; transform: scale(1);\\\">\\r\\n                                    <i aria-hidden=\\\"true\\\" class=\\\"blue linkedin icon\\\"></i>\\r\\n                                    <div class=\\\"content\\\">\\r\\n                                        LinkedIn\\r\\n                                        <div class=\\\"sub header\\\">hk.linkedin.com/in/mickchung</div>\\r\\n                                    </div>\\r\\n                                </h4>\\r\\n                            </a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui divider\\\"></div>\\r\\n                    <div>\\r\\n                        <div style=\\\"color: rgb(75, 163, 199);\\\">\\r\\n                            <div class=\\\"sc-eCApGN htLRdL\\\" style=\\\"display: inline-block;\\\">Copyright © 2020 Chung Cheuk Hang Michael. All rights reserved.</div>\\r\\n                            <div class=\\\"sc-eCApGN htLRdL\\\" style=\\\"display: inline-block; float: right;\\\">Last Updated On: <span title=\\\"10 Oct 2020 06:09:14\\\" style=\\\"cursor: help;\\\">10 Oct 2020</span> / <span title=\\\"8abd2641a6dd67cff979ead5b07edf5ca6f89db6\\\" style=\\\"cursor: help;\\\">8abd264</span></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui hidden divider\\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"particles-wrapper\\\">\\r\\n                <canvas width=\\\"3355\\\" height=\\\"1705\\\" style=\\\"width: 100%; height: 100%;\\\"></canvas>\\r\\n            </div>\\r\\n        </div>\\r\\n        <script>!function(e){function r(r){for(var n,l,f=r[0],i=r[1],p=r[2],c=0,s=[];c<f.length;c++)l=f[c],Object.prototype.hasOwnProperty.call(o,l)&&o[l]&&s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n]);for(a&&a(r);s.length;)s.shift()();return u.push.apply(u,p||[]),t()}function t(){for(var e,r=0;r<u.length;r++){for(var t=u[r],n=!0,f=1;f<t.length;f++){var i=t[f];0!==o[i]&&(n=!1)}n&&(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(e,\\\"__esModule\\\",{value:!0})},l.t=function(e,r){if(1&r&&(e=l(e)),8&r)return e;if(4&r&&\\\"object\\\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,\\\"default\\\",{enumerable:!0,value:e}),2&r&&\\\"string\\\"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(r,\\\"a\\\",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p=\\\"/eportfolio/\\\";var f=this.webpackJsonpeportfolio=this.webpackJsonpeportfolio||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var p=0;p<f.length;p++)r(f[p]);var a=i;t()}([])</script><script src=\\\"/eportfolio/static/js/2.aa0813bd.chunk.js\\\"></script><script src=\\\"/eportfolio/static/js/main.c5cc27be.chunk.js\\\"></script>\\r\\n    </body>\\r\\n</html>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.5.3 取得定點資訊\\r\\n\\r\\n拎到 HTML source 之後，我地可以根據 blog post 標題既 DOM 定位，定點咁取得所有標題 value。其實一旦有左似樣既 HTML source（確保行左 JavaScript，DOM tree 砌好曬），咁我地轉返用 jsoup parser 都係可以既（用 `Jsoup.parse(html)`）。\\r\\n\\r\\n以下係一個 blog post 標題既節錄：\\r\\n\\r\\n```xml\\r\\n<div class=\\\"item\\\">\\r\\n    <a class=\\\"ui tiny image\\\" href=\\\"#/blog/git-basics\\\" style=\\\"margin: auto;\\\"><img src=\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Git-logo.svg/1280px-Git-logo.svg.png\\\"></a>\\r\\n    <div class=\\\"content\\\">\\r\\n        <a class=\\\"header\\\" href=\\\"#/blog/git-basics\\\">Git 基本操作</a>\\r\\n        <div class=\\\"meta\\\"><span>2020-09-27</span></div>\\r\\n        <div class=\\\"description\\\">如何使用 Git 既基本 commands 進行版本控制</div>\\r\\n        <div class=\\\"extra\\\">\\r\\n            <a class=\\\"ui pink basic compact right floated button\\\" role=\\\"button\\\" href=\\\"#/blog/git-basics\\\">Continue reading<i aria-hidden=\\\"true\\\" class=\\\"right chevron icon\\\"></i></a>\\r\\n            <div class=\\\"sc-eCApGN htLRdL\\\">\\r\\n                <div class=\\\"ui labels\\\"><a class=\\\"ui orange label\\\"><i aria-hidden=\\\"true\\\" class=\\\"github icon\\\"></i>Git</a></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n```\\r\\n\\r\\n因為 blog post 標題冇特定字眼可以追蹤，咁我地退而求其次，可以用 `class=\\\"header\\\"` 黎定位 blog post 標題。\\r\\n\\r\\n```java\\r\\npublic class Main {\\r\\n\\r\\n    public static void main(String[] args) throws Exception {\\r\\n\\r\\n        Selenide.open(\\\"https://blackr1234.github.io/eportfolio/#/blog/\\\");\\r\\n        Selenide.$$(By.className(\\\"header\\\"))\\r\\n                .stream()\\r\\n                .map(SelenideElement::getText)\\r\\n                .forEach(System.out::println);\\r\\n        Selenide.closeWebDriver();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n我地得到既結果：\\r\\n\\r\\n```plaintext\\r\\nAll Blog Posts\\r\\n網頁抓取（二） - Selenium/Selenide\\r\\nGit 基本操作\\r\\n網頁抓取（一） - jsoup\\r\\n在 Spring Boot 中使用 MapStruct\\r\\nJava 開發筆記（六）\\r\\nJava 開發筆記（五）\\r\\nJava 開發筆記（四）\\r\\nJava 開發筆記（三）\\r\\nJava 開發筆記（二）\\r\\nJava 開發筆記（一）\\r\\nReach Me Now!\\r\\nMobile\\r\\n6330 1333\\r\\n6330 1333\\r\\nEmail\\r\\nmichaelboyboy@gmail.com\\r\\nmichaelboyboy@gmail.com\\r\\nLinkedIn\\r\\nhk.linkedin.com/in/mickchung\\r\\nhk.linkedin.com/in/mickchung\\r\\n```\\r\\n\\r\\n雖然有我地要既野，但係有唔少多餘既資訊都拎埋出黎，因為 `class` 包含 `header` 既唔淨止 blog post 標題。我地嘗試用埋 tag 係 `<a>` 黎 narrow down。\\r\\n\\r\\n```java\\r\\npublic class Main {\\r\\n\\r\\n    public static void main(String[] args) throws Exception {\\r\\n\\r\\n        Selenide.open(\\\"https://blackr1234.github.io/eportfolio/#/blog/\\\");\\r\\n        Selenide.$$(By.cssSelector(\\\"a.header\\\"))\\r\\n                .stream()\\r\\n                .map(SelenideElement::getText)\\r\\n                .forEach(System.out::println);\\r\\n        Selenide.closeWebDriver();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n以上 CSS selector 既意思係 DOM node 既 `Element.classList` 包含 `header` 既 `<a>` tag 先會中到。\\r\\n\\r\\n然後今次就岩曬喇！\\r\\n\\r\\n```plaintext\\r\\n網頁抓取（二） - Selenium/Selenide\\r\\nGit 基本操作\\r\\n網頁抓取（一） - jsoup\\r\\n在 Spring Boot 中使用 MapStruct\\r\\nJava 開發筆記（六）\\r\\nJava 開發筆記（五）\\r\\nJava 開發筆記（四）\\r\\nJava 開發筆記（三）\\r\\nJava 開發筆記（二）\\r\\nJava 開發筆記（一）\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.6 Selenide 自定義配置\\r\\n\\r\\n以下既自定義功能都係由 Selenide 提供（背後會幫我地改 Selenium 配置），只要喺 call `Selenium.open(relativeOrAbsoluteUrl)` 之前配置好就得。\\r\\n\\r\\n### 3.6.1 隱藏瀏覽器視窗\\r\\n\\r\\n由於 Selenium/Selenide 啟動既時候會踢著 local 裝既瀏覽器（如 Chrome），如果唔想下下都彈個瀏覽器出黎，可以 set headless mode。\\r\\n\\r\\n```java\\r\\nConfiguration.headless = true;\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.6.2 瀏覽器安裝位置\\r\\n\\r\\n如果想由 Chrome 瀏覽器改為使用 Chromium，我地可以下載 Chromium 既 portable binary distribution：\\r\\n\\r\\n1. 去 [Chromium History Versions Download](https://vikyd.github.io/download-chromium-history-version/#/)\\r\\n1. 根據 Selenide JAR 裡面（或者 [GitHub](https://github.com/selenide/selenide/blob/master/src/main/resources/versions.properties)）既 `versions.properties` 檔上面寫既支援既版本號碼，喺上面網頁搵最接近既版本（建議版本號碼唔好大過 Selenide 支援既版本號碼）\\r\\n1. 撳落去會開 chromium-browser-snapshots 既網頁出黎，再撳落去 zip 檔名度就可以下載\\r\\n1. 解壓縮個 zip 檔\\r\\n\\r\\n之後咁樣寫：\\r\\n\\r\\n```java\\r\\n// 改成解壓縮後既 location\\r\\nConfiguration.browserBinary = \\\"path/to/chrome.exe\\\";\\r\\n```\\r\\n\";","export default \"## 1 關於 Chrome Extension\\r\\n\\r\\n相信大家對 Chrome extension 都唔陌生，因為大部分人都係 ad blocker plugins 既 user，知道瀏覽器係可以安裝一啲小插件黎優化用戶體驗（UX）。\\r\\n\\r\\n其實呢啲小插件係可以自己寫，而且非常簡單。\\r\\n\\r\\n---\\r\\n\\r\\n## 2 需求情境\\r\\n\\r\\n呢篇文章會教大家動手寫一個 Chrome extension，用黎去除 uTorrent Web 網頁各種各樣既多餘網頁 components，令到版面更簡潔。\\r\\n\\r\\nuTorrent Web 係一個專門用黎 BT 下載既電腦程式，需要自行下載安裝，佢個程式介面係用網頁既形式呈現，所以叫 uTorrent Web，有別於以前既 uTorrent（PC 客戶端）。\\r\\n\\r\\n---\\r\\n\\r\\n## 3 比較原貌及結果\\r\\n\\r\\n先畀大家睇下我地既 before & after 會相差幾遠。\\r\\n\\r\\n### 3.1 Before\\r\\n\\r\\n![](blog/2020-10/writing-chrome-extensions/before-home-page.png)\\r\\n\\r\\n![](blog/2020-10/writing-chrome-extensions/before-downloading.png)\\r\\n\\r\\n---\\r\\n\\r\\n### 3.2 After\\r\\n\\r\\n![](blog/2020-10/writing-chrome-extensions/after-home-page.png)\\r\\n\\r\\n![](blog/2020-10/writing-chrome-extensions/after-downloading.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 4 動手寫\\r\\n\\r\\n### 4.1 Project structure\\r\\n\\r\\n我地呢個 project folder 會有以下檔案：\\r\\n\\r\\n| 檔案            | 用途                                                                                                                                         |\\r\\n| --------------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n| `manifest.json` | 關於呢個 Chrome extension 既 metadata。Chrome 會讀取，咁就知道邊啲網頁要用呢個 extension，邊啲唔洗，同埋知道需要執行既 JavaScript 資源既位置 |\\r\\n| `content.js`    | 我地既程式入口，類似 Java 既 `main` method，喺 Chrome load 完 dependency 既 libraries（即係我地既 `jquery.js`）之後就會執行                  |\\r\\n| `js/jquery.js`  | jQuery 係一個打橫行既 JavaScript library，可以肆意修改整個 DOM tree，係傳統網頁必備既 library                                                |\\r\\n\\r\\n---\\r\\n\\r\\n### 4.2 寫 `manifest.json`\\r\\n\\r\\n`manifest.json` 負責話畀 Chrome 知道我地呢個 extension 既全名、簡單描述、URL 匹配同權限，以及要執行既 JavaScript 檔案。\\r\\n\\r\\n因為 uTorrent Web 既 URL 有時會係 `utweb.trontv.com` 有時會係 `127.0.0.1`，所以就有兩個，但一般都只係得一個。\\r\\n\\r\\n至於 `js`，次序一定要岩，dependency libraries 行先，之後先到我地寫既入口主程式（類似 Java 既 `main` method）。\\r\\n\\r\\n```json\\r\\n{\\r\\n\\t\\\"name\\\": \\\"uTorrent Web Plugin\\\",\\r\\n\\t\\\"version\\\": \\\"1.0\\\",\\r\\n\\t\\\"description\\\": \\\"Remove ads\\\",\\r\\n\\t\\\"content_scripts\\\": [\\r\\n\\t\\t{\\r\\n\\t\\t\\t\\\"matches\\\": [\\\"*://utweb.trontv.com/*\\\", \\\"*://127.0.0.1/*\\\"],\\r\\n\\t\\t\\t\\\"js\\\": [\\\"js/jquery.js\\\", \\\"content.js\\\"],\\r\\n\\t\\t\\t\\\"run_at\\\": \\\"document_start\\\"\\r\\n\\t\\t}\\r\\n\\t],\\r\\n\\t\\\"manifest_version\\\": 2\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 4.3 寫 `content.js`\\r\\n\\r\\n我地想要一個簡潔版本既 uTorrent Web，其實只需要不斷將多餘既 components 刪除就可以。\\r\\n\\r\\nWindows 下撳 `F12` 或者 macOS 下撳 `Option` + `Command` + `I`，然後喺 Chrome developer tools 既 Elements tab 下撳左上角既箭嘴掣，手動黎喺頁面上視覺定位不同既多餘 DOM nodes，Chrome developer tools 會幫我地定位 DOM node 既位置，然後我地可以自行判決點樣 programmatically 定位呢啲 DOM nodes。\\r\\n\\r\\n我地會想寫到呢個 Chrome extension 可以無限 loop 咁行，因為有時啲網頁完成加載既時間可能好長，有啲 components 亦可能係之後先加入，亦可能因為某啲操作（當我地新增 BT 下載任務既時候）而令頁面再次改變，所以係有必要無限 loop。\\r\\n\\r\\n| 多餘既 DOM node（CSS selector）            | 對應頁面位置                                                     |\\r\\n| ------------------------------------------ | ---------------------------------------------------------------- |\\r\\n| `.nav-tabs > :not([id=auto-settings-btn])` | 頂部右方設定掣左邊既兩個掣，分別係 Safe Torrrent Scanner 及 Help |\\r\\n| `footer[id=ads-privacy-footer]`            | 最底既 Terms of Service、Privacy Policy 及 copyright             |\\r\\n| `[id=sidebar]`                             | 左手邊既 sidebar menu                                            |\\r\\n| `div.tutorial-video-container`             | 正右方既 Watch this video on torrenting 連影片                   |\\r\\n| `div.media-cover`                          | 當有下載任務時，下載任務左手邊有個影片播放器                     |\\r\\n| `div.search-control-nav-main`              | 正中既 Search for a torrent 搜尋列                               |\\r\\n| `[id=jw-player-container]`                 | 正下方既影片                                                     |\\r\\n| `.search-header`                           | 正中既 Stream torrents while you download                        |\\r\\n\\r\\n```js\\r\\n// 無限 loop 既配置，一開始會行得密啲，之後就會放慢\\r\\nconst MAX_RUN = Infinity;\\r\\nconst DELAY_INCREMENT = 25;\\r\\nconst DELAY_MAX = 1000;\\r\\nvar delay = 25;\\r\\n\\r\\n// 用於 jQuery 既 CSS selector，喺 Chrome developer tools 既 Elements tab 可以用佢黎 search\\r\\nconst SELECTOR = `\\r\\n    .nav-tabs > :not([id=auto-settings-btn]),\\r\\n    footer[id=ads-privacy-footer],\\r\\n    [id=sidebar],\\r\\n    div.tutorial-video-container,\\r\\n    div.media-cover,\\r\\n    div.search-control-nav-main,\\r\\n    [id=jw-player-container],\\r\\n    .search-header\\r\\n`;\\r\\n\\r\\nconst run = () => {\\r\\n\\tlet i = 0;\\r\\n\\r\\n\\tconst _run = () => {\\r\\n\\t\\tif (i === MAX_RUN) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\ti++;\\r\\n\\t\\tconsole.log(\\\"Running iteration \\\" + i); // 喺 Chrome developer tools 既 Console 會見到\\r\\n\\r\\n\\t\\tconst result = $(SELECTOR);\\r\\n\\r\\n\\t\\tif (!(result.length > 0)) {\\r\\n\\t\\t\\t// 如果未搵到（可能係頁面未 load 好）\\r\\n\\t\\t\\tsetTimeout(_run, delay);\\r\\n\\t\\t\\tdelay = Math.min(delay + DELAY_INCREMENT, DELAY_MAX);\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// 將多餘野設置為唔顯示\\r\\n\\r\\n\\t\\tresult.css(\\\"display\\\", \\\"none\\\");\\r\\n\\r\\n\\t\\t$(\\\".media-library-top-container.show-ad\\\").removeClass(\\\"show-ad\\\");\\r\\n\\r\\n\\t\\tsetTimeout(_run, delay);\\r\\n\\t\\tdelay = Math.min(delay + DELAY_INCREMENT, DELAY_MAX);\\r\\n\\t};\\r\\n\\r\\n\\t_run();\\r\\n};\\r\\n\\r\\nrun(); // call 上面 define 既 run function\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 4.4 下載 `jquery.js`\\r\\n\\r\\n正因為 jQuery 太強大，可以肆意修改整個 DOM tree，所以佢係傳統網頁必備既 dependency library（但新派做法已經棄用 jQuery）。正正就係我地刪除多餘 DOM nodes 需要用到。\\r\\n\\r\\n我地需要將呢個 jQuery library 既 code 下載落黎。只需要 right click 下面條 link，save as `js/jquery.js` 即可：\\r\\n\\r\\n[https://code.jquery.com/jquery-3.5.1.min.js](https://code.jquery.com/jquery-3.5.1.min.js)\\r\\n\\r\\n---\\r\\n\\r\\n## 5 安裝\\r\\n\\r\\n去 `chrome://extensions` 度，打開右上角 Developer mode 既開關，撳 Load unpacked，然後揀我地個 project folder。\\r\\n\\r\\n之後我地會見到多左個我地個 Chrome extension（請確保開關掣係開住）。呢個時候我地可以 refresh 一下 uTorrent Web 個網頁，[就會見到係極致地簡潔！](#32-after)\\r\\n\\r\\n![](blog/2020-10/writing-chrome-extensions/chrome-extensions.png)\\r\\n\";","export default \"## 1 關於 Retrofit\\r\\n\\r\\nRetrofit 係一個 HTTP client 既 Java library，可以幫我地做到 HTTP call，有啲似 Spring Cloud OpenFeign，都係行 declarative approach，透過 interface methods 既 annotations 以及 parameters 黎定義 HTTP 請求。\\r\\n\\r\\n---\\r\\n\\r\\n## 2 動手使用 Retrofit 下載資料\\r\\n\\r\\n### 2.1 需求情境\\r\\n\\r\\n試想像我地而家想寫一個程式，可以幫我地喺 Jumbo Computer 網站獲取電腦零件報價資訊。\\r\\n\\r\\nJumbo Computer 既網址係：[https://shoponjc.com/quote.php](https://shoponjc.com/quote.php)\\r\\n\\r\\n透過 Chrome developer tools 既 Network 分頁，我地可以見到，當我地喺頁面選擇左「產品類型」之後，Jumbo Computer 會喺 XHR 分類下有個 `getprod.php` 既 HTTP POST request，而 response body 係 JSON 格式。\\r\\n\\r\\n![](blog/2021-04/pull-data-with-retrofit/jumbo-http-response.png)\\r\\n\\r\\n---\\r\\n\\r\\n### 2.2 分析\\r\\n\\r\\n#### 2.2.1 必填的 `session` form data\\r\\n\\r\\n我地可以見到 Jumbo Computer 拎資料用既 HTTP POST request 係需要一個 `session` 既 form data entry。\\r\\n\\r\\n經 Postman 一試，我地會發現如果個 HTTP request 缺少左 `session`，又或者個 `session` 值係我地自己改出黎既話，都會收到 error response，咁係因為 Jumbo Computer 既 server 會驗證呢個 `session` 值。\\r\\n\\r\\n至於呢個 `session` 值要點樣先可以拎到？實驗話畀我地知，呢個 `session` 值好似唔會 expire，咁即係我地可以直接用已知既 `session` 值。不過，穩陣起見，我地都係睇下佢係點樣攞到或者計到呢個 `session` 值比較好。\\r\\n\\r\\n![](blog/2021-04/pull-data-with-retrofit/jumbo-http-request.png)\\r\\n\\r\\n![](blog/2021-04/pull-data-with-retrofit/postman.png)\\r\\n\\r\\n---\\r\\n\\r\\n#### 2.2.2 如何取得新的 `session` 值\\r\\n\\r\\n喺 Chrome developer tools 既 Application 分頁下面，我地可以見到 Local Storage 分類下，`shoponjc.com` 有一個 `Key` 為 `Session ID` 既 entry。\\r\\n\\r\\n另外，喺 Chrome developer tools 既 Sources 分頁下面，我地可以見到 `shoponjc.com` 有一個 JavaScript 檔叫 `quo.js?d83scwsoejkx6`，裡面有以下一段：\\r\\n\\r\\n```js\\r\\nif (window.localStorage) {\\r\\n\\tstorage = window.localStorage;\\r\\n\\tstorage.setItem(\\\"Version\\\", \\\"1.0\\\");\\r\\n\\tstorage.setItem(\\\"Session ID\\\", document.getElementById(\\\"sid\\\").value);\\r\\n}\\r\\n```\\r\\n\\r\\n咁即係我地可以用 `sid` 作為 DOM element ID 黎喺個網頁上搵 DOM element，而結果如下：\\r\\n\\r\\n```html\\r\\n<input type=\\\"hidden\\\" id=\\\"sid\\\" value=\\\"wpjfi557nqf75\\\" />\\r\\n```\\r\\n\\r\\n**解讀：** 每當我地瀏覽呢個網頁既時候，佢 server 會返回一個帶有隨機 session ID 既 DOM element 既 HTML 檔，然後 JavaScript 會令 Local Storage 裡面多左一個名為 `Session ID` 既 entry。\\r\\n\\r\\n另外，我地都可以從個 JavaScript 檔見到個 `session` 值係黎自於 `this.$refs.sid`。因為個網頁係用 Vue.js library 黎寫，而 `this.$refs.sid` 就即係指緊 DOM element ID 為 `sid` 既 DOM element。\\r\\n\\r\\n```js\\r\\nvar vm = new Vue({\\r\\n\\t// ... 省略 500 幾行\\r\\n\\tmounted: function () {\\r\\n\\t\\tthis.session = this.$refs.sid.value;\\r\\n\\t\\t// ... 省略幾行\\r\\n\\t},\\r\\n});\\r\\n```\\r\\n\\r\\n**解讀：** 喺個 `sid` DOM element mount 左之後，Vue.js 既 `session`（`this.session`）就會變成 `sid` DOM element 既 `value`。\\r\\n\\r\\n再睇下佢係點樣組裝 POST request 同 call 出去：\\r\\n\\r\\n```js\\r\\nactualSearch: function (pnum) {\\r\\n    /*\\r\\n    if (this.ptype == '') {\\r\\n        alert(\\\"Please select 產品類型 Product Type first.\\\");\\r\\n        return;\\r\\n    }\\r\\n    if (this.ptypeval.length > 40) {\\r\\n        alert(\\\"關鍵字 Key words are too long, please re-enter first.\\\");\\r\\n        return;\\r\\n    }\\r\\n    */\\r\\n    if (this.searchFired == false) {\\r\\n        this.searchFired = true;\\r\\n        var form_data = new FormData();\\r\\n        form_data.append('session', this.session);\\r\\n        form_data.append('sort', this.nsort);\\r\\n        form_data.append('link', this.linkpicks);\\r\\n        form_data.append('ptype', this.ptype);\\r\\n        form_data.append('pmin', this.range[0]);\\r\\n        form_data.append('pmax', this.range[1]);\\r\\n        form_data.append('pwords', this.ptypeval);\\r\\n        form_data.append('prow', this.pagerow);\\r\\n        form_data.append('pnum', pnum);\\r\\n        ajax({\\r\\n            method: 'post',\\r\\n            url: 'getprod.php',\\r\\n            data: form_data\\r\\n        }).then(response => {\\r\\n            this.searchFired = false;\\r\\n            this.$nextTick(function () {\\r\\n                let json = response.data;\\r\\n                this.havedata = false;\\r\\n                if (json.status == 'Error') {\\r\\n                    alert(\\\"No product found!!\\\");\\r\\n                } else {\\r\\n                    this.plist = json.plist;\\r\\n                    if (json.plist.length >= 10)\\r\\n                        this.havedata = true;\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n},\\r\\n```\\r\\n\\r\\n**解讀：** 可以見到拎資料既 POST request 既 `session` 係黎自於 Vue.js 既 `session`（`this.session`）。\\r\\n\\r\\n成件事就係咁簡單！我地每次用 jsoup 下載個新既 HTML 落黎就可以拎到新既 session ID 值。\\r\\n\\r\\n---\\r\\n\\r\\n### 2.3 添加 Maven dependencies\\r\\n\\r\\n我地會用到以下 Maven dependencies，當中包括 jsoup：\\r\\n\\r\\n```xml\\r\\n<!-- ##### jsoup ##### -->\\r\\n<dependency>\\r\\n    <groupId>org.jsoup</groupId>\\r\\n    <artifactId>jsoup</artifactId>\\r\\n    <version>1.13.1</version>\\r\\n</dependency>\\r\\n\\r\\n<!-- ##### retrofit ##### -->\\r\\n<dependency>\\r\\n    <groupId>com.squareup.retrofit2</groupId>\\r\\n    <artifactId>retrofit</artifactId>\\r\\n    <version>2.9.0</version>\\r\\n</dependency>\\r\\n<dependency>\\r\\n    <groupId>com.squareup.retrofit2</groupId>\\r\\n    <artifactId>converter-scalars</artifactId>\\r\\n    <version>2.9.0</version>\\r\\n</dependency>\\r\\n<dependency>\\r\\n    <groupId>com.squareup.retrofit2</groupId>\\r\\n    <artifactId>converter-gson</artifactId>\\r\\n    <version>2.9.0</version>\\r\\n</dependency>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 2.4 寫 Java code\\r\\n\\r\\n`ProductsResponse.java`：\\r\\n\\r\\n```java\\r\\n@Data\\r\\n@Accessors(chain = true)\\r\\n@FieldDefaults(level = PRIVATE)\\r\\npublic class ProductsResponse {\\r\\n    String status;\\r\\n    String session;\\r\\n\\r\\n    @SerializedName(\\\"plist\\\")\\r\\n    List<Product> products;\\r\\n}\\r\\n```\\r\\n\\r\\n`JumboClient.java`：\\r\\n\\r\\n```java\\r\\npublic interface JumboClient {\\r\\n\\r\\n    @FormUrlEncoded\\r\\n    @POST(\\\"getprod.php\\\")\\r\\n    Call<ProductsResponse> getProductsByCategory(\\r\\n        @Field(\\\"session\\\") String session,\\r\\n        @Field(\\\"sort\\\")    Integer sortType,\\r\\n        @Field(\\\"link\\\")    Boolean link,\\r\\n        @Field(\\\"ptype\\\")   Integer productType,\\r\\n        @Field(\\\"pmin\\\")    Long priceMin,\\r\\n        @Field(\\\"pmax\\\")    Long priceMax,\\r\\n        @Field(\\\"pwords\\\")  String productKeywords,\\r\\n        @Field(\\\"prow\\\")    Long pageRowCount,\\r\\n        @Field(\\\"pnum\\\")    Long pageNum\\r\\n    );\\r\\n}\\r\\n```\\r\\n\\r\\n`RetrofitHelper.java`：\\r\\n\\r\\n```java\\r\\npublic final class RetrofitHelper {\\r\\n\\r\\n    private static RetrofitHelper retrofitHelper;\\r\\n\\r\\n    private RetrofitHelper() {\\r\\n\\r\\n    }\\r\\n\\r\\n    public static RetrofitHelper getInstance() {\\r\\n        return retrofitHelper==null ? (retrofitHelper = new RetrofitHelper())\\r\\n                                    : retrofitHelper;\\r\\n    }\\r\\n\\r\\n    public JumboClient createJumboClient() {\\r\\n        return createRetrofit(\\\"https://shoponjc.com\\\").create(JumboClient.class);\\r\\n    }\\r\\n\\r\\n    private Retrofit createRetrofit(String baseUrl) {\\r\\n        return new Retrofit.Builder()\\r\\n                   .baseUrl(baseUrl)\\r\\n                   .client(new OkHttpClient.Builder()\\r\\n                               .readTimeout(10, SECONDS)\\r\\n                               .connectTimeout(10, SECONDS)\\r\\n                               .build())\\r\\n                   .addConverterFactory(ScalarsConverterFactory.create())\\r\\n                   .addConverterFactory(GsonConverterFactory.create(new GsonBuilder().setLenient().create()))\\r\\n                   .build();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n`Main.java`：\\r\\n\\r\\n```java\\r\\n@Slf4j\\r\\npublic class Main {\\r\\n\\r\\n    public static void main(String[] args) throws Exception {\\r\\n\\r\\n        final JumboClient jumboClient = RetrofitHelper.getInstance().createJumboClient();\\r\\n\\r\\n        // 拎資料\\r\\n        jumboClient.getProductsByCategory(\\r\\n            getSessionIdWithJsoup(), // sessionId\\r\\n            3, // sortType\\r\\n            true, // link\\r\\n            5, // productType\\r\\n            1L, // priceMin\\r\\n            200000L, // priceMax\\r\\n            \\\"\\\", // productKeywords\\r\\n            10000L, // pageRowCount\\r\\n            0L // pageNum\\r\\n        ).execute().body();\\r\\n    }\\r\\n\\r\\n    private static String getSessionIdWithJsoup() {\\r\\n\\r\\n        try {\\r\\n            final String html = Jsoup.connect(\\\"https://shoponjc.com/quote.php\\\").get().html();\\r\\n\\r\\n            final Matcher matcher = Pattern.compile(\\\"<input type=\\\\\\\"hidden\\\\\\\" id=\\\\\\\"sid\\\\\\\" ref=\\\\\\\"sid\\\\\\\" value=\\\\\\\"(?<sessionId>\\\\\\\\w+)\\\\\\\"\\\").matcher(html);\\r\\n            final String sessionId = matcher.find() ? matcher.group(\\\"sessionId\\\") : null;\\r\\n\\r\\n            return sessionId;\\r\\n        } catch (Exception e) {\\r\\n            log.error(\\\"Failed to download Jumbo webpage.\\\", e);\\r\\n        }\\r\\n\\r\\n        return null;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\";","export default \"# 1 什麼是 FFmpeg\\r\\n\\r\\nFFmpeg 係一個多功能既影片處理 command line 工具。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 下載 FFmpeg\\r\\n\\r\\n坊間既 build：\\r\\n\\r\\n[Gyan.dev FFmpeg](https://www.gyan.dev/ffmpeg/builds/)\\r\\n\\r\\n[直接下載最新版本](https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full.7z)\\r\\n\\r\\n---\\r\\n\\r\\n# 3 FFmpeg 功能\\r\\n\\r\\n## 3.1 轉換影片 format\\r\\n\\r\\n```bash\\r\\nffmpeg -i \\\"input.mkv\\\" -codec copy \\\"output.mp4\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 轉換影片成 GIF\\r\\n\\r\\n```bash\\r\\nffmpeg -i \\\"input.mov\\\" -s 720x480 -pix_fmt rgb24 -r 10 -f gif - > \\\"out.gif\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.3 裁剪影片\\r\\n\\r\\n```bash\\r\\nffmpeg -ss 00:00:30 -to 00:01:00 -i \\\"input.mp4\\\" -c copy \\\"output.mp4\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.4 順時針旋轉影片\\r\\n\\r\\n```bash\\r\\nffmpeg -i \\\"input.mp4\\\" -c copy -metadata:s:v:0 rotate=-90 \\\"output.mp4\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.5 逆時針旋轉影片\\r\\n\\r\\n```bash\\r\\nffmpeg -i \\\"input.mp4\\\" -c copy -metadata:s:v:0 rotate=90 \\\"output.mp4\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.6 合併多條影片\\r\\n\\r\\n先建立一個叫 `input.txt` 既檔案，內容跟以下格式：\\r\\n\\r\\n```plaintext\\r\\nfile '1.mkv'\\r\\nfile '2.mkv'\\r\\nfile '3.mkv'\\r\\n```\\r\\n\\r\\n之後執行：\\r\\n\\r\\n```bash\\r\\nffmpeg -safe 0 -f concat -i \\\"input.txt\\\" -c copy \\\"output.mkv\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.6.1 合併多條影片並加入淡入淡出效果\\r\\n\\r\\n如果想要影片與影片之間有淡入淡出效果，有人寫左一個網頁可以根據需要而生成相關既 FFmpeg command：\\r\\n\\r\\n[Generate FFmpeg script - Generator FFmpeg CLI command for concatenation several videos into single one using filter complex xfade and acrossfade.](https://romander.github.io/ffmpeg-script-generator/)\\r\\n\\r\\n---\\r\\n\\r\\n## 3.7 從影片提取 WAV 音頻\\r\\n\\r\\n```bash\\r\\nffmpeg -i \\\"input.mp4\\\" -vn -acodec pcm_s16le -ar 44100 -ac 2 \\\"output.wav\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.8 轉換影片成 MP3 音頻\\r\\n\\r\\n```bash\\r\\nffmpeg -i \\\"input.mp4\\\" \\\"output.mp3\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.9 加入音頻\\r\\n\\r\\n如果想將一首樂曲作為影片既聲音部分，我地可以咁做：\\r\\n\\r\\n```bash\\r\\nffmpeg -i \\\"input.mp4\\\" -i \\\"audio.wav\\\" -map 0:v -map 1:a -c:v copy -shortest \\\"output.mp4\\\"\\r\\n```\\r\\n\\r\\n註：`-shortest` 既作用係令影片既長度以播放長度較短既一方決定，咁就唔會因為音頻長過影片而令影片結尾出現有聲冇畫面既情況，但係如果音頻短過影片，就唔好加呢個 flag。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.10 影片靜音\\r\\n\\r\\n為影片除去音頻部分：\\r\\n\\r\\n```bash\\r\\nffmpeg -i \\\"input.mp4\\\" -c copy -an \\\"output.mp4\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.11 將多張圖片轉成一條影片\\r\\n\\r\\n先將所有圖片儲存做 JPG 格式。\\r\\n\\r\\n之後建立一個叫 `input.txt` 既檔案，內容跟以下格式：\\r\\n\\r\\n```plaintext\\r\\nfile '1.jpg'\\r\\nduration 5\\r\\nfile '2.jpg'\\r\\nduration 5\\r\\nfile '3.jpg'\\r\\nduration 5\\r\\n```\\r\\n\\r\\n之後執行：\\r\\n\\r\\n```bash\\r\\nffmpeg -f concat -i \\\"input.txt\\\" -c:v libx264 -r 30 -pix_fmt yuv420p \\\"output.mp4\\\"\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   `duration` 後面既數字係我地想上一行既圖片喺影片裡面所佔既時間，以秒數計。\\r\\n-   第 `1` 張圖片會被用作影片既闊度同埋高度。\\r\\n-   要確保第 `1` 張圖片既闊度同埋高度都係 `2` 既倍數。\\r\\n\\r\\n### 3.11.1 已知問題\\r\\n\\r\\n有一個已知問題，就係影片既長度可能會出錯，尤其係當我地只有 `1` 張或者 `2` 張圖片既時候。\\r\\n\\r\\n參考：\\r\\n\\r\\n-   [FFmpeg defect ticket - Using the concat demuxer with images and specified duration directives produces wrong duration](https://trac.ffmpeg.org/ticket/6128)\\r\\n\\r\\n我自己既 workaround：\\r\\n\\r\\n-   [StackOverflow 解答 - FFMPEG - concat demuxer with duration filter issue](https://stackoverflow.com/questions/46952350/ffmpeg-concat-demuxer-with-duration-filter-issue/72175215#72175215)\\r\\n\\r\\n個 workaround 就係最好都係先將每一張圖片轉換成獨立既影片檔案，再將佢地合併成單條影片。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.12 檢查影片長度\\r\\n\\r\\n```bash\\r\\nffprobe result.mp4 -show_entries format=duration -v 0\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 4 參考資料\\r\\n\\r\\n-   [FFmpeg CLI Flags](https://opensourcelibs.com/lib/ffmpeg-cli-flags)\\r\\n-   [Gist - Complete list of ffmpeg flags / commands](https://gist.github.com/tayvano/6e2d456a9897f55025e25035478a3a50)\\r\\n-   [How to use FFmpeg to convert images to video](https://shotstack.io/learn/use-ffmpeg-to-convert-images-to-video/)\\r\\n-   [StackOverflow - How to add a new audio (not mixing) into a video using ffmpeg?](https://stackoverflow.com/questions/11779490/how-to-add-a-new-audio-not-mixing-into-a-video-using-ffmpeg/11783474#11783474)\\r\\n\";","export default \"# 1 JavaScript 本質\\r\\n\\r\\nClient-side 既 JavaScript 係由瀏覽器執行，所以會有 `document` 同 `window`，包含瀏覽器既 metadata、視窗大小、user agent 等等。\\r\\n\\r\\nJavaScript 唔似其他程式語言咁有 class 概念，而 JavaScript 中既 `class` 只係 `prototype` 既 syntactical sugar（語法糖，即係只係一個方便啲既寫法，唔係咩新功能）。JavaScript 一直都係 prototype-based。`Object.prototype`、`Array.prototype`、`Number.prototype`、`String.prototype` 等 prototypes 都可以被修改，影響所有已經建造既 object、array、number、string 等等。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nObject.prototype.keys = function() {\\r\\n    return Object.keys(this);\\r\\n};\\r\\n\\r\\n({ k: \\\"v\\\" }).keys(); // [\\\"k\\\"]\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 2 Variables\\r\\n\\r\\nJavaScript 唔係 strongly typed，呢一點同 Java 完全唔同。除非用 JavaScript 既 superset TypeScript，否則 JavaScript 本身容許 variable 改變 data type。\\r\\n\\r\\n另外，JavaScript 裡面既 function 都係 variable，可以直接 reference，呢一點唔同需要用 reflection 既 Java。\\r\\n\\r\\n## 2.1 `var`\\r\\n\\r\\n-   Globally scoped 或者 function-scoped\\r\\n-   如果唔係喺 function 裡面 declare 時用，個 variable 就會去左 `window`\\r\\n-   可以重新 declare\\r\\n-   數值可以改變\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nvar bar;\\r\\nvar bar = 5;\\r\\nvar bar = 10;\\r\\nvar bar;\\r\\nbar // 5\\r\\nwindow.bar // 5\\r\\n\\r\\nlet bar; // SyntaxError: Identifier 'bar' has already been declared\\r\\nconst bar; // SyntaxError: Identifier 'bar' has already been declared\\r\\n\\r\\nfunction foo() {\\r\\n    var test = 123;\\r\\n}\\r\\n\\r\\ntest // ReferenceError: test is not defined\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 `let`\\r\\n\\r\\n-   Block-scoped\\r\\n-   不能重新 declare\\r\\n-   數值可以改變\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nlet bar;\\r\\nlet bar = 5;\\r\\nbar = 10;\\r\\n\\r\\nlet bar; // SyntaxError: Identifier 'bar' has already been declared\\r\\nconst bar; // SyntaxError: Identifier 'bar' has already been declared\\r\\n\\r\\nfunction foo() {\\r\\n    let test;\\r\\n    let test; // bad: SyntaxError: Identifier 'test' has already been declared\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 `const`\\r\\n\\r\\n-   Block-scoped\\r\\n-   Declare 時必須提供數值\\r\\n-   不能重新 declare\\r\\n-   數值不能改變\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst bar; // SyntaxError: Missing initializer in const declaration\\r\\nconst bar = 5;\\r\\nbar = 10; // TypeError: Assignment to constant variable.\\r\\n\\r\\nvar bar; // SyntaxError: Identifier 'bar' has already been declared\\r\\nlet bar; // SyntaxError: Identifier 'bar' has already been declared\\r\\n```\\r\\n\\r\\n`for...in`、`for...of` 可以用 `const`，但 `for` 就唔得。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.4 Hoisting\\r\\n\\r\\nJavaScript 同 Java 既一個不同之處，就係 JavaScript 既 variables 可以喺 reference 之後先至 declare，咁係因為 JavaScript engine 識得 hoist，類似將 declaration 搬到 reference 之前。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconsole.log(bar); // undefined\\r\\nvar bar = 5;\\r\\n```\\r\\n\\r\\n以上例子係唔會導致 `ReferenceError`，因為佢喺被執行既時候會變成：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nvar bar;\\r\\nconsole.log(bar); // undefined\\r\\nbar = 5;\\r\\n```\\r\\n\\r\\n注意：hoisting variable declaration 並唔適用於 `let` 同 `const`，`let` 同 `const` 既 variables 喺 declare 之前會進入 temporal dead zone（TDZ），reference 既話會得到 `ReferenceError: Cannot access '<variable>' before initialization`。\\r\\n\\r\\nFunction declaration 都可以 hoist。呢一點 Java 一樣，可以將 method 寫喺 class body 任何地方。對 Java 黎講好正常，因為 Java 係 compiled language；但對 JavaScript 而言，因為係 interpreted language，唔 hoist 既話，到用既時候就會唔知有果樣野既存在。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nfoo();\\r\\n\\r\\nfunction foo() {}\\r\\n```\\r\\n\\r\\n但係咁就唔得：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nfoo(); // TypeError: foo is not a function\\r\\n\\r\\nvar foo = function() {};\\r\\n```\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Understanding Hoisting in JavaScript](https://www.digitalocean.com/community/tutorials/understanding-hoisting-in-javascript)\\r\\n\\r\\n---\\r\\n\\r\\n# 3 Boolean 相關\\r\\n\\r\\nJavaScript 同 Java 喺比較數值上有唔同，JavaScript 有 `==` 同 `===`；而 Java 就再強大得多（或者複雜得多），有 `==` 同 `Object` class 既 instance method `equals(obj)`（同 `hashCode()` 一齊用）。\\r\\n\\r\\nJavaScript 除左 Java 既 `null`（type：object），仲有 `undefined`（type：undefined）。\\r\\n\\r\\n參考：[JavaScript — Double Equals vs. Triple Equals](https://codeburst.io/javascript-double-equals-vs-triple-equals-61d4ce5a121a)\\r\\n\\r\\n## 3.1 驗證 value 係 truthy 定 falsy\\r\\n\\r\\n如果 value 唔係 boolean，而喺冇得用 `&&`（AND）、`||`（OR）、`?`（ternary／conditional operator）、`if (boolean) {}`、`while (boolean) {}`（只能 take boolean 做 argument）既情況下，需要得出一個 boolean value，咁我地可以用 `!`（not operator）得出 boolean（相反值），然後寫兩次（`!!`）就可以得出正值。\\r\\n\\r\\nJavaScript 同 Java 唔同既地方係，JavaScript 任何 variable，無論係 Number、Object 都可以驗證 truthy 或者 falsy，用 not operator `!` 得出 boolean 結果（truthy 或 falsy）。\\r\\n\\r\\n**Number：**\\r\\n\\r\\n只有 0 先係 falsy，其他 numbers 都係 truthy。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\n!!0 // false\\r\\nlet bar = -0;\\r\\nbar // -0 你冇睇錯，JavaScript 有分正 0、負 0\\r\\n!!-0 // false 不過正 0、負 0 一樣都係 falsy\\r\\n\\r\\n!!-5 // true 負數都係 truthy，因為有野\\r\\n!!5 // true\\r\\n```\\r\\n\\r\\n**String：**\\r\\n\\r\\n只要長度大過 0 就係 truthy，否則 falsy。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\n!!\\\"\\\" // false\\r\\n!!\\\" \\\" // true 你冇睇錯，blank string 都係 truthy\\r\\n!!\\\"0\\\" // true\\r\\n```\\r\\n\\r\\n**Array：**\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\n!![] // true 注意，咁係 check 唔到一個 array 係咪冇 element\\r\\n!![].length // false\\r\\n!![1].length // true\\r\\n```\\r\\n\\r\\n**Object：**\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\n!!{} // true 注意，咁係 check 唔到一個 object 係咪冇 property\\r\\n!!Object.keys({}).length // false\\r\\n!!Object.keys({ k: \\\"v\\\" }).length // true\\r\\n```\\r\\n\\r\\n> There are only six falsy values in JavaScript you should be aware of:\\r\\n>\\r\\n> -   false — boolean false\\r\\n> -   0 — number zero\\r\\n> -   \\\"\\\" — empty string\\r\\n> -   null\\r\\n> -   undefined\\r\\n> -   NaN — Not A Number\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 比較兩個 values\\r\\n\\r\\n用 `==` 比較 boolean、number、string 既話，左右兩邊即使唔係同一個 type，如果 type cast 完之後數值上相同，都可以得出 `true`。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\n5 == \\\"5\\\" // true 因為 JavaScript 將 \\\"5\\\" 轉換成 5\\r\\n0 == false // true 因為 JavaScript 將 0 轉換成 false\\r\\n```\\r\\n\\r\\n用 `===` 比較 number、string 既話，左右兩邊必須要係同一個 type，而且數值上相同，先會得出 `true`。\\r\\n\\r\\n用 `===` 或者 `==` 比較 array、object、function 既話，必須要係同一個 reference，先會得出 `true`。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\n[] == [] // false\\r\\n{} == {} // false\\r\\n(() => {}) == (() => {}) // false 左右兩邊係 arrow function\\r\\n\\r\\n[] === [] // false\\r\\n{} === {} // false\\r\\n(() => {}) === (() => {}) // false 左右兩邊係 arrow function\\r\\n```\\r\\n\\r\\n> **Double equals**\\r\\n>\\r\\n> When using double equals in JavaScript we are testing for loose equality. Double equals also performs type coercion.\\r\\n\\r\\n> **Triple Equals**\\r\\n>\\r\\n> When using triple equals `===` in JavaScript, we are testing for strict equality. This means both the type and the value we are comparing have to be the same.\\r\\n\\r\\n---\\r\\n\\r\\n# 4 Array 語法\\r\\n\\r\\n喺 JavaScript 既世界，Array 都係 Object 既一種。\\r\\n\\r\\n## 4.1 Array 可以有特殊既 `empty` element\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\n[ , ] // [empty]\\r\\n[ , , ] // [empty × 2]\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.2 Array spread operator\\r\\n\\r\\n當我地喺一個 array 上面用 spread operator，就可以去除最外層既 `[]`，令到 pass arguments 既時候只 pass 裡面既 elements（散開），而唔係個 array object。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\n// ... 係 rest parameter，等於 Java 既 varargs\\r\\nfunction foo(bar, ...rest) {}\\r\\n\\r\\nfoo();\\r\\nfoo(1); // bar = 1\\r\\nfoo(1, 2); // bar = 1, rest = [2]\\r\\nfoo(1, 2, 3); // bar = 1, rest = [2, 3]\\r\\n\\r\\nconst arr = [1, 2, 3, 4];\\r\\nfoo(arr); // bar = [1, 2, 3, 4], rest = []\\r\\nfoo(...arr); // bar = 1, rest = [2, 3, 4] 呢個就係 spread\\r\\n```\\r\\n\\r\\n用 spread operator 黎重新建立一個新 array：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nlet arr = [1, 2, 3];\\r\\narr = [...arr, 4, ...arr];\\r\\narr // [1, 2, 3, 4, 1, 2, 3]\\r\\n```\\r\\n\\r\\nConditional spread：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\n[...(true ? [1] : [])] // [1]\\r\\n[...(false ? [1] : [])] // []\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.3 Array destructuring assignment\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst [, r = 0, g = 0, b = 0] = [0.5, 248, 187, 223]; // ARGB\\r\\nr // 248\\r\\ng // 187\\r\\nb // 223\\r\\n```\\r\\n\\r\\n解釋：將 array 既數值按順序按位置 assign 落左邊既 variables 同時提供 default value，亦可以用 empty 黎 skip 左唔需要既 elements。\\r\\n\\r\\n互換數值：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nlet foo = 5;\\r\\nlet bar = 10;\\r\\n[foo, bar] = [bar, foo];\\r\\nfoo // 10\\r\\nbar // 5\\r\\n```\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst obj = { bar: 5 };\\r\\nObject.entries(obj).forEach(([k, v]) => console.log(`${k}: ${v}`)); // bar: 5\\r\\n```\\r\\n\\r\\n可以用 rest parameter：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst [first, second, ...rest] = [1, 2, 3, 4];\\r\\nfirst // 1\\r\\nsecond // 2\\r\\nrest // [3, 4]\\r\\n```\\r\\n\\r\\n就算乜 variable 名都冇，都唔會有問題：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst [, ,] = [1, 2, 3, 4];\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.4 生成數字 array\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\n[...Array(10).keys()] // [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.5 去除重複 elements\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nlet arr = [1, 2, 3, 1, 2, 4];\\r\\narr = Array.from(new Set(arr));\\r\\narr // [1, 2, 3, 4]\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 5 Object 語法\\r\\n\\r\\n## 5.1 創建 object\\r\\n\\r\\nShorthand property names：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst bar = 5;\\r\\nconst obj = { bar }; // 等於 { bar: bar }\\r\\nobj // {bar: 5}\\r\\n```\\r\\n\\r\\n解釋：當我地 initialize object 既時候，如果喺 `{}` 裡面用 `<variable>` 既寫法而唔係 `<key>: <value>` 既寫法，variable 名就會成為 object property key，而 variable 既 value 就會成為 object property value。\\r\\n\\r\\nComputed property names：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst prefix = \\\"bar\\\";\\r\\nconst i = 3;\\r\\nconst obj = {\\r\\n    [`${prefix}${i}`]: 5,\\r\\n};\\r\\nobj // {bar3: 5}\\r\\n```\\r\\n\\r\\n解釋：`[]` 裡面可以填 expression，表達 object property 名（string）。\\r\\n\\r\\n---\\r\\n\\r\\n## 5.2 Object spread operator\\r\\n\\r\\n當我地喺一個 object 上面用 spread operator，就可以去除最外層既 `{}`，令到 pass arguments 既時候只 pass 裡面既 property key-value pairs（散開），而唔係個 object。\\r\\n\\r\\n用 spread operator 黎重新建立一個新 object：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nlet obj = { k: \\\"v\\\" };\\r\\nobj = { k: \\\"vv\\\", ...obj };\\r\\nobj // {k: \\\"v\\\"}\\r\\nobj = { ...obj, k: \\\"vv\\\" };\\r\\nobj // {k: \\\"vv\\\"}\\r\\n```\\r\\n\\r\\n注意：因為 object 既 properties 唔可以重複，所以 `{}` 裡面如果出現同一個 property 名（包括 spread 出黎既 properties），最後既數值會覆蓋之前既數值成為最終既數值。\\r\\n\\r\\nConditional spread：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\n{...(true && {k: 'v'})} // {k: \\\"v\\\"}\\r\\n{...(false && {k: 'v'})} // {}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 5.3 Object destructuring assignment\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst { k, kk = \\\"vv\\\" } = { k: \\\"v\\\" };\\r\\nk // \\\"v\\\"\\r\\nkk // \\\"vv\\\"\\r\\n```\\r\\n\\r\\n解釋：喺 object 拎個 property key-value 出黎 declare 成一個 variable，而 variable 名會同 object property 名一樣。如果 object 裡面冇我地需要既 property，可以提供 default value。\\r\\n\\r\\nDestructure 既時候仲可以同時重新命名 variable：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst { k: kk } = { k: \\\"v\\\" };\\r\\nkk // \\\"v\\\"\\r\\n```\\r\\n\\r\\n解釋：喺 object 拎個 property key-value 出黎 declare 成一個唔同名既 variable。\\r\\n\\r\\n可以用 rest parameter：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst { k1, k2, ...rest } = { k1: 1, k2: 2, k3: 3, k4: 4 };\\r\\nk1 // 1\\r\\nk2 // 2\\r\\nrest // {k3: 3, k4: 4}\\r\\n```\\r\\n\\r\\n就算乜 variable 名都冇，都唔會有問題：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst {} = { k: \\\"v\\\" };\\r\\n```\\r\\n\\r\\n### 5.3.1 Nested object and array destructing assignment\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst {\\r\\n    name,\\r\\n    // orders, // 如果需要 access orders array\\r\\n    orders: [\\r\\n        { id: id1, status: status1 },\\r\\n        { id: id2, status: status2 },\\r\\n    ],\\r\\n} = {\\r\\n    name: \\\"Mick\\\",\\r\\n    orders: [\\r\\n        {\\r\\n            id: 101,\\r\\n            status: \\\"SHIPPED\\\",\\r\\n        },\\r\\n        {\\r\\n            id: 115,\\r\\n            status: \\\"PAID\\\",\\r\\n        },\\r\\n        {\\r\\n            id: 128,\\r\\n            status: \\\"CANCELLED\\\",\\r\\n        },\\r\\n    ],\\r\\n};\\r\\n\\r\\nname // \\\"Mick\\\"\\r\\nid1 // 101\\r\\nid2 // 115\\r\\nstatus1 // \\\"SHIPPED\\\"\\r\\nstatus2 // \\\"PAID\\\"\\r\\norders // ReferenceError: orders is not defined\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 6 String 語法\\r\\n\\r\\n## 6.1 Template literal\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst bar = 5;\\r\\nconst foo = () => 10;\\r\\nconst str1 = `${bar}`;\\r\\nconst str2 = `${foo()}`;\\r\\nconst str3 = `${true ? bar : foo()}`;\\r\\nconst str4 = `${false ? bar : foo()}`;\\r\\n\\r\\nstr1 // \\\"5\\\"\\r\\nstr2 // \\\"10\\\"\\r\\nstr3 // \\\"5\\\"\\r\\nstr4 // \\\"10\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 7 Operators\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [MDN - Operator precedence](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence#table)\\r\\n\\r\\n## 7.1 Logical operators\\r\\n\\r\\n### 7.1.1 Logical AND operator\\r\\n\\r\\n`a && b` 會喺 `a` 係任何 truthy value 既情況下得出 `b`，否則得出 `a`。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\ntrue && 10      // 10\\r\\n5 && 10         // 5\\r\\nnull && 10      // null\\r\\nundefined && 10 // undefined\\r\\n0 && 10         // 0\\r\\n\\\"\\\" && 10        // \\\"\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 7.1.2 Logical OR operator\\r\\n\\r\\n`a || b` 會喺 `a` 係任何 falsy value 既情況下得出 `b`，否則得出 `a`。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\ntrue || 10      // true\\r\\n5 || 10         // 5\\r\\nnull || 10      // 10\\r\\nundefined || 10 // 10\\r\\n0 || 10         // 10\\r\\n\\\"\\\" || 10        // 10\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 7.1.3 Nullish coalescing operator\\r\\n\\r\\n`a ?? b` 只會喺 `a` 係 `null` 或者 `undefined` 既情況下得出 `b`，否則得出 `a`。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\ntrue ?? 10      // true\\r\\n5 ?? 10         // 5\\r\\nnull ?? 10      // 10\\r\\nundefined ?? 10 // 10\\r\\n0 ?? 10         // 0\\r\\n\\\"\\\" ?? 10        // \\\"\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 7.2 Ternary/conditional operator\\r\\n\\r\\n`a ? b : c` 會喺 `a` 係任何 truthy value 既情況下得出 `b`，否則得出 `c`。\\r\\n\\r\\n而呢個 statement 係 short circuit evaluation，`b`、`c` 執唔執行視乎 `a` 既 value：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\na ? foo() : bar()\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   `a` 係 truthy 既情況下會執行 `foo()`，唔會執行 `bar()`\\r\\n-   `a` 係 falsy 既情況下會執行 `bar()`，唔會執行 `foo()`\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nlet bar = 5;\\r\\n\\r\\n// ternary operator\\r\\nbar = bar > 3 ? 10 : \\\"false\\\";\\r\\n\\r\\n// 相等於\\r\\nif (bar > 3) {\\r\\n    bar = 10;\\r\\n} else {\\r\\n    bar = \\\"false\\\";\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 7.3 Assignment operators\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nlet bar = 10;\\r\\nbar++;    // 相等於 bar = bar + 1;\\r\\nbar--;    // 相等於 bar = bar - 1;\\r\\nbar += 5; // 相等於 bar = bar + 5;\\r\\nbar -= 5; // 相等於 bar = bar - 5;\\r\\nbar *= 5; // 相等於 bar = bar * 5;\\r\\nbar /= 5; // 相等於 bar = bar / 5;\\r\\nbar %= 5; // 相等於 bar = bar % 5;\\r\\n\\r\\nbar = 2;\\r\\nbar **= 3; // 相等於 bar = Math.pow(bar, 3);\\r\\n```\\r\\n\\r\\n### 7.3.1 Logical AND assignment operator\\r\\n\\r\\n`a &&= b;` 會喺 `a` 係任何 truthy value 既情況下 assign `b` 去 `a`，否則咩都唔做。\\r\\n\\r\\n而呢個 statement 係 short circuit evaluation——只有當 `a` 係 truthy，`b` 先會執行。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nlet bar = 10;\\r\\nbar &&= 5; // 相等於 bar && (bar = 5);\\r\\nbar // 5\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 7.3.2 Logical OR assignment operator\\r\\n\\r\\n`a ||= b;` 會喺 `a` 係任何 falsy value 既情況下 assign `b` 去 `a`，否則咩都唔做。\\r\\n\\r\\n而呢個 statement 係 short circuit evaluation——只有當 `a` 係 falsy，`b` 先會執行。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nlet bar = 0;\\r\\nbar ||= 10; // 相等於 bar || (bar = 10);\\r\\nbar // 10\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 7.3.3 Logical nullish assignment operator\\r\\n\\r\\n`a ??= b;` 只會喺 `a` 係 `null` 或者 `undefined` 既情況下 assign `b` 去 `a`，否則咩都唔做。\\r\\n\\r\\n而呢個 statement 係 short circuit evaluation——只有當 `a` 係 `null` 或者 `undefined`，`b` 先會執行。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nlet bar = 0;\\r\\nbar ??= 10; // 相等於 bar ?? (bar = 10);\\r\\nbar // 0\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 7.4 Optional chaining\\r\\n\\r\\n當我地 call `a.b.c.d` 咁既 chaining 既時候，視乎情況，我地有時需要考慮到 `a`、`b`、`c` 有可能係 nullish（`undefined` 或者 `null`）而加上唔少 check nullish value 既 code，否則可能會因為 nullish value 而導致 chaining 既時候出現 `TypeError: Cannot read property 'x' of undefined/null`。\\r\\n\\r\\n用返上面個例子，如果利用 optional chaining，就可以咁寫：`a?.b?.c?.d`，而最少只需要 declare `a` 就已經可以避免到因為 nullish value 而導致既 `TypeError`。\\r\\n\\r\\n另一個例子 `a.b().c.d` 寫成 `a?.b?.()?.c?.d` 就可以 handle 到 `a`、`b`、`b()`、`c` 係 nullish。不過有一點要留意，就係 optional chaining 都唔係無敵，因為 `a?.b?.` 後面有 `()`，所以 `b` 就必須係 nullish 或者一個 valid 既 function object，否則就會出 `TypeError: a?.b is not a function`。\\r\\n\\r\\n| 情境                                 | 例子               |\\r\\n| :----------------------------------- | :----------------- |\\r\\n| Access 一個 object/array 既 property | `o?.p`、`o?.[\\\"p\\\"]` |\\r\\n| Call 一個 function                   | `f?.()`            |\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst obj = {\\r\\n\\tfoo: () => 123,\\r\\n\\tbar: null,\\r\\n};\\r\\nconst obj2 = null;\\r\\n\\r\\nobj?.foo?.() // 123\\r\\nobj?.bar?.() // undefined\\r\\nobj?.bar?.(blah) // undefined\\r\\nobj?.[\\\"bar\\\"] // undefined\\r\\n\\r\\nobj2?.foo // undefined\\r\\nobj2?.blah() // undefined\\r\\nobj2?.a?.b?.c?.d?.e // undefined\\r\\n\\r\\nobj3 // ReferenceError\\r\\n```\\r\\n\\r\\n注意：Optional chaining 係用唔到喺 assignment 既左手邊，`a?.b = 123` 係會出 `SyntaxError: Invalid left-hand side in assignment`。\\r\\n\\r\\n---\\r\\n\\r\\n# 8 Deep clone\\r\\n\\r\\nDeep clone 同 shallow clone 既分別在於 clone 既深度。Shallow clone 指既係只會 clone 最表面果層，裡面如果有 nested objects，會用返相同既 object references，如果改左裡面既 nested object，就會影響到新舊兩個 objects；而 deep clone 就會 recursively 咁 clone 到去最入面果層，令到新既 object 同舊既 object 完全冇關係，無論點改其中一個 object，另一個 object 都唔會受到任何影響。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [StackOverflow - What is the most efficient way to deep clone an object in JavaScript?](https://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-deep-clone-an-object-in-javascript)\\r\\n\\r\\n## 8.1 `JSON`\\r\\n\\r\\n最簡單亦適用於一般既 JSON data deep clone 場景既方法就係將 object serialize 成 string，再 deserialize 成全新既 object，裡面既 nested objects 都係全新。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nlet obj = { k: \\\"v\\\", kk: [1, 2] };\\r\\nobj = JSON.parse(JSON.stringify(obj));\\r\\nobj // {k: \\\"v\\\", kk: [1, 2]}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 8.2 Lodash library\\r\\n\\r\\n先透過 `<script>` load Lodash，或者以 `npm install` + `import` 語句 import Lodash。\\r\\n\\r\\nLodash 既 utility object 係 `_`。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nlet obj = { k: \\\"v\\\", kk: [1, 2] };\\r\\nobj = _.cloneDeep(obj);\\r\\nobj // {k: \\\"v\\\", kk: [1, 2]}\\r\\n```\\r\\n\";","export default \"# 2 React 實作\\r\\n\\r\\n我地已經安裝曬需要既 IDE、IDE plugin 同埋對 React project 既文件目錄有初步既認識，之後我地可以寫一個非常簡單、純 front-end 冇 back-end 既 React project 黎學下 React、React hooks、JSX syntax、ES6+ 既 JavaScript（ECMAScript）新功能。\\r\\n\\r\\n## 2.1 需求\\r\\n\\r\\n有一次面試，面試官畀一個鐘我寫一個 calculator program 出黎，可以用 Java 或者 web 寫，功能不限。咁我當然揀用 web（HTML+JavaScript）寫啦。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 做法既考慮因素\\r\\n\\r\\n我揀左 React，而我既考慮因素如下：\\r\\n\\r\\n-   如果用 Java 寫\\r\\n    -   一係就 command line，用 `Scanner` 讀取 user input，冇介面既 calculator 就有啲怪\\r\\n    -   一係就用 Swing、JavaFX 等等既 GUI framework 黎寫，有埋介面\\r\\n        -   我以前寫過唔少 JavaFX 既程式\\r\\n        -   但係鑑於 JavaFX 要 customize 得個介面靚係唔會比 HTML+CSS 易寫\\r\\n-   如果用 web 寫\\r\\n    -   介面容易寫，CSS customize layout 又唔難\\r\\n    -   React\\r\\n        -   有 one-way binding\\r\\n        -   用 Create-React-App 生成一個 React template 出黎改，好方便\\r\\n        -   如果有需要，可以裝 npm packages\\r\\n        -   而家寫 React app 有曬 hot reloading，就算手動 refresh 都快過 Java\\r\\n-   做法\\r\\n    -   最 basic 既 calulator 係冇算式，每次只係將兩個數用一個 operator（加減乘除）運算出結果\\r\\n    -   好啲既做法係用戶 append 數字同 operators 落一條 equation 度，個 equation 支援好幾個數，中間有好幾個 operators（加減乘除，甚至括號）\\r\\n        -   時間有限，唔想寫 algorithm（queue、FIFO）\\r\\n        -   最簡單就係 pass 成條 calculator 算式既 string 畀個 programming language 自己計\\r\\n        -   舊版 Java 有 Nashorn JavaScript engine，不過 Java 15 移除左，所以如果將來用新版 Java，呢啲 code 可能會用唔到。雖然我用 Java 8，但最好都係唔寫比較好\\r\\n        -   JavaScript 有 `eval()` function，我地 calculator 限制數字同幾個 operators，所以唔會有其他人所講既 security risk\\r\\n    -   用邊個 programming language 以及方法，都一樣會有浮點問題（`0.1` + `0.2` 唔等於 `0.3` 而係等於 `0.30000000000000004`），所以最後都係考慮返易唔易寫、UX、功能數量\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 介面設計\\r\\n\\r\\n因為我果日帶左部 MacBook Pro 去面試，而 macOS 自帶既 Calculator app 係咁既樣：\\r\\n\\r\\n![](blog/2021-05/react-calculator/macos-calculator.png)\\r\\n\\r\\n咁我地個 calculator 可以參考佢個排版。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```plaintext\\r\\n       3\\r\\n     1+2\\r\\nAC ( ) ⌫\\r\\n 7 8 9 ÷\\r\\n 4 5 6 ×\\r\\n 1 2 3 −\\r\\n  0  . +\\r\\n```\\r\\n\\r\\n除左答案，我地會顯示埋條算式。`AC` 係 all clear，會刪除曬所有輸入左既字；`⌫` 係 backspace，會刪除最後一個字。\\r\\n\\r\\n注意：我地呢個 calculator 係唔需要一個 `=` 按鍵，咁係因為我地會令佢不斷自動計答案出黎，唔需要撳 `=` 按鍵先識出答案。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.4 動手寫\\r\\n\\r\\n### 2.4.1 用 Create-React-App 建立 project\\r\\n\\r\\nMake sure 你已經安裝左 npm 同 Create-React-App，如果未，睇返上一篇：[React JS 網頁開發筆記（一）](/blog/react-web-1)\\r\\n\\r\\n首先是但搵個 folder 執行以下 command：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```bash\\r\\ncreate-react-app calculator\\r\\n```\\r\\n\\r\\n等一陣，行完之後執行 command：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```bash\\r\\nnpm start\\r\\n```\\r\\n\\r\\n就會見到瀏覽器自動彈出我地既網頁，網址係 [http://localhost:3000](http://localhost:3000)。\\r\\n\\r\\n---\\r\\n\\r\\n### 2.4.2 寫 React code\\r\\n\\r\\n根據上一篇 React blog post —— [React JS 網頁開發筆記（一） - 了解 src 內既文件](/blog/react-web-1#1431-%E4%BA%86%E8%A7%A3-src-%E5%85%A7%E6%97%A2%E6%96%87%E4%BB%B6)，我地先刪除多餘既文件同 code，之後我地就可以加我地既 calculator code 啦。\\r\\n\\r\\n#### 2.4.2.1 `Calculator`\\r\\n\\r\\n首先喺 `src` folder 裡面，開一個 folder 叫 `components`，然後喺裡面再開一個 folder 叫 `Calculator`，然後喺裡面開一個檔案叫 `index.js`。喺裡面打：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nfunction Calculator(props) {\\r\\n    return <></>;\\r\\n}\\r\\n\\r\\nexport default Calculator;\\r\\nexport { Calculator };\\r\\n```\\r\\n\\r\\n`return <></>` 係 JSX 既寫法，詳情睇呢度：[2.6.1 JSX 語法、Babel、Webpack](#261-jsx-語法babelwebpack)\\r\\n\\r\\n要做到上面設計既排版，我地會用 `<table>`。將 `return` 後面改成：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```html\\r\\n<table>\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th colspan=\\\"{4}\\\">Output</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr>\\r\\n            <td colspan=\\\"{4}\\\">Equation</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td>AC</td>\\r\\n            <td>(</td>\\r\\n            <td>)</td>\\r\\n            <td>⌫</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td>7</td>\\r\\n            <td>8</td>\\r\\n            <td>9</td>\\r\\n            <td>÷</td>\\r\\n        </tr>\\r\\n        <!-- 等等 -->\\r\\n    </tbody>\\r\\n</table>\\r\\n```\\r\\n\\r\\n每一個 `<tr>` 都代表一層，而每一個 `<td>` 就代表一個 table cell。照住呢個 format 將上面改成 4x7。\\r\\n\\r\\nCSS 少不了，喺同一個 folder 下開一個 `index.css` 檔，類似：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```css\\r\\ntable {\\r\\n    border-collapse: collapse;\\r\\n    border: 1px solid gray;\\r\\n}\\r\\n\\r\\nth,\\r\\ntd {\\r\\n    padding: 8px;\\r\\n    text-align: center;\\r\\n    width: 2em;\\r\\n    line-height: 1.75em;\\r\\n    border: 1px solid gray;\\r\\n}\\r\\n```\\r\\n\\r\\n#### 2.4.2.2 `CalculatorButton`\\r\\n\\r\\n之後喺 `src/components` 加一個 `CalculatorButton` folder，喺裡面加一個 `index.js` 檔：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```html\\r\\nfunction CalculatorButton(props) {\\r\\n    const { children, ...rest } = props;\\r\\n\\r\\n    return (\\r\\n        <td className=\\\"calculator-button\\\" {...rest}>\\r\\n            {children}\\r\\n        </td>\\r\\n    );\\r\\n}\\r\\n\\r\\nexport default CalculatorButton;\\r\\nexport { CalculatorButton };\\r\\n```\\r\\n\\r\\n#### 2.4.2.3 令 `Calculator` 使用 `CalculatorButton`\\r\\n\\r\\n去返 `Calculator/index.js`，我地可以喺最頂加呢句：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nimport CalculatorButton from \\\"../CalculatorButton\\\";\\r\\n```\\r\\n\\r\\n喺個 function component 裡面我地定義一個新 function，呢個 function 會令我地之後撳掣既時候，Chrome developer tools 既 console 顯示撳左既按鍵既字。\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst handleClick = (e) => {\\r\\n    console.log(e);\\r\\n};\\r\\n```\\r\\n\\r\\n然後將所有：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```html\\r\\n<td>1</td>\\r\\n```\\r\\n\\r\\n改成：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```html\\r\\n<CalculatorButton onClick={(e) => handleClick(\\\"1\\\")}>1</CalculatorButton>\\r\\n```\\r\\n\\r\\n呢度我地 attach 左一個 `onClick` 既 event handler，當我地撳一個按鍵，就會 call 裡面既 function。\\r\\n\\r\\n#### 2.4.2.4 修改算式\\r\\n\\r\\n喺 `Calculator/index.js` 頂頭加呢句：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nimport { useState } from \\\"react\\\";\\r\\n```\\r\\n\\r\\n再喺 function component 裡面加呢句：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst [equation, setEquation] = useState(\\\"0\\\");\\r\\n```\\r\\n\\r\\n呢句畀我地定義一個 React 明既 variable 同埋佢對應既 setter，當 setter 被 call，React 會安排去 update `equation` 既值。\\r\\n\\r\\n我地再將 `<td colspan=\\\"{4}\\\">Equation</td>` 改成 `<td colspan=\\\"{4}\\\">{equation}</td>`，咁 React 就會 interpolate `equation` 既值入呢個 `<td>` 裡面，將 `0` 顯示出黎。\\r\\n\\r\\n要做到撳數字或者運算符號可以令 `equation` 後面加插果個字，就要將 `handleClick` function 既 method body 加入一句：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nsetEquation(equation + e);\\r\\n```\\r\\n\\r\\n不過 `AC` 同 `⌫` 既處理方式會有唔同，所以我地要針對性咁改。\\r\\n\\r\\n首先，我地改 `AC` 按鍵既 event handler。將 `onClick` 用既 function 換成一個新既：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```html\\r\\n<CalculatorButton onClick={() => handleClickAC()}>AC</CalculatorButton>\\r\\n```\\r\\n\\r\\n並且喺 function component 裡面加上呢個 function：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst handleClickAC = () => {\\r\\n    console.log(\\\"AC is clicked!\\\");\\r\\n    setEquation(\\\"0\\\");\\r\\n};\\r\\n```\\r\\n\\r\\n至於 `⌫` 按鍵，我地要刪除最後輸入既字。將 `onClick` 用既 function 換成一個新既：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```html\\r\\n<CalculatorButton onClick={() => handleClickBackspace()}>⌫</CalculatorButton>\\r\\n```\\r\\n\\r\\n並且喺 function component 裡面加上呢個 function：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst handleClickBackspace = () => {\\r\\n    console.log(\\\"Backspace is clicked!\\\");\\r\\n    setEquation(equation.substring(0, equation.length - 1));\\r\\n};\\r\\n```\\r\\n\\r\\n`substring` 係 string 既一個 function，第一個 argument 係 start index，喺我地呢個情況就係 `equation` 值既第一個字，第二個 argument 係 end index + 1（`\\\"123\\\".substring(0, 2)` 出 `12` 而唔係 `123`，因為 end index 唔似 start index，後者係 0-based），喺我地呢個情況就係 `equation` 值既長度減 2。\\r\\n\\r\\n參考 MDN `substring`：[String.prototype.substring()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring)\\r\\n\\r\\n#### 2.4.2.5 運算答案\\r\\n\\r\\n喺 function component 裡面加呢句：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nconst [output, setOutput] = useState(\\\"0\\\");\\r\\n```\\r\\n\\r\\n再將 `<th colspan=\\\"{4}\\\">Output</th>` 改成 `<th colspan=\\\"{4}\\\">{output}</th>`。\\r\\n\\r\\n我地會用 React 自帶既 `useEffect` hook 黎將 `output` bind 落 `equation` 既運算結果。\\r\\n\\r\\n將 `Calculator/index.js` 既頂頭 `import` 改一改：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nimport { useState, useEffect } from \\\"react\\\";\\r\\n```\\r\\n\\r\\n喺 function component 裡面加呢段：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nuseEffect(() => {\\r\\n    try {\\r\\n        setOutput(eval(equation.replace(/−/g, \\\"-\\\")\\r\\n                               .replace(/×/g, \\\"*\\\")\\r\\n                               .replace(/÷/g, \\\"/\\\")));\\r\\n    } catch (err) {\\r\\n        // do nothing\\r\\n    }\\r\\n}, [equation]);\\r\\n```\\r\\n\\r\\n`useEffect` 既第二個 argument `[equation]` 係一個 array，React 會 mon 住裡面既 variable(s)，如果 value(s) 改左就會執行第一個 argument 既 arrow function（`() => {}`）既 method body，用 `eval()` 黎運算我地既算式。`equation` 裡面除左 `+` 號，其他運算符號都要改返做 keyboard 果隻寫法。\\r\\n\\r\\n---\\r\\n\\r\\n### 2.4.3 為 IE 瀏覽器 polyfill\\r\\n\\r\\n為左要令個網頁喺 Internet Explorer 11 瀏覽器上面行得到，我地要為佢 polyfill 啲新版 JavaScript 既 syntax。有一個 library 可以做到呢樣野。\\r\\n\\r\\n首先，我地執行：\\r\\n\\r\\n```bash\\r\\nnpm i react-app-polyfill\\r\\n```\\r\\n\\r\\n然後喺 `package.json` 既 `browserslist` 既 `production` 同 `development` 裡面加上 `ie 11`：\\r\\n\\r\\n```json\\r\\n\\\"browserslist\\\": {\\r\\n    \\\"production\\\": [\\r\\n        \\\">0.2%\\\",\\r\\n        \\\"not dead\\\",\\r\\n        \\\"not op_mini all\\\",\\r\\n        \\\"ie 11\\\"\\r\\n    ],\\r\\n    \\\"development\\\": [\\r\\n        \\\"last 1 chrome version\\\",\\r\\n        \\\"last 1 firefox version\\\",\\r\\n        \\\"last 1 safari version\\\",\\r\\n        \\\"ie 11\\\"\\r\\n    ]\\r\\n}\\r\\n```\\r\\n\\r\\n然後喺 `src/index.js` 既最頂頭加上：\\r\\n\\r\\n```js\\r\\nimport \\\"react-app-polyfill/ie11\\\";\\r\\nimport \\\"react-app-polyfill/stable\\\";\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.5 成果\\r\\n\\r\\n改良一下 CSS 就會得到一個好靚仔既 calculator！\\r\\n\\r\\n![](blog/2021-05/react-calculator/react-calculator.png)\\r\\n\\r\\n再改良一下 JavaScript 就可以解決 `0.1` + `0.2` 唔等於 `0.3` 既問題。\\r\\n\\r\\n![](blog/2021-05/react-calculator/precision-issue-solved.png)\\r\\n\\r\\n[Demo - React Calculator](https://blackr1234.github.io/calculator/)\\r\\n\\r\\n---\\r\\n\\r\\n## 2.6 心得\\r\\n\\r\\n### 2.6.1 JSX 語法、Babel、Webpack\\r\\n\\r\\n注意 `return <></>` 係將 JavaScript 既 `return` keyword 同 HTML 既 tags `<></>`（React fragment）寫埋一齊。呢一個並唔係正常既 JavaScript，而係 JSX syntax。目前只有 React 咁寫，係 React 既賣點之一，Angular 同 Vue 都冇（至少佢地既 project template 冇預你用）。因為 Create-React-App 幫我地起呢個 project template 既時候已經加左必須既 React dependencies，而呢啲 React dependencies 背後又各自有佢地既 dependencies，包括 Babel 同 Webpack。\\r\\n\\r\\nBabel 會將 JSX 轉化為正常瀏覽器睇得明既 JavaScript，亦會 polyfill 部分 JavaScript ES6+ 既新 syntax 或者 functions。Polyfill 既意思係做一層處理，將新版 ES6+ 既 JavaScript 寫法換成舊版 JavaScript 既寫法，令大部分瀏覽器（包括好舊既版本，只睇得明舊版 JavaScript）都睇得明，行得到。Babel 會喺我地 compile 或者 build 個 project 既時候運行，最後我地得到既 for production deployment 用既 code 係經過 Babel 同 Webpack 處理之後既產物，亦都係 minified 左。\\r\\n\\r\\nMinification 即係我地寫完曬所有 code 之後，Webpack 會將我既啲 code 壓縮，做法就係將所有 variable 名同 function 名都有咁短改咁短，變曬 abcde，同埋冇曬啲隔行。因為其實啲 variable 名、function 名只係為左我地 developer 容易理解所以先用英文詞語寫，對於瀏覽器其實長啲短啲就算換曬 abcde 都冇所謂，因為只要 syntax 岩，reference 岩曬，成件事一樣會 work。因為當用戶上一個網站既時候，瀏覽器需要下載 HTML、CSS、JavaScript 等等既資源，下載速度同所需時間係一個問題。如果我地 minify 左我地既 code，傳輸果時就可以慳返啲 bandwidth，理論上用戶都可以快啲見到個頁面。\\r\\n\\r\\n參考 React 官網：[What's a JSX Transform?](https://zh-hant.reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html#whats-a-jsx-transform)\\r\\n\\r\\n> Browsers don't understand JSX out of the box, so most React users rely on a compiler like Babel or TypeScript to transform JSX code into regular JavaScript. Many preconfigured toolkits like Create React App or Next.js also include a JSX transform under the hood.\\r\\n\\r\\n---\\r\\n\\r\\n### 2.6.2 Can I use\\r\\n\\r\\n如果我地想知道邊啲功能有可能有瀏覽器支援問題，或者知道到底適用於現時世界上幾多百分率既瀏覽器，我地可以用 [caniuse.com](https://caniuse.com/)。我地可以喺 Can I use 後面輸入例如：\\r\\n\\r\\n-   `blockquote`（HTML tag）\\r\\n-   `draggable`（HTML attribute）\\r\\n-   `user-select`（CSS property）\\r\\n-   `::before`（CSS selector）\\r\\n-   `Array.filter`（JavaScript API）\\r\\n\\r\\nFirefox 瀏覽器既公司 Mozilla 都有一個 [MDN 網站](https://developer.mozilla.org/en-US/)可以畀我地睇到 reference，同埋瀏覽器支援情況。\\r\\n\";","export default \"# 1 Cookie 同 local storage 既比較\\r\\n\\r\\n## 1.1 簡單 fact sheet\\r\\n\\r\\n-   瀏覽器 call back-end server API 既時候會自動帶埋 cookies\\r\\n-   Call back-end server API 要用到 HTTP header 既話，需要執行 JavaScript\\r\\n-   HttpOnly 既 cookie 只會畀瀏覽器使用，連 JavaScript 都 access 唔到\\r\\n-   主要兩大類型既安全問題：CSRF 同 XSS 攻擊\\r\\n\\r\\n---\\r\\n\\r\\n## 1.2 比較\\r\\n\\r\\n| 考慮／儲存方式     | Cookie                           | Local storage          |\\r\\n| ------------------ | -------------------------------- | ---------------------- |\\r\\n| 限制               | 有指定 domain，做唔到 cross site | 必須用 JavaScript 提取 |\\r\\n| 安全隱憂：CSRF     | 有，但可防止 ①                   | 冇 ②                   |\\r\\n| 安全隱憂：XSS 攻擊 | 有，但可防止 ③                   | 有 ④                   |\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   ①：網站可以用 SameSite cookie，咁就算用戶上錯左惡意網站，因為佢喺該網站（例如銀行）既 cookies 同惡意網站並唔係 SameSite，所以重要既 cookie 就唔會被送出；POST API 加上 CSRF token 可以防止 CSRF，因為必須要用 JavaScript 先可以將 HTTP header 既 CSRF token cookie 抄到 header。\\r\\n-   ②：因為需要用 JavaScript 黎儲取 local storage，所以冇 CSRF 既隱憂。\\r\\n-   ③：如果 cookie 既 HttpOnly 係 true，JavaScript 就無法讀取該 cookie；但如果係 false，亦會受到 XSS 攻擊。\\r\\n-   ④：因為 XSS 攻擊就係利用惡意既 JavaScript 黎喺用戶既瀏覽器任意執行，而 local storage 係用 JavaScript 存取。\\r\\n\\r\\n結論：我地應該用 cookie 儲存敏感既 session ID 或者 access token 資料。\\r\\n\\r\\n註：cookie 既 SameSite 屬性同 HttpOnly 屬性需要瀏覽器支援。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Cross-site request forgery - Cookie-to-header token（Wiki）](https://en.wikipedia.org/wiki/Cross-site_request_forgery#Cookie-to-header_token)\\r\\n-   [OWASP - Browsers Supporting HttpOnly](https://owasp.org/www-community/HttpOnly#browsers-supporting-httponly)\\r\\n-   [Chrome 80 後針對第三方 Cookie 的規則調整 (default SameSite=Lax)](https://ianhung0529.medium.com/chrome-80-%E5%BE%8C%E9%87%9D%E5%B0%8D%E7%AC%AC%E4%B8%89%E6%96%B9-cookie-%E7%9A%84%E8%A6%8F%E5%89%87%E8%AA%BF%E6%95%B4-default-samesite-lax-aaba0bc785a3)\\r\\n-   [Cross-Site Request Forgery Prevention Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html)\\r\\n\\r\\n---\\r\\n\\r\\n# 2 Session ID 同 access token 既比較\\r\\n\\r\\n用戶使用一般網上服務（銀行除外）好多時都會希望喺下一次訪問網頁既時候可能保持登入狀態，所以用戶一般都唔會自行登出網頁，而網頁為左做到咁，正常都會將用戶登入成功既資訊儲存喺用戶既瀏覽器。瀏覽器可以用到 cookie（一般做法）或者 local storage。用戶資訊可以係當用戶喺登入果時提供既登入帳號同密碼，但因為安全問題，將帳號同密碼儲存喺瀏覽器度（唔加密）係好危險，所以正常做法都係將一個可以對應到 back-end server session 既 session ID 儲存喺瀏覽器既 cookie（都可以用 local storage，但需要用到 JavaScript）。\\r\\n\\r\\nSession ID 同 access token 都係為左一個共同既目的，就係喺驗證左用戶既身份之後，方便後續對 back-end server 既 API call，咁用戶使用網頁既功能既時候，front-end 網頁就唔需要再提供密碼，而係提供 session ID 或者 access token。\\r\\n\\r\\n我地可以有以下 4 種配搭：\\r\\n\\r\\n|   認證方式   | 瀏覽器存取方式 |\\r\\n| :----------: | :------------: |\\r\\n|  Session ID  |     Cookie     |\\r\\n|  Session ID  | Local storage  |\\r\\n| Access token |     Cookie     |\\r\\n| Access token | Local storage  |\\r\\n\\r\\n## 2.1 Session ID 既做法\\r\\n\\r\\n簡單咁講，Session ID 既做法就係當用戶登入成功之後，back-end server 會生成一啲用戶登入既狀態數據存放喺 back-end server，可以係 database 或者 cache。然後，back-end server 會返回一個 session ID 畀 front-end 網頁作為對應返果啲數據既一個密碼，可以係以 HTTP header `Set-Cookie: \\\"sessionId=ABCDEFG12345\\\"` 而 front-end 網頁會將呢個 session ID 記低，之後 call back-end server 既 API 去為用戶進行唔同既操作既時候就會放埋落個 API call 度一同送出。用戶成功登入之後，後續任何 call back-end server 既操作都會令 back-end server 驗證 API call 裡面既 session ID，睇下係邊個用戶操作緊、用戶有咩權限、用戶既帳號仲係咪正常既狀態。\\r\\n\\r\\n一般黎講，啲網頁考慮到下次用戶重新開啟網頁既時候都可以 keep 返用戶成功登入左既狀態，就會喺佢由 back-end server 收到呢個 session ID 值之後將佢儲低喺瀏覽器既 cookies 或者 local storage，咁下次重新開返個網頁出黎果陣，就可以喺 cookies 或者 local storage 讀取返用戶既 session ID 值。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 Access token 既做法\\r\\n\\r\\nAccess token 既做法係當用戶登入成功之後，back-end server 會生成一條好長既 token 值畀 front-end 網頁，但唔會將用戶既狀態數據存放喺 back-end server；相反，用戶既狀態數據就正正夾雜左喺個 token 裡面。\\r\\n\\r\\n因為密碼學既關係，token 係幾乎冇可能畀人修改到而令 back-end server 信左條修改左既 token。喺生成 token 既時候，back-end server 會用到一個密碼黎將資料進行 HMAC 處理，然後將 HMAC 既值放到 token 裡面，作為簽署。\\r\\n\\r\\nAccess token 既例子有 JSON Web Token（簡稱 JWT），而應用方面就有 OAuth。\\r\\n\\r\\n有一種做法係用 refresh token 黎 renew access token，而 refresh token 既 expiry set 好長，access token 既 expiry set 好短如 15 分鐘。\\r\\n\\r\\n### 2.2.1 伏位\\r\\n\\r\\n現時網絡上有大量網站吹捧 JWT，我地可以從唔少既網上 sample code 睇到，一般 implement JWT 既 code，例如用 Spring framework 寫既，通常都只係提供最基本既功能，就係 generate token 同埋喺 access API 既時候 intercept request（Spring 既 filter）然後 validate 個 token。\\r\\n\\r\\n但係如果要完善整個設計，問題就在於：\\r\\n\\r\\n-   Access token 既 expiry？\\r\\n    -   到底應該 set 幾長？15 分鐘定係長達一星期或者一個月？\\r\\n    -   如果 set 得太長而遇到 access token 畀人偷左，咁只能夠改 server 既 secret 或者 private key，咁會影響所有用戶？\\r\\n-   Renew 機制？\\r\\n    -   注意 mobile app 既話需要長期登入，亦要考慮用戶可能會有一段時間冇開個 mobile app。\\r\\n    -   每次 access API 都攞一次新既 access token？\\r\\n    -   如果加入 refresh token，咁都有畀人偷左 refresh token 既風險。\\r\\n-   Revoke 機制？\\r\\n    -   如果用戶帳號畀 admin 修改左，例如降低權限、即時停用，唔 hit database 或者 cache 去 check 而淨係睇住個 token 上既資料係冇辦法做到即時生效，只能等個 token 過期。\\r\\n    -   考慮到 token 可能會畀黑客偷左，如果要用 database 或者 cache 黎 whitelist 或者 blacklist token，或者每次 access API 都 hit database 去比較 token 既 issued-at 同 user record 既更新時間，咁會增加 latency，就變左同 session ID 冇分別。\\r\\n    -   考慮到以上問題，其實 stateless access token 唔太可行，但 access token 既原意係想 stateless，因為 stateless 容易做到 scalable。\\r\\n-   Call API 果陣帶埋個 token，咁個 token 應該放喺 Authorization header（Bearer）定係 cookie？\\r\\n    -   如果放喺 header，就必須用到 JavaScript，個 cookie 唔可以係 HttpOnly，咁就有可能受到 XSS 攻擊。\\r\\n\\r\\n---\\r\\n\\r\\n# 3 要面對既安全問題\\r\\n\\r\\n## 3.1 CSRF\\r\\n\\r\\n瀏覽器係會將用戶既 cookies 夾埋落每一個 HTTP call 度送出去 back-end server。如果用戶上既一個佢自以為安全但實際上係畀黑客入侵左或者根本係黑客製造出黎既網站，而呢個網站上既網頁 call 左一個銀行既 API，咁就有可能出事。呢個網頁可以用一個 `<img>` tag，例如 `<img src=\\\"https://some.bank.com/sendMoney?to=hacker888&money=10000\\\" />`，咁瀏覽器可能會當左佢係一張圖片而 load 條 URL 去下載圖片，但係 load 呢條 URL 既時候就會變相去左 call 銀行既 API，因為一般既 cookies 會由瀏覽器加入 API call 裡面，咁就令個 back-end server 收到任何形式可以代表用戶已經登入左既 cookie（session ID 或者 access token 同樣受害），最後用戶既錢就過左畀黑客戶口。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [跨站請求偽造（Wiki）](https://zh.wikipedia.org/zh-hk/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0)\\r\\n\\r\\n### 3.1.1 解決方法\\r\\n\\r\\n-   將 session ID 儲喺 local storage，而唔係 cookies，不過用 local storage 又有 XSS 攻擊既問題\\r\\n-   將 session ID 儲喺 cookies，但必須係 SameSite\\r\\n-   加入 CSRF token\\r\\n\\r\\n註：cookie 既 SameSite 屬性同 HttpOnly 屬性需要瀏覽器支援。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 XSS 攻擊\\r\\n\\r\\n大部分網站為左快啲完成開發，都可能會用到一啲現成既開源 CSS/JavaScript libraries，而呢啲 libraries 背後亦有可能用左大量既其他開源 libraries。開源項目雖然話係開放源碼畀任何人都睇到，但必須要有人睇過然後發掘到個問題出黎先至有用。如果唔計唔開源既項目有低機率因為員工私自惡意修改（Man-in-the-middle attack），開源項目比起唔開源既項目係比較容易畀黑客修改到，從而植入惡意代碼。\\r\\n\\r\\n呢啲惡意代碼想做乜都得，例如：\\r\\n\\r\\n-   讀取用戶非 HttpOnly 既 cookies 或者 local storage，然後去 call 銀行既 API，令銀行將用戶既錢過畀黑客戶口\\r\\n-   將用戶既 cookies 或者 local storage send 去黑客既一個 back-end server 既 API，然後儲存低，作日後之用\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [跨網站指令碼（Wiki）](https://zh.wikipedia.org/zh-hk/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC)\\r\\n\\r\\n### 3.2.1 解決方法\\r\\n\\r\\n-   將 session ID 儲喺 cookies，但必須係 HttpOnly，咁樣可以防止 JavaScript 讀取到，但係都要用戶既瀏覽器支援 HttpOnly 既屬性先得\\r\\n\\r\\n---\\r\\n\\r\\n# 4 Scalability\\r\\n\\r\\n如果用 access token 既設計完全唔 hit database，理論上係好 scalable，因為任何一個 resource server 只需要驗證個 access token 既 signature 係咪 valid 就得。但實際上冇人會咁做，因為為左完善既權限機制，最終都係要 hit 到 database。比較好既做法可以係存取一個 distributed cache，例如 Redis，咁一樣可以做到 scalable，而且係 stateless。不過同樣地，session ID 既方法都可以用 distributed cache，所以其實兩者喺 scalability 上都冇乜分別。\\r\\n\\r\\n---\\r\\n\\r\\n# 5 EU 法律問題：通知用戶\\r\\n\\r\\n大家以為用左 cookie 先至需要彈 banner 通知用戶，但其實 EU 法律（如 GDPR）上，只要個網站有追蹤用戶，無論係用 cookie 定係 local storage 黎儲存 session ID 定係 access token，都一樣要出 banner 通知用戶。\\r\\n\\r\\n---\\r\\n\\r\\n# 6 Access token 可唔可以取代 session ID？\\r\\n\\r\\n唔可以，但 access token 都有佢既特別 use cases，例如：\\r\\n\\r\\n-   下載文件\\r\\n-   出現喺 email 既 URL（query string `?token=xxx`），配合短至十幾分鐘至半小時既 expiry。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [JSON Web Tokens Suck](https://www.youtube.com/watch?v=pYeekwv3vC4)、[SFNode Meetup: Why JWTs Are Bad for Authentication - Randall Degges - 2018-01](https://www.youtube.com/watch?v=GdJ0wFi1Jyo)\\r\\n-   [JSON web tokens are NOT meant for authenticating the same user repeatedly: Use session tokens instead](https://dev.to/masakudamatsu/json-web-tokens-are-not-meant-for-authenticating-the-same-user-repeatedly-use-session-tokens-instead-pno?signin=true)\\r\\n\";","export default \"# 1 重溫 Java collections\\r\\n\\r\\n如果想重溫返關於 Java `Collection` 既 `List`、`Set` subinterfaces 以及 `Map`，可以睇返呢篇：[Java 開發筆記（三） - Array / Collection / Map](/blog/coding-java-3#335-array--collection--map)。\\r\\n\\r\\n`List`：\\r\\n\\r\\n```java\\r\\nList<String> names = new ArrayList<>();\\r\\nnames.add(\\\"Michael\\\");\\r\\nnames.add(\\\"Peter\\\");\\r\\nnames.add(\\\"Peter\\\");\\r\\nSystem.out.println(names); // [Michael, Peter, Peter]\\r\\n```\\r\\n\\r\\n解釋：`List` 支持重複既 elements。\\r\\n\\r\\n`Set`：\\r\\n\\r\\n```java\\r\\nSet<String> names = new HashSet<>();\\r\\nnames.add(\\\"Michael\\\");\\r\\nnames.add(\\\"Peter\\\");\\r\\nnames.add(\\\"Peter\\\");\\r\\nSystem.out.println(names); // [Michael, Peter]\\r\\n```\\r\\n\\r\\n解釋：`Set` 裡面既 elements 都係獨一無二，唔會重複。如果 `Set` 既 generic type 係自定義既 class，咁建議喺自定義既 class 裡面再定義 `equals(obj)` 同 `hashCode()` 既邏輯，畀 `Set` 判決呢個自定義既 class 既唔同既 objects 係咪重複。\\r\\n\\r\\n`Map`：\\r\\n\\r\\n```java\\r\\nMap<String, Integer> nameAgeMap = new HashMap<>();\\r\\nnameAgeMap.put(\\\"Alice\\\", 15);\\r\\nnameAgeMap.put(\\\"Bob\\\", 24);\\r\\nnameAgeMap.put(\\\"Alice\\\", 22);\\r\\nSystem.out.println(nameAgeMap); // {Bob=24, Alice=22}\\r\\n```\\r\\n\\r\\n解釋：`Map` 既 keys 都係獨一無二，唔會重複，一般情況都會用 Java 內建既 primitive wrapper classes 或者 `String` 作為 key 既 generic type，而 value 就更可以用自定義既 class 做 generic type。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 介紹 Java generic type\\r\\n\\r\\n上面既 `List`、`Set`、`Map` 例子裡面，我地都見到佢地有個 diamond operator `<>`，而裡面有一個 type，我地會叫 `<T>` 裡面既 type 做 generic type，咁 `Clazz<T>` 成個夾埋係表達緊 class of type，例如 `List<String>` 解 `List` of `String`，因為已經 substitute 左 `String` 落 `List<T>` 既 `T`，所以 `List<String>` 喺呢個情況就係一個 parameterized type。\\r\\n\\r\\nGeneric type 係 Java 5 加入既功能，compiler 會喺 compile time 既時候幫我 check 啲 code 寫得合唔合理，係 for type safety 既用途。例如，明明我地 declare 既係 `List<String> list`，但我地又 call `list.add(1)`，咁就好唔合理，而 compiler 就會喺 compile time 出 error，示意我地要睇下有冇寫錯 code。不過呢個功能只會應用喺 compile time，runtime 係發揮唔到任何作用，因為有 type erasure。\\r\\n\\r\\n因為 Java 既新版都會支持返舊式既 syntax，所以就算唔寫 `<Type>` 都唔會引致 compilation error。即係咁樣寫都冇問題：\\r\\n\\r\\n```java\\r\\nList rawList = new ArrayList();\\r\\nSet rawSet = new HashSet();\\r\\nMap rawMap = new HashMap();\\r\\n```\\r\\n\\r\\n呢啲冇畀 generic type 既 objects 既 class 我地會叫做 [raw type](https://docs.oracle.com/javase/tutorial/java/generics/rawTypes.html)。\\r\\n\\r\\n有啲 IDE 例如 Eclipse 默認既設定下會顯示黃線 warning，提示 raw type 係舊式寫法，應該跟足新式寫法，令我地既 code 更 strongly typed。\\r\\n\\r\\n以下係複雜少少，牽涉 subclass：\\r\\n\\r\\n```java\\r\\nList<Number> nums = new ArrayList<>();\\r\\nnums.add(1); // 1 係 int，會被 autobox 成 Integer object\\r\\nnums.add(1L); // 1 係 long，會被 autobox 成 Long object\\r\\nnums.add(1.5F); // 1.5F 係 float，會被 autobox 成 Float object\\r\\nnums.add(1.5D); // 1.5D 係 double，會被 autobox 成 Double object\\r\\n```\\r\\n\\r\\n解釋：`List<Number>` 可以 `add()` 既 argument 可以係任何 `extends Number` 既 object。\\r\\n\\r\\n但咁樣寫會有 compilation error：\\r\\n\\r\\n```java\\r\\nList<Number> nums = new ArrayList<>();\\r\\nnums = new ArrayList<Integer>(); // compilation error\\r\\nnums = new ArrayList<Long>(); // compilation error\\r\\nnums = new ArrayList<Float>(); // compilation error\\r\\nnums = new ArrayList<Double>(); // compilation error\\r\\n```\\r\\n\\r\\n解釋：`List<Number>` 既 variable 只限 assign 返 `List<Number>` 既 object。\\r\\n\\r\\n但如果換成咁樣寫，反而就冇 compilation error（Java 8+）：\\r\\n\\r\\n```java\\r\\npublic static void main(String[] args) throws Exception {\\r\\n\\r\\n    List<Number> nums = new ArrayList<>();\\r\\n\\r\\n    // 下面既 createList(T...) 同用 Arrays.asList(T...) 一樣\\r\\n    nums = createList(); // List<Number>\\r\\n    nums = createList(1, 2); // List<Integer>\\r\\n    nums = createList(1L, 2L); // List<Long>\\r\\n    nums = createList(1.5F, 2.5F); // List<Float>\\r\\n    nums = createList(1.5D, 2.5D); // List<Double>\\r\\n}\\r\\n\\r\\nprivate static <T> List<T> createList(T... nums) {\\r\\n    final List list = Arrays.asList(nums);\\r\\n    return list;\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：`createList(T...)` 或者 `Arrays.asList(T...)` 做緊既野一樣，都係根據傳入既 `T...` varargs 既 `T` 去 infer return type `List<T>` 裡面既 `T`。然後我地將 `createList(T...)` 既 result assign 落 `List<Number>` 度。就咁睇好似同上面出 error 既例子一樣，但其實情況有啲唔同，因為 Java 8+ 會睇埋 assignment 既被 assign 果邊（即係左手邊既 `nums`）既 type，再去決定右手邊既 type，而呢個情況下句 `createList(T...)` expression 就係 poly expression，出現左喺一個 poly context 裡面。類似既做法有 Java 7 既 type inference，例如 `List<String> list = new ArrayList<>()` 既 `<>` 唔洗寫 `<String>` 係因為 compiler 知道呢個係 poly expression，就會睇埋 assignment 既 context，會睇被 assign 果邊去決定 `<>` 裡面係咩 type。相反，standalone expression 就唔會理個 context。\\r\\n\\r\\n## 2.1 Type erasure\\r\\n\\r\\n其實 Java 既 generic type 只不過係 for compile time 既 type safety 用，而去到 runtime（個 JVM 幫你執行緊你啲 code）既時候，所有 type information 就會冇曬。\\r\\n\\r\\n呢個亦係點解我地寫 utility methods 既時候，係冇得寫 `T.class` 或者用 reflection 既方法黎 reference 返一個 parameterized type 既 `<T>` 裡面既 `T` 喺 runtime 既 value，而一定要用一個 parameter `Class<?> type` 既 variable 先可以知道係咩 type。\\r\\n\\r\\n```java\\r\\npublic static <T> void foo(T obj) {\\r\\n    // 唔知 T 係咩黎，冇得用 T.class 或者 T.newInstance()\\r\\n}\\r\\n```\\r\\n\\r\\n要改成：\\r\\n\\r\\n```java\\r\\npublic static <T> void foo(T obj, Class<T> type) {\\r\\n    T newObj = type.newInstance();\\r\\n    System.out.println(type);\\r\\n}\\r\\n```\\r\\n\\r\\n只要唔係 unbounded wildcard 既 parameterized type，都係 non-reifiable type，type information 都會喺 runtime 度 lost 左。\\r\\n\\r\\n> A reifiable type is a type whose type information is fully available at runtime. This includes primitives, non-generic types, raw types, and invocations of unbound wildcards.\\r\\n>\\r\\n> Non-reifiable types are types where information has been removed at compile-time by type erasure — invocations of generic types that are not defined as unbounded wildcards. A non-reifiable type does not have all of its information available at runtime. Examples of non-reifiable types are `List<String>` and `List<Number>`; the JVM cannot tell the difference between these types at runtime. As shown in Restrictions on Generics, there are certain situations where non-reifiable types cannot be used: in an `instanceof` expression, for example, or as an element in an array.\\r\\n\\r\\n舉個例，即係就算我地咁樣寫，唔單止喺 compile time 冇 error，而到左 runtime 都唔會有任何 exception：\\r\\n\\r\\n```java\\r\\nList nums = new ArrayList<Integer>();\\r\\nnums.add(1);\\r\\nnums.add(\\\"Hi\\\");\\r\\n\\r\\nSystem.out.println(nums.get(0)); // 1\\r\\nSystem.out.println(nums.get(1)); // Hi\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   上面段 code 冇 compile time exception 好正常，因為 `List` 係 raw type，而之前已經講過，想要 compiler 幫我地 check type，就要寫埋個 generic type，例如 `List<String>`；\\r\\n-   而點解上面段 code 喺 runtime 執行 `add()` 唔同 types 既 objects 都冇任何 exception？咁係因為 type erasure 既關係，就算我地 assign 既 object 係 `ArrayList<Integer>`，其實呢個 `<Integer>` 喺 compile 完出黎既 bytecode 裡面係會抹走左，咁 runtime 自然就冇 type information，即係 `new ArrayList<Integer>()` 到左 runtime 其實同一個冇 generic type 既 `new ArrayList()` 完全一樣，所以點解話 generics 只會喺 compile time 發揮作用，就係呢個原因。\\r\\n\\r\\n但如果我地將 `List nums` 改成 `List<Integer> nums`，`nums.add(\\\"Hi\\\")` 就會出 compile time error，咁係因為 compiler 幫我地喺 compile time check 左，`List<Integer>` 係加唔到 `String` object。\\r\\n\\r\\n### 2.1.1 Explicit type casting\\r\\n\\r\\n因為 type erasure 既關係，喺 runtime 既時候如果要用 generic type `<T>` 黎做 explicit type casting，就唔可以用 `(T) obj` 既寫法：\\r\\n\\r\\n```java\\r\\npublic class Main {\\r\\n\\r\\n    public static void main(String[] args) {\\r\\n        final GenericClass<Integer> list = castToGenericClass(\\\"123\\\");\\r\\n        System.out.println(list.getData() instanceof Integer); // false\\r\\n        System.out.println(list.getData().getClass()); // ClassCastException\\r\\n    }\\r\\n\\r\\n    private static <T> GenericClass<T> castToGenericClass(Object obj) {\\r\\n\\r\\n        final T cast = (T) obj;\\r\\n\\r\\n        final GenericClass<T> list = new GenericClass<>();\\r\\n        list.setData(cast);\\r\\n\\r\\n        return list;\\r\\n    }\\r\\n}\\r\\n\\r\\n@Data\\r\\nclass GenericClass<T> {\\r\\n    T data;\\r\\n}\\r\\n```\\r\\n\\r\\n應該改為傳入 `Class<T> clazz`，然後用 `clazz.cast(obj)` 既方式：\\r\\n\\r\\n```java\\r\\npublic class Main {\\r\\n\\r\\n    public static void main(String[] args) {\\r\\n        final GenericClass<String> list = castToGenericClass(\\\"123\\\", String.class);\\r\\n        System.out.println(list.getData().getClass()); // class java.lang.String\\r\\n\\r\\n        final GenericClass<Integer> list2 = castToGenericClass(123, Integer.class);\\r\\n        System.out.println(list2.getData().getClass()); // class java.lang.Integer\\r\\n    }\\r\\n\\r\\n    private static <T> GenericClass<T> castToGenericClass(Object obj, Class<T> clazz) {\\r\\n\\r\\n        final T cast = clazz.cast(obj);\\r\\n\\r\\n        final GenericClass<T> list = new GenericClass<>();\\r\\n        list.setData(cast);\\r\\n\\r\\n        return list;\\r\\n    }\\r\\n}\\r\\n\\r\\n@Data\\r\\nclass GenericClass<T> {\\r\\n    T data;\\r\\n}\\r\\n```\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [StackOverflow - Cast Object to Generic Type for returning](https://stackoverflow.com/questions/14524751/cast-object-to-generic-type-for-returning)\\r\\n\\r\\n### 2.1.2 Declared type information\\r\\n\\r\\n如果個 generic type 係喺 class definition 層面，例如以下既例子，咁係可以 reference 到個 type，但一定要係 type declaration 先可以，如果唔係 type declaration 既情況下 invoke generic type，最後都係會令 type information lost 左。\\r\\n\\r\\n首先我地寫一個 utility class，喺下面既例子會用到：\\r\\n\\r\\n```java\\r\\npublic final class TypeUtils {\\r\\n\\r\\n    private TypeUtils() {}\\r\\n\\r\\n    public static List<String> getGenericTypeNames(Class<?> clazz) {\\r\\n\\r\\n        if (!(clazz.getGenericSuperclass() instanceof ParameterizedType)) {\\r\\n            return Collections.emptyList();\\r\\n        }\\r\\n\\r\\n        return Arrays\\r\\n                .stream(((ParameterizedType) clazz.getGenericSuperclass()).getActualTypeArguments())\\r\\n                .map(Type::getTypeName)\\r\\n                .collect(Collectors.toList());\\r\\n    }\\r\\n\\r\\n    public static List<Class<?>> getGenericTypes(Class<?> clazz) {\\r\\n        return getGenericTypeNames(clazz).stream()\\r\\n                .map(e -> e.replaceAll(\\\"<.*?>\\\", \\\"\\\"))\\r\\n                .map(e -> {\\r\\n                    try {\\r\\n                        return Class.forName(e);\\r\\n                    } catch (Exception ex) {\\r\\n                        ex.printStackTrace(); // handle exception\\r\\n                        return null;\\r\\n                    }\\r\\n                })\\r\\n                .filter(Objects::nonNull)\\r\\n                .collect(Collectors.toList());\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n#### 2.1.2.1 Anonymous class\\r\\n\\r\\nAnonymous class 係 type declaration，所以可以拎到 parameterized type 裡面既 generic type information 出黎。\\r\\n\\r\\n```java\\r\\nMap raw = new HashMap<Integer, String>() {}; // 注意後面既 {} 令佢成為 anonymous class\\r\\n\\r\\nList<String> typeNames = TypeUtils.getGenericTypeNames(raw.getClass());\\r\\nSystem.out.println(typeNames);\\r\\n// [java.lang.Integer, java.util.List<java.lang.String>]\\r\\n\\r\\nList<Class<?>> types = TypeUtils.getGenericTypes(raw.getClass());\\r\\nSystem.out.println(types);\\r\\n// [class java.lang.Integer, interface java.util.List]\\r\\n```\\r\\n\\r\\n#### 2.1.2.2 Subclass\\r\\n\\r\\nSubclass 係 type declaration，所以可以拎到 parameterized type 裡面既 generic type information 出黎。但係如果直接用 superclass invoke generic type，咁就拎唔到 generic type information 出黎。\\r\\n\\r\\n```java\\r\\npublic class Main {\\r\\n\\r\\n    public static void main(String[] args) {\\r\\n\\r\\n        new Sub();\\r\\n        // [java.lang.String, java.util.List<java.lang.Integer>]\\r\\n        // [class java.lang.String, interface java.util.List]\\r\\n\\r\\n        new Super<Integer, List<String>>();\\r\\n        // [] 拎唔到\\r\\n        // [] 拎唔到\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Super<T1, T2> {\\r\\n    public Super() {\\r\\n        System.out.println(TypeUtils.getGenericTypeNames(getClass()));\\r\\n        System.out.println(TypeUtils.getGenericTypes(getClass()));\\r\\n    }\\r\\n}\\r\\n\\r\\nclass Sub extends Super<String, List<Integer>> {}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 Unbounded wildcard generic type\\r\\n\\r\\n我地可以用問號 `?` 黎代表 generic type 係 wildcard type：\\r\\n\\r\\n```java\\r\\nList<?> list = new ArrayList<>();\\r\\n\\r\\nlist = Arrays.asList(\\\"item\\\");\\r\\n// wildcard generic type 既 List variable 可以 assign 任何 generic type 既 List object\\r\\n\\r\\nlist.add(null);\\r\\nlist.add(new Object()); // compilation error\\r\\n// 因為 Java 唔知個 List 係咩 generic type，我地係 add 唔到 element（除左乜野 type 都唔係既 null）\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 Upper bounded wildcard generic type\\r\\n\\r\\n```java\\r\\nList<? extends Number> nums = new ArrayList<>();\\r\\n```\\r\\n\\r\\n解釋：呢一個 `List` 既 variable 只能夠接受 list of `Number` 或者 list of `extends Number` 既 class。下面既都可以：\\r\\n\\r\\n```java\\r\\nList<? extends Number> nums;\\r\\nnums = new ArrayList<Number>();\\r\\nnums = new ArrayList<Integer>();\\r\\nnums = new ArrayList<Double>();\\r\\n```\\r\\n\\r\\n需要注意既係，因為唔知個 `List` 係幾 specific 既 generic type，`List<? extends Number>` 可以 assign `List<Number>`、`List<Integer>`，甚至 list of `Integer` 既 subclass（自定義或者 3rd party library 裡面提供既）既 object，而如果 assign 既係 `List<Integer>` 既 object，理論上係唔應該畀 `add()` 一個 `Integer` 以外既 element，所以 compiler 穩陣起見，就喺 compile time 唔畀我地 `add()` 任何 element（除左乜野 type 都唔係既 `null`）：\\r\\n\\r\\n```java\\r\\nList<? extends Number> nums = new ArrayList<>();\\r\\nnums.add(null);\\r\\nnums.add(1); // compilation error\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.4 Lower bounded wildcard generic type\\r\\n\\r\\n```java\\r\\nList<? super Number> nums = new ArrayList<>();\\r\\n```\\r\\n\\r\\n解釋：呢一個 `List` 既 variable 只能夠接受 list of `Number` 或者 list of `Number` 既 superclass。下面既都可以：\\r\\n\\r\\n```java\\r\\nList<? super Number> nums;\\r\\nnums = new ArrayList<Number>();\\r\\nnums = new ArrayList<Object>();\\r\\n```\\r\\n\\r\\n需要注意既係，lower bounded wildcard 同 upper bounded wildcard 唔同，因為知道個 `List` 唔會比 `List<Number>` 更 specific，可以 assign `List<Number>` 或者 `List<Object>` 既 object 都得，如果 assign 既係 `List<Number>` 既 object，係可以 `add()` 任何 `Number` 或者 `extends Number` 既 object，而如果 assign 既係 `List<Object>` 既 object 既話更加係 `add()` 乜野 object 都可以，所以 lower bounded wildcard 係畀我地 `add()` element，但 `List<? super Number>` 只限 `add()` 到 `Number` 或者 `extends Number` 既 object，以及乜野 type 都唔係既 `null`。\\r\\n\\r\\n咁樣寫係冇問題：\\r\\n\\r\\n```java\\r\\nList<? super Number> nums = new ArrayList<>();\\r\\nnums.add(null);\\r\\nnums.add(new Number() { /* add unimplemented methods */ }); // anonymous class\\r\\nnums.add(1);\\r\\nnums.add(1.5D);\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 3 Covariance 問題\\r\\n\\r\\n因為 generic type 可以有繼承，即係我地可以寫 `class Sub extends Super`，咁即係話我地可以有 `List<Super>` 同 `List<Sub>`，咁到底兩者既 variables 同 objects 係咪互相相容（in terms of polymorphism）？呢個就係 covariance 問題。\\r\\n\\r\\n註：除左 `extends`，covariance 既規則對 `implements`（interface）都一樣適用。\\r\\n\\r\\n---\\r\\n\\r\\n# 4 Covariance 規則\\r\\n\\r\\n到底 `Clazz<T>` 可以 assign 返乜野 type 既 object？\\r\\n\\r\\n假設我地有以下既自定義 classes：\\r\\n\\r\\n```java\\r\\nclass Wrapper<T> {\\r\\n    public void foo(T obj) {}\\r\\n}\\r\\nclass SubWrapper<T> extends Wrapper<T> {}\\r\\n\\r\\nclass Super {}\\r\\nclass Sub extends Super {}\\r\\n```\\r\\n\\r\\n如果係特定 generic type，例如 `Wrapper<Super>`，特定左 generic type 係 `Super`，咁只能 assign 同樣特定 generic type 既 `Wrapper` 或者 `Wrapper` 既 subclass 既 object：\\r\\n\\r\\n```java\\r\\nWrapper<Super> wrapper;\\r\\nwrapper = new Wrapper<Super>();\\r\\nwrapper = new SubWrapper<Super>();\\r\\n\\r\\nwrapper.foo(null);\\r\\nwrapper.foo(new Super());\\r\\nwrapper.foo(new Sub());\\r\\n\\r\\n// 唔可以用特定 generic type 既 subclass 做個 generic type\\r\\nwrapper = new Wrapper<Sub>(); // compilation error\\r\\nwrapper = new SubWrapper<Sub>(); // compilation error\\r\\n```\\r\\n\\r\\n如果係 upper bounded wildcard，例如 `Wrapper<? extends Super>`，咁可以 assign 相同既 generic type 或者佢既 subclass 既 `Wrapper` 或者 `Wrapper` 既 subclass 既 object：\\r\\n\\r\\n```java\\r\\nWrapper<? extends Super> wrapper;\\r\\nwrapper = new Wrapper<Super>();\\r\\nwrapper = new SubWrapper<Super>();\\r\\nwrapper = new Wrapper<Sub>();\\r\\nwrapper = new SubWrapper<Sub>();\\r\\n\\r\\nwrapper.foo(null);\\r\\n\\r\\n// 唔可以 call 任何 parameter 有 T 既 method\\r\\nwrapper.foo(new Super()); // compilation error\\r\\nwrapper.foo(new Sub()); // compilation error\\r\\n```\\r\\n\\r\\n如果係 lower bounded wildcard，例如 `Wrapper<? super Super>`，咁可以 assign 相同既 generic type 或者佢既 superclass 既 `Wrapper` 或者 `Wrapper` 既 subclass 既 object：\\r\\n\\r\\n```java\\r\\nWrapper<? super Super> wrapper;\\r\\nwrapper = new Wrapper<Super>();\\r\\nwrapper = new SubWrapper<Super>();\\r\\nwrapper = new Wrapper<Object>();\\r\\nwrapper = new SubWrapper<Object>();\\r\\n\\r\\nwrapper.foo(null);\\r\\nwrapper.foo(new Super());\\r\\nwrapper.foo(new Sub());\\r\\n```\\r\\n\\r\\n如果係 wildcard，例如 `Wrapper<?>`，咁可以 assign 任何 generic type 既 `Wrapper` 或者 `Wrapper` 既 subclass 既 object：\\r\\n\\r\\n```java\\r\\nWrapper<?> wrapper;\\r\\nwrapper = new Wrapper<Super>();\\r\\nwrapper = new SubWrapper<Super>();\\r\\nwrapper = new Wrapper<Sub>();\\r\\nwrapper = new SubWrapper<Sub>();\\r\\nwrapper = new Wrapper<Object>();\\r\\nwrapper = new SubWrapper<Object>();\\r\\n\\r\\nwrapper.foo(null);\\r\\n\\r\\n// 唔可以 call 任何 parameter 有 T 既 method\\r\\nwrapper.foo(new Super()); // compilation error\\r\\nwrapper.foo(new Sub()); // compilation error\\r\\nwrapper.foo(new Object()); // compilation error\\r\\n```\\r\\n\";","export default \"# 1 背景\\r\\n\\r\\n## 1.1 項目\\r\\n\\r\\n話說我寫呢篇文章果陣做緊既公司畀某昆蟲公司收購左之後，就要做大量 revamp 工作，亦包括滿足新既業務需求。眾多個系統當中，有一個負責定時定候 call Amazon、ebay 等等既平台既 back-end application，今年加入左 pull Amazon MWS data 既 task scheduling，主要為每一個商戶客既每一個店舖 pull Amazon MWS data。\\r\\n\\r\\n呢個項目要 call `10` 個 Amazon MWS 既 API。\\r\\n\\r\\n---\\r\\n\\r\\n## 1.2 資料庫設計\\r\\n\\r\\nDB 設計上做左 partition，分庫分表（for horizontal scaling）：\\r\\n\\r\\n-   Sharing rule：所有 DB tables 根據 user ID 既 value 做 sharding——某兩個位既數字會用黎對應 partition index\\r\\n-   一共分成 `100` 個 partitions\\r\\n-   所有 table 資料都由 `10` 個 physical DB、每個 physical DB 各自有 `10` 個 physical tables 組成（`10` DB 乘 `10` tables = `100` partitions）\\r\\n-   例如：`db3` 有 `table1_30` 至 `table1_39` 以及 `table2_30` 至 `table2_39`\\r\\n\\r\\nSchema 既設計：\\r\\n\\r\\n-   以 Amazon MWS API 黎分，有 `10` 個 logical tables，另外有其他 tables 負責 keep track 住 task scheduling\\r\\n\\r\\n---\\r\\n\\r\\n## 1.3 Task scheduling 機制\\r\\n\\r\\nTask scheduling 既機制：\\r\\n\\r\\n-   Scheduler server 會根據平台上面 scheduled job 既時間配置，定時定候 send message 去 cluster 裡面其中一機器\\r\\n\\r\\n而 cluster 裡面既每一部機器既系統設計係咁：\\r\\n\\r\\n-   系統引入「三層分發」機制黎實現 distributed task scheduling\\r\\n-   第一層：`split`\\r\\n    -   Cluster 裡面只會有一部機器收到 scheduler server 既指令\\r\\n    -   佢之後會做 split partitions 動作，將 `100` 個 partition indexes 派畀 cluster 裡面既所有機器\\r\\n    -   每部機器得到既果堆 partition indexes 可以係隨機\\r\\n    -   平均黎講每部機器會收到 `10` 個 partitions\\r\\n    -   例如：`instance3` 收到 `30` 至 `39` 既 partition indexes\\r\\n-   第二層：`load`\\r\\n    -   當每部機器收到一堆 partition indexes，就會喺呢堆 partition indexes 指定既 physical DB 度 select task records\\r\\n    -   目前既設定 hardcode 左係只拎最新創建既 `5` 筆 task records\\r\\n    -   拎到 task records 之後就再派畀 cluster 裡面既所有機器\\r\\n-   第三層：`execute`\\r\\n    -   當每部機器收到 task record，就會加落 thread pool 度，等待處理\\r\\n\\r\\n---\\r\\n\\r\\n## 1.4 Production 場既配置\\r\\n\\r\\nProduction 場既 cluster 部署左 `10` 部機器。\\r\\n\\r\\n---\\r\\n\\r\\n## 1.5 任務配置\\r\\n\\r\\n呢個項目有 `2` 個任務：\\r\\n\\r\\n-   創建 task\\r\\n    -   每 `1` 分鐘執行一次\\r\\n    -   如果店舖既某個 Amazon MWS API 唔存在執行中既任務（例如已經執行完成），就會創建新 task，即係永無休止咁 pull data\\r\\n    -   每個 Amazon MWS API 都會有一個 task\\r\\n    -   每個 API 都係每隔 `10` 分鐘 call 一次\\r\\n    -   啲 API 分散喺唔同既分鐘（唔同既個位數），唔會同一分鐘做曬 `10` 個 API\\r\\n    -   例如：\\r\\n        -   `api-3` 既執行時間係 `HH:03`、`HH:13`、`HH:23`、`HH:33`、`HH:43`、`HH:53`\\r\\n        -   `api-5` 既執行時間係 `HH:05`、`HH:15`、`HH:25`、`HH:35`、`HH:45`、`HH:55`\\r\\n        -   如此類推\\r\\n-   處理 task\\r\\n    -   每 `1` 分鐘執行一次\\r\\n    -   只要 task 到左預定執行時間，就會處理\\r\\n    -   目前既設定 hardcode 左係只拎最新創建既 `5` 筆 task records（每個 partition 都係咁）\\r\\n\\r\\nScheduler server 每分鐘都會 send messages 去負責 split 既機器度 trigger 呢 `2` 個 _producer & consumer_ 既任務。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 上線後出現既問題\\r\\n\\r\\n呢個 project 最近上左線，onboard 左一部分商戶既店舖 records，但就出現左一個都幾尷尬既問題。\\r\\n\\r\\n項目群組裡面有人話發現唔同既 Amazon MWS API 既 logical tables 出現既結果不一，某啲店舖喺某啲 tables 有 Amazon data records，但喺某啲 tables 就冇。\\r\\n\\r\\n查一查 logical DB，睇見啲 task records 既預定執行時間係幾日前，呢啲 task records 明明應該已經執行左但就唔知點解一直冇執行到。\\r\\n\\r\\n另外，有部分 tasks 執行失敗。\\r\\n\\r\\n---\\r\\n\\r\\n# 3 原因分析\\r\\n\\r\\nLogical DB 裡面見到一堆應該已經執行但一直冇執行既 records 係黎自某幾個 partitions，而呢幾個 partitions 都有一個共通點，就係店舖數量大過 `5`。\\r\\n\\r\\n呢個其實係一個數學既問題。\\r\\n\\r\\n首先，我地先假設 pull data 既 task 都可以喺 `1` 分鐘之內成功完成。跟住，我地要計下有問題既 partition 創建新 task 既速率。假如有問題既 `partition-3` 有 `6` 個店舖，而因為我地 call 每一款 Amazon API 都係每 `10` 分鐘 call 一次，我地有 `10` 個 API 要 call，咁即係每個 `10` 分鐘裡面都要執行 `60` 個 task records，而每到左下一分鐘都有 `6` 個 data tasks 到左預定執行時間而要被處理。\\r\\n\\r\\n正因為每分鐘，系統只會喺每個 partition 拎最新創建既 `5` 筆 task records，一黎呢個速率慢過有問題既 partitions 創建新 task 既速率，二黎因為只會拎最新創建既 task records，所以有啲舊既 task records（唔知點解會有）就一直沉底，永遠都唔輪到佢地被執行。\\r\\n\\r\\n理論上，假設所有店舖數據都可以平均咁分散喺各個 partition，咁呢個系統目前只係可以處理到 `500` 個店舖（如果以用戶數量黎計就更少）。\\r\\n\";","export default \"# 1 Charles Proxy 用途\\r\\n\\r\\nCharles 係一個 proxy（代理伺服器），即係一個虛擬既中間人 server，有能力截取通過呢個 proxy 通訊既 HTTP/HTTPS（SSL）既請求及響應內容，所以可以用喺開發既時候除錯 web applications。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 設定 Charles\\r\\n\\r\\n## 2.1 主程式設置\\r\\n\\r\\n-   Windows\\r\\n    1.  Proxy > SSL Proxying Settings... > SSL Proxying tab > Add > Host: `*`\\r\\n    1.  Help > SSL Proxying > **Install Charles Root Certificate**\\r\\n    1.  In the Certificate popup window, **Install Certificate...**\\r\\n    1.  Store Location: `Local Machine`\\r\\n    1.  Place all certificates in the following store, Browse..., `Trusted Root Certification Authorities`\\r\\n    1.  Main UI > **Start SSL Proxying**\\r\\n-   macOS\\r\\n    1.  Proxy > SSL Proxying Settings... > SSL Proxying tab > Add > Host: `*`\\r\\n    1.  Help > SSL Proxying > **Install Charles Root Certificate**\\r\\n    1.  In the Add Certificates popup window, Keychain: `System`, Add\\r\\n    1.  In System Keychains > System, Search for Charles\\r\\n    1.  Right-click Charles Proxy CA > Get Info\\r\\n    1.  Expand Trust > When using this certificate > `Always Trust`\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 截取 Android 手機 HTTP/HTTPS 內容\\r\\n\\r\\n1. 主程式設置\\r\\n    - Windows\\r\\n        1. Make sure **Windows Defender Firewall** settings allow the Charles app\\r\\n            - Check the checkbox next to the app and checkboxes under both private and public\\r\\n        1. Proxy > Proxy Settings... > **Enable transparent HTTP proxying**\\r\\n        1. Help > SSL Proxying > **Install Charles Root Certificate on a Mobile Device or Remote Browser**\\r\\n    - macOS\\r\\n        - TBC\\r\\n1. Android 手機設置\\r\\n    1. Wi-Fi > Configure the current Wi-Fi\\r\\n    1. Add the IP to Charles on Windows: Proxy > Access Control Settings... > Add\\r\\n    1. Proxy: `Manual`, IP and Port: refer to the popup in Charles\\r\\n    1. In Chrome, navigate to the URL mentioned in popup in Charles (i.e. [chls.pro/ssl](http://chls.pro/ssl))\\r\\n    1. SSL certificate (`.crt`) is downloaded automatically, click on it\\r\\n    1. Enter Android password\\r\\n    1. Give the certificate a name (e.g. `Charles`), Credential use: `VPN and Apps`\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 其他設定\\r\\n\\r\\n-   Main UI > Right-click configure column > Check `Content-Type`\\r\\n-   Main UI > Settings next to Filter and Focused > Uncheck **Auto scroll**\\r\\n\\r\\n---\\r\\n\\r\\n# 3 如何使用 Charles\\r\\n\\r\\n情境：我地想截取 Jumbo 網頁既 HTTP request 及 response，除左直接喺 Chrome developer tools 度睇之外，Charles 都可以做得到。\\r\\n\\r\\n## 3.1 開始記錄 HTTP 流量\\r\\n\\r\\n首先，換去 Sequence 顯示方式，然後確保 Charles 主介面已經開始記錄 HTTP 流量，而且 SSL proxying 亦都設置好而又開左：\\r\\n\\r\\n![](blog/2021-08/charles-proxy/start-recording.png)\\r\\n\\r\\n我地可以去 Windows 既 Internet Options 度睇下 Charles 係咪自動幫我地設定好曬：\\r\\n\\r\\n![](blog/2021-08/charles-proxy/internet-options-proxy.png)\\r\\n\\r\\n或者如果用 macOS：\\r\\n\\r\\n![](blog/2021-08/charles-proxy/network-proxies.png)\\r\\n\\r\\n![](blog/2021-08/charles-proxy/network-proxies-ssl.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 瀏覽器開始上網\\r\\n\\r\\n我地而家可以喺 Chrome 打開 [https://shoponjc.com/quote.php](https://shoponjc.com/quote.php)。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.3 觀察截取結果\\r\\n\\r\\n網頁 load 完之後，我地就返去 Charles，觀察 Charles 所截取到既 HTTP requests。\\r\\n\\r\\n如果 Charles 介面夾雜左其他 domains 既 HTTP requests，可能係因為個系統所安裝既某啲軟件或者瀏覽器既其他網頁喺背後發起 HTTP requests。如果只想專注睇 Jumbo 網站既 HTTP requests，可以隨意搵一個 Jumbo 既 HTTP request，然後 right-click 佢，撳 Focus。\\r\\n\\r\\n![](blog/2021-08/charles-proxy/focus-on-domain.png)\\r\\n\\r\\n再 check Focused：\\r\\n\\r\\n![](blog/2021-08/charles-proxy/check-focused.png)\\r\\n\\r\\n咁之後我地就只會見到 Jumbo 網站既 HTTP requests：\\r\\n\\r\\n![](blog/2021-08/charles-proxy/view-focused-http-requests.png)\\r\\n\\r\\n然後就好容易搵到下載產品報價數據既 API 係點樣 call：\\r\\n\\r\\n![](blog/2021-08/charles-proxy/jumbo-getprod.png)\\r\\n\\r\\n---\\r\\n\\r\\n# 4 其他程式設定\\r\\n\\r\\n## 4.1 Postman\\r\\n\\r\\n1. Settings > Proxy > Proxy configurations for sending requests > Check **Add a custom proxy configuration**\\r\\n1. Proxy Type > Check **HTTP** and **HTTPS**\\r\\n1. Proxy Server > Enter IP and port\\r\\n\\r\\n![](blog/2021-08/charles-proxy/postman-proxy.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 4.2 Spring Boot `RestTemplate`\\r\\n\\r\\n用以下 code 黎 create `RestTemplate` object：\\r\\n\\r\\n```java\\r\\nfinal Proxy proxy = new Proxy(Type.HTTP, new InetSocketAddress(getProperty(\\\"http.proxyHost\\\"), parseInt(getProperty(\\\"http.proxyPort\\\"))));\\r\\nfinal SimpleClientHttpRequestFactory requestFactory = new SimpleClientHttpRequestFactory();\\r\\nrequestFactory.setProxy(proxy);\\r\\n\\r\\nfinal RestTemplate restTemplate = new RestTemplate(requestFactory);\\r\\n```\\r\\n\\r\\nJVM arguments：\\r\\n\\r\\n```plaintext\\r\\njava -Dhttp.proxyHost=<host> -Dhttp.proxyPort=8888 -jar xxxxxx.jar\\r\\n```\\r\\n\\r\\nSpring Boot Maven：\\r\\n\\r\\n```bash\\r\\nmvn spring-boot:run -Dspring-boot.run.jvmArguments=\\\"-Dhttp.proxyHost=<host> -Dhttp.proxyPort=8888\\\"\\r\\n```\\r\\n\";","export default \"# 1 Table 相關語法\\r\\n\\r\\n## 1.1 創建 table\\r\\n\\r\\n```sql\\r\\nCREATE TABLE tbl_person (\\r\\n\\tentity_id  INT          IDENTITY(1, 1),\\r\\n\\tname       VARCHAR(255) NOT NULL,\\r\\n\\temail      VARCHAR(255) NOT NULL,\\r\\n\\tcreated_at DATETIME     NOT NULL DEFAULT GETDATE(),\\r\\n\\tupdated_at DATETIME     NOT NULL DEFAULT GETDATE(),\\r\\n\\r\\n\\tPRIMARY KEY (entity_id),\\r\\n\\tCONSTRAINT UQ_person UNIQUE (email)\\r\\n);\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 1.2 刪除 table\\r\\n\\r\\n```sql\\r\\nDROP TABLE IF EXISTS tbl_person;\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 1.3 新增紀錄\\r\\n\\r\\n```sql\\r\\nINSERT INTO tbl_person VALUES ('Alice', 'alice@gmail.com', GETDATE(), GETDATE());\\r\\n```\\r\\n\\r\\n```sql\\r\\nINSERT INTO tbl_person (name, email) VALUES ('Bob', 'bob@gmail.com');\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   `IDENTITY` column 唔應該入，應該由 DB 自動生成。\\r\\n-   如果 `VALUES` 前面有 column list，有 `DEFAULT` 既 columns 可以選擇明確提供或者唔提供，唔提供既話 DB 就會用左 `CREATE TABLE` 裡面 column definition 既 `DEFAULT`（例子中 `create_at` 既 default value 就係 built-in function `GETDATE()`）。\\r\\n\\r\\n---\\r\\n\\r\\n## 1.4 查詢紀錄\\r\\n\\r\\n### 1.4.1 一般查詢\\r\\n\\r\\n```sql\\r\\nSELECT * FROM tbl_person;\\r\\n```\\r\\n\\r\\n```sql\\r\\nSELECT\\r\\n\\tentity_id,\\r\\n\\tname,\\r\\n\\temail,\\r\\n\\tcreated_at\\r\\nFROM tbl_person\\r\\nWHERE entity_id = 1;\\r\\n```\\r\\n\\r\\nPagination（分頁）：\\r\\n\\r\\n```sql\\r\\nSELECT *\\r\\nFROM tbl_person\\r\\nORDER BY entity_id\\r\\nOFFSET 1 ROWS\\r\\nFETCH NEXT 1 ROWS ONLY; -- NEXT、FIRST 係同義\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 1.4.2 多 tables 查詢\\r\\n\\r\\n同其他 table 連起黎：\\r\\n\\r\\n```sql\\r\\nCREATE TABLE tbl_friend (\\r\\n\\tentity_id        INT          IDENTITY(1, 1),\\r\\n\\tperson_entity_id INT          NOT NULL,\\r\\n\\tname             VARCHAR(255) NOT NULL,\\r\\n\\r\\n\\tPRIMARY KEY (entity_id),\\r\\n\\tINDEX IX_friend (entity_id, person_entity_id)\\r\\n);\\r\\n\\r\\nINSERT INTO tbl_friend (person_entity_id, name) VALUES (1, 'Mick');\\r\\n\\r\\nSELECT\\r\\n\\tp.name,\\r\\n\\tf.name\\r\\nFROM\\r\\n\\ttbl_person p,\\r\\n\\ttbl_friend f\\r\\nWHERE\\r\\n\\tp.entity_id = f.person_entity_id\\r\\nAND p.name = 'Alice'\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 1.4.3 帶鎖查詢\\r\\n\\r\\n如果同時有多過一個程式需要查詢然後更新同一行紀錄，我地可以用悲觀鎖。當兩個程式同時執行以下 SQL，只有一個程式可以立即查詢到相關紀錄，而另一個程式就會一直等待，直到攞到鎖既程式完成曬 transaction，咁佢先會攞到個鎖。\\r\\n\\r\\n```sql\\r\\nBEGIN TRANSACTION;\\r\\n\\r\\nSELECT *\\r\\nFROM tbl_person\\r\\nWITH (\\r\\n\\tUPDLOCK,\\r\\n\\tROWLOCK\\r\\n)\\r\\nWHERE entity_id = 2;\\r\\n```\\r\\n\\r\\n如果 `WHERE` 裡面既條件唔係針對 primary key column 既 value，咁我地就要自己起 index，然後用 `WITH (UPDLOCK, INDEX(<index name>))`，否則 SQL Server 會鎖埋唔 match `WHERE` 條件既紀錄，更有可能鎖曬成個 table 既紀錄。\\r\\n\\r\\n---\\r\\n\\r\\n## 1.5 刪除部分或所有紀錄\\r\\n\\r\\n以特定條件刪除 table 內紀錄：\\r\\n\\r\\n```sql\\r\\nDELETE FROM tbl_person WHERE entity_id = 1;\\r\\n```\\r\\n\\r\\n刪除 table 內所有紀錄：\\r\\n\\r\\n```sql\\r\\nDELETE FROM tbl_person;\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   `DELETE` 係 DML 語句。\\r\\n    -   所以 `DELETE` 係可以喺 transaction 裡面執行，自然就可以 rollback。\\r\\n\\r\\n---\\r\\n\\r\\n## 1.6 清空所有紀錄\\r\\n\\r\\n```sql\\r\\nTRUNCATE TABLE tbl_person;\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   `TRUNCATE` 係 DDL 語句，有別於 `DELETE`。\\r\\n    -   所以 `TRUNCATE` 係唔可以喺 transaction 裡面執行，自然就唔可以 rollback。\\r\\n    -   `TRUNCATE` 所產生既 transaction log 會遠少過 `DELETE`。\\r\\n-   `TRUNCATE` 唔會觸發 trigger。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 Sequence 相關語法\\r\\n\\r\\n## 2.1 創建 sequence\\r\\n\\r\\n```sql\\r\\nCREATE SEQUENCE seq_generator START WITH 1000 MINVALUE 1000 MAXVALUE 9999 CYCLE;\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 更改 sequence\\r\\n\\r\\n```sql\\r\\nALTER SEQUENCE seq_generator RESTART WITH 2000;\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 獲取下一個 sequence value\\r\\n\\r\\n```sql\\r\\nSELECT NEXT VALUE FOR seq_generator;\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 3 Trigger 相關語法\\r\\n\\r\\n## 3.1 創建或更新 trigger\\r\\n\\r\\n### 3.1.1 由更新紀錄觸發\\r\\n\\r\\n```sql\\r\\nCREATE OR ALTER TRIGGER trg_person\\r\\nON tbl_person\\r\\nFOR UPDATE AS\\r\\nBEGIN\\r\\n\\tUPDATE p\\r\\n\\tSET updated_at = GETDATE()\\r\\n\\tFROM tbl_person p, inserted\\r\\n\\tWHERE p.entity_id = inserted.entity_id\\r\\nEND;\\r\\nGO\\r\\n```\\r\\n\\r\\n解釋：當 `tbl_person` 既紀錄被更新，將會觸發呢個 trigger 去更新相關紀錄既 `updated_at` column 做當前系統時間。\\r\\n\\r\\n---\\r\\n\\r\\n# 4 其他語法\\r\\n\\r\\n## 4.1 執行動態 SQL\\r\\n\\r\\n如果 table 名、 column 名等 SQL 元素需要動態 values，咁就要用呢個方法：\\r\\n\\r\\n```sql\\r\\n-- 假設 values 從某個 table 取得\\r\\nDECLARE @columns VARCHAR(100) = 'name, email';\\r\\nDECLARE @tableName VARCHAR(100) = 'tbl_person';\\r\\n\\r\\nEXEC('SELECT ' + @columns + ' FROM ' + @tableName);\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 5 查詢系統 tables\\r\\n\\r\\n## 5.1 查詢 table list\\r\\n\\r\\n```sql\\r\\nSELECT * FROM sys.tables;\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 5.2 查詢 table 既 column 結構\\r\\n\\r\\n```sql\\r\\nSELECT\\r\\n    CAST(c.name AS VARCHAR) columnName,\\r\\n    CAST(typ.name AS VARCHAR) dataType,\\r\\n    c.max_length maxLength,\\r\\n    c.precision,\\r\\n    c.scale\\r\\nFROM\\r\\n    sys.all_columns c,\\r\\n    sys.tables tbl,\\r\\n    sys.types typ\\r\\nWHERE\\r\\n    c.object_id = tbl.object_id\\r\\nAND c.system_type_id = typ.system_type_id\\r\\nAND tbl.name = 'table_name'\\r\\nORDER BY c.column_id;\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 6 查看 SQL execution plan、index 使用情況（優化 SQL 用）\\r\\n\\r\\nSQL Server 冇 MySQL／MariaDB 既 `EXPLAIN`，只能透通過 SQL Server Management Studio（SSMS）黎睇 estimated execution plan 以及 actual execution plan。\\r\\n\\r\\n喺 SSMS：\\r\\n\\r\\n-   顯示 estimated execution plan\\r\\n    1.  Highlight 然後 right-click 句 SQL\\r\\n    1.  撳 **Display Estimated Execution Plan**\\r\\n    1.  佢會顯示 execution plan\\r\\n-   顯示 actual execution plan\\r\\n    1.  Right-click 輸入 SQL query 既任何空白位置\\r\\n    1.  撳 **Include Actual Execution Plan**\\r\\n    1.  每當 execute 一句 SQL，佢就會顯示 execution plan\\r\\n\\r\\nExecution plan 應該會包含 `2` 個或以上既圖示，我地可以用 mouse hover 啲圖示睇下佢頭頂寫咩。好籠統咁講：\\r\\n\\r\\n-   如果圖示有 index seek 字眼就會用上 index\\r\\n-   如果圖示有 index scan 或者 table scan 字眼就唔會用上 index。\\r\\n\\r\\n非專業見解：\\r\\n\\r\\n-   Index seek 比 index scan 或者 table scan 效能要好。\\r\\n-   `SELECT *`\\r\\n    -   如果令 query result 既 columns 包括左個 table 定義既 indexes 冇既 columns，咁佢個 execution plan 右邊可能會出現 `2` 個步驟（`3` 個或以上既圖示），可以係 index seek 完再 RID lookup 或者 key lookup，不過實際情況要視乎個 table schema／definition。\\r\\n-   `LIKE`\\r\\n    -   如果 `WHERE` clause 係對 `VARCHAR` column 用 `LIKE 'xxx%'`，應該可以用到 index seek。\\r\\n    -   如果 `WHERE` clause 係對 `VARCHAR` column 用 `LIKE '%xxx'` 或者 `LIKE '%xxx%'`，就用唔到 index seek。\\r\\n-   Type conversion\\r\\n    -   如果 `WHERE` clause 對 `INT` column 用 `LIKE '1%'`，就用唔到 index seek，而 execution plan 既 SELECT 圖示會顯示黃色三角形以及關於 type conversion 既 warning。\\r\\n-\\r\\n-   `WITH (FORCESEEK)`\\r\\n    -   呢個 hint 可以令 `1` 個 scan 既步驟拆開成 `2` 個步驟——seek 以及 lookup。\\r\\n    -   `SELECT email FROM tbl_person WITH (FORCESEEK) WHERE email LIKE 'xxx%';`\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Wildcards and Indexes](https://mattsql.wordpress.com/2013/05/22/wildcards-and-indexes/)\\r\\n-   [Sargability: Why %string% Is Slow](https://www.brentozar.com/archive/2010/06/sargable-why-string-is-slow/)\\r\\n-   [SQL 筆記：Index Scan vs Index Seek](https://blog.darkthread.net/blog/index-scan-vs-seek/)\\r\\n-   [Myth: Select \\\\* is bad](https://use-the-index-luke.com/blog/2013-08/its-not-about-the-star-stupid)\\r\\n-   [StackOverflow - Why can't I simply add an index that includes all columns?](https://stackoverflow.com/questions/5447987/why-cant-i-simply-add-an-index-that-includes-all-columns)\\r\\n\";","export default \"# 1 WebP 簡介\\r\\n\\r\\n好似 JPG、PNG、GIF、TIFF、BMP 等等傳統既圖片格式，WebP 係 Google 發展出黎既一隻具有更高壓縮率既圖片格式。如果用喺網頁，例如網購平台，因為用戶可以快啲下載到啲圖片，用戶體驗就會有所提升。\\r\\n\\r\\n主流既網頁瀏覽器都已經可以顯示到 WebP，而且 HTML 有 fallback 機制，就算個瀏覽器唔支援顯示 WebP 格式，都可以 fallback 去顯示其他格式既圖片，從而避免到死圖。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 格式轉換程式\\r\\n\\r\\nGoogle 提供左 WebP 既壓縮、解壓縮工具。\\r\\n\\r\\nGoogle WebP 官網下載：[Downloading and Installing WebP](https://developers.google.com/speed/webp/download)\\r\\n\\r\\n## 2.1 `cwebp` 壓縮工具\\r\\n\\r\\n```bash\\r\\n./cwebp \\\"/path/to/input.png\\\" -q 50 -o \\\"/path/to/output.webp\\\"\\r\\n```\\r\\n\\r\\nCLI 選項：\\r\\n\\r\\n| 選項 | 解釋                                        |\\r\\n| :--: | ------------------------------------------- |\\r\\n| `-q` | 壓縮比例，數值由 `0` 至 `100`，可以有小數點 |\\r\\n| `-o` | 輸出檔案路徑                                |\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 `dwebp` 解壓縮工具\\r\\n\\r\\n```bash\\r\\n./dwebp \\\"/path/to/input.webp\\\" -o \\\"/path/to/output.png\\\"\\r\\n```\\r\\n\\r\\nCLI 選項：\\r\\n\\r\\n| 選項 | 解釋         |\\r\\n| :--: | ------------ |\\r\\n| `-o` | 輸出檔案路徑 |\\r\\n\\r\\n---\\r\\n\\r\\n# 3 寫 HTML code\\r\\n\\r\\n## 3.1 `<picture>` tag\\r\\n\\r\\n### 3.1.1 純 HTML\\r\\n\\r\\n```html\\r\\n<picture>\\r\\n\\t<source srcset=\\\"picture.webp\\\" type=\\\"image/webp\\\" />\\r\\n\\t<img src=\\\"picture.png\\\" />\\r\\n</picture>\\r\\n```\\r\\n\\r\\n解釋：如果瀏覽器支援顯示 WebP 格式，就會下載 `<source>` 既 `srcset` attribute 既 WebP 圖片；否則，就會下載 `<img>` 既 `src` attribute 既傳統格式圖片。\\r\\n\\r\\n---\\r\\n\\r\\n### 3.1.2 React 既 JSX\\r\\n\\r\\n要注意一點：用 React JSX 既話，要將 `srcset` 寫成 `srcSet`。\\r\\n\\r\\n```jsx\\r\\n<picture>\\r\\n\\t<source srcSet=\\\"picture.webp\\\" type=\\\"image/webp\\\" />\\r\\n\\t<img src=\\\"picture.png\\\" />\\r\\n</picture>\\r\\n```\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [StackOverflow - picture tag in React](https://stackoverflow.com/questions/43885266/picture-tag-in-react/43887593#43887593)\\r\\n-   [StackOverflow - Why is React.js removing the srcset tag on <img />?](https://stackoverflow.com/questions/34695899/why-is-react-js-removing-the-srcset-tag-on-img)\\r\\n-   [React 官網 - All Supported HTML Attributes](https://reactjs.org/docs/dom-elements.html#all-supported-html-attributes)\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 `background-image` CSS\\r\\n\\r\\n### 3.2.1 純 HTML\\r\\n\\r\\n```html\\r\\n<div\\r\\n\\tstyle=\\\"background-image: url('picture.png'); background-image: -webkit-image-set(url('picture-1x.webp') 1x, url('picture-2x.webp') 2x)\\\"\\r\\n></div>\\r\\n```\\r\\n\\r\\n註：`1x`、`2x` 等等既數字係以 `window.devicePixelRatio.toFixed(0)` 黎計。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [CodePen - webp background-image](https://codepen.io/atomo/pen/VXrdMV)\\r\\n-   [StackOverflow - How to use srcset and sizes for responsive images](https://stackoverflow.com/questions/35099471/how-to-use-srcset-and-sizes-for-responsive-images)\\r\\n\\r\\n---\\r\\n\\r\\n# 4 參考資料\\r\\n\\r\\n-   [使用 WebP 格式減少圖片載入時間](https://medium.com/@mingjunlu/image-optimization-using-webp-72d5641213c9)\\r\\n-   [Embracing modern image formats](https://www.joshwcomeau.com/performance/embracing-modern-image-formats/)\\r\\n\";","export default \"# 1 情境\\r\\n\\r\\n我地有一個咁既自定義 class `Item`：\\r\\n\\r\\n```java\\r\\n@Data\\r\\n@Accessors(chain = true)\\r\\n@FieldDefaults(level = PRIVATE)\\r\\nclass Item {\\r\\n    String name;\\r\\n    String type;\\r\\n}\\r\\n```\\r\\n\\r\\n如果我地有一個 `List<Item>`，而我地想將相同 `type` 既 elements group 起，成為一個 `Map<String, List<Item>>`，咁可以點做？\\r\\n\\r\\n```java\\r\\nfinal List<Item> items = asList(\\r\\n    new Item().setName(\\\"One\\\").setType(\\\"1\\\"),\\r\\n    new Item().setName(\\\"Two\\\").setType(\\\"1\\\"),\\r\\n    new Item().setName(\\\"Three\\\").setType(\\\"1\\\"),\\r\\n    new Item().setName(\\\"Four\\\").setType(\\\"2\\\"),\\r\\n    new Item().setName(\\\"Same\\\").setType(null),\\r\\n    new Item().setName(\\\"Same\\\").setType(null),\\r\\n    new Item().setName(null).setType(null)\\r\\n);\\r\\n```\\r\\n\\r\\n期望結果：\\r\\n\\r\\n```plaintext\\r\\n{\\r\\n    \\\"1\\\": [\\r\\n        { \\\"name\\\": \\\"One\\\", \\\"type\\\": \\\"1\\\" },\\r\\n        { \\\"name\\\": \\\"Two\\\", \\\"type\\\": \\\"1\\\" },\\r\\n        { \\\"name\\\": \\\"Three\\\", \\\"type\\\": \\\"1\\\" }\\r\\n    ],\\r\\n    \\\"2\\\": [\\r\\n        { \\\"name\\\": \\\"Four\\\", \\\"type\\\": \\\"2\\\" },\\r\\n    ],\\r\\n    null: [\\r\\n        { \\\"name\\\": \\\"Same\\\", \\\"type\\\": null },\\r\\n        { \\\"name\\\": \\\"Same\\\", \\\"type\\\": null },\\r\\n        { \\\"name\\\": null, \\\"type\\\": null }\\r\\n    ]\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 2 解決方法\\r\\n\\r\\n## 2.1 `Collectors#groupingBy`（要小心 `null`）\\r\\n\\r\\n如果 `List<Item> items` 裡面冇一個 element 既 `type` 係 `null`，咁以下使用 `Collectors.groupingBy` 既方法係 work：\\r\\n\\r\\n```java\\r\\nfinal Map<String, List<Item>> error = items.stream().collect(groupingBy(Item::getType));\\r\\n```\\r\\n\\r\\n但因為有一啲 elements 既 `type` 係 `null`，所以就會有 exception：\\r\\n\\r\\n```plaintext\\r\\nException in thread \\\"main\\\" java.lang.NullPointerException: element cannot be mapped to a null key\\r\\n    at java.util.Objects.requireNonNull(Objects.java:228)\\r\\n    at java.util.stream.Collectors.lambda$groupingBy$45(Collectors.java:907)\\r\\n```\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [StackOverflow - Collectors.groupingBy doesn't accept null keys](https://stackoverflow.com/questions/22625065/collectors-groupingby-doesnt-accept-null-keys/)\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 `Stream#collect(Supplier, BiConsumer, BiConsumer)`\\r\\n\\r\\n要 handle 到 `null` key，就要用 `Stream#collect(Supplier<R>, BiConsumer<R, ? super T>, BiConsumer<R, R>)` 而唔係一般既 `Stream#collect(Collector<? super T, A, R>)`：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```java\\r\\nfinal Map<String, List<Item>> grouped = items\\r\\n        .stream()\\r\\n        .collect(HashMap::new,\\r\\n                 (m, v) -> m.merge(v.getType(),\\r\\n                                   asList(v),\\r\\n                                   (oldList, newList) -> Stream.concat(oldList.stream(),\\r\\n                                                                       newList.stream())\\r\\n                                                               .collect(toList())),\\r\\n                 HashMap::putAll);\\r\\n```\\r\\n\\r\\n參考 Oracle JDK 8 doc：[Stream#collect(Supplier<R>, BiConsumer<R, ? super T>, BiConsumer<R, R>)](https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-)\\r\\n\";","export default \"# 1 `HashMap` 內部結構\\r\\n\\r\\n`HashMap` 係用一堆「buckets」（bucket array——`Node<K, V>[]`）黎存放 key-value entries。\\r\\n\\r\\n| JDK 版本 | Bucket 既 data structure                                               |\\r\\n| :------: | ---------------------------------------------------------------------- |\\r\\n|  JDK 7   | 全部都係 linked lists                                                  |\\r\\n|  JDK 8   | 可以係 linked list 或者 red-black tree（self-balancing binary tree）。 |\\r\\n\\r\\n用 bucket 既方式存放 key-value entries 可以提供最好既效能。\\r\\n\\r\\n![](blog/2021-09/java-8-hashmap/jdk-7-hashmap.png)\\r\\n\\r\\n![](blog/2021-09/java-8-hashmap/jdk-8-hashmap.png)\\r\\n\\r\\n註：`HashSet` 既內部都係用一個 `HashMap` object 黎實現，令到 elements 唔會重複。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 `HashMap#put`\\r\\n\\r\\n`HashMap#put(K key, V value)` 既 behaviors：\\r\\n\\r\\n-   如果 `HashMap` 既 entries 裡面存在 `key` 既 key，就用 `value` 覆蓋果個 entry 既 value。\\r\\n-   如果 `HashMap` 既 entries 裡面唔存在 `key` 既 key，就將 `key` 同 `value` 作為新既 entry 放入 `HashMap` 既 entries 之中。\\r\\n\\r\\n## 2.1 流程\\r\\n\\r\\n以下係 Oracle JDK 既 `HashMap#put` 流程：\\r\\n\\r\\n1. 對 `key` 進行 `Object#hashCode`，得出 hash（`null` key 既 hash 係 `0`）。\\r\\n1. 將 hash 以及 bit-shifted hash 進行 bitwise XOR 處理（`HashMap#hash`）。\\r\\n    - 令到除左 lower bits 之外，連 higher bits 都可以影響到 hash。\\r\\n    - 目的係萬一我地有啲寫得差既 `hashCode` method，呢一層既處理可以幫我地把關。\\r\\n    - 操作／處理\\r\\n        - Bitwise XOR with bit-shifted hash（Oracle JDK 7、Oracle JDK 8）\\r\\n        - Bitwise XOR with hash seed（Oracle JDK 7）\\r\\n1. 對 hash 進行 `& (<bucket size> - 1)`，得出 bucket index（`null` key 既 bucket index 係 `0`）。\\r\\n    - 因為 bucket size 係 `2` 既次方數，所以結果同 `%` 一樣，但就會 efficient 啲。\\r\\n1. 將 entry 覆蓋或者放入 `HashMap` 既特定 bucket\\r\\n    - Bucket 既 data structure\\r\\n        - 如果 `HashMap` 既容量達到 `64` 而且 bucket 既 linked list 長度超過 `8`，就會 treeify 成 red-black tree，否則就繼續用 linked list。\\r\\n    - Collision\\r\\n        - 因為我地將無限值既 hash 轉化成 bucket index，咁就有 collision 既可能，bucket 有可能會存放多過 `1` 個 element。\\r\\n        - Collision 情境\\r\\n            - 一樣既 hash，所以得出一樣既 bucket index。\\r\\n            - 唔一樣既 hash，但得出一樣既 bucket index。\\r\\n            - 唔一樣既 hash，而又得出唔一樣既 bucket index。\\r\\n        - 處理 hash collision\\r\\n            - 如果 bucket index 所在既 bucket 未有 linked list／red-black tree，咁就 init 一個出黎，放呢個 entry 落去。\\r\\n            - 如果 bucket index 所在既 bucket 已經存在 linked list／red-black tree，咁就由頭到尾 traverse 成個 linked list／red-black tree。\\r\\n                1. 對每個 element 既 key 進行 `Object#equals`，睇下 `key` 係咪已經喺呢個 `HashMap` 裡面存在。\\r\\n                1. 如果一樣，就取代個 value；否則，整一個新既 linked list element，然後將 linked list 既最後一個 element（佢既 next）指向呢個新既 element。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 `Object#hashCode`、`Object#equals`\\r\\n\\r\\n-   `Object#hashCode` 既 contract\\r\\n    -   如果 `equals` method 所用到既 data 冇改變過，咁不斷 call `hashCode` method 返回既結果喺同一個 runtime 裡面必須維持不變。\\r\\n    -   當 `2` 個 objects 通過 `equals` method 得出 `true` 既結果，咁佢地既 `hashCode` method 既結果就必須要返回一樣既 `int` value。\\r\\n    -   當 `2` 個 objects 通過 `equals` method 得出 `false` 既結果，佢地既 `hashCode` method 既結果係冇必要返回唔同既 `int` values，但唔同既 `int` values 有可以提升 hash table 既效能。\\r\\n-   `Object#equals` 既 contract\\r\\n    -   `o.equals(o)` 應該要返回 `true`。\\r\\n    -   只有當 `a.equals(b)` 既結果係 `true`，咁 `b.equals(a)` 既結果都應該要係 `true`。\\r\\n    -   `a.equals(b)` 以及 `b.equals(c)` 既結果都係 `true` 既話，`a.equals(c)` 眉結果應該要係 `true`。\\r\\n    -   如果 `equals` method 所用到既 data 冇改變過，咁不斷 call `a.equals(b)` 返回既結果應該維持不變。\\r\\n    -   `o.equals(null)` 既結果應該要係 `false`。\\r\\n    -   Override `equals` method 既同時係需要 override 埋 `hashCode` method。\\r\\n\\r\\n| 情境 | `Object#hashCode` 結果 | `Object#equals` 結果 | 符合 contract？ |\\r\\n| :--: | :--------------------: | :------------------: | :-------------: |\\r\\n|  ①   |          一樣          |        `true`        |        ✔        |\\r\\n|  ②   |          一樣          |       `false`        |        ✔        |\\r\\n|  ③   |         唔一樣         |        `true`        |        ✘        |\\r\\n|  ④   |         唔一樣         |       `false`        |        ✔        |\\r\\n\\r\\n情境 ② 既例子：\\r\\n\\r\\n-   `\\\"Aa\\\"`、`\\\"BB\\\"`\\r\\n    -   Hash 同樣係 `2112`。\\r\\n        -   `String#hashCode` 既計法將係每個 `char` 作為 `int` value 乘以 `31` 既 char index（右至左，`0`-based）咁多既次方。\\r\\n            -   `A` 既 ASCII 係 `65`。\\r\\n            -   `a` 既 ASCII 係 `97`。\\r\\n            -   `B` 既 ASCII 係 `66`。\\r\\n            -   `65 * 31 + 97` 等於 `66 * 31 + 66` 等於 `2112`。\\r\\n    -   `String#equals` 既結果係 `false`。\\r\\n\\r\\n---\\r\\n\\r\\n# 3 Resize\\r\\n\\r\\nBucket 數量即係 `HashMap` 既容量大小，但係就算不斷增加資料量，實際數量可能永久都達唔到容量大小，因為當 `HashMap` 既實際數量超過容量大小既一定比率，就會自動擴大容量大小到先前既 `2` 倍。呢個比率叫 load factor，默認值係 `0.75`（i.e. `75%`）。\\r\\n\\r\\n需要注意一點，JDK 7 同 JDK 8 唔同，而唔同之處於 JDK 7 唔係只睇 load factor，所以好容易令到個 `HashMap` 既實際數量接近 `100%`，甚至可能令實際數量超越容量。\\r\\n\\r\\n-   如果用 `HashMap` 既 no-arg constructor，咁默認就會有 `16` 個 buckets（`DEFAULT_INITIAL_CAPACITY`）。\\r\\n-   如果用 `HashMap` 既 `new HashMap<>(int initialCapacity)` constructor 或者 `new HashMap<>(int initialCapacity, float loadFactor)` constructor，咁 bucket 數量就會係不少於 `initialCapacity` 而最接近 `2` 既次方數既一個數字（e.g. `3` 就會得出 `4`，而 `10` 就會得出 `16`）。\\r\\n\\r\\n## 3.1 JDK 7 流程\\r\\n\\r\\nJDK 7 既 `HashMap#put` 會 call `HashMap#addEntry`，然後根據條件 resize `HashMap`。而 Oracle JDK 7 既條件係 `(size >= threshold) && (null != table[bucketIndex])`：\\r\\n\\r\\n-   新增呢個 entry 之前，實際數量達到容量既 load factor\\r\\n-   當前既 bucket 有 linked list（出現 collision）\\r\\n\\r\\n基於以上條件，喺 Oracle JDK 7，一個容量係 `16` 既 `HashMap` 理論上最多係可以存放到 `27` 個 entries（`12 + 15`——某個 bucket `12`，新增最後一個 entry 果時唔超過 `16 * 0.75 = 12`，而其他 buckets 各 `1`）；而 OpenJDK 7 就唔存在第 `2` 個條件，所以就唔會出現咁既情況。\\r\\n\\r\\n`HashMap#resize(int newCapacity)` method：\\r\\n\\r\\n1. 建立一個全新既 bucket array，容量係舊既 `2` 倍。\\r\\n1. 將本來既 bucket array 既所有 entries 抄過去新既 bucket array（`HashMap#transfer(Entry[] newTable)` method）。\\r\\n    1. 對所有 bucket 既 linked list\\r\\n        1. 由 linked list 第 `1` 個 element 開始至到最後一個 element\\r\\n            1. 對 entry 既 hash 進行 `& (<bucket size> - 1)`，得出新既 bucket index\\r\\n            1. 將 entry 放喺新 bucket 既頭部，佢會（佢既 next）指向現有既 entry（如果未有就 `null`）。\\r\\n\\r\\n註：Bucket 既 linked list 如果有多過 `1` 個 element（next 唔係 `null`），喺 resize 完之後，linked list elements 既次序將會調轉曬（雖然唔太重要）。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 JDK 8 流程\\r\\n\\r\\n`HashMap#resize()` method：\\r\\n\\r\\n1.  建立一個全新既 bucket array，容量係舊既 `2` 倍。\\r\\n1.  將本來既 bucket array 既所有 entries 抄過去新既 bucket array。\\r\\n    1.  對所有舊 buckets\\r\\n        -   如果係 linked list\\r\\n            1. 由 linked list 第 `1` 個 element 開始至到最後一個 element\\r\\n                1. 對 entry 既 hash 進行 `& <old bucket size>`\\r\\n                    - 如果結果係 `0`（即係屬於前半部分，屬於舊既 bucket indexes）\\r\\n                        1. 將 entry 放喺新 linked list 既尾部（借助 `loHead`、`loTail`）。如果已經有 entry，現有 entry（佢既 next）會指向呢個 entry。\\r\\n                    - 如果結果唔係 `0`（即係屬於後半部分，屬於新增既 bucket indexes）\\r\\n                        1. 將 entry 放喺新 linked list 既尾部（借助 `hiHead`、`hiTail`）。如果已經有 entry，現有 entry（佢既 next）會指向呢個 entry。\\r\\n                1. 將新 buckets 指向 `loHead`、`hiHead`\\r\\n                    - 屬於新 buckets 前半部分既果一個 linked list 就會係 `loHead`（`newTab[j] = loHead;`）。\\r\\n                    - 屬於新 buckets 後半部分既果一個 linked list 就會係 `hiHead`（`newTab[j + oldCap] = hiHead;`）。\\r\\n        -   如果係 red-black tree\\r\\n            1. 同處理 linked list 既方式相似，最後 `loHead`、`hiHead` 會 `treeify` 成 red-black trees。\\r\\n\\r\\n註：`loHead`、`loTail`、`hiHead`、`hiTail` 解決左 JDK 7 resize 之後所有 buckets 既 linked lists 如果有多個 elements 既情況下次序調轉曬既問題。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.3 建立避免 resize 既 `HashMap`\\r\\n\\r\\n假如我地而家有已知數量既資料，而且係一個好大既數值，令到我地唔可以唔考慮效能。我地想建立一個 `HashMap` 然後 call `HashMap#put` 或者 `HashMap#putAll` 去存放呢啲資料入去，我地會有以下既考慮（適用於 Oracle JDK 8）：\\r\\n\\r\\n| 方法                                                         | 考慮                                                                                                                                                                                                                                                                                          |\\r\\n| ------------------------------------------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n| `new HashMap<>()`                                            | 最唔推薦，因為如果資料數量好大，就需要由 `16`、`32`、`64` 咁一直 resize 上去，直到資料數量唔多過容量既 `75%`。                                                                                                                                                                                |\\r\\n| `new HashMap<>(int initialCapacity)`                         | 可以用，但需要計算容量，確保資料數量係容量既 `75%` 或以下，否則會觸發 resize。例子：如果己知數量係 `16`，呢個 constructor 會建立一個容量係 `16` 既 `HashMap`，但當我地 `HashMap#put` 第 `13` 筆資料既時候，`HashMap` 就會 resize。                                                            |\\r\\n| `new HashMap<>(int initialCapacity, float loadFactor)`       | 最好，因為可以 set load factor 係 `1`，即係 `new HashMap<>(size, 1)`。只有當容量唔夠，`HashMap` 先會 resize。                                                                                                                                                                                 |\\r\\n| Guava 既 `Maps#newHashMapWithExpectedSize(int expectedSize)` | 可以用，但要注意佢既算式係 `(int) ((float) expectedSize / 0.75F + 1.0F)`，呢個 `+ 1.0F` 有可能會令到容量係真正需要既 `2` 倍。例子：如果己知數量係 `12`，呢個 method 會計到 `17`，從而令 `HashMap` 建立一個容量係 `32` 既 `HashMap`，而唔係容量係 `16`（唔會 resize 既最小容量）既 `HashMap`。 |\\r\\n\\r\\n註：\\r\\n\\r\\n-   理論上，如果出現過多既 collisions，以上既做法都唔可以保證 `HashMap` 唔會 resize。\\r\\n-   實際上，資料本身帶有隨機性，而只要我地寫好啲 `hashCode` method，唔好令到 collision 咁容易發生就得。\\r\\n\\r\\n---\\r\\n\\r\\n# 4 筆記\\r\\n\\r\\n## 4.1 內部運作\\r\\n\\r\\n-   `HashMap#put` 係用 `& (<bucket size> - 1)`\\r\\n    -   目的係要知道 key 屬於邊一個 bucket index，所以就需要知道係 `0` 至 `<bucket size> - 1` 邊一個。\\r\\n-   JDK 8 既 `HashMap#resize` 係用 `& <old bucket size>`\\r\\n    -   目的係要知道現有既某個 bucket 既每一個 entry 喺新既 bucket array 裡面屬於前半部分（舊既 bucket indexes）定係後半部分（新既 bucket indexes），所以就需要知道新增既 bit 係 `0` 定係 `1`。\\r\\n    -   新增既 bit 就係舊 bucket size 既二進制數字既 `1` 字果個位。\\r\\n    -   想知道一個二進制數字對象特定既 bits 係 `0` 定係 `1`，就要對佢進行 bit masking 操作。\\r\\n        1.  需要用一個二進制數字作為 mask——只有想要既 bits 係 `1` 而其他唔想要既 bits 係 `0` 既二進制數字。\\r\\n        1.  用呢個 mask 對二進制數字對象進行 bitwise AND（`&`）操作。\\r\\n        1.  而對舊 bucket index 既二進制數字進行 bit masking 所得出既結果只有 `2` 個。\\r\\n            -   所有 bits 都係 `0`（亦即係 `0`）\\r\\n            -   第 `1` 個 bit 係 `1`，其他 bits 係 `0`（亦即係舊 bucket index）\\r\\n-   因為 bucket size 一定係 `2` 既次方數，所以佢既二進制一定係 `1` 後面有 `N` 個 `0`。\\r\\n-   例子：容量由 `16` resize 成 `32`\\r\\n    -   舊 `HashMap`\\r\\n        -   舊 bucket size `16` 既二進制係 `10000`。\\r\\n        -   舊 bucket size `16` - `1` 既二進制係 `1111`。\\r\\n    -   新 `HashMap`\\r\\n        -   新 bucket size `32` 既二進制係 `100000`。\\r\\n        -   新 bucket size `32` - `1` 既二進制係 `11111`。\\r\\n    -   新增既 bit 係指 `10000` 既 `1`（`2^4`）。\\r\\n        -   舊 `HashMap` 最大既 bucket index `1111` + `1` = `10000`——第 `1` 個新增既 bucket index。\\r\\n        -   `10000` 開始直至 `11111` 都係新增既 bucket indexes。\\r\\n\\r\\n---\\r\\n\\r\\n## 4.2 測試用代碼\\r\\n\\r\\n以下既代碼可以幫我地了解 Java 幾時會 resize 我地既 `HashMap`，以及 bucket 既分佈。\\r\\n\\r\\n`HashMapTest.java`：\\r\\n\\r\\n```java\\r\\npublic class HashMapTest {\\r\\n\\r\\n    public static void main(String[] args) {\\r\\n\\r\\n        final int cap = 16;\\r\\n        final int size = 28;\\r\\n\\r\\n        final Map<Foo, Integer> map = new HashMap<>(cap);\\r\\n\\r\\n        for (int i=0; i<size; i++) {\\r\\n            map.put(new Foo(i), i);\\r\\n            HashMapDebugUtils.printMap(map);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n`HashMapDebugUtils.java`：\\r\\n\\r\\n```java\\r\\npublic final class HashMapDebugUtils {\\r\\n    private static Field nextField;\\r\\n\\r\\n    static {\\r\\n        try {\\r\\n            final Class<?> entryClass = Class.forName(\\\"java.util.HashMap$Entry\\\");\\r\\n            nextField = entryClass.getDeclaredField(\\\"next\\\");\\r\\n            nextField.setAccessible(true);\\r\\n        } catch (Exception e) {\\r\\n            try {\\r\\n                final Class<?> entryClass = Class.forName(\\\"java.util.HashMap$Node\\\");\\r\\n                nextField = entryClass.getDeclaredField(\\\"next\\\");\\r\\n                nextField.setAccessible(true);\\r\\n            } catch (Exception ex) {\\r\\n                ex.printStackTrace();\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private HashMapDebugUtils() {}\\r\\n\\r\\n    public static void printMap(Map<?, ?> map) {\\r\\n        try {\\r\\n            final Class<?> mapType = map.getClass();\\r\\n            final Field tableField = mapType.getDeclaredField(\\\"table\\\");\\r\\n            tableField.setAccessible(true);\\r\\n\\r\\n            final Object[] bucketArr = (Object[]) tableField.get(map);\\r\\n            final int capacity = bucketArr.length;\\r\\n\\r\\n            System.out.printf(\\\"Capacity: %5d\\\", capacity);\\r\\n            System.out.printf(\\\"%5s|%5s\\\", \\\" \\\", \\\" \\\");\\r\\n            System.out.printf(\\\"Size: %5d\\\", map.size());\\r\\n            printBuckets(bucketArr);\\r\\n            System.out.println();\\r\\n        } catch (Exception e) {\\r\\n            e.printStackTrace();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private static void printBuckets(final Object[] bucketArr) throws Exception {\\r\\n\\r\\n        System.out.printf(\\\"%5s|%5s\\\", \\\" \\\", \\\" \\\");\\r\\n        System.out.printf(\\\"Buckets: \\\");\\r\\n\\r\\n        for (int i=0; i<bucketArr.length; i++) {\\r\\n            printBucket(i, bucketArr[i]);\\r\\n\\r\\n            if (i<bucketArr.length-1) {\\r\\n                System.out.print(\\\" | \\\");\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private static void printBucket(int index, Object entry) throws Exception {\\r\\n\\r\\n        if (entry==null) {\\r\\n            System.out.printf(\\\"[%d]:  . \\\", index);\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        final boolean isRedBlackTree = \\\"java.util.HashMap$TreeNode\\\".equals(entry.getClass().getName());\\r\\n\\r\\n        int count = 0;\\r\\n        do {\\r\\n            count++;\\r\\n            entry = nextField.get(entry);\\r\\n        } while (entry!=null);\\r\\n\\r\\n        System.out.printf(\\\"[%d]: %2d\\\", index, count);\\r\\n        System.out.print(isRedBlackTree ? \\\"t\\\" : \\\" \\\");\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n`Foo.java`（作為自定義 map key，所以 immutable）：\\r\\n\\r\\n```java\\r\\npublic final class Foo {\\r\\n    private final int val;\\r\\n\\r\\n    public Foo(int val) {\\r\\n        this.val = val;\\r\\n    }\\r\\n\\r\\n    @Override\\r\\n    public int hashCode() {\\r\\n        return Math.max(0, val-11);\\r\\n    }\\r\\n\\r\\n    @Override\\r\\n    public boolean equals(Object obj) {\\r\\n        if (this == obj) return true;\\r\\n        if (!(obj instanceof Foo)) return false;\\r\\n        Foo other = (Foo) obj;\\r\\n        return val == other.val;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n### 4.2.1 Oracle JDK 7 既測試結果\\r\\n\\r\\n執行程式之後，我地可以睇到：\\r\\n\\r\\n-   當容量係 `16` 既情況下，實際數量係有機會去到 `27`。\\r\\n-   當新增第 `28` 個 entry 既時候，容量先至由 `16` 擴大到 `32`。\\r\\n\\r\\nConsole output：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```plaintext\\r\\nCapacity:    16     |     Size:     1\\r\\nCapacity:    16     |     Size:     2\\r\\nCapacity:    16     |     Size:     3\\r\\nCapacity:    16     |     Size:     4\\r\\nCapacity:    16     |     Size:     5\\r\\nCapacity:    16     |     Size:     6\\r\\nCapacity:    16     |     Size:     7\\r\\nCapacity:    16     |     Size:     8\\r\\nCapacity:    16     |     Size:     9\\r\\nCapacity:    16     |     Size:    10\\r\\nCapacity:    16     |     Size:    11\\r\\nCapacity:    16     |     Size:    12\\r\\nCapacity:    16     |     Size:    13\\r\\nCapacity:    16     |     Size:    14\\r\\nCapacity:    16     |     Size:    15\\r\\nCapacity:    16     |     Size:    16\\r\\nCapacity:    16     |     Size:    17\\r\\nCapacity:    16     |     Size:    18\\r\\nCapacity:    16     |     Size:    19\\r\\nCapacity:    16     |     Size:    20\\r\\nCapacity:    16     |     Size:    21\\r\\nCapacity:    16     |     Size:    22\\r\\nCapacity:    16     |     Size:    23\\r\\nCapacity:    16     |     Size:    24\\r\\nCapacity:    16     |     Size:    25\\r\\nCapacity:    16     |     Size:    26\\r\\nCapacity:    16     |     Size:    27\\r\\nCapacity:    32     |     Size:    28\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 4.2.2 Oracle JDK 8 既測試結果\\r\\n\\r\\n先 uncomment `printBuckets(bucketArr);` 再執行程式，我地可以睇到：\\r\\n\\r\\n-   當實際數量去到 `9` 而舊容量係 `16`（多過 `TREEIFY_THRESHOLD` 既 `8` 但係容量小過 `MIN_TREEIFY_CAPACITY` 既 `64`），容量會由 `16` 擴大到 `32`。\\r\\n-   當實際數量去到 `10` 而舊容量係 `32`（多過 `TREEIFY_THRESHOLD` 既 `8` 但係容量小過 `MIN_TREEIFY_CAPACITY` 既 `64`），容量會由 `32` 擴大到 `64`。\\r\\n-   當實際數量去到 `11` 而舊容量係 `64`（多過 `TREEIFY_THRESHOLD` 既 `8` 而且容量達到 `MIN_TREEIFY_CAPACITY` 既 `64`），bucket 會由 linked list treeify 成 red-black tree。\\r\\n\\r\\nConsole output（省略左部分 bucket 分佈）：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```plaintext\\r\\nCapacity:    16     |     Size:     1     |     Buckets: [0]:  1 \\r\\nCapacity:    16     |     Size:     2     |     Buckets: [0]:  2 \\r\\nCapacity:    16     |     Size:     3     |     Buckets: [0]:  3 \\r\\nCapacity:    16     |     Size:     4     |     Buckets: [0]:  4 \\r\\nCapacity:    16     |     Size:     5     |     Buckets: [0]:  5 \\r\\nCapacity:    16     |     Size:     6     |     Buckets: [0]:  6 \\r\\nCapacity:    16     |     Size:     7     |     Buckets: [0]:  7 \\r\\nCapacity:    16     |     Size:     8     |     Buckets: [0]:  8 \\r\\nCapacity:    32     |     Size:     9     |     Buckets: [0]:  9 \\r\\nCapacity:    64     |     Size:    10     |     Buckets: [0]: 10 \\r\\nCapacity:    64     |     Size:    11     |     Buckets: [0]: 11t\\r\\nCapacity:    64     |     Size:    12     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    13     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    14     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    15     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    16     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    17     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    18     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    19     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    20     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    21     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    22     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    23     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    24     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    25     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    26     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    27     |     Buckets: [0]: 12t\\r\\nCapacity:    64     |     Size:    28     |     Buckets: [0]: 12t\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.3 Mutable key 既問題\\r\\n\\r\\n正因為 `HashMap` 係用 key object 既 hash 去計算出存放 entry 既 bucket index，如果 key object 既 hash 喺存放 entry 之後改變左，咁又會產生咩變化或者影響呢？我地可以做個簡單實驗。\\r\\n\\r\\n`Bar.java`（mutable）：\\r\\n\\r\\n```java\\r\\npublic class Bar {\\r\\n    private int val;\\r\\n\\r\\n    public Bar(int val) {\\r\\n        this.val = val;\\r\\n    }\\r\\n\\r\\n    public void setVal(int val) {\\r\\n        this.val = val;\\r\\n    }\\r\\n\\r\\n    @Override\\r\\n    public int hashCode() {\\r\\n        return val;\\r\\n    }\\r\\n\\r\\n    @Override\\r\\n    public boolean equals(Object obj) {\\r\\n        if (this == obj) return true;\\r\\n        if (!(obj instanceof Bar)) return false;\\r\\n        Bar other = (Bar) obj;\\r\\n        System.out.println(\\\"Bar#equals: \\\" + (val==other.val) + \\\" (\\\" + val + \\\" = \\\" + other.val + \\\")\\\");\\r\\n        return val == other.val;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n`HashMapWithMutableElementTest.java`：\\r\\n\\r\\n```java\\r\\npublic class HashMapWithMutableElementTest {\\r\\n\\r\\n    public static void main(String[] args) throws Exception {\\r\\n\\r\\n        final Bar bar = new Bar(1);\\r\\n\\r\\n        final Map<Bar, String> map = new HashMap<>();\\r\\n        map.put(bar, \\\"one\\\");\\r\\n        HashMapDebugUtils.printMap(map); // bucket [1]: 1 個 entry\\r\\n\\r\\n        System.out.println(map.containsKey(new Bar(1))); // true\\r\\n\\r\\n        bar.setVal(2);\\r\\n        HashMapDebugUtils.printMap(map); // bucket [1]: 1 個 entry\\r\\n\\r\\n        System.out.println(map.containsKey(new Bar(1))); // false\\r\\n        System.out.println(map.containsKey(new Bar(2))); // false\\r\\n\\r\\n        map.put(new Bar(2), \\\"two\\\");\\r\\n        HashMapDebugUtils.printMap(map); // bucket [1]: 1 個 entry | [2]: 1 個 entry\\r\\n\\r\\n        System.out.println(map.remove(new Bar(1))); // null\\r\\n        System.out.println(map.remove(new Bar(2))); // two\\r\\n        HashMapDebugUtils.printMap(map); // bucket [1]: 1 個 entry\\r\\n\\r\\n        final Map<Bar, String> newMap = new HashMap<>(map);\\r\\n        HashMapDebugUtils.printMap(newMap); // bucket [0]: 1 個 entry\\r\\n        System.out.println(newMap.containsKey(new Bar(2))); // true\\r\\n\\r\\n        System.out.println(newMap.remove(new Bar(2))); // one\\r\\n        HashMapDebugUtils.printMap(newMap); // bucket [0]: 1 個 entry\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   我地既 `HashMap` 會用 mutable 既 `Bar` class 作為 key type。\\r\\n    -   `Bar#hashCode` 會返回 `int` type 既 `val` field value。\\r\\n    -   `Bar#equals` 會用 `val` field value 黎比較 object equality。\\r\\n-   測試流程（Oracle JDK 8）\\r\\n    1.  將 key 係 `val: 1`、value 係 `one` 既 entry 放入 `HashMap`。\\r\\n        1.  Hash 係 `1`，所以會放入 bucket `1`。\\r\\n        1.  可以見到 bucket `1` 有 `1` 個 entry。\\r\\n    1.  用 `HashMap#containsKey` 測試下 `val: 1` 既 key 係咪存在喺 `HashMap` 裡面。\\r\\n        1.  Hash 係 `1`，所以會喺 bucket `1` 裡面搵。\\r\\n        1.  Bucket `1` 既 linked list 只有 `1` 個 element，而對呢個 element 既 `Bar#equals` 返回 `true`（`val` `1` 等於 `1`）。\\r\\n        1.  結果係存在。\\r\\n    1.  將呢個 `Bar` object 既 `val` 改成 `2`。\\r\\n    1.  用 `HashMap#containsKey` 測試下 `val: 1` 既 key 係咪存在喺 `HashMap` 裡面。\\r\\n        1.  Hash 係 `1`，所以會喺 bucket `1` 裡面搵。\\r\\n        1.  Bucket `1` 既 linked list 只有 `1` 個 element，但係對呢個 element 既 `Bar#equals` 返回 `false`（`val` `1` 唔等於 `2`）。\\r\\n        1.  結果係唔存在。\\r\\n    1.  用 `HashMap#containsKey` 測試下 `val: 2` 既 key 係咪存在喺 `HashMap` 裡面。\\r\\n        1.  Hash 係 `2`，所以會喺 bucket `2` 裡面搵。\\r\\n        1.  Bucket `2` 係空既。\\r\\n        1.  結果係唔存在。\\r\\n    1.  將 key 係 `val: 2`、value 係 `two` 既 entry 放入 `HashMap`。\\r\\n        1.  Hash 係 `2`，所以會放入 bucket `2`。\\r\\n        1.  可以見到 bucket `1` 以及 bucket `2` 各有 `1` 個 entry。\\r\\n    1.  用 `HashMap#remove` 測試下刪除 key 係 `val: 1` 既 entry。\\r\\n        1.  Hash 係 `1`，所以會喺 bucket `1` 裡面搵。\\r\\n        1.  Bucket `1` 既 linked list 只有 `1` 個 element，但係對呢個 element 既 `Bar#equals` 返回 `false`（`val` `1` 唔等於 `2`）。\\r\\n        1.  冇刪除到 entry，所以返回 `null`。\\r\\n    1.  用 `HashMap#remove` 測試下刪除 key 係 `val: 2` 既 entry。\\r\\n        1.  Hash 係 `2`，所以會喺 bucket `2` 裡面搵。\\r\\n        1.  Bucket `2` 既 linked list 只有 `1` 個 element，而對呢個 element 既 `Bar#equals` 返回 `true`（`val` `2` 等於 `2`）。\\r\\n        1.  因為刪除左 entry，所以返回 entry 既 value `two`。\\r\\n        1.  可以見到 bucket `1` 有 `1` 個 entry，而 bucket `2` 就再冇 entry。\\r\\n    1.  用 `new HashMap<>(Map<? extends K,? extends V> m)` constructor 重新建立一個 `HashMap`，argument 用上述既 `HashMap`。\\r\\n        1.  可以見到只有 `2` 個 buckets——Bucket `0` 有 `1` 個 entry，而 bucket `1` 就冇 entry。\\r\\n    1.  用 `HashMap#containsKey` 測試下 `val: 2` 既 key 係咪存在喺新既 `HashMap` 裡面。\\r\\n        1.  Hash 係 `2`，所以會喺 bucket `0` 裡面搵。\\r\\n        1.  Bucket `0` 既 linked list 只有 `1` 個 element，而對呢個 element 既 `Bar#equals` 返回 `true`（`val` `2` 等於 `2`）。\\r\\n        1.  結果係存在。\\r\\n\\r\\n因為 `HashSet` 既內部都係用一個 `HashMap` object 黎實現，令到 elements 唔會重複，所以如果啲 elements 既 class 係 mutable，都會有一樣既問題。\\r\\n\\r\\n`HashSetWithMutableElementTest.java`：\\r\\n\\r\\n```java\\r\\npublic class HashSetWithMutableElementTest {\\r\\n\\r\\n    public static void main(String[] args) throws Exception {\\r\\n\\r\\n        final Bar bar = new Bar(1);\\r\\n\\r\\n        final Set<Bar> set = new HashSet<>();\\r\\n        set.add(bar);\\r\\n\\r\\n        System.out.println(set.contains(new Bar(1))); // true\\r\\n\\r\\n        bar.setVal(2);\\r\\n\\r\\n        System.out.println(set.contains(new Bar(1))); // false\\r\\n        System.out.println(set.contains(new Bar(2))); // false\\r\\n\\r\\n        set.add(new Bar(2));\\r\\n\\r\\n        System.out.println(set.remove(new Bar(1))); // false\\r\\n        System.out.println(set.remove(new Bar(2))); // true\\r\\n\\r\\n        final Set<Bar> newMap = new HashSet<>(set);\\r\\n        System.out.println(newMap.contains(new Bar(2))); // true\\r\\n        System.out.println(newMap.remove(new Bar(2))); // true\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 5 參考資料\\r\\n\\r\\n-   [HashMap - JDK 7 vs JDK 8](https://javamana.com/2021/02/20210202162541893w.html)\\r\\n-   [JDK 1.8 中 HashMap 的 resize 優化](https://elsef.com/2019/11/11/JDK1.8%E4%B8%ADHashMap%E7%9A%84resize%E6%93%8D%E4%BD%9C/)\\r\\n-   [深入理解 HashMap（四）：關鍵源碼逐行分析之 resize 擴容](https://segmentfault.com/a/1190000015812438)\\r\\n-   [你給 HashMap 初始化了容量，卻讓性能變加更糟？](https://zhuanlan.zhihu.com/p/369808654)\\r\\n-   [StackOverflow - Explanation of HashMap#hash(int) method](https://stackoverflow.com/questions/2414117/explanation-of-hashmaphashint-method)\\r\\n-   OpenJDK\\r\\n    -   [OpenJDK 7 - `HashMap.java` source code](https://hg.openjdk.java.net/jdk7/jdk7/jdk/file/tip/src/share/classes/java/util/HashMap.java)\\r\\n    -   [OpenJDK 8 - `HashMap.java` source code](https://hg.openjdk.java.net/jdk8/jdk8/jdk/file/tip/src/share/classes/java/util/HashMap.java)\\r\\n    -   [OpenJDK 8 - `HashSet.java` source code](https://hg.openjdk.java.net/jdk8/jdk8/jdk/file/tip/src/share/classes/java/util/HashSet.java)\\r\\n-   Oracle JDK\\r\\n    -   [Oracle JDK 7 - `HashMap.java` source code](https://github.com/zxiaofan/JDK/blob/master/JDK1.7/src/java/util/HashMap.java)\\r\\n    -   [Oracle JDK 8 - `HashMap.java` source code](https://github.com/zxiaofan/JDK/blob/master/JDK1.8/src/java/util/HashMap.java)\\r\\n    -   [Oracle JDK 8 - `HashSet.java` source code](https://github.com/zxiaofan/JDK/blob/master/JDK1.8/src/java/util/HashSet.java)\\r\\n\";","export default \"# 1 Logging 簡介\\r\\n\\r\\n一個程式運行既時候係咩狀態、以前處理過啲咩、有冇曾經出 exceptions，如果我地唔做 logging 就冇辦法知道，然後就唔可能有系統地去 troubleshoot 或者 debug 到個程式。\\r\\n\\r\\nJava 既基礎班有教我地用 `System.out` 或者 `System.err`（同為 `PrintStream` type）既 `println(...)` 或者 `printf(...)` 去令個程式喺 runtime 時候喺 console 度顯示到 log，但問題係 console 既 log 只能喺果個 console session 仍然存在既時候 keep 到紀錄，而如果 console session 完結左，我地係冇辦法睇得返啲 log。\\r\\n\\r\\n因此，我地必須將啲 log save 落 file 度。除此之外，用 console 去做 logging 仲有唔少問題，所以就要用啲 logging libraries 去做 logging，亦需要用啲工具去幫手管理啲 log。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 如何做好 logging\\r\\n\\r\\n好既 logging practices 至少包括以下幾點：\\r\\n\\r\\n-   可以自行配置格式\\r\\n    -   包括由邊一個 Java class 既邊一行生產出黎、生產既 timestamp 資料\\r\\n    -   包括額外數據（例如 microservice architecture 既 web applications 之間如果用 per-HTTP-request trace ID 溝通，日後就可以用 trace ID 追蹤到成個 flow，知道先後 call 左邊啲 microservices）。\\r\\n    -   一個 Java 程式可以產生多個 threads，如果係 web application 既程式而 log entry 度又冇加到 per-HTTP-request 既 trace ID 或者 session ID，我地就只能以 thread name 黎分返開啲 log，從而串連啲 log 去跟住個 flow debug。\\r\\n    -   可以做到 log message 只係一個 log entry\\r\\n-   根據日期、檔案大小拆檔，並且識自動管理\\r\\n    -   假如我地個程式有好多野 log，亦有好多 users 用我地個 web service，咁我地個 web application 程式就可以生產到勁多 log。咁既情況下，最好係我地可以將啲 log 根據日期自動開新檔案儲存啲 log，甚或再根據檔案大小拆分檔案。\\r\\n-   可以配合搜尋工具\\r\\n    -   如果我地既程式係一個提供 web service 既 web application，而我地又得一個或者一堆 log files，但冇工具去管理佢地，咁我地係好難可以搵返特定既 log 出黎，所以我地亦要用啲專門管理 log 既工具。\\r\\n        -   Open source 既工具有 Elastic 既 ELK stack\\r\\n            -   Elasticsearch - 儲存 log、搜尋引擎\\r\\n            -   Logstash - 讀 log、處理 log\\r\\n            -   Kibana - 搜尋 log 既用戶介面、視覺化或者圖像化搜尋結果\\r\\n        -   收費 cloud 既工具有 Sumo Logic\\r\\n\\r\\n---\\r\\n\\r\\n# 3 Logging libraries\\r\\n\\r\\nLogging 可以分為 API 以及實現既 libraries。我地可以喺程式裡面用唔同既配搭：\\r\\n\\r\\n-   Log4j2 Core（API）、Log4j2 API（實現）\\r\\n-   Slf4j（API）、Logback（實現）\\r\\n-   Apache Commons Logging（API）、Log4j2（實現）\\r\\n    -   需要使用 Commons Logging Bridge\\r\\n\\r\\n![](blog/2021-09/java-logging/bridging-legacy-apis.png)\\r\\n\\r\\n## 3.1 Log4j2 漏洞\\r\\n\\r\\n時間線：[Log4j Vulnerability](https://orangecyberdefense.com/nl/blog/threat/log4j-vulnerability/)\\r\\n\\r\\n### 3.1.1 JNDI lookup 遠程代碼執行漏洞（2021 年 12 月）\\r\\n\\r\\n喺 2021 年 12 月，Log4j2 畀人發現有遠程代碼執行漏洞（Log4Shell／`CVE-2021-44228`）。呢個漏洞係利用 Log4j 既一個 JNDI lookup 功能。\\r\\n\\r\\n通常啲 logging libraries 都可以畀我地將 object value substitute 落帶有 `{}` placeholder 既 log message format 裡面，而如果呢個 object 係一個 JNDI URL 既 string，因為 Log4j2 本來默認左 JNDI lookup 既關係，Log4j2 就會連接到呢個 JNDI URL。如果個 JNDI URL 係一個上載喺黑客 server 上面既一個惡意 Java class 既網址，咁就有可能令到 Log4j2 call 左果個惡意網址去下載同埋執行果個惡意 Java class，從而達到最危險既資訊安全漏洞——遠程代碼執行漏洞（remote code execution）。\\r\\n\\r\\n受影響既版本由 `2.0-beta-9` 至到 `2.14.1`，然後 Apache 推出左 `2.15.0` 去解決呢個漏洞。\\r\\n\\r\\n如果冇辦法升級到最新版本，只要用既版本係 `2.10.0` 或以上，就可以能用呢啲參數：\\r\\n\\r\\n|       參數類別       |           參數名稱            | 參數值 |\\r\\n| :------------------: | :---------------------------: | :----: |\\r\\n|   System property    |  `log4j2.formatMsgNoLookups`  | `true` |\\r\\n| Environment variable | `LOG4J_FORMAT_MSG_NO_LOOKUPS` | `true` |\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Reddit - Log4j 0day being exploited](https://www.reddit.com/r/blueteamsec/comments/rd38z9/log4j_0day_being_exploited/)\\r\\n-   [Log4Shell: JNDI Injection via Attackable Log4J](https://securityboulevard.com/2021/12/log4shell-jndi-injection-via-attackable-log4j/)（[備用一](https://web.archive.org/web/20230503012532/https://securityboulevard.com/2021/12/log4shell-jndi-injection-via-attackable-log4j/)／[備用二](https://archive.ph/HNwfs)）\\r\\n-   [Youtube - Log4J Vulnerability (Log4Shell) Explained - for Java developers](https://www.youtube.com/watch?v=uyq8yxWO1ls)\\r\\n-   [Countless Servers Are Vulnerable to Apache Log4j Zero-Day Exploit](https://www.pcmag.com/news/countless-serves-are-vulnerable-to-apache-log4j-zero-day-exploit)（[備用一](https://web.archive.org/web/20230503055429/https://www.pcmag.com/news/countless-serves-are-vulnerable-to-apache-log4j-zero-day-exploit)／[備用二](https://archive.ph/sLjQh)）\\r\\n-   [Inside the Log4j2 vulnerability (CVE-2021-44228)](https://blog.cloudflare.com/inside-the-log4j2-vulnerability-cve-2021-44228/)\\r\\n-   [Apache Log4j2 遠程代碼執行漏洞分析](https://www.anquanke.com/post/id/262668)（[備用一](https://web.archive.org/web/20230503012709/https://www.anquanke.com/post/id/262668)／[備用二](https://archive.ph/PtDnt)）\\r\\n-   [Log4J2 Vulnerability and Spring Boot](https://spring.io/blog/2021/12/10/log4j2-vulnerability-and-spring-boot)\\r\\n-   [Log4j2 官網](https://logging.apache.org/log4j/2.x/)\\r\\n-   [8u191 後的 JNDI 注入利用](https://www.cnblogs.com/yyhuni/p/15088134.html)（[備用一](https://web.archive.org/web/20230503012839/https://www.cnblogs.com/yyhuni/p/15088134.html)／[備用二](https://archive.ph/03McJ)）\\r\\n-   [Youtube - A Journey From JNDI/LDAP Manipulation to Remote Code Execution Dream Land](https://www.youtube.com/watch?v=Y8a5nB-vy78)\\r\\n\\r\\n---\\r\\n\\r\\n### 3.1.2 Infinite recursion DoS 漏洞（2021 年 12 月）\\r\\n\\r\\n不過之後又有人發現 Log4j2 仲有 DoS 漏洞（`CVE-2021-45105`），情況就好似 iPhone 既 iMessage 輸入特定文字有機會令到個程式 crash 咁。要解決呢個問題，就要升級 Log4j2 到 `2.17.0`（到底有完沒完？）。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Log4j2 JIRA - Certain strings can cause infinite recursion](https://issues.apache.org/jira/browse/LOG4J2-3230)\\r\\n\\r\\n---\\r\\n\\r\\n# 4 動手寫\\r\\n\\r\\n## 4.1 普通 Java 程式（非 Spring）\\r\\n\\r\\n我地會用到 Lombok、Slf4j 以及 Logback。\\r\\n\\r\\n### 4.1.1 Maven dependencies\\r\\n\\r\\n我地會用到 Lombok 既 `@Slf4j` annotation 去 generate construct logger object 既 code。\\r\\n\\r\\n```xml\\r\\n<dependencies>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.projectlombok</groupId>\\r\\n\\t\\t<artifactId>lombok</artifactId>\\r\\n\\t\\t<version>1.18.24</version>\\r\\n\\t\\t<scope>provided</scope>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.slf4j</groupId>\\r\\n\\t\\t<artifactId>slf4j-api</artifactId>\\r\\n\\t\\t<version>1.7.36</version>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>ch.qos.logback</groupId>\\r\\n\\t\\t<artifactId>logback-classic</artifactId>\\r\\n\\t\\t<version>1.2.11</version>\\r\\n\\t</dependency>\\r\\n\\r\\n</dependencies>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.2 Spring Boot web application\\r\\n\\r\\n我地會用到 Spring Boot、Lombok、Slf4j 以及 Logback。\\r\\n\\r\\n### 4.2.1 Maven dependencies\\r\\n\\r\\n我地會用到 Lombok 既 `@Slf4j` annotation 去 generate create construct object 既 code。\\r\\n\\r\\n```xml\\r\\n<parent>\\r\\n\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t<artifactId>spring-boot-starter-parent</artifactId>\\r\\n\\t<version>2.6.1</version>\\r\\n</parent>\\r\\n\\r\\n<dependencies>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.projectlombok</groupId>\\r\\n\\t\\t<artifactId>lombok</artifactId>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t<artifactId>spring-boot-starter-web</artifactId>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>net.logstash.logback</groupId>\\r\\n\\t\\t<artifactId>logstash-logback-encoder</artifactId>\\r\\n\\t\\t<version>7.0.1</version>\\r\\n\\t</dependency>\\r\\n\\r\\n</dependencies>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.3 Logback 配置\\r\\n\\r\\n喺我地既 Maven project 度建立一個配置檔：\\r\\n\\r\\n-   `main/resources`\\r\\n    -   `logback.xml`\\r\\n\\r\\n檔案內容：\\r\\n\\r\\n```xml\\r\\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\r\\n<configuration>\\r\\n    <appender name=\\\"console\\\" class=\\\"ch.qos.logback.core.ConsoleAppender\\\">\\r\\n        <encoder>\\r\\n            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} (%file:%line\\\\) - %msg%n</pattern>\\r\\n\\t\\t\\t<charset>UTF-8</charset>\\r\\n        </encoder>\\r\\n    </appender>\\r\\n\\r\\n    <appender name=\\\"stash\\\" class=\\\"ch.qos.logback.core.rolling.RollingFileAppender\\\">\\r\\n        <file>logs/app.log</file>\\r\\n\\r\\n        <rollingPolicy class=\\\"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy\\\">\\r\\n            <fileNamePattern>logs/archived/app.%d{yyyy-MM-dd}.%i.log</fileNamePattern>\\r\\n            <maxHistory>30</maxHistory>\\r\\n            <maxFileSize>100MB</maxFileSize>\\r\\n            <totalSizeCap>1GB</totalSizeCap>\\r\\n        </rollingPolicy>\\r\\n\\r\\n        <encoder class=\\\"net.logstash.logback.encoder.LogstashEncoder\\\" />\\r\\n    </appender>\\r\\n\\r\\n    <root level=\\\"INFO\\\">\\r\\n        <appender-ref ref=\\\"console\\\" />\\r\\n        <appender-ref ref=\\\"stash\\\" />\\r\\n    </root>\\r\\n</configuration>\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   呢度配置左 `2` 個 log appenders\\r\\n    -   當有 log 出現，每個 appender 都會接收到相同既 log\\r\\n    -   Console\\r\\n        -   仍然會喺 console 度出到 log，方便 local 啟動個 web application 既時候喺 IDE 或者 OS 自帶既 console（Windows 既 Command Prompt 或者 macOS 既 Terminal）睇到 log\\r\\n    -   Logstash\\r\\n        -   Encoder 會指定用現成黎自 `logstash-logback-encoder` 既 `LogstashEncoder`\\r\\n        -   呢個係為左畀 Elastic 既 ELK stack 裡面既 Logstash 工具睇得明我地既 log\\r\\n        -   每一行都係 JSON 格式\\r\\n-   `rollingPolicy` 可以畀我地配置點樣拆分檔案，到底係根據日期（每月一個或每日一個），又或者日期 + 檔案大小。\\r\\n    -   Logback 提供既 implementations\\r\\n        -   `TimeBasedRollingPolicy`\\r\\n        -   `SizeAndTimeBasedRollingPolicy`\\r\\n    -   `fileNamePattern`\\r\\n        -   用 `TimeBasedRollingPolicy` 既話，可以係以月拆分（用 `{yyyy-MM}`）或者以日拆分（用 `{yyyy-MM-dd}`）。\\r\\n        -   用 `SizeAndTimeBasedRollingPolicy` 既話，需要再加上 `%i`（第幾個分檔）。\\r\\n    -   `maxHistory`\\r\\n        -   儲存最近幾耐既 log 檔\\r\\n        -   如果 log 檔以月拆分，呢個數字就以月計（想一個月就寫 `1`）\\r\\n        -   如果 log 檔以日拆分，呢個數字就以日計（想一個月就寫 `30`）\\r\\n    -   `maxFileSize`\\r\\n        -   每個 log 檔既大小上限\\r\\n    -   `totalSizeCap`\\r\\n        -   所有舊既 log 檔既大小總數上限\\r\\n        -   一旦超出上限，會自動刪除日期最舊既 log 檔\\r\\n    -   Logback 會先睇 `maxHistory`，之後再睇 `totalSizeCap` 去決定刪除舊既 log 檔。\\r\\n\\r\\n---\\r\\n\\r\\n## 4.4 寫 Java code\\r\\n\\r\\n我地需要喺每個需要做 logging 既 class 加上 Lombok 既 `@Slf4j` annotation，然後用 Lombok 幫我地改好左叫 `log` 既 `org.slf4j.Logger` object 黎 log 我地既 log message。\\r\\n\\r\\n```java\\r\\n@Slf4j\\r\\n@Service\\r\\npublic class MyService {\\r\\n\\r\\n    public void foo() {\\r\\n        log.debug(\\\"This is DEBUG log.\\\");\\r\\n        log.info(\\\"This is INFO log.\\\");\\r\\n        log.trace(\\\"This is TRACE log.\\\");\\r\\n\\r\\n        try {\\r\\n            throw new RuntimeException();\\r\\n        } catch (Exception e) {\\r\\n            log.warn(\\\"This is WARN log.\\\", e);\\r\\n            log.error(\\\"This is ERROR log.\\\", e);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n註：如果係喺有 exception 既情況下要 log，又想包括埋 stack trace，可以喺任何一個出 log 既 method call 既最後一個 argument 畀個 `Throwable` object 佢。\\r\\n\\r\\n用左 `@Slf4j` 就可以取代一般寫法：\\r\\n\\r\\n```java\\r\\n@Service\\r\\npublic class MyService {\\r\\n    private Logger log = LoggerFactory.getLogger(getClass());\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 5 參考資料\\r\\n\\r\\n-   [Slf4j 官網 - Bridging legacy APIs](http://www.slf4j.org/legacy.html)\\r\\n-   [Logback 官網：Appenders](http://logback.qos.ch/manual/appenders.html)\\r\\n-   [使用 SLF4J 和 Logback](https://www.liaoxuefeng.com/wiki/1252599548343744/1264739155914176)\\r\\n-   [Apache Commons Logging + log4j 2 Example](https://www.logicbig.com/tutorials/misc/java-logging/jcl-log4j2.html)\\r\\n\";","export default \"# 2 JUnit 4\\r\\n\\r\\n## 2.1 Maven dependencies\\r\\n\\r\\n```xml\\r\\n<dependency>\\r\\n    <groupId>junit</groupId>\\r\\n    <artifactId>junit</artifactId>\\r\\n    <version>4.13.2</version>\\r\\n    <scope>test</scope>\\r\\n</dependency>\\r\\n```\\r\\n\\r\\n如果係用緊新版既 Spring Boot，咁佢就已經用緊 JUnit 5。JUnit 5 係一個完全唔同既新版，所以如果要用返 JUnit 4 既話，可以用以下既 dependency，裡面已經包括左 `junit` 版本 `4.x`：\\r\\n\\r\\n```xml\\r\\n<dependency>\\r\\n\\t<groupId>org.junit.vintage</groupId>\\r\\n\\t<artifactId>junit-vintage-engine</artifactId>\\r\\n\\t<scope>test</scope>\\r\\n</dependency>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 寫 Java code\\r\\n\\r\\nProduction code：\\r\\n\\r\\n```java\\r\\npublic final class StringUtils {\\r\\n\\r\\n    private StringUtils() {}\\r\\n\\r\\n    public static boolean isBlank(String str) {\\r\\n        return str==null\\r\\n                || str.isEmpty()\\r\\n                || str.chars().allMatch(Character::isWhitespace);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\nTest code：\\r\\n\\r\\n```java\\r\\npublic class StringUtilsTest {\\r\\n\\r\\n    @Test\\r\\n    public void test_isBlank_null() {\\r\\n        Assert.assertTrue(StringUtils.isBlank(null));\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n    public void test_isBlank_emptyString() {\\r\\n        Assert.assertTrue(StringUtils.isBlank(\\\"\\\"));\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n    public void test_isBlank_spaces() {\\r\\n        Assert.assertTrue(StringUtils.isBlank(\\\" \\\"));\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n    public void test_isBlank_specialWhitespaceCharacter1() {\\r\\n        Assert.assertTrue(StringUtils.isBlank(\\\"\\\\u005Ct\\\"));\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n    public void test_isBlank_specialWhitespaceCharacter2() {\\r\\n        Assert.assertTrue(StringUtils.isBlank(\\\"\\\\u005Cn\\\"));\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n    public void test_isBlank_someCharacters() {\\r\\n        Assert.assertFalse(StringUtils.isBlank(\\\"a\\\"));\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 JUnit API\\r\\n\\r\\n### 2.3.1 Annotations\\r\\n\\r\\n#### 2.3.1.1 `@Test`\\r\\n\\r\\n最基本會畀 JUnit pick up 去 run 既 test method：\\r\\n\\r\\n```java\\r\\n@Test\\r\\npublic void test() {\\r\\n    // test code\\r\\n}\\r\\n```\\r\\n\\r\\n如果期望個 test 會出 exception：\\r\\n\\r\\n```java\\r\\n@Test(expected = RuntimeException.class) // 改成我地期望既 exception class\\r\\npublic void test() {\\r\\n    throw new RuntimeException();\\r\\n}\\r\\n```\\r\\n\\r\\n#### 2.3.1.2 `@Before`\\r\\n\\r\\n有時我地會想喺每個 test case 行之前 set 一啲野，咁可以加個 method（method 名冇所謂）：\\r\\n\\r\\n```java\\r\\n@Before\\r\\npublic void setUp() {\\r\\n    // do something\\r\\n}\\r\\n```\\r\\n\\r\\n#### 2.3.1.3 `@BeforeClass`\\r\\n\\r\\n同樣地，如果只想喺行成個 test class 一開始行一次去 set 一啲野，咁可以加個 static method（method 名冇所謂）：\\r\\n\\r\\n```java\\r\\n@BeforeClass\\r\\npublic static void setUpOnce() {\\r\\n    // do something\\r\\n}\\r\\n```\\r\\n\\r\\n#### 2.3.1.4 `@After`\\r\\n\\r\\n如果需要喺每個 test case 行完之後收拾返一啲野，咁可以加個 method（method 名冇所謂）：\\r\\n\\r\\n```java\\r\\n@After\\r\\npublic void tearDown() {\\r\\n    // do something\\r\\n}\\r\\n```\\r\\n\\r\\n#### 2.3.1.5 `@AfterClass`\\r\\n\\r\\n同樣地，如果只想喺行成個 test class 最後尾行一次去收拾返一啲野，咁可以加個 static method（method 名冇所謂）：\\r\\n\\r\\n```java\\r\\n@AfterClass\\r\\npublic static void tearDownOnce() {\\r\\n    // do something\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 2.3.2 Assertion methods\\r\\n\\r\\n#### 2.3.2.1 `assertNull`、`assertNotNull`\\r\\n\\r\\n```java\\r\\nAssert.assertNull(null);\\r\\nAssert.assertNotNull(\\\"\\\");\\r\\n```\\r\\n\\r\\n#### 2.3.2.2 `assertTrue`、`assertFalse`\\r\\n\\r\\n```java\\r\\nAssert.assertTrue(true);\\r\\nAssert.assertFalse(false);\\r\\n```\\r\\n\\r\\n#### 2.3.2.3 `assertEquals`\\r\\n\\r\\n```java\\r\\nfinal String expected = \\\"Hello World!\\\";\\r\\nfinal String actual = \\\"Hello\\\" + \\\" \\\" + \\\"World!\\\";\\r\\n\\r\\nAssert.assertEquals(expected, actual);\\r\\n```\\r\\n\\r\\n#### 2.3.2.4 `fail`\\r\\n\\r\\n如果想個 test method 去到某一行就會 fail 左個 test case，就用呢句：\\r\\n\\r\\n```java\\r\\nAssert.fail();\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.4 Parameterized test\\r\\n\\r\\n```java\\r\\n@RunWith(Parameterized.class)\\r\\n@FieldDefaults(level = PRIVATE)\\r\\n@AllArgsConstructor\\r\\npublic class MyParameterizedTest {\\r\\n\\r\\n    String value;\\r\\n    boolean expected;\\r\\n\\r\\n    @Parameters\\r\\n    public static Collection<Object[]> params() {\\r\\n        return Arrays.asList(new Object[][] {\\r\\n            { \\\"123\\\", false },\\r\\n            { \\\"\\\", true }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n    public void test() {\\r\\n        final boolean actual = StringUtils.isBlank(value);\\r\\n        Assert.assertEquals(expected, actual);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [JUnit – Parameterized Test](https://mkyong.com/unittest/junit-4-tutorial-6-parameterized-test/)\\r\\n\";","export default \"# 3 Mockito\\r\\n\\r\\nMockito 係基於 proxy 既原理，去做到 mock 一個 method 既 implementation，令到佢變成我地返回想要既結果。\\r\\n\\r\\n喺 Mockito 既世界裡面，有兩種 objects：\\r\\n\\r\\n| 種類 | 描述                                                                                                                                                         |\\r\\n| :--: | ------------------------------------------------------------------------------------------------------------------------------------------------------------ |\\r\\n| Mock | 當我地用 Mockito 創造一個 mock object，佢既所有 methods 默認會返回 `null`、`false`、`0` 之類既 default value，或者乜野都唔做（return type 係 `void` 既話）。 |\\r\\n| Spy  | 當我地用 Mockito 創造一個 spy object，佢既所有 methods 默認都會用返原本既 method implementations。                                                           |\\r\\n\\r\\nMock 以及 spy 都可以畀我地覆寫佢地既 behaviors，令到我地想佢返回乜野就返回乜野，亦可以令到佢喺唔同既 method calls 返回唔同既野。\\r\\n\\r\\n除此之外，Mockito 仲畀我地寫 verifications，去驗證到底個 mock object 或者 spy object 畀人 call 左幾多次，咁我地就可以好清楚自己寫既 unit test 所 test 緊既 program flow 或者 scenario 係咪我地所期望既。\\r\\n\\r\\n## 3.1 Maven dependencies\\r\\n\\r\\n如果有引入 `spring-boot-starter-test`，就已經有 `mockito-core` 以及 `mockito-junit-jupitor`。\\r\\n\\r\\n```xml\\r\\n<dependency>\\r\\n    <groupId>org.mockito</groupId>\\r\\n    <artifactId>mockito-core</artifactId>\\r\\n    <version>4.6.1</version>\\r\\n    <scope>test</scope>\\r\\n</dependency>\\r\\n```\\r\\n\\r\\n自從 `3.4.0`，Mockito 就開始支援 mock static methods。不過如非必要，都唔應該 mock static methods，因為有違 OOP 原則；但如果真係需要，就要用以下既 dependency：\\r\\n\\r\\n```xml\\r\\n<!-- 建議加埋 mockito-core -->\\r\\n\\r\\n<dependency>\\r\\n    <groupId>org.mockito</groupId>\\r\\n    <artifactId>mockito-inline</artifactId>\\r\\n    <version>4.6.1</version>\\r\\n    <scope>test</scope>\\r\\n</dependency>\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   如果要用 Mockito 去 mock static methods，就唔可以有 PowerMock 既 dependencies，因為會有衝突。\\r\\n-   雖然 `mockito-inline` depends on `mockito-core`，但最好同時寫埋 `mockito-core` 既版本，因為如果有用 `spring-boot-starter-test`，佢會引入特定版本既 `mockito-core`，而 Mockito 既 libraries 係需要用同一個版本。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [StackOverflow - Mock static method in JUnit 5 using Mockito](https://stackoverflow.com/questions/67299161/mock-static-method-in-junit-5-using-mockito)\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 寫 Java code\\r\\n\\r\\n先建立同配置好一個典型既 Spring Boot + JPA web application，確認連得到 database、成功啟動到，之後寫下面既 code。\\r\\n\\r\\nProduction code：\\r\\n\\r\\n```java\\r\\n@Data\\r\\n@Accessors(chain = true)\\r\\n@FieldDefaults(level = PRIVATE)\\r\\n@Entity\\r\\n@Table(name = \\\"system_config\\\")\\r\\npublic class SystemConfig {\\r\\n    @Id\\r\\n    @GeneratedValue(strategy = IDENTITY)\\r\\n    Long id;\\r\\n\\r\\n    String configKey;\\r\\n    String configValue;\\r\\n}\\r\\n```\\r\\n\\r\\n```java\\r\\n@Repository\\r\\npublic interface SystemConfigRepo extends JpaRepository<SystemConfig, Long> {\\r\\n    Optional<SystemConfig> findOneByConfigKey(String configKey);\\r\\n}\\r\\n```\\r\\n\\r\\n```java\\r\\n@Service\\r\\npublic class SystemConfigService {\\r\\n\\r\\n    @Autowired\\r\\n    SystemConfigRepo systemConfigRepo;\\r\\n\\r\\n    public String getConfigValue(String configKey) {\\r\\n        return systemConfigRepo.findOneByConfigKey(configKey)\\r\\n                               .map(SystemConfig::getConfigValue)\\r\\n                               .orElse(null);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\nTest code：\\r\\n\\r\\n```java\\r\\n@RunWith(MockitoJUnitRunner.class)\\r\\npublic class SystemConfigServiceTest {\\r\\n\\r\\n    @InjectMocks\\r\\n    SystemConfigService systemConfigService;\\r\\n\\r\\n    @Mock\\r\\n    SystemConfigRepo systemConfigRepo;\\r\\n\\r\\n    @Test\\r\\n    public void test_getConfigValue_repoReturnsNull() {\\r\\n\\r\\n        // given\\r\\n        Mockito.when(systemConfigRepo.findOneByConfigKey(ArgumentMatchers.anyString()))\\r\\n               .thenReturn(Optional.empty());\\r\\n\\r\\n        // when\\r\\n        String result = systemConfigService.getConfigValue(\\\"timeout\\\");\\r\\n\\r\\n        // then\\r\\n        Assert.assertNull(result);\\r\\n        Mockito.verify(systemConfigRepo, Mockito.times(1)).findOneByConfigKey(ArgumentMatchers.eq(\\\"timeout\\\"));\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n    public void test_getConfigValue_repoReturnsRecord() {\\r\\n\\r\\n        // given\\r\\n        Mockito.when(systemConfigRepo.findOneByConfigKey(ArgumentMatchers.anyString()))\\r\\n               .thenReturn(Optional.of(new SystemConfig()\\r\\n                                           .setConfigKey(\\\"timeout\\\")\\r\\n                                           .setConfigValue(\\\"1000\\\")));\\r\\n\\r\\n        // when\\r\\n        String result = systemConfigService.getConfigValue(\\\"timeout\\\");\\r\\n\\r\\n        // then\\r\\n        Assert.assertEquals(\\\"1000\\\", result);\\r\\n        Mockito.verify(systemConfigRepo, Mockito.times(1)).findOneByConfigKey(ArgumentMatchers.eq(\\\"timeout\\\"));\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n### 3.2.1 解釋\\r\\n\\r\\n因為我地寫左 `@RunWith(MockitoJUnitRunner.class)`，咁呢個 test class 就會用 `MockitoJUnitRunner` 黎去 run，佢會自動掃瞄 Mockito 既 annotations，然後做相應既處理，例如：\\r\\n\\r\\n|   Annotation   | 處理                                                                                                                                                                                            |\\r\\n| :------------: | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n|    `@Mock`     | Mockito 會用 cglib（code generation library）去 create 一個 proxy object，而我地可以透過 `Mockito.when()` 等等既 method 去配置呢個 mock object 將會返回既 output。                              |\\r\\n|     `@Spy`     | 同 `@Mock` 一樣，只不過係呢個 annotation 係 for 創造 spy objects 用。                                                                                                                           |\\r\\n| `@InjectMocks` | Mockito 會 create 一個 new instance，之後將標註左 `@Mock` 既 objects 透過 reflection 之類既方式 set 落去被標註 `@InjectMocks` 既 object 裡面既 fields，就好似 Spring 既 `@Autowired` 既效果咁。 |\\r\\n\\r\\n---\\r\\n\\r\\n## 3.3 Mockito API\\r\\n\\r\\n### 3.3.1 唔用 `MockitoJUnitRunner` 黎 init\\r\\n\\r\\n我地可能唔想用 `MockitoJUnitRunner` 黎自動 initialize 個 test class 既 mock fields，原因有可能係因為我地想 `@RunWith` 用其他既 `Runner`，咁既話可以喺個 test case 裡面加呢個 method，都可以做到同樣效果：\\r\\n\\r\\n```java\\r\\n@Before\\r\\npublic void setUp() throws Exception {\\r\\n    MockitoAnnotations.initMocks(this); // 舊版既寫法\\r\\n    MockitoAnnotations.openMocks(this).close(); // 新版既寫法\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.2 Mock 有 return type 既 method\\r\\n\\r\\n如果要 mock 有 return type 既 method，可以用：\\r\\n\\r\\n```java\\r\\nMockito.when(systemConfigRepo.save(ArgumentMatchers.any(SystemConfig.class)))\\r\\n       .thenReturn(new SystemConfig());\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.3 Mock `void` method\\r\\n\\r\\n如果要 mock return type 係 `void` 既 method，可以用：\\r\\n\\r\\n```java\\r\\nMockito.doNothing()\\r\\n       .when(systemConfigRepo)\\r\\n       .deleteAll();\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.4 驗證 when 階段個 mock method call 左幾多次\\r\\n\\r\\n如果需要驗證個 method 背後 call 左個 mock method 幾多次又或者有冇 call 到，可以用：\\r\\n\\r\\n```java\\r\\nMockito.verify(systemConfigRepo, Mockito.times(1))\\r\\n       .findOneByConfigKey(ArgumentMatchers.eq(\\\"timeout\\\"));\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.5 Mock static method\\r\\n\\r\\n加左 `mockito-inline` Maven dependency 之後就可以咁樣去 mock 一個 static method：\\r\\n\\r\\n```java\\r\\n@Test\\r\\npublic void test() {\\r\\n\\r\\n    // 未 mock，所以 call 緊本來既 method implementation\\r\\n    Assert.assertTrue(StringUtils.isBlank(\\\"\\\"));\\r\\n\\r\\n    // mock static 只會喺 try-catch block 裡面生效\\r\\n    try (MockedStatic<StringUtils> mock = Mockito.mockStatic(StringUtils.class)) {\\r\\n\\r\\n        // 因為個 mock 喺初始狀態，所以任何 method calls：\\r\\n        // 如果有 return type，都會返回 default value，例如 null\\r\\n        // 如果 return type 係 void，就會乜都唔做\\r\\n        Assert.assertFalse(StringUtils.isBlank(\\\"\\\"));\\r\\n\\r\\n        // mock：\\\"123\\\" 係咪 blank：\\r\\n        // 第一次 call 當係\\r\\n        // 第二次 call 唔當係\\r\\n        // 第三次及打後既 calls 都當係\\r\\n        mock.when(() -> StringUtils.isBlank(ArgumentMatchers.eq(\\\"123\\\"))).thenReturn(true, false, true);\\r\\n\\r\\n        // argument 中左 mock\\r\\n        Assert.assertTrue(StringUtils.isBlank(\\\"123\\\"));\\r\\n        Assert.assertFalse(StringUtils.isBlank(\\\"123\\\"));\\r\\n        Assert.assertTrue(StringUtils.isBlank(\\\"123\\\"));\\r\\n        Assert.assertTrue(StringUtils.isBlank(\\\"123\\\"));\\r\\n\\r\\n        // argument 唔中 mock\\r\\n        Assert.assertFalse(StringUtils.isBlank(\\\"444\\\"));\\r\\n    }\\r\\n\\r\\n    // 因為唔喺個 try-catch block 裡面，所以唔受我地既 mock 影響\\r\\n    Assert.assertFalse(StringUtils.isBlank(\\\"123\\\"));\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.6 重設 mock object\\r\\n\\r\\n如果需要重設一個 mock object，將之前所有用左 `Mockito.when(...)` 去 mock 既 methods 都還原到初始狀態，可以用：\\r\\n\\r\\n```java\\r\\nMockito.reset(systemConfigRepo);\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   根據 Javadoc，一般黎講係唔應該需要用到 `Mockito.reset`。如果要用到佢，就意味住我地個 test 可能寫得唔好。\\r\\n    -   因為如果有用以下方法黎喺每個 `@Test` method 執行之前 initialize mock objects 或者 spy objects，我地係唔需要額外 reset 佢地。\\r\\n        1. 個 test class 係 `@RunWith(MockitoJunitRunner.class)`\\r\\n        1. 喺 `@Before` 或者 `@After` 既 method 裡面行 `MockitoAnnotations.initMocks(this)` 或者 `MockitoAnnotations.openMocks(this)`\\r\\n\\r\\n---\\r\\n\\r\\n## 3.4 喺 Spring test 裡面 dependency-inject mock 左既 Spring beans\\r\\n\\r\\n如果我地個 test 係 `@SpringBootTest`、`@RunWith(SpringRunner.class)`，咁佢就會 initialize Spring context，咁 dependency injection 亦都會發生。\\r\\n\\r\\n`spring-boot-starter-test` 裡面既 `spring-boot-test` 提供左一啲 annotations，畀我地去 mock 或者 spy 一個 Spring bean（例如 `@Service`、`@Component`），並且將佢用喺 dependency injection 裡面，成為 depend on 佢既 Spring beans 既 property value（透過 `@Autowired` 或者其他 dependency injection 方式）。\\r\\n\\r\\n當我地用 `MockMvc` 黎 test controller endpoints 既時候，呢個方式可以幫到我地好容易咁將一啲 mock 左或者 spy 左 Spring beans inject 入去 Spring context 裡面。\\r\\n\\r\\n我地可以睇下以下既例子。\\r\\n\\r\\n`Bean1.java`：\\r\\n\\r\\n```java\\r\\n@Component\\r\\npublic class Bean1 {}\\r\\n```\\r\\n\\r\\n`Bean2.java`：\\r\\n\\r\\n```java\\r\\n@Component\\r\\npublic class Bean2 {\\r\\n\\r\\n    @Getter\\r\\n    @Autowired\\r\\n    Bean1 bean1;\\r\\n}\\r\\n```\\r\\n\\r\\n`Bean3.java`：\\r\\n\\r\\n```java\\r\\n@Component\\r\\npublic class Bean3 {\\r\\n\\r\\n    @Getter\\r\\n    @Autowired\\r\\n    Bean2 bean2;\\r\\n}\\r\\n```\\r\\n\\r\\n寫 test code：\\r\\n\\r\\n```java\\r\\n@SpringBootTest\\r\\n@RunWith(SpringRunner.class)\\r\\npublic class MockBeanTest {\\r\\n\\r\\n    @Autowired\\r\\n    Bean3 bean3;\\r\\n\\r\\n    // 如果用既係 @Mock，呢個 test 就會因為 AssertionError 而 fail\\r\\n\\t// 因為 @Mock 只能取代 @InjectMocks 既 objects 裡面既 property values\\r\\n    @MockBean\\r\\n    Bean1 bean1;\\r\\n\\r\\n    @Before\\r\\n    public void setUp() throws Exception {\\r\\n        MockitoAnnotations.openMocks(this).close();\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n    public void test() {\\r\\n        Assert.assertEquals(bean1, bean3.getBean2().getBean1());\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.5 參考資料\\r\\n\\r\\n-   [Mock vs. Stub vs. Spy\\r\\n    ](https://www.javatpoint.com/mock-vs-stub-vs-spy)\\r\\n-   [Mockito 官方 Javadoc](https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html)\\r\\n\\r\\n> By default, for all methods that return a value, a mock will return either null, a primitive/primitive wrapper value, or an empty collection, as appropriate. For example 0 for an int/Integer and false for a boolean/Boolean.\\r\\n\";","export default \"# 1 Java 測試簡介\\r\\n\\r\\n## 1.1 Development 既方式\\r\\n\\r\\nDevelopment 離不開做 testing 去保證 production code 既執行結果符合期望。Development 既同時做埋 automated testing 既方式有以下兩種：\\r\\n\\r\\n| 方式名稱                           | 描述                                                                                                                                                                                                                                                                                                                                                                                                     |\\r\\n| ---------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n| Test-driven development（TDD）     | 最 ideal 既做法係先寫 test code，寫曬我地期望既 given-when-then，因為有 production code 未寫而導致有 compilation error（例如 method 不存在）先再去寫 production code，當 production code 足以解決 compilation error 就再完成埋個 unit test case，直到個 unit test 行到（正常會係 fail 左）而且又冇 compilation error，再去寫埋啲 production code 既 implementation，寫完果陣應該個 unit test 就會 pass。 |\\r\\n| Behavior-driven development（BDD） | 以 end user 既 user journey 既角度去諗 test case scenarios，來源可以係黎自 functional specs 或者 business analysts 得出既 user requirements，而寫出黎既 test code 都會同一般 TDD 所針對單個 class 既 method 去寫既 test code 有明顯分別。                                                                                                                                                                |\\r\\n\\r\\n---\\r\\n\\r\\n## 1.2 Unit test case 既表達形式\\r\\n\\r\\n一般既 unit test case 寫法：\\r\\n\\r\\n```java\\r\\npublic void test() {\\r\\n    // Given - 喺呢個 context 下…\\r\\n    // 構建 context，為 dependencies 作出一啲合理假設（mocking）\\r\\n\\r\\n    // When - 當我地執行呢個 method…\\r\\n    // 執行需要測試既 method\\r\\n\\r\\n    // Then - 咁我地期望得到…\\r\\n    // 有結果既話，驗證結果係咪符合期望；void return 既話，驗證下有冇出 exception\\r\\n    // 亦可以驗證下某一啲 objects 既 methods 應該曾經被 call\\r\\n}\\r\\n```\\r\\n\\r\\nJUnit 例子：\\r\\n\\r\\n```java\\r\\n@Test\\r\\npublic void test_happy_calculateSine_degMode() {\\r\\n\\r\\n    // given\\r\\n    Calculator calculator = new Calculator(Mode.DEG);\\r\\n\\r\\n    // when\\r\\n    double result = calculator.calculateSine(90);\\r\\n\\r\\n    // then\\r\\n    Assert.assertTrue(\\\"Sine result under DEG mode should be correct\\\",\\r\\n                      result == 1);\\r\\n}\\r\\n\\r\\n@Test\\r\\npublic void test_happy_calculateSine_radMode() {\\r\\n\\r\\n    // given\\r\\n    Calculator calculator = new Calculator(Mode.RAD);\\r\\n\\r\\n    // when\\r\\n    double result = calculator.calculateSine(90);\\r\\n\\r\\n    // then\\r\\n    Assert.assertTrue(\\\"Sine result under RAD mode should be correct\\\",\\r\\n                      result > 0.8939 && result < 0.894);\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 1.3 Libraries\\r\\n\\r\\n|     名稱      | 功能                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\\r\\n| :-----------: | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n| JUnit、TestNG | 提供 API 畀我地執行 assertion statements，咁我地就可以利用佢去做 TDD（test-driven development）。如果 expected value 同 actual value 兩者唔 match 就會令個 unit test fail，IDE 裡面既 plugin 會顯示紅燈；如果 match 既話就會顯示綠燈黎表示通過。Build tools 包括 Maven（Maven Surefire plugin 以及 Maven Failsafe plugin）、Gradle 會喺各自 build artifact 既 goal 執行果陣先自動執行 unit tests 甚或 integration tests。                                                   |\\r\\n|    Mockito    | 提供 API 畀我地 mock 一啲 dependency objects 既 public instance methods 所返回既 return values，咁我地就可以專注 test 一個 class 既 business logic。Mockito `3.4.0` 之前既版本未能夠 mock static methods（雖然需要咁樣做可能象徵住有 code smell，因為要咁做唔係幾 OOP）。                                                                                                                                                                                                   |\\r\\n|   PowerMock   | 係一個基於 Mockito 既 library，佢提供 API 畀我地 mock 埋 static methods 既 return values（雖然需要咁樣做可能象徵住有 code smell，因為要咁做唔係幾 OOP），呢一點 Mockito `3.4.0` 之前係做唔到。                                                                                                                                                                                                                                                                              |\\r\\n|   WireMock    | 提供 API 畀我地建立 runtime mock servers 黎 mock external web services 既 HTTP responses。呢個比較係 end-to-end 多過 unit testing。                                                                                                                                                                                                                                                                                                                                         |\\r\\n|   Cucumber    | 提供 API 畀我地做 behavior-driven 既 testing，咁我地就可以利用佢去做 BDD（behavior-driven development）。佢支持以文字去描述 given-when-then 既表達形式。呢個比較係 end-to-end 多過 unit testing。                                                                                                                                                                                                                                                                           |\\r\\n|    PITest     | 呢一個 mutation testing library 會自動 analyze source code，知道啲 if-else conditions 用咩 values 可以令到個 condition 成立，從而透過修改我地 source code 裡面既一啲 operators 之類（例如將 `==` 改成 `!=`）去睇下我地既 unit tests 有冇因為佢 library 做既 code changes 而影響左結果——即係有冇 test failures。如果冇 test fail 到既話就算係唔正常，因為如果我地改左 code 但係所有 unit tests 都照 pass，咁就即係我地既 unit test coverage 唔足以 cover 曬所有 conditions。 |\\r\\n\\r\\n---\\r\\n\\r\\n## 1.4 其他輔助 libraries\\r\\n\\r\\n|    名稱    | 功能                                                                                                                                                                                                            |\\r\\n| :--------: | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n| JSONAssert | 呢個 library 係 Jackson Databind 既一個 alternative，可以根據內容黎 compare JSON strings，而唔係當一般 strings 咁 compare character by character。佢提供左幾個 predefined 既容忍模式。                          |\\r\\n|   PODAM    | POJO Data Mocker 係一個可以為任何 Java POJO class 生成假數據既 library。有啲時候我地想要一個 entity／DO／DTO／VO／POJO class 既 object 裡面既所有 instance fields 都有隨機既數據，呢個 library 就非常簡單易用。 |\\r\\n\\r\\n### 1.4.1 使用 JSONAssert\\r\\n\\r\\n`JSONCompareMode`（容忍模式）：\\r\\n\\r\\n-   `LENIENT`\\r\\n    -   Extensible：actual JSON 可以包含比 expected JSON 多既內容，只要唔少過就得\\r\\n    -   Non-strict array ordering：唔理 array 順序\\r\\n-   `NON_EXTENSIBLE`\\r\\n    -   Non-extensible：actual JSON 唔可以包含比 expected JSON 多既內容\\r\\n    -   Non-strict array ordering：唔理 array 順序\\r\\n-   `STRICT_ORDER`\\r\\n    -   Extensible：actual JSON 可以包含比 expected JSON 多既內容，只要唔少過就得\\r\\n    -   Strict ordering：會睇埋 array 順序\\r\\n-   `STRICT`\\r\\n    -   Non-extensible：actual JSON 唔可以包含比 expected JSON 多既內容\\r\\n    -   Strict ordering：會睇埋 array 順序\\r\\n\\r\\n註：JSON objects 既 property 次序一定係冇關係。\\r\\n\\r\\n#### 1.4.1.1 Maven dependencies\\r\\n\\r\\n```xml\\r\\n<dependency>\\r\\n\\t<groupId>org.skyscreamer</groupId>\\r\\n\\t<artifactId>jsonassert</artifactId>\\r\\n\\t<version>1.4.0</version>\\r\\n</dependency>\\r\\n```\\r\\n\\r\\n#### 1.4.1.2 準備 JSON 檔\\r\\n\\r\\n`expected.json`：\\r\\n\\r\\n```json\\r\\n{\\r\\n\\t\\\"arr\\\": [\\\"A\\\", \\\"B\\\"],\\r\\n\\t\\\"name\\\": \\\"something\\\",\\r\\n\\t\\\"obj\\\": {}\\r\\n}\\r\\n```\\r\\n\\r\\n`actual.json`：\\r\\n\\r\\n```json\\r\\n{\\r\\n\\t\\\"name\\\": \\\"something\\\",\\r\\n\\t\\\"arr\\\": [\\\"B\\\", \\\"A\\\"],\\r\\n\\t\\\"obj\\\": {\\r\\n\\t\\t\\\"extra\\\": null\\r\\n\\t}\\r\\n}\\r\\n```\\r\\n\\r\\n#### 1.4.1.3 寫 Java code\\r\\n\\r\\n```java\\r\\nfinal String expected = FileUtils.readFileToString(new File(\\\"expected.json\\\"), \\\"UTF-8\\\");\\r\\nfinal String actual = FileUtils.readFileToString(new File(\\\"actual.json\\\"), \\\"UTF-8\\\");\\r\\n\\r\\nSystem.out.println(JSONCompare.compareJSON(expected, actual, JSONCompareMode.LENIENT).passed());\\r\\n// true\\r\\n\\r\\nSystem.out.println(JSONCompare.compareJSON(expected, actual, JSONCompareMode.NON_EXTENSIBLE).passed());\\r\\n// false\\r\\n\\r\\nSystem.out.println(JSONCompare.compareJSON(expected, actual, JSONCompareMode.STRICT_ORDER).passed());\\r\\n// false\\r\\n\\r\\nSystem.out.println(JSONCompare.compareJSON(expected, actual, JSONCompareMode.STRICT).passed());\\r\\n// false\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 1.4.2 使用 PODAM\\r\\n\\r\\n#### 1.4.2.1 Maven dependencies\\r\\n\\r\\n```xml\\r\\n<dependency>\\r\\n    <groupId>uk.co.jemos.podam</groupId>\\r\\n    <artifactId>podam</artifactId>\\r\\n    <version>7.2.7.RELEASE</version>\\r\\n</dependency>\\r\\n```\\r\\n\\r\\n#### 1.4.2.2 寫 Java code\\r\\n\\r\\n```java\\r\\n@SuppressWarnings(\\\"unchecked\\\")\\r\\nfinal List<String> randomData = new PodamFactoryImpl().manufacturePojo(List.class, String.class);\\r\\nSystem.out.println(randomData); // [J_hO7wAETv, F08kZk64aV, ncjXUymIT6, tk354lMwGX, CQhUbaS3nn]\\r\\n```\\r\\n\";","export default \"# 1 JPA／Hibernate 簡介\\r\\n\\r\\nBack-end application 一般都需要連接 database 去查詢資料、更新資料，而如果選擇用 Java、TypeScript 呢啲屬於 strongly typed 既程序語言，為左方便 coding，都會寫啲 class 作為載體咁喺 memory 度緩存啲 table 紀錄數據，操作可以只係純查詢，但亦可以包括更新某個 column 既 value。簡單講，就係根據 class、fields 可以得到 SELECT SQL、UPDATE SQL，而 query result 可以用 typed objects 緩存等等。\\r\\n\\r\\n而將 table 紀錄轉化成 typed objects 就需要一個過程，呢個過程就要用到 ORM（object-relational mapping），將程式既 class（人稱 entity／DO／DTO／VO／POJO）以及裡面既 instance fields 同 database table 以及佢既 columns 兩者做 mapping。\\r\\n\\r\\n喺 Java 既世界裡面，最熱門既 ORM libraries 就係 JPA、Hibernate。佢地兩個並唔係二選一既關係——JPA 係一個 ORM 既標準，而 Hibernate 就係實現左 JPA 標準既一個 framework。事實上，Hibernate 係比 JPA 更早出現。\\r\\n\\r\\n一般既 Spring projects 都會引入 JPA、Hibernate 既 libraries 去做 ORM，而國內或者中資公司可能會用 MyBatis，即係 prefer 寫 native SQL，但就唔算係一個 ORM framework。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 動手寫\\r\\n\\r\\nProject setup：\\r\\n\\r\\n-   Spring Boot（web）\\r\\n-   JPA／Hibernate\\r\\n-   MySQL 或 MariaDB\\r\\n\\r\\n## 2.1 Maven dependencies\\r\\n\\r\\n```xml\\r\\n<parent>\\r\\n    <groupId>org.springframework.boot</groupId>\\r\\n    <artifactId>spring-boot-starter-parent</artifactId>\\r\\n    <version>2.6.1</version>\\r\\n</parent>\\r\\n\\r\\n<dependencies>\\r\\n    <dependency>\\r\\n        <groupId>org.projectlombok</groupId>\\r\\n        <artifactId>lombok</artifactId>\\r\\n    </dependency>\\r\\n\\r\\n    <dependency>\\r\\n        <groupId>org.springframework.boot</groupId>\\r\\n        <artifactId>spring-boot-starter-web</artifactId>\\r\\n    </dependency>\\r\\n\\r\\n    <dependency>\\r\\n        <groupId>org.springframework.boot</groupId>\\r\\n        <artifactId>spring-boot-starter-data-jpa</artifactId>\\r\\n    </dependency>\\r\\n\\r\\n    <dependency>\\r\\n        <groupId>mysql</groupId>\\r\\n        <artifactId>mysql-connector-java</artifactId>\\r\\n        <version>8.0.26</version>\\r\\n    </dependency>\\r\\n</dependencies>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 Application 配置\\r\\n\\r\\n`application.yml`：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\nspring:\\r\\n  jpa:\\r\\n    show-sql: true\\r\\n    open-in-view: false\\r\\n    hibernate:\\r\\n      ddl-auto: update\\r\\n    properties:\\r\\n      hibernate:\\r\\n        dialect: org.hibernate.dialect.MySQL57InnoDBDialect\\r\\n  datasource:\\r\\n    url: jdbc:mysql://localhost:3306/mydb?useSSL=false\\r\\n    username: root\\r\\n    password:\\r\\n    driver-class-name: com.mysql.cj.jdbc.Driver\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 寫 Java code\\r\\n\\r\\n### 2.3.1 Entity\\r\\n\\r\\n```java\\r\\n@Data\\r\\n@Accessors(chain = true)\\r\\n@FieldDefaults(level = PRIVATE)\\r\\n@Entity\\r\\n@Table(name = \\\"person\\\")\\r\\npublic class PersonEntity {\\r\\n    @Id\\r\\n    @GeneratedValue(strategy = IDENTITY)\\r\\n    Long id;\\r\\n\\r\\n    String firstName;\\r\\n    String status;\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   `@Data`、`@Accessors` 以及 `@FieldDefaults` 都係 Lombok annotations，用黎 generate methods、keyword 既 code，咁我地就冇需要寫 getters 同 setters。\\r\\n-   `@Entity` 係用黎話畀 Hibernate 知呢個係一個 entity class。\\r\\n-   `@Table` 係用黎話畀 Hibernate 知應該 map 去邊個 database table。\\r\\n\\r\\n---\\r\\n\\r\\n### 2.3.2 Repository interface：用 method 名砌 SQL\\r\\n\\r\\n`PersonRepo.java`：\\r\\n\\r\\n```java\\r\\n@Repository\\r\\npublic interface PersonRepo extends JpaRepository<PersonEntity, Long> {\\r\\n\\r\\n    Optional<PersonEntity> findOneByFirstName(String firstName);\\r\\n\\r\\n    List<PersonEntity> findAllByStatusIn(List<String> statuses);\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   `@Repository`\\r\\n    -   因為個 interface 已經 extends 左 Spring Boot JPA 既 `JpaRepository`，所以其實呢個 annotation 唔係必要。\\r\\n-   `findOneByFirstName`\\r\\n    -   Return `Optional<PersonEntity>`\\r\\n        -   因為 `findOne`，所以只會查詢到 `1` 個紀錄。\\r\\n        -   Return type 可以選擇性地用 `Optional` wrapper 包住，擁抱 Java 8 既新功能。\\r\\n    -   `findOne` 砌出黎果句 SQL 會做到 `SELECT` 以及 `LIMIT 1` 既效果。\\r\\n    -   `ByFirstName` 砌出黎果句 SQL 會做到 `WHERE first_name = ?` 既效果。\\r\\n-   `findAllByStatusIn`\\r\\n    -   Return `List<PersonEntity>`\\r\\n        -   因為 `findAll`，所以會查詢到多個紀錄。\\r\\n        -   因為已經用左 `List` 做 wrapper，所以唔需要再用 `Optional` 包多層。\\r\\n    -   `findAll` 砌出黎果句 SQL 會做到 `SELECT` 既效果。\\r\\n    -   `ByStatusIn` 砌出黎果句 SQL 會做到 `WHERE status IN (?)` 既效果。\\r\\n\\r\\n---\\r\\n\\r\\n### 2.3.3 Repository interface：用 JPQL／HQL\\r\\n\\r\\nJPQL（Java Persistence query language）／HQL（Hibernate query language）既基本 syntax 同 native SQL 差唔多。因為係有 ORM 既元素喺裡面，所以會用 class 名、field 名黎代替 table 名、column 名。\\r\\n\\r\\n最簡單既 syntax 係咁：\\r\\n\\r\\n```java\\r\\n@Repository\\r\\npublic interface PersonRepo extends JpaRepository<PersonEntity, Long> {\\r\\n\\r\\n    @Query(\\\"SELECT p FROM PersonEntity p WHERE p.firstName = :firstName\\\")\\r\\n    Optional<PersonEntity> getByFirstName(@Param(\\\"firstName\\\") String firstName);\\r\\n\\r\\n    @Query(\\\"SELECT p FROM PersonEntity p WHERE p.status IN :statuses\\\")\\r\\n    List<PersonEntity> getAllByStatusIn(@Param(\\\"statuses\\\") List<String> statuses);\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   `getByFirstName`\\r\\n    -   `:firstName` 會成為 prepared statement 既 parameter（i.e. `= ?`）\\r\\n    -   `@Param(\\\"firstName\\\")` 既 variable value 會對應返 `:firstName`\\r\\n-   `getAllByStatusIn`\\r\\n    -   `:statuses` 會成為 prepared statement 既 parameter（i.e. `IN (?)`）\\r\\n    -   `@Param(\\\"statuses\\\")` 既 variable values 會對應返 `:statuses`\\r\\n\\r\\n---\\r\\n\\r\\n### 2.3.4 Repository interface：用 native SQL\\r\\n\\r\\n```java\\r\\nimport org.springframework.transaction.annotation.Transactional;\\r\\n\\r\\n@Repository\\r\\npublic interface PersonRepo extends JpaRepository<PersonEntity, Long> {\\r\\n\\r\\n    @Query(nativeQuery = true, value = \\\"SELECT * FROM person WHERE first_name = :firstName\\\")\\r\\n    Optional<PersonEntity> getByFirstName(@Param(\\\"firstName\\\") String firstName);\\r\\n\\r\\n    @Query(nativeQuery = true, value = \\\"SELECT * FROM person WHERE status IN :statuses\\\")\\r\\n    List<PersonEntity> getAllByStatusIn(@Param(\\\"statuses\\\") List<String> statuses);\\r\\n\\r\\n    @Transactional\\r\\n    @Modifying\\r\\n    @Query(nativeQuery = true, value = \\\"UPDATE person SET status = ?2 WHERE id = ?1\\\")\\r\\n    void updateStatus(Long id, String status);\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   `updateStatus`\\r\\n    -   如果句 SQL 會修改數據，就需要加上 `@Modifying` 以及 `@Transactional`，否則會導致 exception\\r\\n        -   冇 `@Modifying`：`Caused by: java.sql.SQLException: Can not issue data manipulation statements with executeQuery()`\\r\\n        -   冇 `@Transactional`：`org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query`。\\r\\n    -   `?1`、`?2` 會成為 prepared statements 既 parameters（i.e. `= ?`）\\r\\n    -   Method parameters 既次序會對應返 `?1`、`?2`（index 係 `1`-based）\\r\\n\\r\\n---\\r\\n\\r\\n### 2.3.5 DAO class：用 native SQL（Spring Boot 1.5 + Hibernate 5.0）\\r\\n\\r\\n#### 2.3.5.1 將結果轉化成 POJO class\\r\\n\\r\\n```java\\r\\nimport org.springframework.transaction.annotation.Transactional;\\r\\n\\r\\n@Component\\r\\n@Transactional\\r\\npublic class PersonDao {\\r\\n\\r\\n    @Autowired EntityManagerFactory emf;\\r\\n\\r\\n    SessionFactory sessionFactory;\\r\\n\\r\\n    @PostConstruct\\r\\n    public void init() {\\r\\n        sessionFactory = emf.unwrap(SessionFactory.class);\\r\\n    }\\r\\n\\r\\n    @SuppressWarnings(\\\"unchecked\\\")\\r\\n    public PersonEntity getByFirstName(String firstName) {\\r\\n\\r\\n        final List<PersonEntity> persons = sessionFactory\\r\\n                .getCurrentSession()\\r\\n                .createSQLQuery(\\\"SELECT id, first_name firstName, status FROM person WHERE first_name = :firstName\\\")\\r\\n                .addScalar(\\\"id\\\", StandardBasicTypes.LONG)\\r\\n                .addScalar(\\\"firstName\\\", StandardBasicTypes.STRING)\\r\\n                .addScalar(\\\"status\\\", StandardBasicTypes.STRING)\\r\\n                .setResultTransformer(Transformers.aliasToBean(PersonEntity.class))\\r\\n                .setParameter(\\\"firstName\\\", firstName)\\r\\n                .list();\\r\\n\\r\\n        return persons.isEmpty() ? null : persons.get(0);\\r\\n    }\\r\\n\\r\\n    @SuppressWarnings(\\\"unchecked\\\")\\r\\n    public List<PersonEntity> getAllByStatus(List<String> statuses) {\\r\\n        return sessionFactory\\r\\n                .getCurrentSession()\\r\\n                .createSQLQuery(\\\"SELECT id, first_name firstName, status FROM person WHERE status IN :statuses\\\")\\r\\n                .addScalar(\\\"id\\\", StandardBasicTypes.LONG)\\r\\n                .addScalar(\\\"firstName\\\", StandardBasicTypes.STRING)\\r\\n                .addScalar(\\\"status\\\", StandardBasicTypes.STRING)\\r\\n                .setResultTransformer(Transformers.aliasToBean(PersonEntity.class))\\r\\n                .setParameterList(\\\"statuses\\\", statuses)\\r\\n                .list();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   `SessionFactory`\\r\\n    -   呢個例子將 `EntityManagerFactory` unwrap 成 `SessionFactory`，然後 create session，得到 `Session` object 再 create native SQL 既 `SQLQuery` object。\\r\\n-   `setResultTransformer(Transformers.aliasToBean(PersonEntity.class))`\\r\\n    -   我地需要用 `AliasToBeanResultTransformer` 既 `ResultTransformer` 黎話畀 Hibernate 知我地想將 query result 轉化成某個特定 class 既 objects。\\r\\n        -   否則，得到既結果就會係一個 `List<Object[]>` 既 object。\\r\\n-   `addScalar(\\\"firstName\\\", StandardBasicTypes.STRING)`\\r\\n    -   我地需要自己 map query result 既 column，仲要話畀 Hibernate 知 data type。\\r\\n    -   如果 column 有 `_`，需要畀一個冇 `_` 既 alias（`first_name firstName` 或者 `first_name AS firstName`）。\\r\\n    -   `addScalar` 既第 `1` 個 argument 係用 SQL 裡面個 column 既 alias。\\r\\n    -   如果 column 有 `_` 但係句 SQL 裡面冇畀 column alias 或者冇 call 岩 `addScalar`，咁就會令最後轉化出黎既 `PersonEntity` object 對應既 field value `null` 左。\\r\\n-   `setParameter`、`setParameterList`\\r\\n    -   呢啲 methods 係用黎將 values 對應返 prepared statement 既 parameters。\\r\\n\\r\\n#### 2.3.5.2 將結果轉化成 Java `Map`\\r\\n\\r\\n如果我地需要 dynamic 既 query result，即係 column 名係喺 compile time 既時候唔知既，咁我地可以用 `AliasToEntityMapResultTransformer.INSTANCE` 既 `ResultTransformer`。\\r\\n\\r\\n```java\\r\\nfinal List<Map<String, Object>> records = sessionFactory.getCurrentSession()\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.createSQLQuery(\\\"SELECT * FROM person\\\")\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.setResultTransformer(AliasToEntityMapResultTransformer.INSTANCE)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.list();\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 3 參考資料\\r\\n\\r\\n-   [StackOverflow - How to pass parameters in a native query JPA](https://stackoverflow.com/questions/66071165/how-to-pass-parameters-in-a-native-query-jpa/66071251)\\r\\n-   [StackOverflow - ResultTransformer with createSQLQuery forces no camelCase in entity fields](https://stackoverflow.com/questions/8136225/resulttransformer-with-createsqlquery-forces-no-camelcase-in-entity-fields)\\r\\n\";","export default \"# 1 Kafka 簡介\\r\\n\\r\\nMicroservices 之間除左即時、同步既溝通，有啲情況下用異步（async）既溝通就已經足夠。而 Kafka 係一個同時支援 message queue + publish-subscribe 既工具。\\r\\n\\r\\nKafka 既設計應用左 `2` 種 messaging 模式：\\r\\n\\r\\n|       模式        | 描述（以 Kafka 術語）                                                  |\\r\\n| :---------------: | ---------------------------------------------------------------------- |\\r\\n| Publish-subscribe | 每一個 message 都會 broadcast 去所有 consumer groups。                 |\\r\\n|   Message queue   | 每一個 message 喺每個 consumer group 都只會有 `1` 個 consumer 接收到。 |\\r\\n\\r\\nKafka 強大之處：\\r\\n\\r\\n-   高性能、高吞吐量\\r\\n-   支援 broker horizontal scaling\\r\\n-   支援 producer horizontal scaling\\r\\n    -   一個 topic 可以分成多個 partitions。\\r\\n-   支援 consumer horizontal scaling\\r\\n    -   多個 consumers 可以 form 成一個 consumer group。\\r\\n-   作為一個 MQ，支援 consumer 重新啟動之後可以即時接收返斷線果陣 producer 所產生但又未被 consume 既 messages。\\r\\n\\r\\n註：Horizontal scaling 即係我地可以喺多過一部機器上面 deploy 一模一樣既 application，而呢啲機器以及 application 係唔知道其他機器既存在。咁做既目的係想避免有啲機器行行下突然 fail 左，影響業務。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 安裝 Kafka\\r\\n\\r\\n## 2.1 本地（免安裝）\\r\\n\\r\\n[Kafka 官網 - Download](https://kafka.apache.org/downloads)\\r\\n\\r\\n建議將 Kafka 既 binaries 解壓縮去 `C:/`，因為如果條 path 太長，行 command 果陣可能會有 error。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 Docker image\\r\\n\\r\\n### 2.2.1 ZooKeeper\\r\\n\\r\\n可以選擇：\\r\\n\\r\\n```bash\\r\\ndocker image pull zookeeper\\r\\n```\\r\\n\\r\\n```bash\\r\\ndocker image pull wurstmeister/zookeeper\\r\\n```\\r\\n\\r\\n```bash\\r\\ndocker image pull confluentinc/cp-zookeeper\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 2.2.2 Kafka\\r\\n\\r\\n可以選擇：\\r\\n\\r\\n```bash\\r\\ndocker image pull wurstmeister/kafka\\r\\n```\\r\\n\\r\\n```bash\\r\\ndocker image pull confluentinc/cp-kafka\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 3 Commands\\r\\n\\r\\nWindows 版既 CLI 喺 `bin/windows` folder。\\r\\n\\r\\n如果想模擬到有多部機器同時運作，即係 horizontal scaling 既效果，穩陣啲可以用 Docker（保證獨立運行），而簡單啲既就可以複製成個 Kafka binaries 既 folder（不過其實複製啲 properties 檔已經足夠，因為啲 log data 檔案默認係儲存喺 `/tmp`——Windows 版就相等於 `<drive letter>:/tmp`，而唔係儲存喺 Kafka binaries 既 folder 裡面）。\\r\\n\\r\\n## 3.1 ZooKeeper\\r\\n\\r\\n### 3.1.1 啟動\\r\\n\\r\\n```bash\\r\\nbin/zookeeper-server-start.sh config/zookeeper.properties\\r\\n```\\r\\n\\r\\n```\\r\\nbin\\\\windows\\\\zookeeper-server-start.bat config\\\\zookeeper.properties\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 Kafka broker\\r\\n\\r\\n想要模擬多部 broker 機器同時運作，就需要修改每個 broker 既 Kafka binaries 裡面既 `config/server.properties`：\\r\\n\\r\\n```plaintext\\r\\n# 唔同既 broker 要 assign 唔同既 ID\\r\\nbroker.id=9\\r\\n\\r\\n# 唔同既 broker 要 assign 唔同既 port\\r\\nlisteners=PLAINTEXT://:9999\\r\\n\\r\\n# 唔同既 broker 要 assign 唔同既 log directory\\r\\nlog.dirs=/tmp/kafka-logs-9\\r\\n```\\r\\n\\r\\n我地會起 `2`個 brokers：\\r\\n\\r\\n|  #  |  ID   |  Port  | Log dir             |\\r\\n| :-: | :---: | :----: | ------------------- |\\r\\n|  1  | `111` | `9991` | `/tmp/kafka-logs-1` |\\r\\n|  2  | `222` | `9992` | `/tmp/kafka-logs-2` |\\r\\n\\r\\n註：因為有啲 `--describe` 既 commands 會顯示數字（例如列出所有 topics 會顯示 leaders、replicas、in-sync replicas），果啲數字其實係 broker ID。為左避免誤會係數量，所以 broker ID 用長啲既數字（只可以用純數字）。\\r\\n\\r\\n### 3.2.1 啟動\\r\\n\\r\\n```bash\\r\\nbin/kafka-server-start.sh config/server.properties\\r\\n```\\r\\n\\r\\n```\\r\\nbin\\\\windows\\\\kafka-server-start.bat config\\\\server.properties\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.3 Topic\\r\\n\\r\\n### 3.3.1 建立新 topic\\r\\n\\r\\n我地會起 `1` 個 topic，而呢個 topic 會有 `2` 個 partitions。\\r\\n\\r\\n```bash\\r\\nbin/kafka-topics.sh --bootstrap-server localhost:9991,localhost:9992 --create --topic new-topic-name --partitions 2\\r\\n```\\r\\n\\r\\n```\\r\\nbin\\\\windows\\\\kafka-topics.bat --bootstrap-server localhost:9991,localhost:9992 --create --topic new-topic-name --partitions 2\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.2 列出所有 topics\\r\\n\\r\\n```bash\\r\\nbin/kafka-topics.sh --bootstrap-server localhost:9991,localhost:9992 --list\\r\\nbin/kafka-topics.sh --bootstrap-server localhost:9991,localhost:9992 --describe\\r\\n```\\r\\n\\r\\n```\\r\\nbin\\\\windows\\\\kafka-topics.bat --bootstrap-server localhost:9991,localhost:9992 --list\\r\\nbin\\\\windows\\\\kafka-topics.bat --bootstrap-server localhost:9991,localhost:9992 --describe\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.4 Kafka producer\\r\\n\\r\\nKafka 既 producer 係有 retry 機制，默認既 producer 配置下係會無限 retry send message，而必須注意既係，喺默認既 producer 配置下，`1` 個 connection 最多可以有 `5` 個等待 send 出既 messages。而如果有發送失敗既情況，例如 send 第一個 message 出去果陣 fail 左，但係 send 排喺後面既 messages 成功左既話，呢個情況下就會令最終條 MQ 裡面既 messages 既次序同本來唔同。所以有啲配置係好重要，一定要 set。\\r\\n\\r\\n`config/producer.properties`：\\r\\n\\r\\n```plaintext\\r\\nmax.in.flight.requests.per.connection=1\\r\\n```\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Confluent - Producer Configurations - `retries`](https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#producerconfigs_retries)\\r\\n-   [Confluent - Producer Configurations - `max.in.flight.requests.per.connection`](https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#producerconfigs_max.in.flight.requests.per.connection)\\r\\n-   [Does Kafka really guarantee the order of messages?](https://blog.softwaremill.com/does-kafka-really-guarantee-the-order-of-messages-3ca849fd19d2)\\r\\n\\r\\n### 3.4.1 產生 messages\\r\\n\\r\\nKafka 既 message 其實係 key-value pair。\\r\\n\\r\\n如果 messages 需要順次序，有 `2` 個方法，視乎情況而用：\\r\\n\\r\\n| 場景                                                 | 方法                                                                                                                                                                                                                                                                                                                                            |\\r\\n| ---------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n| 所有 messages 都要順次序。                           | 每個 topic 只有 `1` 個 partition，而每個 consumer group 亦只需要 `1` 個 consumer。                                                                                                                                                                                                                                                              |\\r\\n| 只需要相同業務 ID（例如用戶 ID）既 messages 順次序。 | 每個 topic 可以有多個 partitions，但係每個 message 都要提供業務 ID（例如用戶 ID）作為 key，用黎計算應該落入邊個 partition。因為 producer partitioner 係用 hashing algorithm 黎計算，所以相同既 key 一定會落入相同既 partition，但 hashing 有一定既機率會出現 collision，即係就算唔同既 key 都會有一個好低既機率落入相同既 partition，造成錯誤。 |\\r\\n\\r\\n```bash\\r\\nbin/kafka-console-producer.sh --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --property parse.key=true --property key.separator=\\\"|\\\"\\r\\n```\\r\\n\\r\\n```\\r\\nbin\\\\windows\\\\kafka-console-producer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --property parse.key=true --property key.separator=\\\"|\\\"\\r\\n```\\r\\n\\r\\n之後輸入 message content，例如 `123|Hello World`，撳 `Enter` 掣 send 出 message。當冇野需要再 send 既話可以撳 `Ctrl+C` 退出。\\r\\n\\r\\n我地可以喺 producer 度不停 send 相同 key 既 messages，又夾雜下唔同 key 既 messages，睇下有冇出現同一個 key 既 messages 畀唔同既 consumers 接收到既情況（理論上就唔會出現）。\\r\\n\\r\\n註：\\r\\n\\r\\n-   `key.separator` 默認係 tab。\\r\\n-   `--property parse.key=true --property key.separator=\\\"|\\\"` 係用黎話畀 producer 知我地既 message 邊部分係 key、邊部分係 value。\\r\\n-   如果唔加上呢 `2` 個選項，直接將 value send 出去，咁 key 就會係 `null`，而 producer partitioner 會用 round-robin 既方式將 message send 去某個 partition。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.5 Kafka consumer\\r\\n\\r\\n我地會起 `2` 個 consumer groups，各有 `2` 個 consumers。\\r\\n\\r\\n| Group ID |\\r\\n| :------: |\\r\\n| `group1` |\\r\\n| `group2` |\\r\\n\\r\\n### 3.5.1 接收 messages\\r\\n\\r\\n```bash\\r\\nbin/kafka-console-consumer.sh --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --consumer-property group.id=group1\\r\\n```\\r\\n\\r\\n```\\r\\nbin\\\\windows\\\\kafka-console-consumer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --consumer-property group.id=group1\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.5.2 列出 consumer groups\\r\\n\\r\\n```bash\\r\\nbin/kafka-consumer-groups.sh --bootstrap-server localhost:9991,localhost:9992 --describe --all-groups\\r\\n```\\r\\n\\r\\n```\\r\\nbin\\\\windows\\\\kafka-consumer-groups.bat --bootstrap-server localhost:9991,localhost:9992 --describe --all-groups\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 4 參考資料\\r\\n\\r\\n-   [What is Zookeeper and why is it needed for Apache Kafka?](https://www.cloudkarafka.com/blog/cloudkarafka-what-is-zookeeper.html)\\r\\n-   [Confluent - Single machine, multi-broker and multi-cluster configurations](https://docs.confluent.io/platform/current/kafka/kafka-basics.html#mult-node-production-ready-deployments)\\r\\n-   [A Visual Understanding to Ensuring Your Kafka Data is (Literally) in Order](https://www.instaclustr.com/a-visual-understanding-to-ensuring-your-kafka-data-is-literally-in-order/)\\r\\n-   [Confluent - Producer Configurations - `partitioner.class`](https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#producerconfigs_partitioner.class)\\r\\n-   [Kafka GitHub - `DefaultPartitioner.java`](https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/producer/internals/DefaultPartitioner.java)\\r\\n-   [Custom Partitioner in Kafka: Let's Take a Quick Tour!](https://dzone.com/articles/custom-partitioner-in-kafka-lets-take-quick-tour)\\r\\n\";","export default \"# 1 Markdown 簡介\\r\\n\\r\\nMarkdown（`.md`）係一種純文字既檔案，對比起冇任何格式既純文字（`.txt`），Markdown 既格式標準畀我地用簡單符號去表達文字格式。\\r\\n\\r\\nGitHub 既 `README.md` 就係最佳例子。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 寫法\\r\\n\\r\\nMarkdown 既世界，任何兩個 components 之間都應該要隔至少一行。\\r\\n\\r\\n## 2.1 一般文字\\r\\n\\r\\n```markdown\\r\\n呢一段係一般文字。呢一段係一般文字。呢一段係一般文字。\\r\\n呢一段係一般文字。呢一段係一般文字。呢一段係一般文字。\\r\\n呢一段係一般文字。呢一段係一般文字。呢一段係一般文字。\\r\\n呢一段係一般文字。呢一段係一般文字。呢一段係一般文字。\\r\\n呢一段係一般文字。呢一段係一般文字。呢一段係一般文字。\\r\\n\\r\\n開新段落要隔一行。開新段落要隔一行。開新段落要隔一行。\\r\\n開新段落要隔一行。開新段落要隔一行。開新段落要隔一行。\\r\\n開新段落要隔一行。開新段落要隔一行。開新段落要隔一行。\\r\\n開新段落要隔一行。開新段落要隔一行。開新段落要隔一行。\\r\\n開新段落要隔一行。開新段落要隔一行。開新段落要隔一行。\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 格式化文字\\r\\n\\r\\n```markdown\\r\\n**粗體文字**\\r\\n\\r\\n_斜體文字_\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 標題\\r\\n\\r\\n```markdown\\r\\n# 1 H1 標題\\r\\n\\r\\n## 1.1 H2 標題\\r\\n\\r\\n### 1.1.1 H3 標題\\r\\n\\r\\n#### 1.1.1.1 H4 標題\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.4 分隔線\\r\\n\\r\\n```markdown\\r\\n---\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.5 Code\\r\\n\\r\\n```markdown\\r\\nThis `code` is inline.\\r\\n```\\r\\n\\r\\n````markdown\\r\\n```js\\r\\nconsole.log(\\\"This is a code block.\\\");\\r\\n```\\r\\n````\\r\\n\\r\\n````markdown\\r\\n```java\\r\\nSystem.out.println(\\\"This is a code block.\\\");\\r\\n```\\r\\n````\\r\\n\\r\\n註：可以指明用邊隻語言做 syntax highlighting。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.6 引用\\r\\n\\r\\n```markdown\\r\\n> Someone said,\\r\\n>\\r\\n> （可以有空行）\\r\\n> Something\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.7 List\\r\\n\\r\\n```markdown\\r\\n-   Bullet point 1\\r\\n    -   Inner\\r\\n-   [x] Checklist item 1 (checked)\\r\\n-   [ ] Checklist item 2 (unchecked)\\r\\n```\\r\\n\\r\\n```markdown\\r\\n1. 第一點\\r\\n1. 數字會自動加上去\\r\\n1. 顯示出黎就係 1、2、3\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.8 Table\\r\\n\\r\\n```markdown\\r\\n| Table header - Column 1 | Table header - Column 2 |\\r\\n| ----------------------- | ----------------------- |\\r\\n| Record 1 - Column 1     | Record 1 - Column 2     |\\r\\n| Record 2 - Column 1     | Record 2 - Column 2     |\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.9 URL\\r\\n\\r\\n```markdown\\r\\n[My e-Portfolio](https://blackr1234.github.io/eportfolio/#/)\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.10 相\\r\\n\\r\\n```markdown\\r\\n![](image.png)\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.11 HTML\\r\\n\\r\\n部分 Markdown parser 都支援 render HTML tags，甚或 CSS（`<style>`）。\\r\\n\\r\\n---\\r\\n\\r\\n# 3 推薦 IDE\\r\\n\\r\\n要將 Markdown 檔裡面既格式顯示出黎，就需要可以睇得明 Markdown syntax 既檢視工具：\\r\\n\\r\\n-   Visual Studio Code 支援 Markdown 即時 preview\\r\\n    -   可以裝埋 Prettier 去自動 format `.md` 檔既內容\\r\\n-   Chrome 可以安裝 Markdown Viewer\\r\\n    -   設定 COMPILER 用 REMARK，開啟 gfm 模組\\r\\n    -   設定 CONTENT 開啟 autoreload、toc\\r\\n\";","export default \"# 1 項目背景\\r\\n\\r\\n我地想寫一個可以本地執行既 CLI（command line interface）小工具，要有以下功能：\\r\\n\\r\\n| 功能 | 描述                                                                         |\\r\\n| :--: | ---------------------------------------------------------------------------- |\\r\\n| 加密 | 以用戶提供既密碼，加密一個檔案（任何檔案格式），輸出一個純文字檔案。         |\\r\\n| 解密 | 以用戶提供既密碼，解密一個由呢個工具既加密功能得出既純文字檔案，輸出原檔案。 |\\r\\n\\r\\n而加密、解密功能都會用上 AES——最多人用既 symmetric key algorithm，而 CryptoJS 作為一個熱門既 JavaScript 加密 package 就可以提供到呢一個加密算法。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 動手寫\\r\\n\\r\\n## 2.1 NPM dependencies\\r\\n\\r\\n`package.json`：\\r\\n\\r\\n```json\\r\\n{\\r\\n\\t\\\"name\\\": \\\"aes-encryptor-decryptor\\\",\\r\\n\\t\\\"version\\\": \\\"1.0.0\\\",\\r\\n\\t\\\"private\\\": true,\\r\\n\\t\\\"type\\\": \\\"module\\\",\\r\\n\\t\\\"dependencies\\\": {\\r\\n\\t\\t\\\"crypto-js\\\": \\\"^4.1.1\\\"\\r\\n\\t}\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 寫 JavaScript code\\r\\n\\r\\n### 2.2.1 通用既 utility\\r\\n\\r\\n我地會用 AES（symmetric key）黎加密數據，再用 Base64 表達。\\r\\n\\r\\n`utils.js`：\\r\\n\\r\\n```js\\r\\nimport CryptoJS from \\\"crypto-js\\\";\\r\\n\\r\\nconst encrypt = (data, secret) => CryptoJS.AES.encrypt(data, secret).toString();\\r\\n\\r\\nconst decrypt = (data, secret) => CryptoJS.AES.decrypt(data, secret).toString(CryptoJS.enc.Utf8);\\r\\n\\r\\nexport default { encrypt, decrypt };\\r\\nexport { encrypt, decrypt };\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 2.2.2 加密功能\\r\\n\\r\\n加密功能需要用戶提供：\\r\\n\\r\\n1. 要加密既檔案既路徑\\r\\n1. 輸出檔案既路徑\\r\\n1. 密碼\\r\\n\\r\\n`enc.js`：\\r\\n\\r\\n```js\\r\\nimport { readFile, writeFile } from \\\"fs/promises\\\";\\r\\nimport { encrypt } from \\\"./utils.js\\\";\\r\\n\\r\\nconst main = async () => {\\r\\n\\tconst args = process.argv.slice(2); // 一定係 2\\r\\n\\r\\n\\tif (args.length < 3) {\\r\\n\\t\\tconsole.log(\\r\\n\\t\\t\\t[\\r\\n\\t\\t\\t\\t\\\"Required 3 args:\\\",\\r\\n\\t\\t\\t\\t\\\"\\\",\\r\\n\\t\\t\\t\\t\\\"    enc <I> <O> <P>\\\",\\r\\n\\t\\t\\t\\t\\\"\\\",\\r\\n\\t\\t\\t\\t\\\"I: Input file path\\\",\\r\\n\\t\\t\\t\\t\\\"O: Output file path\\\",\\r\\n\\t\\t\\t\\t\\\"P: Password\\\",\\r\\n\\t\\t\\t].join(\\\"\\\\n\\\")\\r\\n\\t\\t);\\r\\n\\t\\treturn;\\r\\n\\t}\\r\\n\\r\\n\\tconst inputFilePath = args.shift();\\r\\n\\tconst outputFilePath = args.shift();\\r\\n\\tconst secret = args.shift();\\r\\n\\r\\n\\tconst data = await readFile(inputFilePath, { encoding: \\\"base64\\\" });\\r\\n\\tconst encrypted = encrypt(data, secret);\\r\\n\\tawait writeFile(outputFilePath, encrypted, { encoding: \\\"utf8\\\" });\\r\\n\\r\\n\\tconsole.log(\\\"Done encryption!\\\");\\r\\n};\\r\\n\\r\\nmain();\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 2.2.3 解密功能\\r\\n\\r\\n解密功能需要用戶提供：\\r\\n\\r\\n1. 已加密既檔案既路徑\\r\\n1. 輸出檔案既路徑\\r\\n1. 密碼\\r\\n\\r\\n`dec.js`：\\r\\n\\r\\n```js\\r\\nimport { readFile, writeFile } from \\\"fs/promises\\\";\\r\\nimport { decrypt } from \\\"./utils.js\\\";\\r\\n\\r\\nconst main = async () => {\\r\\n\\tconst args = process.argv.slice(2); // 一定係 2\\r\\n\\r\\n\\tif (args.length < 3) {\\r\\n\\t\\tconsole.log(\\r\\n\\t\\t\\t[\\r\\n\\t\\t\\t\\t\\\"Required 3 args:\\\",\\r\\n\\t\\t\\t\\t\\\"\\\",\\r\\n\\t\\t\\t\\t\\\"    dec <I> <O> <P>\\\",\\r\\n\\t\\t\\t\\t\\\"\\\",\\r\\n\\t\\t\\t\\t\\\"I: Input file path\\\",\\r\\n\\t\\t\\t\\t\\\"O: Output file path\\\",\\r\\n\\t\\t\\t\\t\\\"P: Password\\\",\\r\\n\\t\\t\\t].join(\\\"\\\\n\\\")\\r\\n\\t\\t);\\r\\n\\t\\treturn;\\r\\n\\t}\\r\\n\\r\\n\\tconst inputFilePath = args.shift();\\r\\n\\tconst outputFilePath = args.shift();\\r\\n\\tconst secret = args.shift();\\r\\n\\r\\n\\tconst data = await readFile(inputFilePath, { encoding: \\\"utf8\\\" });\\r\\n\\tconst decrypted = decrypt(data.trim(), secret);\\r\\n\\tawait writeFile(outputFilePath, decrypted, { encoding: \\\"base64\\\" });\\r\\n\\r\\n\\tconsole.log(\\\"Done decryption!\\\");\\r\\n};\\r\\n\\r\\nmain();\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 3 測試\\r\\n\\r\\n## 3.1 測試加密功能\\r\\n\\r\\n```bash\\r\\nnode enc \\\"/path/to/raw.file\\\" \\\"/path/to/encrypted.file\\\" \\\"password\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 測試解密功能\\r\\n\\r\\n```bash\\r\\nnode dec \\\"/path/to/encrypted.file\\\" \\\"/path/to/raw.file\\\" \\\"password\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 4 筆記\\r\\n\\r\\n## 4.1 用 `import` 而非 `require` 引用 modules\\r\\n\\r\\n`require` 係 CommonJS 既寫法，可以喺 runtime 根據條件即時 load module；而 `import` 就係 ECMAScript 既寫法，喺 compile 既時候就會 load，亦冇得根據條件 load 或唔 load module。\\r\\n\\r\\nNodeJS 默認係用 CommonJS，除非喺 `package.json` 度配置：\\r\\n\\r\\n```json\\r\\n{\\r\\n\\t\\\"type\\\": \\\"module\\\"\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.2 `process.argv`\\r\\n\\r\\n頭 `2` 個 values 係 NodeJS 個 binary 既 file path 以及我地個 JavaScript 程式既 file path，所以要去除頭 `2` 個 values：\\r\\n\\r\\n```js\\r\\nconst args = process.argv.slice(2); // 一定係 2\\r\\n```\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [NodeJS 官網 - process.argv](https://nodejs.org/docs/latest/api/process.html#process_process_argv)\\r\\n\\r\\n---\\r\\n\\r\\n## 4.3 `fs/promises`\\r\\n\\r\\nNodeJS 自帶既 `fs` module 提供左讀寫檔案既功能，不過啲 API 就係 async callback 既寫法黎既。\\r\\n\\r\\n如果我地想得到 `Promise`，然後用 `await` 去令佢返回結果，可以用 NodeJS 自帶既 `fs/promises` module。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [NodeJS 官網 - `fs.readFile`](https://nodejs.org/api/fs.html#fs_fs_readfile_path_options_callback)\\r\\n-   [NodeJS 官網 - `fs.writeFile`](https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback)\\r\\n-   [NodeJS 官網 - `fsPromises.readFile`](https://nodejs.org/api/fs.html#fs_fspromises_readfile_path_options)\\r\\n-   [NodeJS 官網 - `fsPromises.writeFile`](https://nodejs.org/api/fs.html#fs_fspromises_writefile_file_data_options)\\r\\n-   [MDN - `Promise`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\r\\n-   [MDN - `await`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await)\\r\\n\\r\\n---\\r\\n\\r\\n## 4.4 將 config 放喺 `.env`\\r\\n\\r\\n如果我地想用一個檔案黎 config password，我地可以喺 project root folder 建立一個 `.env` 檔，然後將 config 寫落去。不過我地需要安裝 NPM library `dotenv` 先可以將 `.env` 檔裡面既 key-value pairs 讀入 `process.env`，然後喺 JavaScript code 裡面使用。\\r\\n\\r\\n`.env`：\\r\\n\\r\\n```plaintext\\r\\npassword=1234\\r\\n```\\r\\n\\r\\n為 project 添加 dependency：\\r\\n\\r\\n```bash\\r\\nnpm i dotenv\\r\\n```\\r\\n\\r\\n喺 JavaScript code 度讀取 `.env` 既 config：\\r\\n\\r\\n```js\\r\\nimport dotenv from \\\"dotenv\\\";\\r\\ndotenv.config();\\r\\n\\r\\nconsole.log(process.env.password); // 1234\\r\\n```\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [NPM - `dotenv`](https://www.npmjs.com/package/dotenv)\\r\\n\";","export default \"# 1 Spring AOP 簡介\\r\\n\\r\\nAOP 即係 aspect-oriented programming，係一個畀我地從其他角度（如業務角度、功能角度）加插執行代碼既一個設計。簡單啲講，Spring AOP 就係一個做法，可以方便我地做到某啲特別既操作，亦唔需要改到原來既 code，而呢啲功能可能係需要針對一堆相類似既 classes，例如係 service layer 既 classes（帶 `@Service`），去做一啲微細又或者毀滅性既操作。\\r\\n\\r\\n## 1.1 Spring AOP 可以進行既操作\\r\\n\\r\\n-   喺一個 Spring bean 既 method 被 call 之前做啲野\\r\\n    -   截取 input argument values\\r\\n-   決定 call 啲乜野、點樣 call\\r\\n    -   唔 call 原先個 method\\r\\n    -   call 原先個 method，但 supply 唔同既 argument values\\r\\n-   喺一個 Spring bean 既 method 被 call 之後做啲野\\r\\n    -   截取 output return value\\r\\n\\r\\n---\\r\\n\\r\\n## 1.2 Spring AOP 既應用\\r\\n\\r\\n### 1.2.1 Spring Framework 本身\\r\\n\\r\\nSpring 既 declarative transaction management 就正正係應用左 Spring AOP，亦即係我地寫 JPA/Hibernate 果陣用到既 `@Transactional`，佢既背後就係由 Spring AOP 實現。\\r\\n\\r\\nSpring 官方 doc 裡面既 [Declarative Transaction Management](https://docs.spring.io/spring-framework/docs/current/reference/html/data-access.html#transaction-declarative) 提到：\\r\\n\\r\\n> The Spring Framework's declarative transaction management is made possible with Spring aspect-oriented programming (AOP).\\r\\n\\r\\n> The most important concepts to grasp with regard to the Spring Framework's declarative transaction support are that this support is enabled [via AOP proxies](https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#aop-understanding-aop-proxies) and that the transactional advice is driven by metadata (currently XML- or annotation-based).\\r\\n\\r\\n---\\r\\n\\r\\n### 1.2.2 自定義應用場景\\r\\n\\r\\n而其他應用場景有：\\r\\n\\r\\n| 應用場景 | 描述                                                                   |\\r\\n| :------: | ---------------------------------------------------------------------- |\\r\\n| Logging  | 截取 input 及 output，用 logger log 低，方便 debug 或者 troubleshoot。 |\\r\\n| 數據校驗 | 對特定參數進行校驗。                                                   |\\r\\n| Mocking  | 取締原來既 output。                                                    |\\r\\n\\r\\n至於做 authentication，即係去 check 下個 HTTP request 來自既用戶登入左未、session 係咪 valid，我地就可以用 filters，例如 `OncePerRequestFilter`。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 動手使用 Spring AOP 做 logging\\r\\n\\r\\n## 2.1 用 Spring AOP 做既原因\\r\\n\\r\\n試想像下而家有一個 Spring web application，裡面有好多唔同既 service classes，如果我地想對佢地加 logging，去 log 所有 `public` 既 service methods 被 call 果陣既 arguments 同埋 return 返出去既 value。\\r\\n\\r\\n我地與其逐個 service method 咁改，倒不如將 logging 既 code 放喺同一個位度，除左方便，咁亦都可以令我地個系統既設計變得 modular，因為 logging 既 code 寫埋一邊，而 service classes 裡面就只有 business logic，河水不犯井水。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 Maven dependencies\\r\\n\\r\\nSpring 本身都已經有引入 Spring AOP，因為 Spring AOP 係 Spring 既核心功能，好多其他功能都係基於 Spring AOP，例如 JPA 既 transactions，所以唔需要特登加 `spring-boot-starter-aop` 既 dependency。\\r\\n\\r\\n```xml\\r\\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\r\\n<project xmlns=\\\"http://maven.apache.org/POM/4.0.0\\\"\\r\\n    xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\r\\n    xsi:schemaLocation=\\\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\\\">\\r\\n    <modelVersion>4.0.0</modelVersion>\\r\\n\\r\\n    <groupId>com.michael</groupId>\\r\\n    <artifactId>Spring-Boot-2-Playground</artifactId>\\r\\n    <version>1.0.0</version>\\r\\n    <packaging>jar</packaging>\\r\\n\\r\\n    <name>Spring-Boot-2-Playground</name>\\r\\n    <description>Spring Boot 2 Playground</description>\\r\\n\\r\\n    <parent>\\r\\n        <groupId>org.springframework.boot</groupId>\\r\\n        <artifactId>spring-boot-starter-parent</artifactId>\\r\\n        <version>2.6.1</version>\\r\\n    </parent>\\r\\n\\r\\n    <properties>\\r\\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\\r\\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\\r\\n        <javac.source>1.8</javac.source>\\r\\n        <javac.target>1.8</javac.target>\\r\\n        <maven.compiler.target>1.8</maven.compiler.target>\\r\\n        <maven.compiler.source>1.8</maven.compiler.source>\\r\\n    </properties>\\r\\n\\r\\n    <dependencies>\\r\\n        <dependency>\\r\\n            <groupId>org.springframework.boot</groupId>\\r\\n            <artifactId>spring-boot-starter-web</artifactId>\\r\\n        </dependency>\\r\\n\\r\\n        <dependency>\\r\\n            <groupId>org.springframework.boot</groupId>\\r\\n            <artifactId>spring-boot-devtools</artifactId>\\r\\n        </dependency>\\r\\n    </dependencies>\\r\\n\\r\\n    <build>\\r\\n        <plugins>\\r\\n            <plugin>\\r\\n                <groupId>org.springframework.boot</groupId>\\r\\n                <artifactId>spring-boot-maven-plugin</artifactId>\\r\\n                <configuration>\\r\\n                    <mainClass>code.MainApplication</mainClass>\\r\\n                </configuration>\\r\\n                <executions>\\r\\n                    <execution>\\r\\n                        <goals>\\r\\n                            <goal>repackage</goal>\\r\\n                        </goals>\\r\\n                    </execution>\\r\\n                </executions>\\r\\n            </plugin>\\r\\n        </plugins>\\r\\n    </build>\\r\\n</project>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 寫 Java code\\r\\n\\r\\nProject structure：\\r\\n\\r\\n-   `src/main/java`\\r\\n    -   `/code`\\r\\n        -   `/controller`\\r\\n            -   `HomeController.java`\\r\\n        -   `/service`\\r\\n            -   `HomeService.java`\\r\\n            -   `ServiceAspect.java`\\r\\n        -   `MainApplication.java`\\r\\n\\r\\n---\\r\\n\\r\\n### 2.3.1 Application 入口\\r\\n\\r\\n`MainApplication.java`：\\r\\n\\r\\n```java\\r\\n@SpringBootApplication\\r\\npublic class MainApplication {\\r\\n\\r\\n    public static void main(String[] args) {\\r\\n        SpringApplication.run(MainApplication.class, args);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 2.3.2 Controller layer\\r\\n\\r\\n`HomeController.java`：\\r\\n\\r\\n```java\\r\\n@RestController\\r\\npublic class HomeController {\\r\\n\\r\\n    @Autowired\\r\\n    HomeService homeService;\\r\\n\\r\\n    @GetMapping(\\\"/{name}\\\")\\r\\n    public String greet(@PathVariable(\\\"name\\\") String name) {\\r\\n        return homeService.greet(name);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 2.3.3 Service layer\\r\\n\\r\\n`HomeService.java`：\\r\\n\\r\\n```java\\r\\n@Service\\r\\npublic class HomeService {\\r\\n\\r\\n    public String greet(String name) {\\r\\n        return \\\"Hi, \\\" + name;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 2.3.4 AOP `@Aspect` component\\r\\n\\r\\n`ServiceAspect.java`：\\r\\n\\r\\n```java\\r\\n@Slf4j\\r\\n@Aspect\\r\\n@Component\\r\\npublic class ServiceAspect {\\r\\n\\r\\n    @Around(\\\"execution(* code.service.*.*(..))\\\")\\r\\n    public Object logging(ProceedingJoinPoint joinPoint) throws Throwable {\\r\\n\\r\\n        final List<Object> args = asList(joinPoint.getArgs());\\r\\n        final MethodSignature method = (MethodSignature) joinPoint.getSignature();\\r\\n        final Class<?> returnType = method.getReturnType();\\r\\n        final String methodName = method.getMethod().getName();\\r\\n        final String className = method.getDeclaringType().getSimpleName();\\r\\n\\r\\n        log.info(\\\"{}.{} is called. Arguments: {}\\\", className, methodName, args);\\r\\n\\r\\n        try {\\r\\n            final Object returnValue = joinPoint.proceed();\\r\\n\\r\\n            log.info(\\\"{}.{} returns [class: {}]: {}\\\", className, methodName, returnType.getCanonicalName(), returnValue);\\r\\n\\r\\n            return returnValue;\\r\\n        } catch (Throwable e) {\\r\\n            log.info(\\\"{}.{} throws exception [class: {}].\\\", className, methodName, e.getClass(), e);\\r\\n            throw e;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.4 測試\\r\\n\\r\\n### 2.4.1 啟動 Spring Boot web application\\r\\n\\r\\n執行下面既 command，或者喺 IDE 裡面 run `MainApplication` 既 `main` method：\\r\\n\\r\\n```bash\\r\\nmvn spring-boot:run\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 2.4.2 Call API\\r\\n\\r\\n執行下面既 command，或者喺 Postman 裡面 call `GET localhost:8080/mick`：\\r\\n\\r\\n```bash\\r\\ncurl --request GET \\\"localhost:8080/mick\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 2.4.3 檢視結果 + 討論\\r\\n\\r\\n留意 Spring Boot 既 console log，我地會見到：\\r\\n\\r\\n```plaintext\\r\\nHomeService.greet is called. Arguments: [mick]\\r\\nHomeService.greet returns [class: java.lang.String]: Hi, mick\\r\\n```\\r\\n\\r\\n呢個就係 demo 緊我地點樣喺 service layer 被用到既時候，用 Spring AOP 黎 log 低 input 同 output。\\r\\n\\r\\n同樣地，我地都可以針對 controller layer 或者 JPA 既 repository layer 去做一啲處理。我地只需要修改 `@Around(\\\"execution(* code.xxxxxx.*.*(..))\\\")` 既 package，就可以對呢個 package 裡面既所有 Spring components 做相同既處理。\\r\\n\\r\\n如果想寫一個 method 但係針對多過一個 package，咁我地可以用 `||` operator，將幾個 `execution()` 駁埋一齊：\\r\\n\\r\\n```java\\r\\n@Around(\\r\\n          \\\"execution(* code.controller.*.*(..))\\\"\\r\\n    + \\\" || execution(* code.service.*.*(..))\\\"\\r\\n)\\r\\npublic Object around(ProceedingJoinPoint joinPoint) throws Throwable {\\r\\n    // ...\\r\\n}\\r\\n```\\r\\n\";","export default \"# 1 Redis 簡介\\r\\n\\r\\n一般既 web applications 都會將最重要既資料（例如客戶資料、交易數據）放喺一個或者多個（如果係 microservice architecture）RDBMS 既 databases 裡面，而呢啲 databases 既資料都可以被視作為 single source of truth。不過，資料可以分好多種，除左最重要、改既話一定要直接改 database 既紀錄果啲，仲有一啲比如係用戶網頁登入既 session states、多國語言既翻譯文本，或者係一啲基本上都唔會點改變既業務配置或者程序配置。為左減少 database 既存取、加快查詢速度，我地可以用唔同既 caching library，例如 Redis、Memcached、Ehcache、Caffeine。\\r\\n\\r\\n關於 Redis：\\r\\n\\r\\n-   係一個 in-memory database。\\r\\n    -   佢既 data 都可以 save 落 disk（例如 Redis server shutdown 果陣，或者用 Redis command）。\\r\\n-   資料可以同時畀好多個 Redis client 既 application instances 去存取，大家存取到既資料都係一樣既。\\r\\n-   支援 transaction，隔離狀態咁一次過執行多個 commands，但係就唔 ACID（大概只可以做到 isolation，因為唔支援 rollback）。\\r\\n-   可以建立多個 replicas 以及 sentinels 去達到 high availability。\\r\\n-   支援搭建 cluster 做 distributed cache。\\r\\n-   可以視為一個好快既以讀取為主既 key-value database。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 安裝\\r\\n\\r\\n## 2.1 Docker image\\r\\n\\r\\n1. 安裝 Docker Desktop。\\r\\n1. 開啟 Docker Desktop 既 Dashboard。\\r\\n1. 去 Containers 頁面。\\r\\n1. Guides 下面有 Redis，按 Run，Docker 會自動幫我地 pull Redis Docker image，然後建立一個新既 Redis Docker container，完全 ready 畀我地直接使用。\\r\\n\\r\\nRedis Docker image 裡面已經包含 Redis CLI，所以我地只需要接連入去個 container 既 CLI 就可以用到。\\r\\n\\r\\n連接 Redis CLI：\\r\\n\\r\\n-   方法一\\r\\n    1.  去 Redis Docker container 頁面既右上角果度按 CLI 圖示\\r\\n    1.  彈出黎既 CLI 視窗已經連接左 Redis Docker container 既 CLI，我地可以執行：\\r\\n        ```bash\\r\\n        redis-cli -a redispw\\r\\n        ```\\r\\n-   方法二\\r\\n    1.  喺 Windows Command Prompt 或者 macOS Terminal 執行：\\r\\n        ```bash\\r\\n        docker container exec -it <redis container name/ID> redis-cli -a redispw\\r\\n        ```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 Windows（免安裝）\\r\\n\\r\\n1. 去 [tporadowski/redis GitHub](https://github.com/tporadowski/redis/releases) 下載 ZIP 版既 Redis server。\\r\\n1. 解壓縮個 ZIP 檔。\\r\\n1. 執行 command：`redis-server.exe redis.windows.conf`\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 macOS（Homebrew）\\r\\n\\r\\n1. 執行 command：`brew install redis`\\r\\n1. 執行 command：`redis-server`\\r\\n\\r\\n---\\r\\n\\r\\n# 3 動手寫\\r\\n\\r\\nProject setup：\\r\\n\\r\\n-   Spring Boot（web）\\r\\n-   JPA／Hibernate\\r\\n-   MySQL 或 MariaDB\\r\\n-   Redis\\r\\n\\r\\n## 3.1 Maven dependencies\\r\\n\\r\\n-   新、舊版本既 Spring Data Redis（由 Spring Boot Starter Data Redis 引入）對於透過 annotations 黎做 Redis caching 既差異\\r\\n    -   新版 `2.x` 既 `RedisCacheManager` 裡面用到 `RedisCacheConfiguration`，所以係用 `RedisCacheConfiguration` 黎配置個別 cache，如果直接配置 `RestTemplate` bean 係唔會起到作用。\\r\\n    -   舊版 `1.x` 係直接配置 `RestTemplate` bean。\\r\\n-   新、舊版本既 Spring Boot Starter Data Redis 引入既 Redis client 既差異\\r\\n    -   Spring Boot Starter Data Redis `1.x` 默認用 Jedis，冇 Lettuce 既 dependencies。\\r\\n    -   Spring Boot Starter Data Redis `2.x` 默認用 Lettuce，冇 Jedis 既 dependencies。\\r\\n-   用 MySQL／MariaDB 作為 database。\\r\\n\\r\\n```xml\\r\\n<parent>\\r\\n\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t<artifactId>spring-boot-starter-parent</artifactId>\\r\\n\\t<version>2.6.1</version>\\r\\n</parent>\\r\\n\\r\\n<dependencies>\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.projectlombok</groupId>\\r\\n\\t\\t<artifactId>lombok</artifactId>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t<artifactId>spring-boot-starter-web</artifactId>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t<artifactId>spring-boot-starter-data-redis</artifactId>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t<artifactId>spring-boot-starter-data-jpa</artifactId>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>mysql</groupId>\\r\\n\\t\\t<artifactId>mysql-connector-java</artifactId>\\r\\n\\t</dependency>\\r\\n</dependencies>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 Application 配置\\r\\n\\r\\n`application.yml`：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\nspring:\\r\\n  jpa:\\r\\n    show-sql: true\\r\\n    open-in-view: false\\r\\n    hibernate:\\r\\n      ddl-auto: update\\r\\n    properties:\\r\\n      hibernate:\\r\\n        dialect: org.hibernate.dialect.MySQL57InnoDBDialect\\r\\n  datasource:\\r\\n    url: jdbc:mysql://localhost:3306/mydb?useSSL=false\\r\\n    username: root\\r\\n    password:\\r\\n    driver-class-name: com.mysql.cj.jdbc.Driver\\r\\n  cache:\\r\\n    type: redis\\r\\n  redis:\\r\\n    host: localhost\\r\\n    port: 6379\\r\\n    database: 0\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.3 寫 Java code\\r\\n\\r\\nProject structure：\\r\\n\\r\\n-   `src/main/java`\\r\\n    -   `/code`\\r\\n        -   `/controller`\\r\\n            -   `PersonController.java`\\r\\n        -   `/entity`\\r\\n            -   `PersonEntity.java`\\r\\n        -   `/repo`\\r\\n            -   `PersonRepo.java`\\r\\n        -   `/service`\\r\\n            -   `PersonService.java`\\r\\n        -   `MainApplication.java`\\r\\n        -   `RedisConfig.java`\\r\\n\\r\\n### 3.3.1 Entity\\r\\n\\r\\n`PersonEntity.java`：\\r\\n\\r\\n```java\\r\\n@Data\\r\\n@Accessors(chain = true)\\r\\n@FieldDefaults(level = PRIVATE)\\r\\n@Entity\\r\\n@Table(name = \\\"person\\\", uniqueConstraints = {\\r\\n    @UniqueConstraint(name = \\\"UQ_person_1\\\", columnNames = { \\\"email\\\" })\\r\\n})\\r\\npublic class PersonEntity {\\r\\n    @Id\\r\\n    @GeneratedValue(strategy = IDENTITY)\\r\\n    @Column(name = \\\"id\\\")\\r\\n    Long id;\\r\\n\\r\\n    @Column(nullable = false)\\r\\n    String email;\\r\\n\\r\\n    String name;\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   `id`\\r\\n    -   Database 層面 auto-increment\\r\\n-   `email`\\r\\n    -   Database 層面 guarantee 一定唔會 `null`\\r\\n    -   Database 層面 guarantee 一定唔會重複\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.2 Repository\\r\\n\\r\\n`PersonRepo.java`：\\r\\n\\r\\n```java\\r\\nimport org.springframework.cache.annotation.Cacheable;\\r\\n\\r\\n@CacheConfig(cacheManager = \\\"personCache\\\")\\r\\n@Repository\\r\\npublic interface PersonRepo extends JpaRepository<PersonEntity, Long> {\\r\\n\\r\\n    @CachePut(value = \\\"personByEmail\\\", key = \\\"#entity.email\\\", unless = \\\"#result.id == null\\\")\\r\\n    @Override <S extends PersonEntity> S save(S entity);\\r\\n\\r\\n    @Cacheable(value = \\\"personByEmail\\\", key = \\\"#email\\\", unless = \\\"#result == null\\\")\\r\\n    Optional<PersonEntity> findOneByEmail(String email);\\r\\n\\r\\n    @CacheEvict(value = \\\"personByEmail\\\", key = \\\"#email\\\")\\r\\n    void deleteByEmail(String email);\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   `@CachePut`\\r\\n    -   用 return value 覆蓋或者新增 cache 紀錄。\\r\\n    -   `value` 以及 `key` 會組合成 cache 既 key 名，例如 `personByEmail::michaelboyboy@gmail.com`。\\r\\n    -   `unless` 用黎喺攞到真既 return value 之後，根據自定義既邏輯去選擇性咁去做定唔做相關操作。\\r\\n-   `@Cacheable`\\r\\n    -   如果 cache 已經存在相關紀錄，返回 cache 既紀錄；否則，call 真 method（訪問 database），然後將 return value 放入 cache。\\r\\n    -   `value` 以及 `key` 會組合成 cache 既 key 名，例如 `personByEmail::michaelboyboy@gmail.com`。\\r\\n    -   `unless` 用黎喺攞到真既 return value 之後，根據自定義既邏輯去選擇性咁去做定唔做相關操作。\\r\\n-   `@CacheEvict`\\r\\n    -   刪除 cache 紀錄。\\r\\n    -   `value` 以及 `key` 會組合成 cache 既 key 名，例如 `personByEmail::michaelboyboy@gmail.com`。\\r\\n    -   可以用 `allEntries = true` 黎刪曬所有 `value` 下既所有 cache 紀錄（不限 `key`）。\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.3 Service\\r\\n\\r\\n`PersonService.java`：\\r\\n\\r\\n```java\\r\\nimport org.springframework.beans.BeanUtils;\\r\\nimport org.springframework.transaction.annotation.Transactional;\\r\\n\\r\\n@CacheConfig(cacheManager = \\\"personCache\\\")\\r\\n@Service\\r\\n@Transactional(rollbackFor = Throwable.class)\\r\\npublic class PersonService {\\r\\n\\r\\n    @Autowired\\r\\n    PersonRepo personRepo;\\r\\n\\r\\n    public PersonEntity insert(PersonEntity person) {\\r\\n        return personRepo.save(person);\\r\\n    }\\r\\n\\r\\n    public PersonEntity update(PersonEntity person) {\\r\\n        return personRepo.findOneByEmail(person.getEmail()).map(e -> {\\r\\n            BeanUtils.copyProperties(person, e, \\\"id\\\");\\r\\n            return personRepo.save(e);\\r\\n        }).orElse(null);\\r\\n    }\\r\\n\\r\\n    public PersonEntity getByEmail(String email) {\\r\\n        return personRepo.findOneByEmail(email).orElse(null);\\r\\n    }\\r\\n\\r\\n    public void deleteByEmail(String email) {\\r\\n        personRepo.deleteByEmail(email);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   `update`\\r\\n    1.  喺 database 或者 cache 攞出紀錄\\r\\n        -   Cache：透過 `PersonRepo#findOneByEmail` 既 `@Cacheable`\\r\\n    1.  將 `id` 以外既 fields 覆蓋原有紀錄（保留 `id` value）\\r\\n        -   利用 String 自帶既 `BeanUtils#copyProperties(Object source, Object target, String... ignoreProperties)`\\r\\n    1.  更新 database 紀錄\\r\\n        -   透過 `PersonRepo#save`\\r\\n    1.  新增或者更新 cache 紀錄\\r\\n        -   透過 `PersonRepo#save` 既 `@CachePut`\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.4 Controller\\r\\n\\r\\n`PersonController.java`：\\r\\n\\r\\n```java\\r\\n@RestController\\r\\n@RequestMapping(\\\"person\\\")\\r\\npublic class PersonController {\\r\\n\\r\\n    @Autowired PersonService personService;\\r\\n\\r\\n    @PostMapping\\r\\n    public PersonEntity insert(@RequestBody PersonEntity person) {\\r\\n        return personService.insert(person);\\r\\n    }\\r\\n\\r\\n    @PutMapping\\r\\n    public PersonEntity update(@RequestBody PersonEntity person) {\\r\\n        return personService.update(person);\\r\\n    }\\r\\n\\r\\n    @GetMapping(\\\"{email}\\\")\\r\\n    public PersonEntity get(@PathVariable(\\\"email\\\") String email) {\\r\\n        return personService.getByEmail(email);\\r\\n    }\\r\\n\\r\\n    @DeleteMapping(\\\"{email}\\\")\\r\\n    public void delete(@PathVariable(\\\"email\\\") String email) {\\r\\n        personService.deleteByEmail(email);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.5 自定義 `RedisCacheManager`\\r\\n\\r\\n`RedisConfig.java`：\\r\\n\\r\\n```java\\r\\n@EnableCaching\\r\\n@Configuration\\r\\npublic class RedisConfig {\\r\\n\\r\\n    @Bean\\r\\n    public RedisCacheManager personCache(RedisConnectionFactory connectionFactory) {\\r\\n        return RedisCacheManager.builder(connectionFactory)\\r\\n                .withCacheConfiguration(\\\"personByEmail\\\", personRedisCacheConfig())\\r\\n                .build();\\r\\n    }\\r\\n\\r\\n    @Bean\\r\\n    public RedisCacheConfiguration personRedisCacheConfig() {\\r\\n        return RedisCacheConfiguration.defaultCacheConfig()\\r\\n                .disableCachingNullValues()\\r\\n                .entryTtl(Duration.ofMinutes(10))\\r\\n                .serializeKeysWith(SerializationPair.fromSerializer(RedisSerializer.string()))\\r\\n                .serializeValuesWith(SerializationPair.fromSerializer(RedisSerializer.json()));\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   `@EnableCaching`\\r\\n    -   一定要加上呢個 annotation 先會開啟 caching 功能，否則所有 caching 相關既 annotations 都唔會生效。\\r\\n-   配置 `redisCacheConfiguration`\\r\\n    -   根據 `RedisCacheConfiguration#defaultCacheConfig`，Redis caching 默認既 value serializer 係 `JdkSerializationRedisSerializer`。\\r\\n        -   喺 runtime 既時候，當需要 cache 既 method 被 call 完之際，return value 就要被 cache。\\r\\n        -   `JdkSerializationRedisSerializer` 所配置既 `DefaultSerializer` 係會 check 要 serialize 既對象係咪 `Serializable`。\\r\\n        -   但因為 return type 係 `PersonEntity`、`List<PersonEntity` 或者 `Optional<PersonEntity>`，實際對象 `PersonEntity` 唔係一個 `Serializable`。\\r\\n        -   咁就會導致 exception `DefaultSerializer requires a Serializable payload but received an object of type [code.entity.PersonEntity]`。\\r\\n            -   有 `2` 個方法解決\\r\\n                -   我地可以將 `PersonEntity` 改成 implement `Serializable`。\\r\\n                -   如果我地想將 cache value 儲成 JSON 格式，就要將 value serializer 改成用 Jackson Databind 既 `GenericJackson2JsonRedisSerializer`（相當於 `RedisSerializer.json()`）。\\r\\n    -   `disableCachingNullValues`\\r\\n        -   Return value 係 `null` 既話都會出 exception，除非有 `unless`。\\r\\n    -   `entryTtl`\\r\\n        -   Cache 紀錄既存活時間（time-to-live）。\\r\\n\\r\\n---\\r\\n\\r\\n# 4 測試\\r\\n\\r\\n## 4.1 開啟 MySQL／MariaDB SQL log\\r\\n\\r\\n```sql\\r\\nSET global general_log = 1;\\r\\nSET global log_output = 'table';\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.2 建立 database\\r\\n\\r\\n先用 HeidiSQL（Windows）或者 Sequel Pro（macOS）連接 MySQL 或者 MariaDB。\\r\\n\\r\\n|    Host     |  Port  |\\r\\n| :---------: | :----: |\\r\\n| `127.0.0.1` | `3306` |\\r\\n\\r\\n然後執行 SQL：\\r\\n\\r\\n```sql\\r\\nCREATE DATABASE mydb;\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.3 啟動 Spring Boot web application\\r\\n\\r\\n```bash\\r\\nmvn spring-boot:run\\r\\n```\\r\\n\\r\\n如果 Spring Boot web application 成功啟動，咁我地既 `person` table 都會由個 application 自動創建。\\r\\n\\r\\n---\\r\\n\\r\\n## 4.4 驗證 `@CachePut`\\r\\n\\r\\n`@CachePut` 既 behaviors：\\r\\n\\r\\n-   如果有 cache 紀錄\\r\\n    -   更新 cache 紀錄\\r\\n-   如果冇 cache 紀錄\\r\\n    -   新增 cache 紀錄\\r\\n\\r\\n### 4.4.1 Call POST API\\r\\n\\r\\n喺 Postman 裡面 call：\\r\\n\\r\\n```plaintext\\r\\nPOST localhost:8080/person\\r\\n```\\r\\n\\r\\nRequest body：\\r\\n\\r\\n```json\\r\\n{\\r\\n\\t\\\"email\\\": \\\"michaelboyboy@gmail.com\\\",\\r\\n\\t\\\"name\\\": \\\"mick\\\"\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 4.4.2 確保 MySQL／MariaDB 有新紀錄\\r\\n\\r\\n我地可以用 HeidiSQL（Windows）或者 Sequel Pro（macOS）去睇下裡面有冇新增到紀錄。\\r\\n\\r\\n```sql\\r\\nSELECT * FROM person;\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 4.4.3 確保 Redis 有新紀錄\\r\\n\\r\\n我地可以用 Redis CLI 去檢查 Redis database 裡面有冇新增到紀錄。\\r\\n\\r\\n執行 command：\\r\\n\\r\\n```bash\\r\\nGET personByEmail::michaelboyboy@gmail.com\\r\\n```\\r\\n\\r\\n應該會返回：\\r\\n\\r\\n```plaintext\\r\\n\\\"{\\\\\\\"@class\\\\\\\":\\\\\\\"code.entity.PersonEntity\\\\\\\",\\\\\\\"id\\\\\\\":1,\\\\\\\"email\\\\\\\":\\\\\\\"michaelboyboy@gmail.com\\\\\\\",\\\\\\\"name\\\\\\\":\\\\\\\"mick\\\\\\\"}\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 4.4.4 Call PUT API\\r\\n\\r\\n喺 Postman 裡面 call：\\r\\n\\r\\n```plaintext\\r\\nPUT localhost:8080/person\\r\\n```\\r\\n\\r\\nRequest body：\\r\\n\\r\\n```json\\r\\n{\\r\\n\\t\\\"email\\\": \\\"michaelboyboy@gmail.com\\\",\\r\\n\\t\\\"name\\\": \\\"chung\\\"\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 4.4.5 確保 MySQL／MariaDB 紀錄改變\\r\\n\\r\\n我地可以用 HeidiSQL（Windows）或者 Sequel Pro（macOS）去睇下裡面有冇改變到紀錄。\\r\\n\\r\\n```sql\\r\\nSELECT * FROM person;\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 4.4.6 確保 Redis 紀錄改變\\r\\n\\r\\n我地可以用 Redis CLI 去檢查 Redis database 裡面有冇改變到紀錄。\\r\\n\\r\\n執行 command：\\r\\n\\r\\n```bash\\r\\nGET personByEmail::michaelboyboy@gmail.com\\r\\n```\\r\\n\\r\\n應該會返回：\\r\\n\\r\\n```plaintext\\r\\n\\\"{\\\\\\\"@class\\\\\\\":\\\\\\\"code.entity.PersonEntity\\\\\\\",\\\\\\\"id\\\\\\\":1,\\\\\\\"email\\\\\\\":\\\\\\\"michaelboyboy@gmail.com\\\\\\\",\\\\\\\"name\\\\\\\":\\\\\\\"chung\\\\\\\"}\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.5 驗證 `@Cacheable`\\r\\n\\r\\n`@Cacheable` 既 behaviors：\\r\\n\\r\\n-   如果有 cache 紀錄\\r\\n    -   返回 cache 紀錄\\r\\n-   如果冇 cache 紀錄\\r\\n    -   新增 cache 紀錄，然後返回 cache 紀錄\\r\\n\\r\\n### 4.5.1 清空 Redis 所有紀錄\\r\\n\\r\\n執行 command：\\r\\n\\r\\n```bash\\r\\nFLUSHDB\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 4.5.2 Call GET API（多次）\\r\\n\\r\\n喺 Postman 裡面 call 幾次：\\r\\n\\r\\n```plaintext\\r\\nGET localhost:8080/person/michaelboyboy@gmail.com\\r\\n```\\r\\n\\r\\n應該會返回：\\r\\n\\r\\n```json\\r\\n{\\r\\n\\t\\\"id\\\": 1,\\r\\n\\t\\\"email\\\": \\\"michaelboyboy@gmail.com\\\",\\r\\n\\t\\\"name\\\": \\\"chung\\\"\\r\\n}\\r\\n```\\r\\n\\r\\n註：必須確保每次返回既 JSON object 都係一致。\\r\\n\\r\\n---\\r\\n\\r\\n### 4.5.3 確保 Redis 有新紀錄\\r\\n\\r\\n我地可以用 Redis CLI 去檢查 Redis database 裡面有冇新增到紀錄。\\r\\n\\r\\n執行 command：\\r\\n\\r\\n```bash\\r\\nGET personByEmail::michaelboyboy@gmail.com\\r\\n```\\r\\n\\r\\n應該會返回：\\r\\n\\r\\n```plaintext\\r\\n\\\"{\\\\\\\"@class\\\\\\\":\\\\\\\"code.entity.PersonEntity\\\\\\\",\\\\\\\"id\\\\\\\":1,\\\\\\\"email\\\\\\\":\\\\\\\"michaelboyboy@gmail.com\\\\\\\",\\\\\\\"name\\\\\\\":\\\\\\\"chung\\\\\\\"}\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 4.5.4 檢查 application log\\r\\n\\r\\n我地可以檢查 console 裡面 Spring 既 application log，睇下屬於 Hibernate 既 SQL call log 係咪只有一行：\\r\\n\\r\\n```plaintext\\r\\nHibernate: select personenti0_.id as id1_0_, personenti0_.email as email2_0_, personenti0_.name as name3_0_ from person personenti0_ where personenti0_.email=?\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 4.5.5 檢查 MySQL／MariaDB SQL log\\r\\n\\r\\n我地可以檢查 database 既 SQL log，睇下有冇由 application 執行既相關 SQL。\\r\\n\\r\\n```sql\\r\\nSELECT * FROM mysql.general_log ORDER BY event_time DESC;\\r\\n```\\r\\n\\r\\n因為後續既 API calls 都應該係訪問 Redis cache，所以睇下 `argument` column 呢個 value 係咪只有一行：\\r\\n\\r\\n```sql\\r\\nselect personenti0_.id as id1_0_, personenti0_.first_name as first_na2_0_, personenti0_.status as status3_0_ from person personenti0_ where personenti0_.first_name='mick'\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.6 驗證 `@CacheEvict`\\r\\n\\r\\n`@CacheEvict` 既 behavior：\\r\\n\\r\\n-   如果有 cache 紀錄\\r\\n    -   刪除 cache 紀錄\\r\\n\\r\\n### 4.6.1 Call DELETE API\\r\\n\\r\\n喺 Postman 裡面 call：\\r\\n\\r\\n```plaintext\\r\\nDELETE localhost:8080/person/michaelboyboy@gmail.com\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 4.6.2 確保 MySQL／MariaDB 紀錄消失\\r\\n\\r\\n我地可以用 HeidiSQL（Windows）或者 Sequel Pro（macOS）去睇下裡面有冇刪除到紀錄。\\r\\n\\r\\n```sql\\r\\nSELECT * FROM person;\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 4.6.3 確保 Redis 紀錄消失\\r\\n\\r\\n我地可以用 Redis CLI 去檢查 Redis database 裡面有冇刪除到紀錄。\\r\\n\\r\\n執行 command：\\r\\n\\r\\n```bash\\r\\nGET personByEmail::michaelboyboy@gmail.com\\r\\n```\\r\\n\\r\\n應該會返回：\\r\\n\\r\\n```plaintext\\r\\n(nil)\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 5 筆記\\r\\n\\r\\n## 5.1 Redis CLI 功能\\r\\n\\r\\n首先建立連線：\\r\\n\\r\\n```bash\\r\\nredis-cli -h localhost -p 6379\\r\\n```\\r\\n\\r\\n### 5.1.1 改變 database\\r\\n\\r\\nRedis 有 `16` 個 databases（`0`-based，`0` 至 `15`）。\\r\\n\\r\\n```bash\\r\\nSELECT 10\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 5.1.2 列出所有 keys\\r\\n\\r\\n```bash\\r\\nKEYS *\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 5.1.3 新增 string key-value pair\\r\\n\\r\\n```bash\\r\\nSET key-name my-value\\r\\n```\\r\\n\\r\\n設定一定秒數後自動清除：\\r\\n\\r\\n```bash\\r\\nSET key-name my-value EX 10\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 5.1.4 查詢數據類型\\r\\n\\r\\n```bash\\r\\nTYPE key-name\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 5.1.5 查詢 string 數據\\r\\n\\r\\n```bash\\r\\nGET key-name\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 5.1.6 清空目前 database 所有內容\\r\\n\\r\\n```bash\\r\\nFLUSHDB\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 5.1.7 清空所有 databases 所有內容\\r\\n\\r\\n```bash\\r\\nFLUSHALL\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 6 參考資料\\r\\n\\r\\n-   [Spring Boot Cache 集成 Spring Data Redis 1.x 與 2.x 的差異](https://springboot.io/t/topic/2538)\\r\\n-   [StackOverflow - Spring data redis override default serializer](https://stackoverflow.com/questions/50272157/spring-data-redis-override-default-serializer/52971347#52971347)\\r\\n-   [Redis 命令參考](http://redisdoc.com/string/index.html)\\r\\n-   [Redis 命令參考 - 事務（transaction）](http://redisdoc.com/topic/transaction.html)\\r\\n\";","export default \"# 1 簡介\\r\\n\\r\\n## 1.1 寫 API 既難處\\r\\n\\r\\n好多時候我地寫網頁或者 back-end API 會遇到一個情況，就係需要唔同既資料。而要同時得到唔同既資料，就需要通過某種方式將唔同既資料組合埋一齊，例如 front-end 分別 call 幾個 back-end APIs，然後 front-end 再分別處理唔同 API responses 既資料；或者，front-end call 一個 back-end API，但呢個 API 背後已經會將各種 front-end 需要既資料 consolidate 埋喺一個 response 裡面。\\r\\n\\r\\n舉個例，一個客戶登入帳號之後、到達 front-end 既首頁（網頁或 mobile app）之前，front-end 可能需要 call back-end 一次或者多次去拎一大堆初始化用既資料，呢啲資料可以黎自唔同既 database tables，資料包括有用戶基本資料、帳號狀態及權限、通知，以及 front-end 既首頁需要顯示既各種資訊（產品、推廣資訊）。不過呢啲用戶資料以及首頁需要顯示既各種資訊都有可能喺其他頁面由 front-end 單獨咁向 back-end 查詢出黎。\\r\\n\\r\\n如果要用單一個 API call 就攞到曬需要既資料，咁呢度就有一個通用性既問題，雖然 service layer 都仲可以做到通用，但 controller layer 就變左會有啲 APIs 係針對特定場景去將唔同既 services 既資料 consolidate 埋一齊。因為唔同情況下有可能需要將唔同既資料 consolidate 埋一齊成為一個針對固定場景既 HTTP response，我地需要喺 back-end 寫多個 API 去應付唔同場景，亦需要寫大量 response classes 去裝住呢啲不同場合用既 consolidated 既資料。\\r\\n\\r\\n另外，有啲 HTTP response 既做法係用返本身 entity class 做 response class，而裡面因為有 `@OneToOne`、`@OneToMany` 等 annotations 既 relationship fields，serializer 會令到 JPA／Hibernate 幫我地 fetch 埋出黎。但如果考慮到 lazy／eager fetching、用錯既時候有可能出現既 circular reference loop、修改 nested objects 既時候 trigger update、cascade delete 等等既情況，JPA／Hibernate 既 `@OneToOne`、`@OneToMany` 呢啲 annotations 可以好危險。而 JPA／Hibernate 既 entity graph 功能更加係令到成件事更加複雜。如果唔想用 nested objects，就只能夠寫 response wrapper class 將 parent 同 children objects 寫成平排既 fields，但咁做就變相要寫多啲 response wrapper classes。\\r\\n\\r\\n當然 front-end 可以 async 咁 call 好多次 back-end，然後 front-end 自己分別處理唔同 API responses 既資料，但寫起上黎可能會幾麻煩，同埋每個 API call 都需要 back-end 去 validate session 係咪存在、用戶帳號既狀態係咪正常等等。\\r\\n\\r\\n再者，好多時候我地會想個 response 裡面只包含部分特定既 fields，避免冇必要既 fields 增加左 network usage，我地通常既做法係複製啲現有既 class 然後自己客製化，撇除啲冇必要既 fields。\\r\\n\\r\\n---\\r\\n\\r\\n## 1.2 GraphQL API 既好處\\r\\n\\r\\n因此，就有左 GraphQL 既出現。關於 GraphQL：\\r\\n\\r\\n-   只係暴露 `1` 個 GraphQL API。\\r\\n-   畀我地將多個 GraphQL `query`／`mutation` 操作 consolidate 埋做 `1` 個 GraphQL API call。\\r\\n    -   例子\\r\\n        -   一個 GraphQL API 可以同時要求得到 `getOrder` GraphQL query 以及 `getOrderDetails` GraphQL query 既資料。\\r\\n-   准許 call GraphQL API 既時候要求 response 裡面只係包含部分特定既 fields。\\r\\n    -   GraphQL schema、Java response class 可以重用，唔需要複製再客製化。\\r\\n-   可以建立 `subscription`\\r\\n    -   GraphQL server（back-end）可以透過 WebSocket 傳送資料畀 GraphQL client（另一個系統或者 front-end）。\\r\\n\\r\\n---\\r\\n\\r\\n## 1.3 GraphQL 注意事項\\r\\n\\r\\n-   GraphQL schema\\r\\n    -   要暴露 GraphQL API，我地需要先定義 GraphQL schema。\\r\\n-   GraphQL 語法\\r\\n    -   GraphQL 有佢自己既一套語法／格式。\\r\\n-   `type Query`\\r\\n    -   指查詢用既 APIs\\r\\n    -   必須提供\\r\\n-   `type Mutation`\\r\\n    -   指會修改系統既 APIs\\r\\n-   `type Subscription`\\r\\n    -   指 GraphQL server 推送資料畀 GraphQL client 既 APIs\\r\\n-   `input` 係 `(...)` parameter types 既叫法\\r\\n-   `type` 係 response type\\r\\n-   GraphQL 基本 data types\\r\\n    -   `String`\\r\\n        -   要用 `\\\"xxx\\\"` 而唔係 `'xxx'`。\\r\\n    -   `Int`\\r\\n        -   32-bit\\r\\n    -   `Float`\\r\\n    -   `Boolean`\\r\\n    -   `ID`\\r\\n        -   格式跟 `String`\\r\\n-   `!` 係必須提供既 field，要寫喺個 type 既後面\\r\\n-   `[xxx]` 係 array\\r\\n-   可以唔寫 `,`\\r\\n    -   只需要用 space 或者 newline 分隔。\\r\\n-   `$` 開頭既係 variable。\\r\\n    -   Variables 可以喺 `query` 或者 `mutation` 後面既 `()` 裡面 declare。\\r\\n    -   正因為 GraphQL 有佢自己既一套格式，寫起上黎可能會有啲麻煩，所以就有 variable section，畀我地將 variables 分隔開。\\r\\n    -   Variable section 係正常既 JSON 格式。\\r\\n-   Response 係 JSON 格式\\r\\n    -   所有操作所返回既資料由一個叫 `data` 既 field 包住。\\r\\n\\r\\nGraphQL API 既格式：\\r\\n\\r\\n```plaintext\\r\\nmethodName(requestField1: InputType1 requestField2: InputType2 ...): ResponseType\\r\\n```\\r\\n\\r\\n註：必須對應返 Java 既 GraphQL API method 名、request classes 以及 response classes。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 動手寫\\r\\n\\r\\nProject structure：\\r\\n\\r\\n-   `src/main/java`\\r\\n    -   `/code`\\r\\n        -   `/entity`\\r\\n            -   `Order.java`\\r\\n            -   `OrderDetail.java`\\r\\n        -   `/graphql`\\r\\n            -   `OrderMutation.java`\\r\\n            -   `OrderQuery.java`\\r\\n            -   `OrderSubscription.java`\\r\\n        -   `/repo`\\r\\n            -   `OrderDetailRepo.java`\\r\\n            -   `OrderRepo.java`\\r\\n        -   `/service`\\r\\n            -   `OrderService.java`\\r\\n        -   `MainApplication.java`\\r\\n-   `src/main/resources`\\r\\n    -   `/graphql`\\r\\n        -   `schema.graphqls`\\r\\n    -   `application.yml`\\r\\n\\r\\n## 2.1 Maven dependencies\\r\\n\\r\\n-   GraphQL Spring Boot Starter 會幫我地暴露一個 `/graphql` 既 POST API。\\r\\n-   如果用左 Spring Boot Starter Webflux，GraphQL Spring Boot Starter 會幫我地暴露一個 `/subscriptions` 既 WebSocket API。\\r\\n-   GraphiQL Spring Boot Starter 會幫我地暴露一個測試頁面既網址——`/graphiql` endpoint。\\r\\n-   用 MySQL／MariaDB 作為 database。\\r\\n\\r\\n```xml\\r\\n<parent>\\r\\n    <groupId>org.springframework.boot</groupId>\\r\\n    <artifactId>spring-boot-starter-parent</artifactId>\\r\\n    <version>2.6.1</version>\\r\\n</parent>\\r\\n\\r\\n<dependencies>\\r\\n    <dependency>\\r\\n        <groupId>org.projectlombok</groupId>\\r\\n        <artifactId>lombok</artifactId>\\r\\n    </dependency>\\r\\n\\r\\n    <dependency>\\r\\n        <groupId>org.springframework.boot</groupId>\\r\\n        <artifactId>spring-boot-starter-web</artifactId>\\r\\n    </dependency>\\r\\n\\r\\n    <dependency>\\r\\n        <groupId>org.springframework.boot</groupId>\\r\\n        <artifactId>spring-boot-starter-webflux</artifactId>\\r\\n    </dependency>\\r\\n\\r\\n    <dependency>\\r\\n        <groupId>org.springframework.boot</groupId>\\r\\n        <artifactId>spring-boot-starter-websocket</artifactId>\\r\\n    </dependency>\\r\\n\\r\\n    <dependency>\\r\\n        <groupId>org.springframework.boot</groupId>\\r\\n        <artifactId>spring-boot-starter-actuator</artifactId>\\r\\n    </dependency>\\r\\n\\r\\n    <dependency>\\r\\n        <groupId>org.springframework.boot</groupId>\\r\\n        <artifactId>spring-boot-devtools</artifactId>\\r\\n    </dependency>\\r\\n\\r\\n    <dependency>\\r\\n        <groupId>org.springframework.boot</groupId>\\r\\n        <artifactId>spring-boot-starter-data-jpa</artifactId>\\r\\n    </dependency>\\r\\n\\r\\n    <dependency>\\r\\n        <groupId>mysql</groupId>\\r\\n        <artifactId>mysql-connector-java</artifactId>\\r\\n    </dependency>\\r\\n\\r\\n    <dependency>\\r\\n        <groupId>com.graphql-java-kickstart</groupId>\\r\\n        <artifactId>graphql-spring-boot-starter</artifactId>\\r\\n        <version>12.0.0</version>\\r\\n    </dependency>\\r\\n\\r\\n    <dependency>\\r\\n        <groupId>com.graphql-java-kickstart</groupId>\\r\\n        <artifactId>graphiql-spring-boot-starter</artifactId>\\r\\n        <version>11.1.0</version>\\r\\n    </dependency>\\r\\n</dependencies>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 Application 配置\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\nspring:\\r\\n  jpa:\\r\\n    show-sql: true\\r\\n    open-in-view: false\\r\\n    hibernate:\\r\\n      ddl-auto: update\\r\\n    properties:\\r\\n      hibernate:\\r\\n        dialect: org.hibernate.dialect.MySQL57InnoDBDialect\\r\\n  datasource:\\r\\n    url: jdbc:mysql://localhost:3306/mydb?useSSL=false\\r\\n    username: root\\r\\n    password:\\r\\n    driver-class-name: com.mysql.cj.jdbc.Driver\\r\\nmanagement:\\r\\n  endpoints:\\r\\n    web:\\r\\n      exposure:\\r\\n        include: \\\"*\\\"\\r\\n\\r\\ngraphql:\\r\\n  servlet:\\r\\n    actuator-metrics: true\\r\\n    cors:\\r\\n      allowedOrigins: \\\"*\\\"\\r\\ngraphiql:\\r\\n  enabled: true\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 寫 Java code\\r\\n\\r\\n### 2.3.1 Entity\\r\\n\\r\\n`Order.java`：\\r\\n\\r\\n```java\\r\\n@Data\\r\\n@Accessors(chain = true)\\r\\n@FieldDefaults(level = PRIVATE)\\r\\n@Entity\\r\\n@Table(name = \\\"tbl_order\\\")\\r\\npublic class Order {\\r\\n    @Id\\r\\n    @GeneratedValue(strategy = IDENTITY)\\r\\n    Long id;\\r\\n\\r\\n    BigDecimal totalPrice;\\r\\n}\\r\\n```\\r\\n\\r\\n`OrderDetail.java`：\\r\\n\\r\\n```java\\r\\n@Data\\r\\n@Accessors(chain = true)\\r\\n@FieldDefaults(level = PRIVATE)\\r\\n@Entity\\r\\n@Table(name = \\\"tbl_order_detail\\\")\\r\\npublic class OrderDetail {\\r\\n    @Id\\r\\n    @GeneratedValue(strategy = IDENTITY)\\r\\n    Long id;\\r\\n\\r\\n    Long orderId;\\r\\n    Long productId;\\r\\n    BigDecimal salePrice;\\r\\n    Integer quantity;\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 2.3.2 Repository\\r\\n\\r\\n`OrderRepo.java`：\\r\\n\\r\\n```java\\r\\n@Repository\\r\\npublic interface OrderRepo extends JpaRepository<Order, Long> {\\r\\n\\r\\n}\\r\\n```\\r\\n\\r\\n`OrderDetailRepo.java`：\\r\\n\\r\\n```java\\r\\n@Repository\\r\\npublic interface OrderDetailRepo extends JpaRepository<OrderDetail, Long> {\\r\\n\\r\\n    List<OrderDetail> findAllByOrderId(Long orderId);\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 2.3.3 Service\\r\\n\\r\\n`OrderService.java`：\\r\\n\\r\\n```java\\r\\nimport org.springframework.transaction.annotation.Transactional;\\r\\n\\r\\n@Service\\r\\n@Transactional(rollbackFor = Throwable.class)\\r\\npublic class OrderService {\\r\\n\\r\\n    @Autowired OrderRepo orderRepo;\\r\\n    @Autowired OrderDetailRepo orderDetailRepo;\\r\\n\\r\\n    public Order getOrder(Long orderId) {\\r\\n        return orderRepo.findById(orderId)\\r\\n                        .orElseThrow(() -> new RuntimeException(\\\"Order ID [\\\" + orderId + \\\"] does not exist!\\\" ));\\r\\n    }\\r\\n\\r\\n    public List<OrderDetail> getOrderDetails(Long orderId) {\\r\\n        return orderDetailRepo.findAllByOrderId(orderId);\\r\\n    }\\r\\n\\r\\n    public OrderResponse placeOrder(OrderRequest orderRequest) {\\r\\n\\r\\n        final Order order = orderRepo.save(toOrderEntity(orderRequest));\\r\\n        final List<OrderDetail> orderDetails = orderDetailRepo.saveAll(toOrderDetailEntities(orderRequest, order.getId()));\\r\\n\\r\\n        return new OrderResponse().setOrder(order).setOrderDetails(orderDetails);\\r\\n    }\\r\\n\\r\\n    private Order toOrderEntity(OrderRequest orderRequest) {\\r\\n        return new Order()\\r\\n                .setTotalPrice(orderRequest.getOrderDetails().stream()\\r\\n                                .map(e -> e.getSalePrice()\\r\\n                                           .multiply(new BigDecimal(String.valueOf(e.getQuantity()))))\\r\\n                                .reduce(BigDecimal.ZERO, BigDecimal::add));\\r\\n    }\\r\\n\\r\\n    private List<OrderDetail> toOrderDetailEntities(OrderRequest orderRequest, Long orderId) {\\r\\n        return orderRequest.getOrderDetails()\\r\\n                .stream()\\r\\n                .map(e -> new OrderDetail()\\r\\n                                .setOrderId(orderId)\\r\\n                                .setProductId(e.getProductId())\\r\\n                                .setSalePrice(e.getSalePrice())\\r\\n                                .setQuantity(e.getQuantity()))\\r\\n                .collect(toList());\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 2.3.4 GraphQL API\\r\\n\\r\\n`OrderMutation.java`：\\r\\n\\r\\n```java\\r\\n@Component\\r\\npublic class OrderMutation implements GraphQLMutationResolver {\\r\\n\\r\\n    @Autowired OrderService orderService;\\r\\n    @Autowired Sinks.Many<OrderResponse> sink;\\r\\n\\r\\n    public OrderResponse placeOrder(OrderRequest orderRequest) {\\r\\n\\r\\n        final OrderResponse response = orderService.placeOrder(orderRequest);\\r\\n        sink.tryEmitNext(response);\\r\\n\\r\\n        return response;\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n`OrderQuery.java`：\\r\\n\\r\\n```java\\r\\n@Component\\r\\npublic class OrderQuery implements GraphQLQueryResolver {\\r\\n\\r\\n    @Autowired OrderService orderService;\\r\\n\\r\\n    public Order getOrder(Long orderId) {\\r\\n        return orderService.getOrder(orderId);\\r\\n    }\\r\\n\\r\\n    public List<OrderDetail> getOrderDetails(Long orderId) {\\r\\n        return orderService.getOrderDetails(orderId);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n`OrderSubscription.java`：\\r\\n\\r\\n```java\\r\\n@Component\\r\\npublic class OrderSubscription implements GraphQLSubscriptionResolver {\\r\\n\\r\\n    @Autowired Sinks.Many<OrderResponse> orderSink;\\r\\n\\r\\n    public Publisher<OrderResponse> checkNewOrders() {\\r\\n        return orderSink.asFlux();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.4 GraphQL schema\\r\\n\\r\\n`schema.graphqls`：\\r\\n\\r\\n```plaintext\\r\\ntype Query {\\r\\n    getOrder(orderId: Int!): Order\\r\\n    getOrderDetails(orderId: Int!): [OrderDetail]\\r\\n}\\r\\n\\r\\ntype Mutation {\\r\\n    placeOrder(orderRequest: OrderRequest!): OrderResponse\\r\\n}\\r\\n\\r\\ntype Subscription {\\r\\n    checkNewOrders: OrderResponse\\r\\n}\\r\\n\\r\\ninput OrderRequest {\\r\\n    orderDetails: [OrderDetailRequest]!\\r\\n}\\r\\n\\r\\ninput OrderDetailRequest {\\r\\n    productId: Int!\\r\\n    salePrice: Float!\\r\\n    quantity: Int!\\r\\n}\\r\\n\\r\\ntype OrderResponse {\\r\\n    order: Order\\r\\n    orderDetails: [OrderDetail]\\r\\n}\\r\\n\\r\\ntype Order {\\r\\n    id: Int\\r\\n    totalPrice: Float\\r\\n}\\r\\n\\r\\ntype OrderDetail {\\r\\n    id: Int\\r\\n    orderId: Int\\r\\n    productId: Int\\r\\n    salePrice: Float\\r\\n    quantity: Int\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 3 測試\\r\\n\\r\\n## 3.1 建立 database\\r\\n\\r\\n先用 HeidiSQL（Windows）或者 Sequel Pro（macOS）連接 MySQL 或者 MariaDB。\\r\\n\\r\\n|    Host     |  Port  |\\r\\n| :---------: | :----: |\\r\\n| `127.0.0.1` | `3306` |\\r\\n\\r\\n然後執行 SQL：\\r\\n\\r\\n```sql\\r\\nCREATE DATABASE mydb;\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 啟動 Spring Boot web application\\r\\n\\r\\n```bash\\r\\nmvn spring-boot:run\\r\\n```\\r\\n\\r\\n如果 Spring Boot web application 成功啟動，咁我地既 `tbl_order`、`tbl_order_detail` tables 都會由個 application 自動創建。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.3 訪問 GraphiQL 測試網頁\\r\\n\\r\\nGraphiQL 可以模擬一個 GraphQL client 去 call 我地 back-end GraphQL APIs。又或者用 Postman 都可以。其實背後都係一個 POST API call。\\r\\n\\r\\n先打開 [http://localhost:8080/graphiql](http://localhost:8080/graphiql)。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.4 用 GraphiQL call `placeOrder` API\\r\\n\\r\\n```plaintext\\r\\nmutation {\\r\\n  order1: placeOrder(orderRequest: {\\r\\n    orderDetails: [\\r\\n      { productId: 1 salePrice: 123.5 quantity: 5 }\\r\\n      { productId: 2 salePrice: 222.8 quantity: 1 }\\r\\n    ]\\r\\n  }) {\\r\\n    order { id totalPrice }\\r\\n    orderDetails { id orderId productId salePrice quantity }\\r\\n  }\\r\\n\\r\\n  order2: placeOrder(orderRequest: {\\r\\n    orderDetails: [\\r\\n      { productId: 2 salePrice: 222.8 quantity: 7 }\\r\\n      { productId: 3 salePrice: 345.6 quantity: 3 }\\r\\n    ]\\r\\n  }) {\\r\\n    order { id totalPrice }\\r\\n    orderDetails { id orderId productId salePrice quantity }\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   `order1`、`order2`\\r\\n    -   我地將 `2` 個 `placeOrder` 既 GraphQL `mutation` 操作 consolidate 埋做 `1` 個 GraphQL API call。\\r\\n    -   Response 裡面會用呢 `2` 個名黎對應返 response objects。\\r\\n\\r\\n![](blog/2021-09/spring-graphql-api/graphiql-placeOrder.png)\\r\\n\\r\\n### 3.4.1 用 Postman call `placeOrder` API\\r\\n\\r\\n喺 Postman 裡面 call：\\r\\n\\r\\n```plaintext\\r\\nPOST localhost:8080/graphql\\r\\n```\\r\\n\\r\\nGraphQL query body 照用返 GraphiQL 果個完全一樣就得。\\r\\n\\r\\n![](blog/2021-09/spring-graphql-api/postman-placeOrder.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 3.5 用 GraphiQL call `getOrder`、`getOrderDetails` API\\r\\n\\r\\n```plaintext\\r\\nquery ($orderId : Int!) {\\r\\n  order: getOrder(orderId: $orderId) {\\r\\n    id\\r\\n    totalPrice\\r\\n  }\\r\\n\\r\\n  orderDetails: getOrderDetails(orderId: $orderId) {\\r\\n    id\\r\\n    orderId\\r\\n    productId\\r\\n    salePrice\\r\\n    quantity\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\nVariable section（JSON 格式）：\\r\\n\\r\\n```json\\r\\n{\\r\\n\\t\\\"orderId\\\": 1\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   `order`、`orderDetails`\\r\\n    -   我地將 `getOrder` 以及 `getOrderDetails` 既 `2` 個 GraphQL `query` 操作 consolidate 埋做 `1` 個 GraphQL API call。\\r\\n    -   Response 裡面會用呢 `2` 個名黎對應返 response objects。\\r\\n-   `$orderId`\\r\\n    -   呢度我地用左 `1` 個 variable。\\r\\n\\r\\n![](blog/2021-09/spring-graphql-api/graphiql-getOrder-getOrderDetails.png)\\r\\n\\r\\n### 3.5.1 用 Postman call `getOrder`、`getOrderDetails` API\\r\\n\\r\\n喺 Postman 裡面 call：\\r\\n\\r\\n```plaintext\\r\\nPOST localhost:8080/graphql\\r\\n```\\r\\n\\r\\nGraphQL query body 照用返 GraphiQL 果個完全一樣就得。\\r\\n\\r\\n![](blog/2021-09/spring-graphql-api/postman-getOrder-getOrderDetails.png)\\r\\n\\r\\n---\\r\\n\\r\\n## 3.6 用 GraphiQL call `checkNewOrders` API\\r\\n\\r\\n```plaintext\\r\\nsubscription {\\r\\n  checkNewOrders {\\r\\n    order {\\r\\n      id\\r\\n      totalPrice\\r\\n    }\\r\\n\\r\\n    orderDetails {\\r\\n      id\\r\\n      orderId\\r\\n      productId\\r\\n      salePrice\\r\\n      quantity\\r\\n    }\\r\\n  }\\r\\n}\\r\\n```\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   `checkNewOrders`\\r\\n    -   我地訂閱緊 `checkNewOrders`，如果 WebSocket server 有新 message send 出黎，我地個 WebSocket client 就會收到。\\r\\n\\r\\n![](blog/2021-09/spring-graphql-api/graphiql-checkNewOrders-init.png)\\r\\n\\r\\n![](blog/2021-09/spring-graphql-api/graphiql-checkNewOrders-received.png)\\r\\n\\r\\n---\\r\\n\\r\\n# 4 Front-end call GraphQL API\\r\\n\\r\\n我地試左用 GraphiQL 同 Postman call GraphQL API，但 front-end 要點樣 call？雖然已經有啲現成既 NPM libraries 可以做到 GraphQL client，但其實要自己用 JavaScript 做既話都好簡單。\\r\\n\\r\\n## 4.1 用 Fetch API call `placeOrder` API\\r\\n\\r\\n非 dynamic 寫法：\\r\\n\\r\\n```js\\r\\nfetch(\\\"http://localhost:8080/graphql\\\", {\\r\\n\\tmethod: \\\"POST\\\",\\r\\n\\tbody: JSON.stringify({\\r\\n\\t\\tquery: `\\r\\n            mutation {\\r\\n                order1: placeOrder(orderRequest: {\\r\\n                    orderDetails: [\\r\\n                        { productId: 1 salePrice: 123.5 quantity: 5 }\\r\\n                        { productId: 2 salePrice: 222.8 quantity: 1 }\\r\\n                    ]\\r\\n                }) {\\r\\n                    order { id totalPrice }\\r\\n                    orderDetails { id orderId productId salePrice quantity }\\r\\n                }\\r\\n\\r\\n                order2: placeOrder(orderRequest: {\\r\\n                    orderDetails: [\\r\\n                        { productId: 2 salePrice: 222.8 quantity: 7 }\\r\\n                        { productId: 3 salePrice: 345.6 quantity: 3 }\\r\\n                    ]\\r\\n                }) {\\r\\n                    order { id totalPrice }\\r\\n                    orderDetails { id orderId productId salePrice quantity }\\r\\n                }\\r\\n            }\\r\\n        `,\\r\\n\\t}),\\r\\n})\\r\\n\\t.then((e) => e.json())\\r\\n\\t.then((res) => console.log(res?.data));\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.2 用 Fetch API call `getOrder`、`getOrderDetails` API\\r\\n\\r\\n```js\\r\\nfetch(\\\"http://localhost:8080/graphql\\\", {\\r\\n\\tmethod: \\\"POST\\\",\\r\\n\\tbody: JSON.stringify({\\r\\n\\t\\tquery: `\\r\\n            query ($orderId : Int!) {\\r\\n                order: getOrder(orderId: $orderId) {\\r\\n                    id\\r\\n                    totalPrice\\r\\n                }\\r\\n\\r\\n                orderDetail: getOrderDetails(orderId: $orderId) {\\r\\n                    id\\r\\n                    orderId\\r\\n                    productId\\r\\n                    salePrice\\r\\n                    quantity\\r\\n                }\\r\\n            }\\r\\n        `,\\r\\n\\t\\tvariables: {\\r\\n\\t\\t\\torderId: 1,\\r\\n\\t\\t},\\r\\n\\t}),\\r\\n})\\r\\n\\t.then((e) => e.json())\\r\\n\\t.then((res) => console.log(res?.data));\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.3 用 WebSocket API call `checkNewOrders` API\\r\\n\\r\\n```js\\r\\nconst ws = new WebSocket(\\\"ws://localhost:8080/subscriptions\\\", \\\"graphql-ws\\\");\\r\\nws.onmessage = (e) => {\\r\\n\\tconsole.log(`%c${e.data}`, \\\"color: cyan\\\");\\r\\n\\r\\n\\tif (JSON.parse(e.data).type === \\\"connection_ack\\\") {\\r\\n\\t\\tconsole.log(\\\"%cReceived type=connection_ack, subscribing to checkNewOrders...\\\", \\\"color: yellow\\\");\\r\\n\\r\\n\\t\\tws.send(\\r\\n\\t\\t\\tJSON.stringify({\\r\\n\\t\\t\\t\\tid: 1,\\r\\n\\t\\t\\t\\ttype: \\\"start\\\",\\r\\n\\t\\t\\t\\tpayload: {\\r\\n\\t\\t\\t\\t\\tquery: \\\"subscription { checkNewOrders { order { id totalPrice } orderDetails { id orderId productId salePrice quantity } } }\\\",\\r\\n\\t\\t\\t\\t\\tvariables: null,\\r\\n\\t\\t\\t\\t},\\r\\n\\t\\t\\t})\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tconsole.log(\\\"%cSent subscription message to server.\\\", \\\"color: yellow\\\");\\r\\n\\t}\\r\\n};\\r\\nws.onopen = (e) => {\\r\\n\\tconsole.log(\\\"%cWebSocket connection to GraphQL subscriptions is open.\\\", \\\"color: yellow\\\");\\r\\n\\r\\n\\tws.send(\\r\\n\\t\\tJSON.stringify({\\r\\n\\t\\t\\ttype: \\\"connection_init\\\",\\r\\n\\t\\t\\tpayload: {},\\r\\n\\t\\t})\\r\\n\\t);\\r\\n\\r\\n\\tconsole.log(\\\"%cSent connection_init message to server.\\\", \\\"color: yellow\\\");\\r\\n};\\r\\n```\\r\\n\\r\\n![](blog/2021-09/spring-graphql-api/chrome-checkNewOrders-received.png)\\r\\n\\r\\n---\\r\\n\\r\\n# 5 參考資料\\r\\n\\r\\n-   [GraphQL 官網 - Spec](https://spec.graphql.org/)\\r\\n-   [GraphQL Java GitHub - `Scarlars.java`](https://github.com/graphql-java/graphql-java/blob/master/src/main/java/graphql/Scalars.java)\\r\\n-   [GraphQL and GraphiQL Spring Framework Boot Starters GitHub](https://github.com/graphql-java-kickstart/graphql-spring-boot)\\r\\n\";","export default \"# 1 ELK 簡介\\r\\n\\r\\nELK stack（Elasticsearch、Logstash、Kibana）係 Elastic 公司既 open-source log 管理工具，可以幫我地有效咁搵 log，當我地需要 debug 或者 troubleshoot 一啲 application 問題既時候就會非常有用。\\r\\n\\r\\n|     工具      | 作用                                                                                                                                                                       |\\r\\n| :-----------: | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n|   Logstash    | 收集唔同來源既 log 資料，再通過 API 將資料傳送到唔同既目的地（Elasticsearch）。                                                                                            |\\r\\n| Elasticsearch | 儲存 log 資料，再自動做 indexing，所以有強大既資料搜尋功能（快如 Google search）。佢提供左儲存資料、管理資料、搜尋資料既 API。                                             |\\r\\n|    Kibana     | 提供網頁，畀我地用唔同既搜尋條件（時間段、keyword、metadata）搜尋 log，亦可以用圖表視覺化搜尋結果。佢通過 API 取得 log 資料（Elasticsearch），然後喺網頁上面顯示結果出黎。 |\\r\\n\\r\\n所以一個 log 既 flow 會係由 application 去 Logstash 再去 Elasticsearch 再去 Kibana，最終喺一個網頁上面顯示出黎。\\r\\n\\r\\n## 1.1 ELK 版本\\r\\n\\r\\nKibana `6.x` 同 `7.x` 既介面相差好遠，尤其係最新既 `7.1x` 相比起 `6.x` 加入左好多新版面，所以如果只係想簡簡單單咁搵下 log，用返 `6.x` 就夠。\\r\\n\\r\\n另外，`6.x` 版本既程式 binaries 大小接近係 `7.1x` 既一半（以 ZIP 檔計，非 Docker image）。\\r\\n\\r\\nELK 版本：\\r\\n\\r\\n-   `6.8.20`（我地會用呢個版本）\\r\\n-   `7.14.2`\\r\\n\\r\\n---\\r\\n\\r\\n# 2 動手寫\\r\\n\\r\\n我地會用到 Spring Boot、Lombok、Slf4j 以及 Logback。\\r\\n\\r\\n## 2.1 Maven dependencies\\r\\n\\r\\n我地會用到 Lombok 既 `@Slf4j` annotation 去 generate construct logger object 既 code。\\r\\n\\r\\n```xml\\r\\n<parent>\\r\\n    <groupId>org.springframework.boot</groupId>\\r\\n    <artifactId>spring-boot-starter-parent</artifactId>\\r\\n    <version>2.6.1</version>\\r\\n</parent>\\r\\n\\r\\n<dependencies>\\r\\n\\r\\n    <dependency>\\r\\n        <groupId>org.projectlombok</groupId>\\r\\n        <artifactId>lombok</artifactId>\\r\\n    </dependency>\\r\\n\\r\\n    <dependency>\\r\\n        <groupId>org.springframework.boot</groupId>\\r\\n        <artifactId>spring-boot-starter-web</artifactId>\\r\\n    </dependency>\\r\\n\\r\\n    <dependency>\\r\\n        <groupId>net.logstash.logback</groupId>\\r\\n        <artifactId>logstash-logback-encoder</artifactId>\\r\\n        <version>7.0.1</version>\\r\\n    </dependency>\\r\\n\\r\\n</dependencies>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 Application 配置\\r\\n\\r\\n我地可以有 `2` 個 Spring Boot profiles：\\r\\n\\r\\n`application.yml`（default profile，默認會用呢個）：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\nlogging:\\r\\n  config: classpath:logback/logback-prod.xml\\r\\n```\\r\\n\\r\\n`application-dev.yml`（`dev` profile，指定先會用呢個）：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\nlogging:\\r\\n  config: classpath:logback/logback-dev.xml\\r\\n```\\r\\n\\r\\n註：如果要指定用 `dev` profile，啟動個 application 果陣要用 VM argument `-Dspring.profiles.active=dev`。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 Logback 配置\\r\\n\\r\\n喺我地既 Maven project 度建立 `2` 個配置檔：\\r\\n\\r\\n-   `src/main/resources/`\\r\\n    -   `logback/`\\r\\n        -   `logback-dev.xml`\\r\\n        -   `logback-prod.xml`\\r\\n\\r\\n`logback-dev.xml`（console + file）：\\r\\n\\r\\n```xml\\r\\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\r\\n<configuration>\\r\\n\\t<appender name=\\\"console\\\" class=\\\"ch.qos.logback.core.ConsoleAppender\\\">\\r\\n\\t\\t<encoder>\\r\\n\\t\\t\\t<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} (%file:%line\\\\) - %msg%n</pattern>\\r\\n\\t\\t\\t<charset>UTF-8</charset>\\r\\n\\t\\t</encoder>\\r\\n\\t</appender>\\r\\n\\r\\n\\t<appender name=\\\"file\\\" class=\\\"ch.qos.logback.core.rolling.RollingFileAppender\\\">\\r\\n\\t\\t<encoder class=\\\"net.logstash.logback.encoder.LogstashEncoder\\\" />\\r\\n\\r\\n\\t\\t<file>logs/app.log</file>\\r\\n\\r\\n\\t\\t<rollingPolicy class=\\\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\\\">\\r\\n\\t\\t\\t<fileNamePattern>logs/archived/app.log.%d{yyyy-MM-dd}</fileNamePattern>\\r\\n\\t\\t\\t<maxHistory>30</maxHistory>\\r\\n\\t\\t</rollingPolicy>\\r\\n\\t</appender>\\r\\n\\r\\n\\t<root level=\\\"INFO\\\">\\r\\n\\t\\t<appender-ref ref=\\\"console\\\" />\\r\\n\\t\\t<appender-ref ref=\\\"file\\\" />\\r\\n\\t</root>\\r\\n</configuration>\\r\\n```\\r\\n\\r\\n`logback-prod.xml`（console + TCP socket）：\\r\\n\\r\\n```xml\\r\\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\r\\n<configuration>\\r\\n\\t<appender name=\\\"console\\\" class=\\\"ch.qos.logback.core.ConsoleAppender\\\">\\r\\n\\t\\t<encoder>\\r\\n\\t\\t\\t<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} (%file:%line\\\\) - %msg%n</pattern>\\r\\n\\t\\t\\t<charset>UTF-8</charset>\\r\\n\\t\\t</encoder>\\r\\n\\t</appender>\\r\\n\\r\\n\\t<appender name=\\\"stash\\\" class=\\\"net.logstash.logback.appender.LogstashTcpSocketAppender\\\">\\r\\n\\t\\t<encoder class=\\\"net.logstash.logback.encoder.LogstashEncoder\\\" />\\r\\n\\r\\n\\t\\t<destination>127.0.0.1:5000</destination>\\r\\n\\t\\t<keepAliveDuration>5 minutes</keepAliveDuration>\\r\\n\\t\\t<reconnectionDelay>10 second</reconnectionDelay>\\r\\n\\t</appender>\\r\\n\\r\\n\\t<root level=\\\"INFO\\\">\\r\\n\\t\\t<appender-ref ref=\\\"console\\\" />\\r\\n\\t\\t<appender-ref ref=\\\"stash\\\" />\\r\\n\\t</root>\\r\\n</configuration>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.4 寫 Java code\\r\\n\\r\\nProject structure：\\r\\n\\r\\n-   `src/main/java/`\\r\\n    -   `/code`\\r\\n        -   `LogGenerator.java`\\r\\n        -   `MainApplication.java`\\r\\n\\r\\n### 2.4.1 定時生成 log 既 component\\r\\n\\r\\n`LogGenerator.java`：\\r\\n\\r\\n```java\\r\\n@Slf4j\\r\\n@EnableScheduling\\r\\n@Component\\r\\npublic class LogGenerator {\\r\\n\\r\\n    @Scheduled(cron = \\\"* * * * * *\\\")\\r\\n    public void generateLog() {\\r\\n        log.info(\\\"Michael says {}\\\", System.currentTimeMillis());\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 3 部署 ELK\\r\\n\\r\\n我地會用 Docker Compose 黎建立一個 Docker network 以及 ELK 既 containers，呢啲 containers 會連接到同一個 Docker network。\\r\\n\\r\\n我地需要一個 working directory：\\r\\n\\r\\n-   `elk-test`\\r\\n    -   `elk-data`\\r\\n        -   `elasticsearch`（可以忽略，由 Docker 生成）\\r\\n            -   `data`（可以忽略，由 Docker 生成）\\r\\n        -   `logstash`\\r\\n            -   `pipeline`\\r\\n                -   `logstash.conf`\\r\\n    -   `docker-compose.yml`\\r\\n\\r\\n## 3.1 Logstash pipeline 配置\\r\\n\\r\\n`elk-test/elk-data/logstash/pipeline/logstash.conf`：\\r\\n\\r\\n```plaintext\\r\\ninput {\\r\\n    tcp {\\r\\n        port => \\\"5000\\\"\\r\\n        codec => json_lines\\r\\n    }\\r\\n}\\r\\n\\r\\noutput {\\r\\n    stdout {}\\r\\n    elasticsearch {\\r\\n        hosts => [\\\"http://elasticsearch:9200\\\"]\\r\\n        index => \\\"mick-elk-%{+YYYY.MM.dd}\\\"\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 Docker Compose 配置\\r\\n\\r\\n`elk-test/docker-compose.yml`：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\nversion: \\\"3.8\\\"\\r\\n\\r\\nservices:\\r\\n  elasticsearch:\\r\\n    image: elasticsearch:6.8.20\\r\\n    ports:\\r\\n      - \\\"9200:9200\\\"\\r\\n      - \\\"9300:9300\\\"\\r\\n    volumes:\\r\\n      - type: bind\\r\\n        source: elk-data/elasticsearch/data\\r\\n        target: /usr/share/elasticsearch/data\\r\\n    environment:\\r\\n      discovery.type: single-node\\r\\n      ES_JAVA_OPTS: \\\"-Xms512m -Xmx512m\\\"\\r\\n\\r\\n  logstash:\\r\\n    depends_on:\\r\\n      - elasticsearch\\r\\n    image: logstash:6.8.20\\r\\n    ports:\\r\\n      - \\\"5000:5000\\\"\\r\\n      - \\\"9600:9600\\\"\\r\\n    volumes:\\r\\n      - type: bind\\r\\n        source: elk-data/logstash/pipeline/logstash.conf\\r\\n        target: /usr/share/logstash/pipeline/logstash.conf\\r\\n        read_only: true\\r\\n\\r\\n  kibana:\\r\\n    depends_on:\\r\\n      - elasticsearch\\r\\n    image: kibana:6.8.20\\r\\n    ports:\\r\\n      - \\\"5601:5601\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.3 執行 Docker Compose\\r\\n\\r\\n喺 `elk-test` folder 度執行 command：\\r\\n\\r\\n```bash\\r\\ndocker-compose up -d\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 4 產生 log\\r\\n\\r\\n1. 啟動 application（用默認 Spring profile）。\\r\\n1. 等待 console 出現一堆 `Mick says xxxxxxxxxxxxx` 既 log messages，建議至少 `10` 個。\\r\\n1. 打開 [http://localhost:9200/\\\\_search?size=100](http://localhost:9200/_search?size=100) 應該可以見到一堆 log documents。\\r\\n\\r\\n---\\r\\n\\r\\n# 5 設定 Kibana、檢視結果\\r\\n\\r\\n1. 打開 [http://localhost:5601/](http://localhost:5601/)。\\r\\n1. 去 Discover 頁面，Kibana 會要求我地新增 index pattern。\\r\\n1. 指定 index pattern 用 `mick-elk-*`。\\r\\n    - 因為 Elasticsearch 已經為收到既 log documents 建立左 index，所以 Kibana 都會知道。\\r\\n1. 喺 drop-down 指定 time filter field name 用 `@timestamp`。\\r\\n1. 完成新增 index pattern。\\r\\n1. 去 Discover 頁面。\\r\\n1. 順序加入 fields 入 log result table。\\r\\n    1. `level`\\r\\n    1. `logger_name`\\r\\n    1. `message`\\r\\n1. 確保 log result table 裡面既 `Time` column 係 descending order。\\r\\n1. 喺最上面既 menu bar 既 Auto-refresh 設定 refresh interval 做 `5 seconds`。\\r\\n1. 喺最上面既 menu bar 撳 Save。\\r\\n\\r\\n註：以上既設定會被儲存喺 Elasticsearch 裡面既 `.kibana_1` index（[http://localhost:9200/.kibana_1/\\\\_search?size=100](http://localhost:9200/.kibana_1/_search?size=100)）。\\r\\n\\r\\n![](blog/2021-10/spring-boot-elk-logging/kibana-index-pattern.png)\\r\\n\\r\\n![](blog/2021-10/spring-boot-elk-logging/kibana-index-time-field.png)\\r\\n\\r\\n![](blog/2021-10/spring-boot-elk-logging/kibana-search-logs.png)\\r\\n\\r\\n---\\r\\n\\r\\n# 6 參考資料\\r\\n\\r\\n-   [Sprinkle Some ELK on Your Spring Boot Logs](https://isd-soft.com/tech_blog/sprinkle-elk-spring-boot-logs/)\\r\\n-   [deviantony/docker-elk - `docker-compose.yml`](https://github.com/deviantony/docker-elk/blob/main/docker-compose.yml)\\r\\n\";","export default \"# 1 背景\\r\\n\\r\\n有某一個 Spring Boot 2 既 web application 唔知點解有個 HTTP POST API 喺唔同情況下，有時會返回 JSON 或者 XML 格式既 responses，而 XML 格式就會導致 consumer application 喺 deserialize 個 response 既時候出現 deserialization exception。\\r\\n\\r\\n| 情況                                                                          | Response 格式 |\\r\\n| ----------------------------------------------------------------------------- | :-----------: |\\r\\n| 使用 Postman 直接 call 個 API                                                 |     JSON      |\\r\\n| 喺 cloud provider 平台上面 test 個 API                                        |     JSON      |\\r\\n| Consumer application 喺 cloud 既環境下用 Spring 既 `RestTemplate` call 個 API |      XML      |\\r\\n\\r\\nPostman 既 call 法係用默認既 Postman HTTP request headers，`Accept` request header 係 `*/*`。\\r\\n\\r\\nCloud provider 平台既 call 法係冇任何 HTTP request headers。\\r\\n\\r\\nConsumer application 用既係 `RestTemplate#exchange` method 去 call 呢個 HTTP POST API，而 `HttpEntity` 既 request body 係 `null`，`HttpHeaders` 係 `new HttpHeaders()`，冇咩特別。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 原因分析\\r\\n\\r\\n## 2.1 Cloud provider API 配置\\r\\n\\r\\nCloud provider 既平台上面冇任何配置，冇對 HTTP API response 做 conversion 或者改 request header，所以唔關 cloud config 事。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 Maven dependencies\\r\\n\\r\\n如果只係得 `spring-boot-starter-web` 呢個 dependency，係冇能力返回 XML 格式既。\\r\\n\\r\\n查下 Spring 既文檔就發現到原來 producer application 以及 consumer application 都有以下既 transitive dependency：\\r\\n\\r\\n```xml\\r\\n<dependency>\\r\\n    <groupId>com.fasterxml.jackson.dataformat</groupId>\\r\\n    <artifactId>jackson-dataformat-xml</artifactId>\\r\\n</dependency>\\r\\n```\\r\\n\\r\\n加左呢個 dependency 之後：\\r\\n\\r\\n-   Application 會有能力返回 XML 格式既 HTTP responses。\\r\\n    -   不過就唔會自動將所有 exposed 既 APIs（Spring 既 request mappings）默認返回 XML 格式。\\r\\n-   Application 會有能力解讀 XML 格式既 HTTP responses（但唔清楚點解 consumer application 會出現 deserialization exception）。\\r\\n-   會令到我地冇特別配置既 `RestTemplate` 既 HTTP requests 既 `Accept` request header 用左 `application/xml` 等等既 values，咁就會令到 producer application 傾向選擇返回 XML 格式既 HTTP responses，而咁岩 producer application 又有能力咁做。\\r\\n\\r\\n咁就解釋到點解 Postman 以及 cloud provider 平台上面測試果陣冇得到 XML 格式既 HTTP responses。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Spring Boot 官方文檔 - 4.2 Write an XML REST Service](https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto.spring-mvc.write-xml-rest-service)\\r\\n\\r\\n---\\r\\n\\r\\n# 3 解決方法\\r\\n\\r\\n只需要將 `RestTemplate` object 既 XML message converter 移除就可以，咁喺 call HTTP APIs 既時候，就唔會喺 `Accept` request headers 裡面加入 `application/xml` 等等既 values。\\r\\n\\r\\n```java\\r\\n@Bean\\r\\npublic RestTemplate restTemplate() {\\r\\n    final RestTemplate restTemplate = new RestTemplate();\\r\\n    restTemplate.getMessageConverters().removeIf(MappingJackson2XmlHttpMessageConverter.class::isInstance);\\r\\n\\r\\n    return restTemplate;\\r\\n}\\r\\n```\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [StackOverflow - How to prevent MappingJackson2XmlHttpMessageConverter from taking over serialization?](https://stackoverflow.com/questions/32703367/how-to-prevent-mappingjackson2xmlhttpmessageconverter-from-taking-over-serializa)\\r\\n-   [StackOverflow - Spring RestTemplate message converter priority when posting](https://stackoverflow.com/questions/47894619/spring-resttemplate-message-converter-priority-when-posting)\\r\\n-   [StackOverflow - How to set default MessageConverter to JSON with jackson-dataformat-xml added?](https://stackoverflow.com/questions/57706610/how-to-set-default-messageconverter-to-json-with-jackson-dataformat-xml-added)\\r\\n\";","export default \"# 1 何謂 remote debugging\\r\\n\\r\\nDebug Java 程式或者 JavaScript 程式大家都試過，但係 Java 既其中一個強大之處，就係其實 JVM 係可以畀我地利用 Java Debug Wire Protocol 去做到 remote debugging，亦即係個 JVM 唔需要喺自己部機度運行都可以做到 debugging。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 好處\\r\\n\\r\\n呢個功能最大既好處係可以畀我地 debug 唔係喺 local deploy 既 Java 程式。咁當我地遇到問題既時候，就唔需要為左做到 local run 而 setup local 既所有野，包括 database data、上下游既 applications、程式配置（Spring profile、application properties、Java program arguments、Java VM arguments、environment variables 等等），可以利用 remote deployment（e.g. UAT）既配置以及 database data。\\r\\n\\r\\n---\\r\\n\\r\\n# 3 動手設置\\r\\n\\r\\n## 3.1 Eclipse 設置 breakpoint\\r\\n\\r\\n1. 喺 Eclipse 裡面打開想要 debug 既 Java class。\\r\\n1. Double-click 想 debugger 暫停既 line number，會見到有個小藍點顯示左喺左邊。\\r\\n1. 如果去 Debug perspective，會見到 Breakpoints view 裡面有我地所有既 breakpoints。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 啟動 Java app\\r\\n\\r\\n無論係一般 Java 程式又或者係 Spring Boot 程式都一樣，我地只需要執行 `java` 既時候加入 `-agentlib` argument 就得：\\r\\n\\r\\n```bash\\r\\njava -jar -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000 App.jar\\r\\n```\\r\\n\\r\\n之後就會見到一句：\\r\\n\\r\\n```plaintext\\r\\nListening for transport dt_socket at address: 8000\\r\\n```\\r\\n\\r\\n如果我地想等到 Eclipse 連接左個 agent 之後先畀個 Java 程式開始執行，可以用 `suspend=y`：\\r\\n\\r\\n```bash\\r\\njava -jar -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8000 App.jar\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.3 Debug Java app\\r\\n\\r\\n喺 Eclipse 裡面新增一個 Debug configuration：\\r\\n\\r\\n1. 撳 toolbar 上面 Debug 掣（蜘蛛 icon）右邊既倒三角。\\r\\n1. 撳 `Debug configurations...`。\\r\\n1. Right-click 左邊個 list 上面既 `Remote Java Application` > `New Configuration`。\\r\\n1. 撳落新增既配置，揀岩要 debug 既 project，Connection Type 用默認既 `Standard (Socket Attach)`，確保 host 以及 port 係對應返個程式運行既 host 以及我地啟動 Java app 果陣句 command 裡面畀 port。\\r\\n1. 撳 Debug 去開始連接個 Java 程式。\\r\\n1. 如果我地去 Debug perspective，就會見到有個 Remote Java application 既 debug session。\\r\\n1. 如果個 Java 程式執行到我地落左 breakpoint 既 code lines，個 Java application 就會停落黎，而 Eclipse 個 Debug perspective 就會顯示相關既資訊出黎。\\r\\n\\r\\n---\\r\\n\\r\\n# 4 參考資料\\r\\n\\r\\n-   [Java Application Remote Debugging](https://www.baeldung.com/java-application-remote-debugging)\\r\\n-   [Debugging Spring Applications](https://www.baeldung.com/spring-debugging)\\r\\n\";","export default \"# 1 Spring Cloud Config 簡介\\r\\n\\r\\nSpring Cloud Config 既出現係為左針對喺雲端上運行既 apps 實現 config externalization，即係將 app 既配置綜合存放喺一個地方，例如係一個只負責存放 app 配置檔案既 Git repo，然後用一個 config server 去讀取呢個 Git repo 裡面既 app 配置檔案，當 app 開始運行，佢第一件會做既事就係從 config server 下載 app 配置，然後再用呢啲配置去初始化，例如係連接數據庫。\\r\\n\\r\\n## 1.1 Externalize 配置\\r\\n\\r\\n將配置檔案存放喺另一個 Git repo 既好處：\\r\\n\\r\\n-   配置係會因時間而改變，我地冇理由只係因為配置檔有改動而重新 build 過個 artifact。\\r\\n    -   視乎 CI pipeline（如 Jenkins）既步驟數量以及複雜程度，所需時間可以好長。\\r\\n        -   有啲大公司會喺 pipeline 加入 code scan plugins，例如 SonarQube、Snyk、Fortify，呢啲 code scan 工具都需要唔少時間，亦有可能會因為呢啲 code scan 工具既資料庫更新，突然多左一啲 vulnerabilities 而令 pipeline 執行失敗。\\r\\n        -   如果 pipeline 係 deploy 上 public cloud，視乎雲端平台、雲端技術以及雲端平台既硬件資源，部署所需時間可能需要幾分鐘，慢過喺本地用 JVM 運行個 app。\\r\\n-   如果我地將配置存放喺另一個地方，咁我地只需要重新啟動個 app，或者 call Spring Boot Actuator 提供既 API，就可以刷新 app 既配置，方便快捷。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Build Once, Run Anywhere: Externalize Your Configuration](https://reflectoring.io/externalize-configuration/#configuration-servers)\\r\\n\\r\\n---\\r\\n\\r\\n## 1.2 關於 12-Factor 既 Config\\r\\n\\r\\n12-Factor App 係為現代既 cloud apps 而訂立既開發規範。有人認為 Spring Cloud Config 達到 12-Factor App 既其中一項規範——Config。\\r\\n\\r\\n> 12 Factor implies that you should not store your configuration in a file in your application.\\r\\n>\\r\\n> But you can source those configs using other tools\\r\\n>\\r\\n> -   Puppet\\r\\n> -   Kubernetes ConfigMaps\\r\\n> -   Spring's configuration server\\r\\n> -   Databases/Data\\r\\n>\\r\\n> Why bother? It reduces the likelihood of developers accidentally committing/sharing secret credentials. You ensure that your application/service does not have logic switching based on the environment.\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [12 Factor Apps](https://dkbrummitt.com/hw/2019/08/12/12-factor/)（[備用一](https://web.archive.org/web/20230503055645/https://dkbrummitt.com/hw/2019/08/12/12-factor/)／[備用二](https://archive.ph/ki0JP)）\\r\\n\\r\\n---\\r\\n\\r\\n# 2 設定 Git 配置 repo\\r\\n\\r\\n## 2.1 建立 GitHub repo\\r\\n\\r\\n先建立一個全新既 GitHub repo，內容如下：\\r\\n\\r\\n-   `/spring-cloud-config-client-demo`\\r\\n    -   `spring-cloud-config-client-demo-dev.yml`\\r\\n\\r\\n`spring-cloud-config-client-demo-dev.yml`：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\nmy:\\r\\n  prop: Hello GitHub!\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 使用 SSH\\r\\n\\r\\n```bash\\r\\nssh-keyscan -t ecdsa github.com\\r\\nssh-keygen -t ecdsa -b 256 -m PEM -f keyfile\\r\\n```\\r\\n\\r\\n我地要將條 SSH public key（`keyfile.pub`）加落個 Git repo 度，而條 SSH private key（`keyfile`）就要放喺 config server 既配置度。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 Clone Git repo\\r\\n\\r\\n```bat\\r\\n:: Windows Command Prompt\\r\\nSET \\\"GIT_SSH_COMMAND=ssh -i keyfile -o IdentitiesOnly=yes\\\"\\r\\ngit clone ssh://git@github.com/blackr1234/spring-cloud-config-demo.git\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 3 動手寫\\r\\n\\r\\n我地會用到 Spring Cloud Dependencies 黎做 dependency management，而 Spring Cloud Config Server 又會引入 Spring Boot Starter Web 既 dependency。\\r\\n\\r\\n## 3.1 Config server\\r\\n\\r\\nProject structure：\\r\\n\\r\\n-   `src/main/java`\\r\\n    -   `/code`\\r\\n        -   `MainConfigServerApp.java`\\r\\n-   `src/main/resources`\\r\\n    -   `application.yml`\\r\\n    -   `bootstrap.yml`\\r\\n\\r\\n### 3.1.1 Maven dependencies\\r\\n\\r\\n```xml\\r\\n<dependencyManagement>\\r\\n\\t<dependencies>\\r\\n\\t\\t<dependency>\\r\\n\\t\\t\\t<groupId>org.springframework.cloud</groupId>\\r\\n\\t\\t\\t<artifactId>spring-cloud-dependencies</artifactId>\\r\\n\\t\\t\\t<version>Hoxton.SR12</version>\\r\\n\\t\\t\\t<type>pom</type>\\r\\n\\t\\t\\t<scope>import</scope>\\r\\n\\t\\t</dependency>\\r\\n\\t\\t<dependency>\\r\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t\\t<artifactId>spring-boot-dependencies</artifactId>\\r\\n\\t\\t\\t<version>2.3.12.RELEASE</version>\\r\\n\\t\\t\\t<type>pom</type>\\r\\n\\t\\t\\t<scope>import</scope>\\r\\n\\t\\t</dependency>\\r\\n\\t</dependencies>\\r\\n</dependencyManagement>\\r\\n\\r\\n<dependencies>\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.cloud</groupId>\\r\\n\\t\\t<artifactId>spring-cloud-config-server</artifactId>\\r\\n\\t</dependency>\\r\\n</dependencies>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.1.2 Java code\\r\\n\\r\\n`MainConfigServerApp.java`：\\r\\n\\r\\n```java\\r\\n@EnableConfigServer\\r\\n@SpringBootApplication\\r\\npublic class MainConfigServerApp {\\r\\n\\r\\n    public static void main(String[] args) {\\r\\n        SpringApplication.run(MainConfigServerApp.class);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.1.3 Bootstrap 配置\\r\\n\\r\\n`bootstrap.yml`：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\nencrypt:\\r\\n  key: michael ## or use the ENCRYPT_KEY environment variable\\r\\n\\r\\nspring:\\r\\n  cloud:\\r\\n    config:\\r\\n      server:\\r\\n        encrypt:\\r\\n          enabled: true\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.1.4 Application 配置\\r\\n\\r\\n`application.yml`：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\nserver:\\r\\n  port: 8889\\r\\n\\r\\nspring:\\r\\n  cloud:\\r\\n    config:\\r\\n      server:\\r\\n        git:\\r\\n          clone-on-start: true\\r\\n          refresh-rate: 10\\r\\n          ignore-local-ssh-settings: true\\r\\n          uri: git@github.com:blackr1234/spring-cloud-config-demo.git\\r\\n          default-label: master\\r\\n          search-paths:\\r\\n            - \\\"{application}\\\"\\r\\n          host-key: 'AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg='\\r\\n          host-key-algorithm: ecdsa-sha2-nistp256\\r\\n          private-key: |\\r\\n                        -----BEGIN EC PRIVATE KEY-----\\r\\n                        MHcCAQEEIPnupl8oxl0Wj6xfOd/PobBG48m3pVkmubPem1XSyexEoAoGCCqGSM49\\r\\n                        AwEHoUQDQgAEUGO+DDpbpsgp3C+H68iTTaklmcnk2MSbbh4bwQVnMws09eqFqvA4\\r\\n                        RzcTRtAXt2IWkq4JHUg6rtjDnc/0zwSQyQ==\\r\\n                        -----END EC PRIVATE KEY-----\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   `spring.cloud.config.server.git.host-key` 係 GitHub 既 host key，除非改用 GitLab 或者用其他 host key algorithm。\\r\\n-   `spring.cloud.config.server.git.host-key-algorithm` 要對應返我地喺 [2.2 使用 SSH](#22-使用-ssh) 生成 key 所使用既 command。\\r\\n-   `spring.cloud.config.server.git.private-key` 係我地喺 [2.2 使用 SSH](#22-使用-ssh) 生成既 `keyfile` 既內容。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 Config client\\r\\n\\r\\nProject structure：\\r\\n\\r\\n-   `src/main/java`\\r\\n    -   `/code`\\r\\n        -   `MainConfigClientApp.java`\\r\\n        -   `MyComponent.java`\\r\\n-   `src/main/resources`\\r\\n    -   `application.yml`\\r\\n    -   `bootstrap.yml`\\r\\n\\r\\n### 3.2.1 Maven dependencies\\r\\n\\r\\n```xml\\r\\n<dependencyManagement>\\r\\n\\t<dependencies>\\r\\n\\t\\t<dependency>\\r\\n\\t\\t\\t<groupId>org.springframework.cloud</groupId>\\r\\n\\t\\t\\t<artifactId>spring-cloud-dependencies</artifactId>\\r\\n\\t\\t\\t<version>Hoxton.SR12</version>\\r\\n\\t\\t\\t<type>pom</type>\\r\\n\\t\\t\\t<scope>import</scope>\\r\\n\\t\\t</dependency>\\r\\n\\t\\t<dependency>\\r\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t\\t<artifactId>spring-boot-dependencies</artifactId>\\r\\n\\t\\t\\t<version>2.3.12.RELEASE</version>\\r\\n\\t\\t\\t<type>pom</type>\\r\\n\\t\\t\\t<scope>import</scope>\\r\\n\\t\\t</dependency>\\r\\n\\t</dependencies>\\r\\n</dependencyManagement>\\r\\n\\r\\n<dependencies>\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.cloud</groupId>\\r\\n\\t\\t<artifactId>spring-cloud-starter-config</artifactId>\\r\\n\\t</dependency>\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t<artifactId>spring-boot-starter-web</artifactId>\\r\\n\\t</dependency>\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t<artifactId>spring-boot-starter-actuator</artifactId>\\r\\n\\t</dependency>\\r\\n</dependencies>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.2.2 Java code\\r\\n\\r\\n`MainConfigClientApp.java`：\\r\\n\\r\\n```java\\r\\n@SpringBootApplication\\r\\npublic class MainConfigClientApp {\\r\\n\\r\\n    public static void main(String[] args) {\\r\\n        SpringApplication.run(MainConfigClientApp.class);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n`MyComponent.java`：\\r\\n\\r\\n```java\\r\\n@Slf4j\\r\\n@RefreshScope\\r\\n@Component\\r\\npublic class MyComponent {\\r\\n\\r\\n    @Value(\\\"${my.prop:not-found}\\\")\\r\\n    private String myProp;\\r\\n\\r\\n    @PostConstruct\\r\\n    public void init() {\\r\\n        log.info(\\\"my.prop: {}\\\", myProp);\\r\\n    }\\r\\n\\r\\n    @EventListener\\r\\n    public void refresh(RefreshScopeRefreshedEvent event) {\\r\\n        log.info(\\\"Refreshed class [{}].\\\", getClass().getName());\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.2.3 Bootstrap 配置\\r\\n\\r\\n`bootstrap.yml`：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\nspring:\\r\\n  application:\\r\\n    name: spring-cloud-config-client-demo\\r\\n  profiles:\\r\\n    active: dev ## should be externalized\\r\\n  cloud:\\r\\n    config:\\r\\n      enabled: true\\r\\n      uri: http://localhost:8889\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.2.4 Application 配置\\r\\n\\r\\n`application.yml`：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\nmanagement:\\r\\n  endpoints:\\r\\n    web:\\r\\n      exposure:\\r\\n        include: refresh, env\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 4 簡單測試\\r\\n\\r\\n## 4.1 步驟\\r\\n\\r\\n1. 啟動 config server。\\r\\n1. 啟動 config client。\\r\\n1. 檢查 `my.prop` 既 value，應該係而家 Git 上面既 value。\\r\\n1. 更改 Git 上既 `my.prop` 既 value。\\r\\n1. Call config client 既 `/actuator/refresh` API。\\r\\n    - Response body 裡面會有一個 array，其中一個 string 就係 `my.prop`，意味住 `my.prop` 既 value 改變左。\\r\\n1. 檢查 `my.prop` 既 value，應該係我地改成既新 value。\\r\\n\\r\\n---\\r\\n\\r\\n## 4.2 檢查 property value\\r\\n\\r\\n針對 `my.prop`，我地有以下既方法：\\r\\n\\r\\n1. Call config client 既 `/actuator/env` API，response body 會有 `my.prop` 既 value，呢個方法只需要配置好 Actuator 就可以用。\\r\\n1. 因為我地有特登寫 code 去做 logging，所以我地可以留意 config client 既 log 裡面 `my.prop` 既 value。\\r\\n\\r\\n---\\r\\n\\r\\n# 5 配置檔既應用次序\\r\\n\\r\\n喺 Spring，如果我地唔用 Spring Cloud Config 去 externalize 配置，咁我地個 artifact JAR 檔裡面可以有：\\r\\n\\r\\n1. `application`\\r\\n1. `application-{profile}`\\r\\n\\r\\n因為 Spring 支援 YAML 以及 Java properties 既格式，而 YAML 格式又可以用 `.yaml` 以及 `.yml` 作為副檔名，咁我地其實最盡可以有 `6` 個檔案。\\r\\n\\r\\n而如果我地用 Spring Cloud Config 去 externalize 配置，咁我地喺既 Git repo 就會有：\\r\\n\\r\\n1. `application`\\r\\n1. `{spring.application.name}`\\r\\n1. `application-{profile}`\\r\\n1. `{spring.application.name}-{profile}`\\r\\n\\r\\n如果又各有 `yaml`、`.yml` 以及 `.properties` 副檔名，咁就可以有 `12` 個組合咁多既檔案。\\r\\n\\r\\n經過反翻既測試，最後搵到 Spring Cloud Config 既 Git backend 讀取檔案既次序係：\\r\\n\\r\\n1. `application.yaml`\\r\\n1. `application.yml`\\r\\n1. `application.properties`\\r\\n1. `{spring.application.name}.yaml`\\r\\n1. `{spring.application.name}.yml`\\r\\n1. `{spring.application.name}.properties`\\r\\n1. `application-{profile}.yaml`\\r\\n1. `application-{profile}.yml`\\r\\n1. `application-{profile}.properties`\\r\\n1. `{spring.application.name}-{profile}.yaml`\\r\\n1. `{spring.application.name}-{profile}.yml`\\r\\n1. `{spring.application.name}-{profile}.properties`\\r\\n\\r\\n解釋：\\r\\n\\r\\n-   呢個次序既意思係，當同一個名既配置（例如 `my.prop`）出現喺以上所有既檔案裡面，咁 Spring Cloud Config 係會以呢個次序去讀取檔案去取值，而較遲讀取既值係會覆蓋之前讀取既值。\\r\\n-   Java properties 檔會「贏」過曬 YAML 格式，最終值會係黎自 Java properties 配置檔。\\r\\n-   冇 `-{profile}` 既檔案就係 default profile，而特定既環境 profile 係一定會比較遲讀取，覆蓋默認既配置。\\r\\n\\r\\n---\\r\\n\\r\\n# 6 新版本\\r\\n\\r\\n## 6.1 App 需要修改既地方\\r\\n\\r\\n### 6.1.1 版本\\r\\n\\r\\n更新 config server 以及 config client 既 dependency managements 去以下既版本：\\r\\n\\r\\n```xml\\r\\n<dependencyManagement>\\r\\n\\t<dependencies>\\r\\n\\t\\t<dependency>\\r\\n\\t\\t\\t<groupId>org.springframework.cloud</groupId>\\r\\n\\t\\t\\t<artifactId>spring-cloud-dependencies</artifactId>\\r\\n\\t\\t\\t<version>2021.0.3</version>\\r\\n\\t\\t\\t<type>pom</type>\\r\\n\\t\\t\\t<scope>import</scope>\\r\\n\\t\\t</dependency>\\r\\n\\t\\t<dependency>\\r\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t\\t<artifactId>spring-boot-dependencies</artifactId>\\r\\n\\t\\t\\t<version>2.7.0</version>\\r\\n\\t\\t\\t<type>pom</type>\\r\\n\\t\\t\\t<scope>import</scope>\\r\\n\\t\\t</dependency>\\r\\n\\t</dependencies>\\r\\n</dependencyManagement>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 6.1.2 `bootstrap.yml` 合併入 `application.yml`\\r\\n\\r\\n最新版既 Spring Cloud Config 已經唔再用 `bootstrap.yml` 檔，所以我地要將佢既 properties 搬去 `application.yml`。\\r\\n\\r\\n不過如果真係想用返 `bootstrap.yml` 呢個舊既方式，可以加入呢個 dependency：\\r\\n\\r\\n```xml\\r\\n<dependency>\\r\\n\\t<groupId>org.springframework.cloud</groupId>\\r\\n\\t<artifactId>spring-cloud-starter-config</artifactId>\\r\\n</dependency>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 6.1.3 新 `spring.config.import` 配置\\r\\n\\r\\nSpring Cloud Config client 既 `spring.cloud.config.uri` 已經被 `spring.config.import` 取代，而 value 都有所唔同：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\n# 舊配置，bootstrap.yml 檔\\r\\nspring:\\r\\n  cloud:\\r\\n    config:\\r\\n\\t  uri: http://localhost:8889\\r\\n\\r\\n---\\r\\n\\r\\n# 新配置，application.yml 檔\\r\\nspring:\\r\\n  config:\\r\\n    import: 'optional:configserver:http://localhost:8889'\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   如果唔加上 `optional:`，咁當 config client 啟動既時候連接唔到 config server，config client 就會 throw exception 並且終止運行。\\r\\n-   如果加上 `optional:`\\r\\n    1. 就算 config client 啟動果一刻連接唔到 config server，佢都唔會終止運行。\\r\\n    1. 如果之後我地手動 call config client 既 `/actuator/refresh` API，而 config client 成功連接到 config server，咁佢會重新獲取配置，而有 `@RefreshScope` 既 components 都會獲得新既配置數值。\\r\\n\\r\\n---\\r\\n\\r\\n# 7 連線容錯測試\\r\\n\\r\\n根據測試，Git backend 係可以容許連線失敗，因為 config server 會有 file cache。\\r\\n\\r\\n## 7.1 使用 Git backend 而 Git 連線失敗\\r\\n\\r\\n模擬連線失敗場景：\\r\\n\\r\\n1. 啟動 config server。\\r\\n1. 啟動 config client。\\r\\n1. 呢個時候，我地可以見到 config server 會將個 Git repo clone 到一個叫 `config-repo-<random numbers>` 既 folder，呢個 folder 係喺我地既 JVM temp folder（e.g. `C:/Users/Michael/AppData/Local/Temp`）裡面。\\r\\n1. 喺 OS 層面斷開網絡。\\r\\n1. 重新啟動 config client，佢依然可以喺 config server 度拎到配置，咁係因為 config server 用左上面提到既 file cache。\\r\\n\\r\\n---\\r\\n\\r\\n# 8 參考資料\\r\\n\\r\\n-   [Spring Cloud Config 使用與原理分析](https://blog.csdn.net/qq_20597727/article/details/82465069)（[備用一](https://web.archive.org/web/20230503105421/https://blog.csdn.net/qq_20597727/article/details/82465069)／[備用二](https://archive.ph/hTqbk)）\\r\\n-   [Let’s Learn Together Sessions: Spring Cloud Config Server](https://medium.com/javarevisited/lets-learn-together-sessions-spring-cloud-config-server-17ecd171d86)\\r\\n-   [StackOverflow - No spring.config.import property has been defined](https://stackoverflow.com/questions/67507452/no-spring-config-import-property-has-been-defined/70813003#70813003)\\r\\n-   [Spring 官方 blog - Spring Cloud 2020.0.0 (aka Ilford) Is Available](https://spring.io/blog/2020/12/22/spring-cloud-2020-0-0-aka-ilford-is-available)\\r\\n    -   > NOTE: Bootstrap has been disabled by default. The new way of importing configuration is via the new `spring.config.import` functionality provided by Spring Boot 2.4.\\r\\n    -   > If you require the legacy bootstrap functionality add the `org.springframework.cloud:spring-cloud-starter-bootstrap` dependency to your project.\\r\\n-   [Spring Cloud Config - Config First Bootstrap](https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#config-first-bootstrap)\\r\\n    -   > Spring Boot 2.4 introduced a new way to import configuration data via the spring.config.import property. This is now the default way to bind to Config Server.\\r\\n        >\\r\\n        > To optionally connect to config server set the following in application.properties:\\r\\n        >\\r\\n        > **application.properties**\\r\\n        >\\r\\n        > ```java\\r\\n        > spring.config.import=optional:configserver:\\r\\n        > ```\\r\\n\\r\\n延伸閱讀：\\r\\n\\r\\n-   [Spring 官方 blog - Config file processing in Spring Boot 2.4](https://spring.io/blog/2020/08/14/config-file-processing-in-spring-boot-2-4)\\r\\n\";","export default \"# 1 cURL 簡介\\r\\n\\r\\ncURL 係一個有好長歷史既 command line 工具，佢既主要用途係發出 HTTP 請求，可以用於測試 HTTP APIs 或者自動化等，同 Postman 既最核心功能相似，但就冇提供針對 API 測試既功能。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 Request methods\\r\\n\\r\\n## 2.1 GET\\r\\n\\r\\nPOST method 一般係用黎獲取資源，例如獲取訂單列表、獲取某一份訂單。\\r\\n\\r\\n```bash\\r\\ncurl \\\"<URL>\\\"\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   默認係 `GET` method。\\r\\n\\r\\n例子：\\r\\n\\r\\n```bash\\r\\ncurl https://jsonplaceholder.typicode.com/todos/1\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 POST\\r\\n\\r\\nPOST method 一般係用黎新增資源（或者更新資源，視乎 API 點樣實現），例如新增訂單。\\r\\n\\r\\n```bash\\r\\ncurl -d \\\"<request body>\\\" \\\"<URL>\\\"\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   因為有 `-d`（request body）但係冇 `-X`（request method），所以默認會用 `POST` method。\\r\\n\\r\\n例子：\\r\\n\\r\\n```bash\\r\\ncurl -d \\\"{ \\\"title\\\": \\\\\\\"Michael's new title\\\\\\\" }\\\" https://jsonplaceholder.typicode.com/todos\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 其他 methods\\r\\n\\r\\nGET、POST 以外比較常見既 request methods 有：\\r\\n\\r\\n| Request method | 用途                                                                                          |\\r\\n| :------------: | --------------------------------------------------------------------------------------------- |\\r\\n|      PUT       | 更新資源（整個覆蓋）                                                                          |\\r\\n|     PATCH      | 更新資源（只更新一部分）                                                                      |\\r\\n|     DELETE     | 刪除資料                                                                                      |\\r\\n|    OPTIONS     | 了解資源所支持既選項，例如 request methods（`Allow`）、CORS（`Access-Control-Allow-Methods`） |\\r\\n\\r\\n```bash\\r\\ncurl -X \\\"<method>\\\" \\\"<URL>\\\"\\r\\n```\\r\\n\\r\\n例子：\\r\\n\\r\\n```bash\\r\\ncurl -X PUT -d \\\"{ \\\"title\\\": \\\\\\\"Michael's new title\\\\\\\" }\\\" https://jsonplaceholder.typicode.com/todos/1\\r\\n```\\r\\n\\r\\n```bash\\r\\ncurl -X PATCH -d \\\"{ \\\"title\\\": \\\\\\\"Michael's new title\\\\\\\" }\\\" https://jsonplaceholder.typicode.com/todos/1\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 3 Request body\\r\\n\\r\\n通常 `POST`、`PUT`、`PATCH` 都會伴隨 request body。\\r\\n\\r\\n```bash\\r\\ncurl -d \\\"<request body>\\\" \\\"<URL>\\\"\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   如果冇 `-X`，默認會使用 `POST` method。\\r\\n\\r\\n例子：\\r\\n\\r\\n```bash\\r\\ncurl -d \\\"{ \\\"title\\\": \\\\\\\"Michael's new title\\\\\\\" }\\\" https://jsonplaceholder.typicode.com/todos\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 4 Request headers\\r\\n\\r\\n常見既 request headers 有 `Authorization`、`Content-Type`、`Content-Length`、`Accept`、`Cookie`、`Origin` 等。\\r\\n\\r\\n```bash\\r\\ncurl -H \\\"<k1: v1>\\\" -H \\\"<k2: v2>\\\" \\\"<URL>\\\"\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   當有 `-d`（request body）既時候，cURL 會自動計算字元長度然後加入 `Content-Length` header。\\r\\n\\r\\n例子：\\r\\n\\r\\n```bash\\r\\ncurl -H \\\"Origin: https://example.com\\\" https://jsonplaceholder.typicode.com/todos/1\\r\\n```\\r\\n\\r\\n## 4.1 Authorization：Basic Authentication\\r\\n\\r\\ncURL 提供簡單既方法去傳入 Basic Authentication 既 username 以及 password，佢會幫我地轉化成 Base64，作為 `Authorization` header。\\r\\n\\r\\n```bash\\r\\ncurl -u \\\"<username>:<password>\\\" \\\"<URL>\\\"\\r\\n```\\r\\n\\r\\n相等於自己轉化成 Base64：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```js\\r\\nvar USERNAME = \\\"Mick\\\";\\r\\nvar PASSWORD = \\\"Chung\\\";\\r\\nbtoa(unescape(encodeURIComponent(USERNAME + \\\":\\\" + PASSWORD))) // 'TWljazpDaHVuZw=='\\r\\n```\\r\\n\\r\\n然後放落 `Authorization` header：\\r\\n\\r\\n```bash\\r\\ncurl -H \\\"Authorization: Basic TWljazpDaHVuZw==\\\" \\\"<URL>\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 5 其他選項\\r\\n\\r\\n## 5.1 詳細模式\\r\\n\\r\\n詳細模式可以顯示 response body 以外既數據，例如：\\r\\n\\r\\n-   Request method\\r\\n-   Request headers\\r\\n-   Response status code\\r\\n-   Response headers\\r\\n\\r\\n如果唔太熟悉 cURL 既選項背後既邏輯會幫你發送一個點樣既請求，又或者想了解曬成個完整 response 係點樣，就一定要用詳細模式。\\r\\n\\r\\n```bash\\r\\ncurl \\\"<URL>\\\" -v\\r\\n```\\r\\n\\r\\n例子：\\r\\n\\r\\n```bash\\r\\ncurl https://jsonplaceholder.typicode.com/todos/1 -v\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 5.2 Follow redirects\\r\\n\\r\\n如果 response status code 係 `3xx`（例如 `301`、`302`），而 response headers 帶有 `Location`，咁就即係個 response 因為某啲原因想 redirect 我地去另一個 URL。\\r\\n\\r\\n```bash\\r\\ncurl \\\"<URL>\\\" -L\\r\\n```\\r\\n\\r\\n例子：\\r\\n\\r\\n第一步：先用詳細模式，留意下面 command 既執行結果：\\r\\n\\r\\n-   Response status code 係 `301 Moved Permanently`。\\r\\n-   Response headers 帶有 `Location: https://www.google.com/`。\\r\\n-   Response body 帶有 `301 Moved`、`The document has moved` 字樣，並唔係我地期望所見到既正常 Google 網頁既 HTML 內容。\\r\\n\\r\\n```bash\\r\\ncurl https://google.com -v\\r\\n```\\r\\n\\r\\n第二步：命令 cURL 去 follow redirects，今次 response body 先係正常既 Google 網頁既 HTML 內容。\\r\\n\\r\\n```bash\\r\\ncurl https://google.com -L\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 6 下載檔案\\r\\n\\r\\n```bash\\r\\ncurl --output-dir \\\"<output folder path>\\\" -o \\\"<output file name>\\\" \\\"<URL>\\\"\\r\\n```\\r\\n\\r\\n```bash\\r\\ncurl --output-dir \\\"<output folder path>\\\" -O \\\"<URL>\\\"\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   `--output-dir` 指定下載既 folder 必須要存在。\\r\\n-   如果有 `-O`，就會用返個下載 URL 既檔名（唔包括任何 path）黎儲存喺本地。\\r\\n    -   如果個下載既 folder 已經存在相同檔名既檔案，呢個檔案就會被覆寫。\\r\\n-   一個係細楷 `-o`；一個係大楷 `-O`，唔好混淆兩者。\\r\\n\\r\\n---\\r\\n\\r\\n# 7 參考資料\\r\\n\\r\\n-   [cURL man page](https://curl.se/docs/manpage.html)\\r\\n-   [JSONPlaceholder](http://jsonplaceholder.typicode.com/guide/)\\r\\n-   [The HTTP Request Headers List](https://flaviocopes.com/http-request-headers/)\\r\\n-   [Redirections in HTTP](https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections)\\r\\n\";","export default \"# 1 Docker 簡介\\r\\n\\r\\nDocker 係一種利用 Linux 內核既功能黎達到將程式同系統資源分隔既虛擬化技術。\\r\\n\\r\\n## 1.1 同其他技術既分別\\r\\n\\r\\n喺 Docker 出現之前，大家一般都係用具備完整 Windows 或者 Linux OS 既 virtual machines，但咁做係有好多壞處，例如慢、需要大量儲存空間、難自動化、建設成本高、維護成本高。\\r\\n\\r\\n呢啲 virtual machines 如果要做到程式與程式之間完全隔離，就要每一個程式都用一個完整既 OS 裝住佢，非常麻煩。相反，Docker 就非常方便，需要時又可以做到有限度咁共用資源。\\r\\n\\r\\n|                       產品                        | 描述                                                                   | 虛擬化步驟、使用情況                                                                                                                                                                   |\\r\\n| :-----------------------------------------------: | ---------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n| VMware Workstation、VirtualBox、Parallels Desktop | 因為需要透過一個完整既主 OS 黎儲取硬件，所以屬於 Type 2 hypervisor。   | 先喺硬件上面安裝完整既主 OS，再喺上面安裝帶虛擬化功能既軟件，再由呢個軟件虛擬化一個 OS。喺隔離狀況下執行 Windows GUI 程式。                                                            |\\r\\n|               VMware ESXi、Hyper-V                | 因為可以唔需要透過主 OS 而係直接存取硬件，所以屬於 Type 1 hypervisor。 | 先喺硬件上面安裝帶虛擬化功能既系統，再安裝虛擬化既 OS，再喺裡面執行 Windows GUI 程式，虛擬化 OS 之間可以係完全隔離，但因為虛擬化 OS 係一個完整既 OS 環境，所以裡面既程式係共用資源既。 |\\r\\n|                  Sandboxie Plus                   | OS 層級既輕量級虛擬化軟件。                                            | 喺 Windows 環境裡面安裝帶沙盒功能既程式，再喺隔離狀態下執行 Windows GUI 程式。                                                                                                         |\\r\\n|                  Windows Sandbox                  | Windows 10 既 1903 版開始內置既基於 Hyper-V 技術既輕量級虛擬化軟件。   | 喺 Windows 環境裡面啟動，再喺隔離狀態下執行 Windows GUI 程式。                                                                                                                         |\\r\\n|                      Docker                       | 利用 Linux 內核既功能達到 OS 層級既虛擬化。                            | 喺隔離狀態下執行非 GUI 既多層儲存結構既 Docker images。                                                                                                                                |\\r\\n\\r\\n喺 Docker 裡面，執行緊既 runtime 叫 Docker containers。因為用左 OverlayFS（overlay2）儲存技術做到多層儲存結構，所以每個 Docker container 其實都只係文件系統上既一層 layer，只有 container（隔離區）裡面新增既檔案先會佔用儲存空間。\\r\\n\\r\\n---\\r\\n\\r\\n## 1.2 使用場景\\r\\n\\r\\n對於開發者，使用 Docker 用好處係：\\r\\n\\r\\n-   只需要安裝一個 Docker 程式，就可以用到唔同既 infrastructure（例如 JDK、Maven、MySQL、Redis、RabbitMQ），唔需要自己下載個別既程式再安裝。\\r\\n-   因為資源隔離既關係，要重新設定呢啲 infrastructure 非常簡單，只需要將個 container throw away 再重新 `run` 一個就得。\\r\\n-   想保留資料既話，又可以用 volume。\\r\\n-   用同一個方式就可以改到任何程式執行既 port，唔需要爬文睇下個別既程式要點樣改配置。\\r\\n\\r\\n對於企業，Docker 就用喺 K8s（Kubernetes）上，用黎做雲端部署。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 Image\\r\\n\\r\\n喺 Docker，如果我地想 reference 一個 Docker image，我地可以用：\\r\\n\\r\\n|          方式          | 解釋                                                                                                                                                                                                                                                   |                   例子                    |\\r\\n| :--------------------: | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :---------------------------------------: |\\r\\n|        Image ID        | 一組 alphanumeric 既 ID（注意：同 digest 係兩樣野黎）。同 Git commit ID 一樣，只要提供既 image ID 既一部分能夠唯一咁辨別到個 image 就已經足夠（冇兩個或以上既 image IDs 係以相同 value 開頭）。                                                        |           `3e`、`3edbb69f9a49 `           |\\r\\n|       Image repo       | 一個 fully qualified 既 image name，如果係喺 Docker Hub registry 既官方 images，就可以省卻 host name 同埋 username；如果係 Docker Hub registry 既非官方 images，就會有 username；但如果係其他 registry（例如機構自己既 artifactory）就會有 host name。 | `openjdk`、`localhost:5000/mick/my-image` |\\r\\n| Image repo + image tag | Image tag 一般用黎表示版本號碼。如果唔提供 tag，就係指緊 `latest` tag。                                                                                                                                                                                |     `redis:7`、`rabbitmq:management`      |\\r\\n\\r\\n如果係官方 images 既話，以下都係指緊同一個 image：\\r\\n\\r\\n-   `redis`\\r\\n-   `redis:latest`\\r\\n-   `library/redis`\\r\\n-   `library/redis:latest`\\r\\n-   `registry.hub.docker.com/library/redis`\\r\\n-   `registry.hub.docker.com/library/redis:latest`\\r\\n\\r\\n## 2.1 查詢 image 列表\\r\\n\\r\\n查詢所有 images（包括我地自己 build image 果陣產生既冇 repo、冇 tag 既 intermediate images／layers）：\\r\\n\\r\\n```bash\\r\\ndocker image ls -a\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 下載 image\\r\\n\\r\\n下載 `latest` tag：\\r\\n\\r\\n```bash\\r\\ndocker image pull \\\"<repo>\\\"\\r\\n```\\r\\n\\r\\n下載特定 tag：\\r\\n\\r\\n```bash\\r\\ndocker image pull \\\"<repo>:<tag>\\\"\\r\\n```\\r\\n\\r\\n例子：\\r\\n\\r\\n```bash\\r\\ndocker image pull redis:latest\\r\\ndocker image pull rabbitmq:management\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 Tag image\\r\\n\\r\\nTag image 既作用就好似我地畀一個別名佢咁。\\r\\n\\r\\n根據 image ID 去新增 tag：\\r\\n\\r\\n```bash\\r\\ndocker image tag \\\"<image ID>\\\" \\\"<same repo>:<new tag>\\\"\\r\\ndocker image tag \\\"<image ID>\\\" \\\"<new repo>:<any tag>\\\"\\r\\n```\\r\\n\\r\\n根據 repo ＋ tag 黎為指定 image 新增 tag：\\r\\n\\r\\n```bash\\r\\ndocker image tag \\\"<repo>:<tag>\\\" \\\"<same repo>:<new tag>\\\"\\r\\ndocker image tag \\\"<repo>:<tag>\\\" \\\"<new repo>:<any tag>\\\"\\r\\n```\\r\\n\\r\\nTag 一個 `latest` tag 既 repo：\\r\\n\\r\\n```bash\\r\\ndocker image tag \\\"<repo>\\\" \\\"<any repo>:<any tag>\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.4 上載 image\\r\\n\\r\\n上載 image 到 registry：\\r\\n\\r\\n```bash\\r\\ndocker image push \\\"<repo>\\\"\\r\\ndocker image push \\\"<repo>:<tag>\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.5 儲存 image 檔案\\r\\n\\r\\n我地可以儲存一個 image 做一個 `.tar` 檔。\\r\\n\\r\\n```bash\\r\\ndocker image save -o \\\"<file name.tar>\\\" \\\"<image ID>\\\"\\r\\ndocker image save -o \\\"<file name.tar>\\\" \\\"<repo>\\\"\\r\\ndocker image save -o \\\"<file name.tar>\\\" \\\"<repo>:<tag>\\\"\\r\\n```\\r\\n\\r\\n例子：\\r\\n\\r\\n```bash\\r\\ndocker image save -o \\\"C:/Users/Michael/Desktop/busybox.tar\\\" busybox:latest\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.6 移除 tag／刪除 image\\r\\n\\r\\n喺 Docker 裡面，無論係移除 tag 或者刪除 image，我地都係用同一個 command。\\r\\n\\r\\n個邏輯係：\\r\\n\\r\\n-   如果根據 image ID 黎刪除，咁我地可能係想喺本地刪除呢個 image，但 Docker 唔知你係咪真係想咁做，所以如果呢個 image 畀多過 1 個 repo + tag reference 緊，咁我地就需要用 `-f` 黎強制刪除。\\r\\n-   當我地移除一個 image 既最後一個 repo + tag 既時候，Docker 就會喺本地刪除呢個 image。\\r\\n-   如果執行操作之後呢個 image 仲有至少 1 個 repo + tag，咁 Docker 就唔會喺本地刪除呢個 image，只會移除 tag。\\r\\n\\r\\n移除 `latest` tag：\\r\\n\\r\\n```bash\\r\\ndocker image rm \\\"<repo>\\\"\\r\\n```\\r\\n\\r\\n移除特定 repo + tag：\\r\\n\\r\\n```bash\\r\\ndocker image rm \\\"<repo>:<tag>\\\"\\r\\n```\\r\\n\\r\\n用 image ID 黎直接刪除 image（如果一個 image ID 有好幾個 repo + tag，就需要用 `-f` 黎強制刪除）：\\r\\n\\r\\n```bash\\r\\ndocker image rm \\\"<image ID>\\\"\\r\\ndocker image rm -f \\\"<image ID>\\\"\\r\\n```\\r\\n\\r\\n例子：\\r\\n\\r\\n```bash\\r\\ndocker image rm redis\\r\\ndocker image rm rabbitmq:management\\r\\ndocker image rm 3e\\r\\ndocker image rm -f 3e\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 3 Container\\r\\n\\r\\n## 3.1 查詢 container 列表\\r\\n\\r\\n查詢所有 containers（包括 exit 左既）：\\r\\n\\r\\n```bash\\r\\ndocker container ls -as\\r\\n```\\r\\n\\r\\n查詢特定 status 既 containers（`-f` 指 filter）：\\r\\n\\r\\n```bash\\r\\ndocker container ls -f status=\\\"<status>\\\"\\r\\n```\\r\\n\\r\\n例子：\\r\\n\\r\\n```bash\\r\\ndocker container ls -f status=created\\r\\ndocker container ls -f status=running\\r\\ndocker container ls -f status=paused\\r\\ndocker container ls -f status=restarting\\r\\ndocker container ls -f status=removing\\r\\ndocker container ls -f status=exited\\r\\ndocker container ls -f status=dead\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 執行 image／建立 container\\r\\n\\r\\n一般我地都會用個 image 既 `Dockerfile` 裡面預先定義左既 `CMD` 或者 `ENTRYPOINT` 黎啟動程式，但如果呢個 image 有好幾個程式既 binaries 喺裡面，或者呢啲程式可以加 options 黎 customize 佢既 behaviors 而我地又有需要既話，我地可以 override 佢既 command。\\r\\n\\r\\n```bash\\r\\ndocker container run \\\"<image ID>\\\" \\\"[override command]\\\"\\r\\n```\\r\\n\\r\\n```bash\\r\\ndocker container run \\\"<repo>:<tag>\\\" \\\"[override command]\\\"\\r\\n```\\r\\n\\r\\n執行 `latest` tag 既 image：\\r\\n\\r\\n```bash\\r\\ndocker container run \\\"<repo>\\\" \\\"[override command]\\\"\\r\\n```\\r\\n\\r\\n|              Option               | 解釋                                                                                                                                                                              |\\r\\n| :-------------------------------: | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n|             `--name`              | Container name，一個固定既 container 名。                                                                                                                                         |\\r\\n|               `-d`                | Detached，個 container process 唔會 attach 落現時既 console window，只會返回 container ID，如果唔介意要 keep 住呢個 console window，或者想即刻睇住啲 log，咁可以唔用呢個 option。 |\\r\\n|              `--rm`               | Remove，即係當個 container exit 左，Docker 會將佢自動 remove。                                                                                                                    |\\r\\n| `-p <host port>:<container port>` | Publish／bind ports。如果有兩個程式指定左同一個 port，咁我地可以將佢地 map 落主 OS 既兩個唔同 ports。                                                                             |\\r\\n|        `-e <key>:<value>`         | Container 裡面既 environment variable。                                                                                                                                           |\\r\\n| `-v <host path>:<container path>` | Volume，可以令 container 入面既某個 path map 到主 OS 既某個 path，當有檔案寫落去，就會去左主 OS 度，做到保存資料既效果，重開 container 都可以沿用返呢啲資料。                     |\\r\\n\\r\\n註：如果本地冇呢個 image，Docker 會自動幫我地下載。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.3 執行 image／建立 container 既熱門例子\\r\\n\\r\\n### 3.3.1 Busybox\\r\\n\\r\\n`busybox` 係測試用既 image，裡面包含一啲 Linux 既工具，可以畀我地學習或者測試 Linux 既 commands。\\r\\n\\r\\n```bash\\r\\ndocker container run -it --rm busybox:latest\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.2 MySQL\\r\\n\\r\\nMySQL server：\\r\\n\\r\\n```bash\\r\\ndocker container run -d --rm -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_USER=mysql -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=dev -v \\\"C:/docker-data/mysql:/var/lib/mysql\\\" --name mysql mysql:latest\\r\\n```\\r\\n\\r\\nMySQL CLI：\\r\\n\\r\\n```bash\\r\\ndocker container exec -it mysql mysql -u\\\"root\\\" -p\\\"root\\\" dev\\r\\ndocker container exec -it mysql mysql -u\\\"mysql\\\" -p\\\"mysql\\\" dev\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.3 MariaDB\\r\\n\\r\\nMariaDB server：\\r\\n\\r\\n```bash\\r\\ndocker container run -d --rm -p 3306:3306 -e MARIADB_ROOT_PASSWORD=root -e MARIADB_USER=mariadb -e MYSQL_PASSWORD=mariadb -e MARIADB_DATABASE=dev -v \\\"C:/docker-data/mariadb:/var/lib/mysql\\\" --name mariadb mariadb:latest\\r\\n```\\r\\n\\r\\nMariaDB CLI：\\r\\n\\r\\n```bash\\r\\ndocker container exec -it mariadb mariadb -u\\\"root\\\" -p\\\"root\\\" dev\\r\\ndocker container exec -it mariadb mariadb -u\\\"mariadb\\\" -p\\\"mariadb\\\" dev\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.4 RabbitMQ\\r\\n\\r\\nRabbitMQ server 連 management 介面：\\r\\n\\r\\n```bash\\r\\ndocker container run -d --rm -p 5672:5672 -p 15672:15672 -e RABBITMQ_DEFAULT_USER=rmq -e RABBITMQ_DEFAULT_PASS=rmq --name rmq rabbitmq:management\\r\\n```\\r\\n\\r\\nManagement 介面：\\r\\n\\r\\n-   地址：[http://localhost:15672](http://localhost:15672)\\r\\n-   用戶：`rmq`\\r\\n-   密碼：`rmq`\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.5 Redis\\r\\n\\r\\nRedis server：\\r\\n\\r\\n```bash\\r\\ndocker container run -d --rm -p 6379:6379 -v \\\"C:/docker-data/redis:/data\\\" --name redis redis:latest redis-server --save 10 1 --requirepass redispw\\r\\n```\\r\\n\\r\\nRedis CLI：\\r\\n\\r\\n```bash\\r\\ndocker container exec -it redis redis-cli -a redispw\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.6 Azul Zulu OpenJDK\\r\\n\\r\\n查詢 JDK 版本：\\r\\n\\r\\n```bash\\r\\ndocker container run --rm azul/zulu-openjdk:11 java --version\\r\\n```\\r\\n\\r\\n喺一個 project folder 度執行 `java` command：\\r\\n\\r\\n```bat\\r\\n:: Windows Command Prompt\\r\\nCD C:\\\\docker-data\\\\spring-boot-demo\\r\\ndocker container run --rm -p 8080:8080 -v \\\"%CD%/target:/usr/project\\\" --name=spring-boot-demo azul/zulu-openjdk:11 java -jar \\\"/usr/project/spring-boot-demo-1.0.0.jar\\\"\\r\\n```\\r\\n\\r\\n假如個 Spring Boot project 有 expose 到 Actuator Health API：[http://localhost:8080/actuator/health](http://localhost:8080/actuator/health)\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.7 Maven\\r\\n\\r\\n查詢 Maven 以及 JDK 版本：\\r\\n\\r\\n```bash\\r\\ndocker container run --rm maven:3-openjdk-11 mvn --version\\r\\n```\\r\\n\\r\\n喺一個 project folder 度執行一個 Maven plugin goal（用返 user 既 `.m2` folder）：\\r\\n\\r\\n```bat\\r\\n:: Windows Command Prompt\\r\\nCD C:\\\\docker-data\\\\spring-boot-demo\\r\\ndocker container run --rm -p 8080:8080 -v \\\"%CD%:/usr/project\\\" -v \\\"%USERPROFILE%/.m2:/root/.m2\\\" --name=spring-boot-demo maven:3-openjdk-11 mvn spring-boot:run -f /usr/project\\r\\n```\\r\\n\\r\\n假如個 Spring Boot project 有 expose 到 Actuator Health API：[http://localhost:8080/actuator/health](http://localhost:8080/actuator/health)\\r\\n\\r\\n---\\r\\n\\r\\n## 3.4 喺 container 裡面執行 commands\\r\\n\\r\\n```bash\\r\\ndocker container exec -it \\\"<container name>\\\" \\\"<command>\\\"\\r\\ndocker container exec -it \\\"<container ID>\\\" \\\"<command>\\\"\\r\\n```\\r\\n\\r\\n例子：\\r\\n\\r\\n```bash\\r\\ndocker container exec -it redis redis-cli\\r\\ndocker container exec -it spring-boot-demo /bin/sh\\r\\ndocker container exec -it spring-boot-demo /bin/bash\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.5 重新啟動 container\\r\\n\\r\\n```bash\\r\\ndocker container restart \\\"<container name>\\\"\\r\\ndocker container restart \\\"<container ID>\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.6 暫停／恢復運行 container\\r\\n\\r\\n暫停 run 緊既 container：\\r\\n\\r\\n```bash\\r\\ndocker container pause \\\"<container name>\\\"\\r\\ndocker container pause \\\"<container ID>\\\"\\r\\n```\\r\\n\\r\\n恢復運行 pause 左既 container：\\r\\n\\r\\n```bash\\r\\ndocker container unpause \\\"<container name>\\\"\\r\\ndocker container unpause \\\"<container ID>\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.7 停止／立即停止 container\\r\\n\\r\\n停止（`SIGTERM`，等 `10` 秒後再 `SIGKILL`）：\\r\\n\\r\\n```bash\\r\\ndocker container stop \\\"<container name>\\\"\\r\\ndocker container stop \\\"<container ID>\\\"\\r\\n```\\r\\n\\r\\n立即停止（直接 `SIGKILL`）：\\r\\n\\r\\n```bash\\r\\ndocker container kill \\\"<container name>\\\"\\r\\ndocker container kill \\\"<container ID>\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.8 刪除 container\\r\\n\\r\\n```bash\\r\\ndocker container rm \\\"<container name>\\\"\\r\\ndocker container rm \\\"<container ID>\\\"\\r\\n```\\r\\n\\r\\n一次過刪除曬特定 status 既 containers：\\r\\n\\r\\n```bat\\r\\n:: Windows Command Prompt\\r\\nFOR /F \\\"tokens=*\\\" %i IN ('docker container ls --filter \\\"status=<status>\\\" -q') DO docker container rm %i\\r\\n```\\r\\n\\r\\n刪除所有 exit 左既 containers 既例子：\\r\\n\\r\\n```bat\\r\\n:: Windows Command Prompt\\r\\nFOR /F \\\"tokens=*\\\" %i IN ('docker container ls --filter \\\"status=exited\\\" -q') DO docker container rm %i\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 4 參考資料\\r\\n\\r\\n-   [手撕 docker 文件結構—— overlayFS，image，container 文件結構詳解](https://zhuanlan.zhihu.com/p/374924046)\\r\\n-   [Docker 筆記（一）- 鏡像與容器，Overlay2](https://zhuanlan.zhihu.com/p/41958018)\\r\\n-   [StackOverflow - What's the difference between a Docker image's Image ID and its Digest?](https://stackoverflow.com/questions/56364643/whats-the-difference-between-a-docker-images-image-id-and-its-digest)\\r\\n-   [StackOverflow - Dashes in Docker commands](https://stackoverflow.com/questions/52614832/dashes-in-docker-commands)\\r\\n-   Docker 官網\\r\\n    -   [Use the OverlayFS storage driver](https://docs.docker.com/storage/storagedriver/overlayfs-driver/)\\r\\n    -   Image commands\\r\\n        -   [docker image ls](https://docs.docker.com/engine/reference/commandline/image_ls/) / [docker images](https://docs.docker.com/engine/reference/commandline/images/)\\r\\n        -   [docker image pull](https://docs.docker.com/engine/reference/commandline/image_pull/) / [docker pull](https://docs.docker.com/engine/reference/commandline/pull/)\\r\\n        -   [docker image tag](https://docs.docker.com/engine/reference/commandline/image_tag/) / [docker tag](https://docs.docker.com/engine/reference/commandline/tag/)\\r\\n        -   [docker image push](https://docs.docker.com/engine/reference/commandline/image_push/) / [docker push](https://docs.docker.com/engine/reference/commandline/push/)\\r\\n        -   [docker image save](https://docs.docker.com/engine/reference/commandline/image_save/) / [docker save](https://docs.docker.com/engine/reference/commandline/save/)\\r\\n        -   [docker image rm](https://docs.docker.com/engine/reference/commandline/image_rm/) / [docker rmi](https://docs.docker.com/engine/reference/commandline/rmi/)\\r\\n    -   Container commands\\r\\n        -   [docker container ls](https://docs.docker.com/engine/reference/commandline/container_ls/) / [docker ps](https://docs.docker.com/engine/reference/commandline/ps/)\\r\\n        -   [docker container run](https://docs.docker.com/engine/reference/commandline/container_run/) / [docker run](https://docs.docker.com/engine/reference/commandline/run/)\\r\\n        -   [docker container exec](https://docs.docker.com/engine/reference/commandline/container_exec/) / [docker exec](https://docs.docker.com/engine/reference/commandline/exec/)\\r\\n        -   [docker container restart](https://docs.docker.com/engine/reference/commandline/container_restart/) / [docker restart](https://docs.docker.com/engine/reference/commandline/restart/)\\r\\n        -   [docker container pause](https://docs.docker.com/engine/reference/commandline/container_pause/) / [docker pause](https://docs.docker.com/engine/reference/commandline/pause/)\\r\\n        -   [docker container unpause](https://docs.docker.com/engine/reference/commandline/container_unpause/) / [docker unpause](https://docs.docker.com/engine/reference/commandline/unpause/)\\r\\n        -   [docker container stop](https://docs.docker.com/engine/reference/commandline/container_stop/) / [docker stop](https://docs.docker.com/engine/reference/commandline/stop/)\\r\\n        -   [docker container kill](https://docs.docker.com/engine/reference/commandline/container_kill/) / [docker kill](https://docs.docker.com/engine/reference/commandline/kill/)\\r\\n        -   [docker container rm](https://docs.docker.com/engine/reference/commandline/container_rm/) / [docker rm](https://docs.docker.com/engine/reference/commandline/rm/)\\r\\n\";","export default \"# 4 PowerMock\\r\\n\\r\\nJDK 版本方面，8 或者 11 都可以。\\r\\n\\r\\n## 4.1 Maven dependencies\\r\\n\\r\\n因為 PowerMock 同 Mockito 既一啲兼容性問題，我地一定要用 Mockito `3.9.0`，唔可以用 `4.0.0` 或者以上既版本。\\r\\n\\r\\n```xml\\r\\n<properties>\\r\\n\\t<powermock.version>2.0.9</powermock.version>\\r\\n</properties>\\r\\n\\r\\n<dependencyManagement>\\r\\n\\t<dependencies>\\r\\n\\t\\t<dependency>\\r\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t\\t<artifactId>spring-boot-dependencies</artifactId>\\r\\n\\t\\t\\t<version>2.7.1</version>\\r\\n\\t\\t\\t<type>pom</type>\\r\\n\\t\\t\\t<scope>import</scope>\\r\\n\\t\\t</dependency>\\r\\n\\t</dependencies>\\r\\n</dependencyManagement>\\r\\n\\r\\n<dependencies>\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t<artifactId>spring-boot-starter-web</artifactId>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.apache.commons</groupId>\\r\\n\\t\\t<artifactId>commons-lang3</artifactId>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t<artifactId>spring-boot-starter-test</artifactId>\\r\\n\\t\\t<scope>test</scope>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.junit.vintage</groupId>\\r\\n\\t\\t<artifactId>junit-vintage-engine</artifactId>\\r\\n\\t\\t<scope>test</scope>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.powermock</groupId>\\r\\n\\t\\t<artifactId>powermock-module-junit4</artifactId>\\r\\n\\t\\t<version>${powermock.version}</version>\\r\\n\\t\\t<scope>test</scope>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.powermock</groupId>\\r\\n\\t\\t<artifactId>powermock-api-mockito2</artifactId>\\r\\n\\t\\t<version>${powermock.version}</version>\\r\\n\\t\\t<scope>test</scope>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.powermock</groupId>\\r\\n\\t\\t<artifactId>powermock-module-junit4-rule-agent</artifactId>\\r\\n\\t\\t<version>${powermock.version}</version>\\r\\n\\t\\t<scope>test</scope>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.mockito</groupId>\\r\\n\\t\\t<artifactId>mockito-core</artifactId>\\r\\n\\t\\t<version>3.12.4</version> <!--$NO-MVN-MAN-VER$-->\\r\\n\\t\\t<scope>test</scope>\\r\\n\\t</dependency>\\r\\n</dependencies>\\r\\n\\r\\n<build>\\r\\n\\t<plugins>\\r\\n\\t\\t<plugin>\\r\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t\\t<artifactId>spring-boot-maven-plugin</artifactId>\\r\\n\\t\\t\\t<executions>\\r\\n\\t\\t\\t\\t<execution>\\r\\n\\t\\t\\t\\t\\t<goals>\\r\\n\\t\\t\\t\\t\\t\\t<goal>repackage</goal>\\r\\n\\t\\t\\t\\t\\t</goals>\\r\\n\\t\\t\\t\\t</execution>\\r\\n\\t\\t\\t</executions>\\r\\n\\t\\t</plugin>\\r\\n\\r\\n\\t\\t<plugin>\\r\\n\\t\\t\\t<groupId>org.apache.maven.plugins</groupId>\\r\\n\\t\\t\\t<artifactId>maven-surefire-plugin</artifactId>\\r\\n\\t\\t\\t<version>3.0.0-M7</version>\\r\\n\\t\\t\\t<configuration>\\r\\n\\t\\t\\t\\t<argLine>-Djdk.attach.allowAttachSelf=true</argLine>\\r\\n\\t\\t\\t</configuration>\\r\\n\\t\\t</plugin>\\r\\n\\t</plugins>\\r\\n</build>\\r\\n```\\r\\n\\r\\n註：`-Djdk.attach.allowAttachSelf=true` 係用黎解決 JDK 8 之後既新版 JDKs 所出現既「Can not attach to current VM」問題。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [JDK-8180425 : Release Note: Attach API cannot be used to attach to the current VM by default](https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8180425)\\r\\n\\r\\n---\\r\\n\\r\\n## 4.2 寫 Java code\\r\\n\\r\\n先建立一個典型既 Spring Boot web application。\\r\\n\\r\\n寫一個 dummy component：\\r\\n\\r\\n```java\\r\\n@Component\\r\\npublic class MyComponent {\\r\\n\\r\\n}\\r\\n```\\r\\n\\r\\n之後我地可以寫 test code：\\r\\n\\r\\n```java\\r\\n@PrepareForTest({ StringUtils.class, RandomStringUtils.class })\\r\\n@PowerMockIgnore({ \\\"com.sun.org.apache.xerces.*\\\", \\\"javax.xml.*\\\", \\\"org.xml.*\\\", \\\"javax.management.*\\\" })\\r\\n@SpringBootTest\\r\\n@RunWith(SpringRunner.class)\\r\\npublic class MockStaticSpringTest {\\r\\n\\r\\n    @Autowired\\r\\n    MyComponent myComponent;\\r\\n\\r\\n    @Rule\\r\\n    public PowerMockRule powerMockRule = new PowerMockRule();\\r\\n\\r\\n    @Before\\r\\n    public void setUp() {\\r\\n        PowerMockito.spy(StringUtils.class);\\r\\n        PowerMockito.mockStatic(RandomStringUtils.class);\\r\\n    }\\r\\n\\r\\n    // Spring Boot test，可以測試 Spring context 能唔能夠成功 load 到\\r\\n    @Test\\r\\n    public void contextLoads() {\\r\\n        assertNotNull(myComponent);\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n    public void test_mockStatic_StringUtils() {\\r\\n        assertTrue(StringUtils.isBlank(\\\"   \\\"));\\r\\n        PowerMockito.when(StringUtils.isBlank(any())).thenReturn(false);\\r\\n        assertFalse(StringUtils.isBlank(\\\"   \\\"));\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n    public void test_mockStatic_RandomStringUtils() {\\r\\n        assertNull(RandomStringUtils.randomAlphabetic(10));\\r\\n        PowerMockito.when(RandomStringUtils.randomAlphabetic(anyInt())).thenReturn(\\\"Hello World!\\\");\\r\\n        assertEquals(\\\"Hello World!\\\", RandomStringUtils.randomAlphabetic(10));\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   我地用既係 `SpringRunner` 而唔係 `PowerMockRunner`。\\r\\n    -   正因為咁，所以我地要加 `@Rule public PowerMockRule powerMockRule = new PowerMockRule();`\\r\\n        -   呢個 property 一定要係 `public`。\\r\\n        -   呢個 property 要先 initialize，例如 `new PowerMockRule()`。\\r\\n-   `@PowerMockIgnore` 有可能需要用到。\\r\\n-   我地要 mock static 既 class 係 Apache Commons Lang3 既 `StringUtils` 以及 `RandomStringUtils`。\\r\\n-   PowerMock 使用上其實同 Mockito 係非常相似。\\r\\n    -   `PowerMockito.mockStatic(class)` 默認會令 mock object 既所有 methods 都冇任何 implementation，即係如果有 return type，佢就會返回 `null` 或者 `false` 之類既默認 value，除非我地用 when-then 既寫法賦予被測試既 method 一啲新既 behavior。\\r\\n    -   `PowerMockito.spy(class)` 係當我地需要 mock object 默認用返本身既 implementation，除非我地用 when-then 既寫法賦予被測試既 method 一啲新既 behavior。\\r\\n\";","export default \"# 5 WireMock\\r\\n\\r\\n## 5.1 Maven dependencies\\r\\n\\r\\n```xml\\r\\n<dependencyManagement>\\r\\n\\t<dependencies>\\r\\n\\t\\t<dependency>\\r\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t\\t<artifactId>spring-boot-dependencies</artifactId>\\r\\n\\t\\t\\t<version>2.7.1</version>\\r\\n\\t\\t\\t<type>pom</type>\\r\\n\\t\\t\\t<scope>import</scope>\\r\\n\\t\\t</dependency>\\r\\n\\t</dependencies>\\r\\n</dependencyManagement>\\r\\n\\r\\n<dependencies>\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t<artifactId>spring-boot-starter-web</artifactId>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t<artifactId>spring-boot-starter-test</artifactId>\\r\\n\\t\\t<scope>test</scope>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.junit.vintage</groupId>\\r\\n\\t\\t<artifactId>junit-vintage-engine</artifactId>\\r\\n\\t\\t<scope>test</scope>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>com.github.tomakehurst</groupId>\\r\\n\\t\\t<artifactId>wiremock-jre8-standalone</artifactId>\\r\\n\\t\\t<version>2.34.0</version>\\r\\n\\t\\t<scope>test</scope>\\r\\n\\t</dependency>\\r\\n</dependencies>\\r\\n\\r\\n<build>\\r\\n\\t<plugins>\\r\\n\\t\\t<!-- spring-boot-maven-plugin -->\\r\\n\\r\\n\\t\\t<plugin>\\r\\n\\t\\t\\t<groupId>org.apache.maven.plugins</groupId>\\r\\n\\t\\t\\t<artifactId>maven-surefire-plugin</artifactId>\\r\\n\\t\\t\\t<version>3.0.0-M7</version>\\r\\n\\t\\t\\t<configuration>\\r\\n\\t\\t\\t\\t<includes>\\r\\n\\t\\t\\t\\t\\t<include>**Test.java</include>\\r\\n\\t\\t\\t\\t\\t<include>**IT.java</include>\\r\\n\\t\\t\\t\\t</includes>\\r\\n\\t\\t\\t</configuration>\\r\\n\\t\\t</plugin>\\r\\n\\t</plugins>\\r\\n</build>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 5.2 寫 Java code\\r\\n\\r\\n先建立一個典型既 Spring Boot web application。\\r\\n\\r\\n`OrderController.java`：\\r\\n\\r\\n```java\\r\\n@RestController\\r\\n@RequestMapping(path = \\\"orders\\\", produces = MediaType.APPLICATION_JSON_VALUE)\\r\\npublic class OrderController {\\r\\n\\r\\n    @Autowired\\r\\n    RestTemplate orderRestTemplate;\\r\\n\\r\\n    @GetMapping(\\\"{orderId}\\\")\\r\\n    public Order getOrderById(@PathVariable(\\\"orderId\\\") String orderId) {\\r\\n\\r\\n        // call Order Service\\r\\n        return orderRestTemplate\\r\\n                .exchange(\\\"http://localhost:8080/orders?orderId=\\\" + orderId,\\r\\n                          HttpMethod.GET, HttpEntity.EMPTY, Order.class)\\r\\n                .getBody();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n`ApiClientConfig.java`：\\r\\n\\r\\n```java\\r\\n@Configuration\\r\\npublic class ApiClientConfig {\\r\\n\\r\\n    @Bean\\r\\n    public RestTemplate orderRestTemplate(RestTemplateBuilder restTemplateBuilder) {\\r\\n        return restTemplateBuilder.basicAuthentication(\\\"user\\\", \\\"pass\\\").build();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n之後我地可以寫 test code：\\r\\n\\r\\n```java\\r\\nimport static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\\r\\nimport static com.github.tomakehurst.wiremock.client.WireMock.equalTo;\\r\\nimport static com.github.tomakehurst.wiremock.client.WireMock.getRequestedFor;\\r\\nimport static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\\r\\nimport static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\\r\\nimport static com.github.tomakehurst.wiremock.client.WireMock.verify;\\r\\nimport static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\\r\\nimport static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\\r\\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\\r\\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\\r\\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\\r\\n\\r\\n@AutoConfigureMockMvc\\r\\n@SpringBootTest\\r\\n@RunWith(SpringRunner.class)\\r\\npublic class OrderControllerIT {\\r\\n\\r\\n    @Autowired\\r\\n    MockMvc mockMvc;\\r\\n\\r\\n    static WireMockServer orderServiceMockServer = new WireMockServer(8080);\\r\\n\\r\\n    @BeforeClass\\r\\n    public static void setUpOnce() {\\r\\n        orderServiceMockServer.start();\\r\\n    }\\r\\n\\r\\n    @AfterClass\\r\\n    public static void tearDownOnce() {\\r\\n        orderServiceMockServer.stop();\\r\\n    }\\r\\n\\r\\n    @Before\\r\\n    public void setUp() {\\r\\n        orderServiceMockServer.resetRequests();\\r\\n    }\\r\\n\\r\\n    @Test\\r\\n    public void test() throws Exception {\\r\\n\\r\\n        stubFor(WireMock.get(urlEqualTo(\\\"/orders?orderId=1\\\"))\\r\\n                .withBasicAuth(\\\"user\\\", \\\"pass\\\")\\r\\n                .withQueryParam(\\\"orderId\\\", equalTo(\\\"1\\\"))\\r\\n                .willReturn(aResponse().withHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE)\\r\\n                                .withBody(\\\"{ \\\\\\\"orderId\\\\\\\": \\\\\\\"1\\\\\\\", \\\\\\\"totalPrice\\\\\\\": 8888 }\\\")));\\r\\n\\r\\n        mockMvc.perform(get(\\\"/orders/1\\\"))\\r\\n               .andDo(print())\\r\\n               .andExpectAll(\\r\\n                   status().isOk(),\\r\\n                   content().json(\\\"{ \\\\\\\"orderId\\\\\\\": \\\\\\\"1\\\\\\\" }\\\", false),\\r\\n                   jsonPath(\\\"$.orderId\\\").value(\\\"1\\\"),\\r\\n                   jsonPath(\\\"$.totalPrice\\\").value(8888));\\r\\n\\r\\n        verify(1, getRequestedFor(urlEqualTo(\\\"/orders?orderId=1\\\")));\\r\\n    }\\r\\n}\\r\\n```\\r\\n\";","export default \"# 1 Redis 簡介\\r\\n\\r\\n關於 Redis 既基本簡介可以喺呢篇度搵到：[Spring 項目使用 Redis 做 caching - Redis 簡介](/blog/spring-caching-redis#1-redis-簡介)。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 基本概念\\r\\n\\r\\nRedis 有 `16` 個 databases（`0`-based，`0` 至 `15`），每個 database 裡面既數據都係以 key-value pair 既形式儲存。\\r\\n\\r\\nRedis 既 data types 指既係 key-value pair 既 value 所用既儲存格式。\\r\\n\\r\\n---\\r\\n\\r\\n# 3 本地運行\\r\\n\\r\\n關於點樣本地運行 Redis 可以喺呢篇度搵到：[Spring 項目使用 Redis 做 caching - 安裝](/blog/spring-caching-redis#2-安裝)。\\r\\n\\r\\n---\\r\\n\\r\\n# 4 Database 操作\\r\\n\\r\\n## 4.1 選擇 database\\r\\n\\r\\nRedis CLI 成功連接之後，初始選擇既係 database `0`。\\r\\n\\r\\n```bash\\r\\nSELECT \\\"<database index, 0~15>\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.2 查詢目前 database 資料數量\\r\\n\\r\\n查詢目前所選擇既 database 既資料數量（key 數量）：\\r\\n\\r\\n```bash\\r\\n# database size\\r\\nDBSIZE\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.3 刪除目前 database 內所有資料\\r\\n\\r\\n以下指令會刪除目前所選擇既 database 既所有資料：\\r\\n\\r\\n```bash\\r\\n# flush database\\r\\nFLUSHDB\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 4.4 刪除所有資料\\r\\n\\r\\n以下指令會刪除所有 databases 既所有資料：\\r\\n\\r\\n```bash\\r\\n# flush all\\r\\nFLUSHALL\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 5 查詢 keys\\r\\n\\r\\n## 5.1 `KEYS`\\r\\n\\r\\n查詢所有 keys：\\r\\n\\r\\n```bash\\r\\nKEYS *\\r\\n```\\r\\n\\r\\n我地亦可以使用 glob-style 既 patterns 去查詢 keys，例如用 `*` 代表任意長度既任意值。\\r\\n\\r\\n查詢以特定 prefix 開頭既 keys：\\r\\n\\r\\n```bash\\r\\nKEYS \\\"<key prefix>*\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 5.2 `SCAN`\\r\\n\\r\\n根據 Redis 官網呢篇關於 `KEYS` 指令既文檔——[KEYS pattern](https://redis.io/commands/keys/)，我地最好都係唔好喺 Production 使用 `KEYS`：\\r\\n\\r\\n> **Warning**: consider `KEYS` as a command that should only be used in production environments with extreme care. It may ruin performance when it is executed against large databases. This command is intended for debugging and special operations, such as changing your keyspace layout. Don't use `KEYS` in your regular application code. If you're looking for a way to find keys in a subset of your keyspace, consider using [`SCAN`](https://redis.io/commands/scan) or [sets](https://redis.io/topics/data-types#sets).\\r\\n\\r\\n查詢以特定 prefix 開頭、特定 data type 既 keys（第一頁，建議返回若干數量）：\\r\\n\\r\\n```bash\\r\\nSCAN 0 MATCH \\\"<key prefix>*\\\" COUNT \\\"<page count>\\\" TYPE \\\"<string/list/set/zset/hash/stream>\\\"\\r\\n```\\r\\n\\r\\n結果係由 `2` 個 elements 組成：\\r\\n\\r\\n1. 新既 cursor 數字，畀我地下次再 `SCAN` 果陣用。\\r\\n1. 呢次查詢既分頁結果，以 array 表示，elements 係 keys。\\r\\n\\r\\n註：\\r\\n\\r\\n-   有少少類似 SQL `SELECT` 既 `WHERE LIMIT OFFSET` 分頁查詢，但都有好多唔相似既地方。\\r\\n    -   Redis 會先查詢 keys，之後再應用 `MATCH` 以及 `TYPE` 既 filters，呢個有別於 SQL 先應用 `WHERE` 然後再應用 `LIMIT OFFSET` 既設計。\\r\\n        -   咁亦即係話，如果咁岩個分頁既 keys 全部唔中 pattern 或者 data type 既話，呢次 `SCAN` 既最終分頁查詢結果就會係 empty array，但係下一頁（下一個 `SCAN`）既結果反而有可能會係 non-empty array。\\r\\n    -   根據官網，`SCAN` 有可能會出現重複既結果，所以我地既程式係需要 handle 有重複結果既情況。\\r\\n    -   如果有 element(s) 係喺 `SCAN` loop 進行緊既時候加入，佢地未必會出現喺結果裡面，呢樣野係話唔定。\\r\\n    -   如果有 element(s) 係喺 `SCAN` loop 進行既整個過程裡面都存在，咁佢地就保證一定會出現喺某次既結果裡面。\\r\\n    -   如果有 element(s) 係喺 `SCAN` loop 進行既整個過程裡面都唔存在，咁佢地就保證一定唔會出現喺任何結果裡面。\\r\\n-   `COUNT`\\r\\n    -   代表「建議」分頁數量，類似 SQL 既 `LIMIT`。\\r\\n    -   默認值係 `10`。\\r\\n    -   呢個數字只係一個「建議」，基於 Redis 對於 `SCAN` 既處理方式以及 `MATCH` 既生效次序，Redis 最終唔一定會（好可能唔會）返回 exactly 呢個數量既 keys。\\r\\n-   `SCAN` 後面既數字——cursor\\r\\n    -   感覺上類似 SQL 既 `OFFSET`，但事實上唔係。呢個數字喺一個完整既 `SCAN` loop 裡面可以增加亦可以減少。\\r\\n    -   因為 Redis 唔一定會返回我地 `COUNT` 所指定既數量，所以下一次再用 `SCAN` 查詢果陣，`SCAN` 後面既數字必須要用返目前 `SCAN` 查詢結果所返回既第 `1` 個 element 既數字。\\r\\n    -   一般用法係由 `0` 開始，直至下一次結果返回既第 `1` 個 element 係 `0`，咁先算係查詢曬所有結果（作為一個完整既 `SCAN` loop）。\\r\\n        -   但因為冇 server-side state，所以喺一個完整既 `SCAN` loop 裡面任何時候中斷查詢都冇問題。\\r\\n-   `MATCH`\\r\\n    -   同 `KEYS` 一樣都係用 glob-style 既 patterns。\\r\\n    -   佢會喺查詢完分頁既 keys 之後先至生效。\\r\\n-   `TYPE`\\r\\n    -   可以係 `string`、`list`、`set`、`zset`、`hash` 或者 `stream`。\\r\\n    -   佢會喺查詢完分頁既 keys 之後先至生效。\\r\\n\\r\\n參考資料：\\r\\n\\r\\n-   [Redis 官網 - SCAN cursor [MATCH pattern] [COUNT count] [TYPE type]](https://redis.io/commands/scan/)\\r\\n\\r\\n---\\r\\n\\r\\n## 5.3 查詢 keys 存在與否\\r\\n\\r\\n查詢一個或多個 key(s) 存在與否：\\r\\n\\r\\n```bash\\r\\nEXISTS \\\"<key>\\\" \\\"[<key2>...]\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 6 Data types\\r\\n\\r\\nRedis 既 data types 指既係 key-value pair 既 value 所用既儲存格式。\\r\\n\\r\\n| Data type  | 描述                                                         |\\r\\n| :--------: | ------------------------------------------------------------ |\\r\\n|   String   | 一般既文字格式，我地亦可以用 JSON 格式黎儲存 nested 既數據。 |\\r\\n|    List    | 基本上就係 Java 既 `List` 咁，會保留 elements 既新增次序。   |\\r\\n|    Set     | 基本上就係 Java 既 `Set` 咁，唔容許有重覆既 value。          |\\r\\n|    Hash    | 基本上就係 Java 既 `Map` 咁。                                |\\r\\n| Sorted Set | 同 set 相似，但可以根據需要而給予 elements 先後次序。        |\\r\\n\\r\\n查詢某一個 key-value pair 既 value data type：\\r\\n\\r\\n```bash\\r\\nTYPE \\\"<key>\\\"\\r\\n```\\r\\n\\r\\n以下會介紹最主要既幾種 data types：\\r\\n\\r\\n-   String\\r\\n-   List\\r\\n-   Set\\r\\n\\r\\n## 6.1 String\\r\\n\\r\\n查詢 value：\\r\\n\\r\\n```bash\\r\\nGET \\\"<key>\\\"\\r\\n```\\r\\n\\r\\n新增或覆蓋：\\r\\n\\r\\n```bash\\r\\nSET \\\"<key>\\\" \\\"<value>\\\"\\r\\n```\\r\\n\\r\\n新增或覆蓋（附失效時間，以秒計）：\\r\\n\\r\\n```bash\\r\\n# set expiration\\r\\nSETEX \\\"<key>\\\" \\\"<timeout in seconds>\\\" \\\"<value>\\\"\\r\\n```\\r\\n\\r\\n刪除：\\r\\n\\r\\n```bash\\r\\n# get and delete\\r\\nGETDEL \\\"<key>\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 6.2 List\\r\\n\\r\\nList 係冇得好似 Set 咁直接查詢某 value 存在與否。\\r\\n\\r\\n查詢所有 elements：\\r\\n\\r\\n```bash\\r\\n# list range\\r\\nLRANGE \\\"<key>\\\" 0 -1\\r\\n```\\r\\n\\r\\n查詢 elements 既數量：\\r\\n\\r\\n```bash\\r\\n# list length\\r\\nLLEN \\\"<key>\\\"\\r\\n```\\r\\n\\r\\n新增一個或多個 element(s) 喺最前面：\\r\\n\\r\\n```bash\\r\\n# left push\\r\\nLPUSH \\\"<key>\\\" \\\"<value>\\\" \\\"[<value2>...]\\\"\\r\\n```\\r\\n\\r\\n新增一個或多個 element(s) 喺最後面：\\r\\n\\r\\n```bash\\r\\n# right push\\r\\nRPUSH \\\"<key>\\\" \\\"<value>\\\" \\\"[<value2>...]\\\"\\r\\n```\\r\\n\\r\\n根據 value 刪除所有匹配既 elements：\\r\\n\\r\\n```bash\\r\\n# list remove\\r\\nLREM \\\"<key>\\\" 0 \\\"<value>\\\"\\r\\n```\\r\\n\\r\\n刪除最前面既一個或多個 element(s) 並且返回佢或佢地既 value(s)：\\r\\n\\r\\n```bash\\r\\n# left pop\\r\\nLPOP \\\"<key>\\\" \\\"[<count>]\\\"\\r\\n```\\r\\n\\r\\n刪除最後面既一個或多個 element(s) 並且返回佢或佢地既 value(s)：\\r\\n\\r\\n```bash\\r\\n# right pop\\r\\nRPOP \\\"<key>\\\" \\\"[<count>]\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 6.3 Set\\r\\n\\r\\n查詢所有 elements：\\r\\n\\r\\n```bash\\r\\n# set members\\r\\nSMEMBERS \\\"<key>\\\"\\r\\n```\\r\\n\\r\\n查詢 elements 既數量：\\r\\n\\r\\n```bash\\r\\n# set cardinality\\r\\nSCARD \\\"<key>\\\"\\r\\n```\\r\\n\\r\\n新增一個或多個 element(s)：\\r\\n\\r\\n```bash\\r\\n# set add\\r\\nSADD \\\"<key>\\\" \\\"<value>\\\" \\\"[<value2>...]\\\"\\r\\n```\\r\\n\\r\\n刪除一個或多個 element(s)：\\r\\n\\r\\n```bash\\r\\n# set remove\\r\\nSREM \\\"<key>\\\" \\\"<value>\\\" \\\"[<value2>...]\\\"\\r\\n```\\r\\n\\r\\n刪除一個或多個任意既 element(s) 並且返回佢或佢地既 value(s)：\\r\\n\\r\\n```bash\\r\\n# set pop\\r\\nSPOP \\\"<key>\\\"\\r\\n```\\r\\n\\r\\n查詢某 value 存在與否：\\r\\n\\r\\n```bash\\r\\n# set is member\\r\\nSISMEMBER \\\"<key>\\\" \\\"<value>\\\"\\r\\n```\\r\\n\\r\\n查詢一個或多個任意既 element(s) 既 value(s)：\\r\\n\\r\\n```bash\\r\\n# set random member\\r\\nSRANDMEMBER \\\"<key>\\\" \\\"[<count>]\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 7 其他指令\\r\\n\\r\\n## 7.1 登入\\r\\n\\r\\n```bash\\r\\nAUTH \\\"<password>\\\"\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 7.2 查詢客戶端連線資料\\r\\n\\r\\n```bash\\r\\nCLIENT INFO\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 7.3 CLI 內建既指令使用手冊\\r\\n\\r\\n```bash\\r\\nHELP @string\\r\\nHELP @list\\r\\nHELP @set\\r\\nHELP @hash\\r\\nHELP @sorted-set\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 8 參考資料\\r\\n\\r\\n-   [Redis 命令參考](http://redisdoc.com/)\\r\\n-   Redis 官網\\r\\n    -   [Data types tutorial](https://redis.io/docs/manual/data-types/data-types-tutorial/)\\r\\n    -   [Redis data types](https://redis.io/docs/manual/data-types/)\\r\\n    -   [String commands](https://redis.io/commands/?group=string)\\r\\n    -   [List commands](https://redis.io/commands/?group=list)\\r\\n    -   [Set commands](https://redis.io/commands/?group=set)\\r\\n-   [StackOverflow - Redis is single-threaded, then how does it do concurrent I/O?](https://stackoverflow.com/questions/10489298/redis-is-single-threaded-then-how-does-it-do-concurrent-i-o)\\r\\n\";","export default \"# 1 Spring Webflux\\r\\n\\r\\nReactive programming 可以畀我地靈活啲咁使用系統資源，\\r\\n\\r\\n根據 [Spring 官網 - Web on Reactive Stack](https://docs.spring.io/spring-framework/docs/current/reference/html/web-reactive.html#webflux-new-framework)：\\r\\n\\r\\n> Why was Spring WebFlux created?\\r\\n>\\r\\n> Part of the answer is the need for a non-blocking web stack to handle concurrency with a small number of threads and scale with fewer hardware resources.\\r\\n\\r\\n> The other part of the answer is functional programming.\\r\\n\\r\\n## 1.1 應用場景（vs 傳統 Spring MVC）\\r\\n\\r\\n到底我地應唔應該由傳統 Spring MVC 一下子轉曬做 reactive 既 Spring Webflux？\\r\\n\\r\\n根據 [Spring 官網 - Web on Reactive Stack](https://docs.spring.io/spring-framework/docs/current/reference/html/web-reactive.html#webflux-framework-choice)：\\r\\n\\r\\n> Spring MVC or WebFlux?\\r\\n\\r\\n> -   If you have a Spring MVC application that works fine, there is no need to change. Imperative programming is the easiest way to write, understand, and debug code. You have maximum choice of libraries, since, historically, most are blocking.\\r\\n\\r\\n> -   In a microservice architecture, you can have a mix of applications with either Spring MVC or Spring WebFlux controllers or with Spring WebFlux functional endpoints. Having support for the same annotation-based programming model in both frameworks makes it easier to re-use knowledge while also selecting the right tool for the right job.\\r\\n\\r\\n> -   A simple way to evaluate an application is to check its dependencies. If you have blocking persistence APIs (JPA, JDBC) or networking APIs to use, Spring MVC is the best choice for common architectures at least. It is technically feasible with both Reactor and RxJava to perform blocking calls on a separate thread but you would not be making the most of a non-blocking web stack.\\r\\n\\r\\n> -   If you have a Spring MVC application with calls to remote services, try the reactive WebClient. You can return reactive types (Reactor, RxJava, or other) directly from Spring MVC controller methods. The greater the latency per call or the interdependency among calls, the more dramatic the benefits. Spring MVC controllers can call other reactive components too.\\r\\n\\r\\n> -   If you have a large team, keep in mind the steep learning curve in the shift to non-blocking, functional, and declarative programming. A practical way to start without a full switch is to use the reactive WebClient. Beyond that, start small and measure the benefits. We expect that, for a wide range of applications, the shift is unnecessary.\\r\\n\\r\\n---\\r\\n\\r\\n# 2 動手寫\\r\\n\\r\\n## 2.1 Maven dependencies\\r\\n\\r\\n```xml\\r\\n<dependencyManagement>\\r\\n\\t<dependencies>\\r\\n\\t\\t<dependency>\\r\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t\\t<artifactId>spring-boot-dependencies</artifactId>\\r\\n\\t\\t\\t<version>2.7.1</version>\\r\\n\\t\\t\\t<type>pom</type>\\r\\n\\t\\t\\t<scope>import</scope>\\r\\n\\t\\t</dependency>\\r\\n\\t</dependencies>\\r\\n</dependencyManagement>\\r\\n\\r\\n<dependencies>\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t<artifactId>spring-boot-starter-webflux</artifactId>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.projectlombok</groupId>\\r\\n\\t\\t<artifactId>lombok</artifactId>\\r\\n\\t\\t<scope>provided</scope>\\r\\n\\t</dependency>\\r\\n</dependencies>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 寫 Java code\\r\\n\\r\\nProject structure：\\r\\n\\r\\n-   `src/main/java`\\r\\n    -   `/code`\\r\\n        -   `/config`\\r\\n            -   `ApiConfig.java`\\r\\n        -   `/controller`\\r\\n            -   `OrderController.java`\\r\\n            -   `OrderControllerRx.java`\\r\\n        -   `/dao`\\r\\n            -   `OrderDao.java`\\r\\n        -   `/model`\\r\\n            -   `Order.java`\\r\\n        -   `MainApplication.java`\\r\\n\\r\\n`OrderController.java`：\\r\\n\\r\\n```java\\r\\n@RestController\\r\\n@RequestMapping(path = \\\"orders\\\", produces = MediaType.APPLICATION_JSON_VALUE)\\r\\npublic class OrderController {\\r\\n\\r\\n    @Autowired OrderDao orderDao;\\r\\n\\r\\n    @GetMapping\\r\\n    public List<Order> getAllOrders() {\\r\\n        return orderDao.getAllOrders();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n`OrderControllerRx.java`：\\r\\n\\r\\n```java\\r\\n@RestController\\r\\n@RequestMapping(path = \\\"rx/orders\\\", produces = MediaType.TEXT_EVENT_STREAM_VALUE)\\r\\npublic class OrderControllerRx {\\r\\n\\r\\n    @Autowired OrderDao orderDao;\\r\\n    @Autowired WebClient orderApi;\\r\\n\\r\\n    @GetMapping\\r\\n    public Flux<Order> getAllOrdersRx() {\\r\\n        return orderDao.getAllOrdersRx();\\r\\n    }\\r\\n\\r\\n    @GetMapping(\\\"v2\\\")\\r\\n    public Flux<Order> getAllOrdersRxFromSelf() {\\r\\n        return orderApi.get().uri(\\\"/rx/orders\\\").exchangeToFlux(res -> {\\r\\n            if (res.statusCode()==HttpStatus.OK) {\\r\\n                return res.bodyToFlux(Order.class);\\r\\n            } else {\\r\\n                return res.createException().flatMapMany(Mono::error);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n`OrderDao.java`：\\r\\n\\r\\n```java\\r\\n@Repository\\r\\npublic class OrderDao {\\r\\n\\r\\n    public List<Order> getAllOrders() {\\r\\n        return range(0, 10).mapToObj(e -> new Order().setId(UUID.randomUUID().toString())\\r\\n                .setDate(LocalDateTime.now())\\r\\n                .setTotal(new BigDecimal(new Random().nextInt(10000)+\\\"\\\")))\\r\\n                .peek(e -> {\\r\\n                    try {\\r\\n                        Thread.sleep(1000);\\r\\n                    } catch (InterruptedException ex) {\\r\\n                    }\\r\\n                })\\r\\n                .collect(toList());\\r\\n    }\\r\\n\\r\\n    public Flux<Order> getAllOrdersRx() {\\r\\n        return Flux.range(0, 10)\\r\\n                .delayElements(Duration.ofSeconds(1))\\r\\n                .doOnNext(e -> {\\r\\n                    System.out.println(e);\\r\\n                })\\r\\n                .map(e -> new Order().setId(UUID.randomUUID().toString())\\r\\n                    .setDate(LocalDateTime.now())\\r\\n                    .setTotal(new BigDecimal(new Random().nextInt(10000)+\\\"\\\")));\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n`ApiConfig`：\\r\\n\\r\\n```java\\r\\n@Configuration\\r\\npublic class ApiConfig {\\r\\n\\r\\n    @Bean\\r\\n    public WebClient orderApi() {\\r\\n        return WebClient.create(\\\"http://localhost:8080\\\");\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n`Order.java`：\\r\\n\\r\\n```java\\r\\n@Data\\r\\n@Accessors(chain = true)\\r\\n@FieldDefaults(level = PRIVATE)\\r\\npublic class Order {\\r\\n    String id;\\r\\n    LocalDateTime date;\\r\\n    BigDecimal total;\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 3 測試\\r\\n\\r\\n## 3.1 Postman\\r\\n\\r\\n現時 Postman 唔支援 streaming events 既 API。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 cURL\\r\\n\\r\\n傳統 Spring MVC，會 block：\\r\\n\\r\\n```bash\\r\\ncurl -v http://localhost:8080/orders\\r\\n```\\r\\n\\r\\nReactive 既 Spring Webflux，唔會 block，逐啲逐啲咁返回：\\r\\n\\r\\n```bash\\r\\ncurl -v http://localhost:8080/rx/orders\\r\\n```\\r\\n\\r\\n```bash\\r\\ncurl -v http://localhost:8080/rx/orders/v2\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.3 瀏覽器\\r\\n\\r\\n### 3.3.1 直接打開\\r\\n\\r\\n傳統 Spring MVC API（`10` 秒後一口氣返回）：\\r\\n\\r\\n-   http://localhost:8080/orders\\r\\n\\r\\nReactive 既 Spring Webflux APIs（每過 `1` 秒就返回 stream event data，total `10` 次）：\\r\\n\\r\\n-   http://localhost:8080/rx/orders\\r\\n-   http://localhost:8080/rx/orders/v2\\r\\n\\r\\n---\\r\\n\\r\\n### 3.3.2 JavaScript Fetch API\\r\\n\\r\\n#### 3.3.2.1 傳統 Spring MVC API\\r\\n\\r\\n喺 Chrome developer tools 執行下面既 JavaScript：\\r\\n\\r\\n```js\\r\\nasync function printOrders() {\\r\\n\\tconst response = await fetch(\\\"http://localhost:8080/orders\\\");\\r\\n\\tconst data = await response.json();\\r\\n\\tconsole.log(data);\\r\\n}\\r\\n\\r\\nprintOrders();\\r\\n```\\r\\n\\r\\n#### 3.3.2.2 Reactive 既 Spring Webflux APIs\\r\\n\\r\\nAPI 用其中一個都可以：\\r\\n\\r\\n-   http://localhost:8080/rx/orders\\r\\n-   http://localhost:8080/rx/orders/v2\\r\\n\\r\\n喺 Chrome developer tools 執行下面既 JavaScript：\\r\\n\\r\\n```js\\r\\nasync function printOrders() {\\r\\n\\tconst response = await fetch(\\\"http://localhost:8080/rx/orders/v2\\\");\\r\\n\\tconst stream = response.body.pipeThrough(new TextDecoderStream());\\r\\n\\tconst reader = stream.getReader();\\r\\n\\r\\n\\twhile (true) {\\r\\n\\t\\tconst { value, done } = await reader.read();\\r\\n\\t\\tconsole.log(done);\\r\\n\\t\\tconsole.log(value);\\r\\n\\r\\n\\t\\tif (done) {\\r\\n\\t\\t\\tbreak;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nprintOrders();\\r\\n```\\r\\n\";","export default \"# 1 情境\\r\\n\\r\\n有一個遊戲網頁，上面有好多 wallpaper 既 ZIP 檔畀人下載，我既目標就係要一下子將所有檔案下載曬。\\r\\n\\r\\n[FEZ 壁紙](http://www.fantasy-earth.com/library/wallpaper.php)\\r\\n\\r\\n---\\r\\n\\r\\n# 2 分析\\r\\n\\r\\n呢個網站：\\r\\n\\r\\n-   唔係以同一個介面顯示曬所有下載連結，佢既 wallpaper 下載介面係以年份分左幾個 tabs，如果手動下載既話，需要遊歷每個 tab。\\r\\n-   話雖如此，佢用既係典型既 client side filter，喺同一版既 HTML 有齊曬所有既下載連結，而每個年份既 tab button 都會 call `menu_change(\\\"<id filter>\\\")` 既 JavaScript function，用 jQuery 將符合果個 tab button 指定既某個 `id` 既 rows filter 出黎。\\r\\n-   因為所有下載連結既 `href` 都係以某個 host 開頭，所以可以用 CSS selector 將所有連結搵出黎。\\r\\n    -   ```\\r\\n        a[href^='http://cache.dl.fantasy-earth.com/img/wallpaper/']\\r\\n        ```\\r\\n        -   可以見到有 `197` 個結果。\\r\\n    -   然後可以用 JavaScript 砌一堆 cURL commands：\\r\\n        ```js\\r\\n        console.log(\\r\\n        \\t[...document.querySelectorAll(\\\"a[href^='http://cache.dl.fantasy-earth.com/img/wallpaper/']\\\")]\\r\\n        \\t\\t.map((e) => `curl --output-dir output -O ${e.href}`)\\r\\n        \\t\\t.join(\\\"\\\\n\\\")\\r\\n        );\\r\\n        ```\\r\\n        -   睇返呢篇 [cURL 基本操作 - 下載檔案](/blog/curl-basics#6-下載檔案)，cURL 可以幫我地下載檔案，但係當我地執行曬所有 `197` 個 cURL commands 之後就會發現，output folder 裡面只係得 `192` 個檔案，咁係因為有 `5` 個檔案撞左名，cURL 覆蓋左佢地。\\r\\n            -   檔名\\r\\n                1. `netzawar.zip`\\r\\n                1. `ielsord.zip`\\r\\n                1. `hordaine.zip`\\r\\n                1. `geburand.zip`\\r\\n                1. `cesedria.zip`\\r\\n        -   cURL 冇辦法做到自動重新命名，或者畀我地用 path 作為 output sub-folder。\\r\\n\\r\\n既然冇辦法只靠 cURL 完美咁解決到下載既問題，咁就不如寫個 Java 程式黎實現！\\r\\n\\r\\n---\\r\\n\\r\\n# 3 動手寫\\r\\n\\r\\n## 3.1 Maven dependencies\\r\\n\\r\\n```xml\\r\\n<dependency>\\r\\n\\t<groupId>org.jsoup</groupId>\\r\\n\\t<artifactId>jsoup</artifactId>\\r\\n\\t<version>1.15.3</version>\\r\\n</dependency>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 寫 Java code\\r\\n\\r\\n我地可以用 Java 寫 logic，再用 `ProcessBuilder` 去執行任意既 Windows commands，咁就可以解決到 cURL 唔夠 flexible 既問題。\\r\\n\\r\\n```java\\r\\n@Slf4j\\r\\npublic class MainFezWebsiteGalleryBackup {\\r\\n    private static final String OUTPUT_DIR = \\\"wallpapers/\\\";\\r\\n\\r\\n    public static void main(String[] args) throws Exception {\\r\\n\\r\\n        FileUtils.forceMkdir(new File(OUTPUT_DIR));\\r\\n\\r\\n        Jsoup.connect(\\\"http://www.fantasy-earth.com/library/wallpaper.php\\\")\\r\\n             .get()\\r\\n             .select(\\\"a[href^='http://cache.dl.fantasy-earth.com/img/wallpaper/']\\\")\\r\\n             .stream()\\r\\n             .map(e -> e.attr(\\\"href\\\"))\\r\\n             .parallel()\\r\\n             .forEach(e -> {\\r\\n                 log.info(\\\"URL: {}\\\", e);\\r\\n\\r\\n                 final String fileName = StringUtils.removeStart(e, \\\"http://cache.dl.fantasy-earth.com/img/wallpaper/\\\");\\r\\n                 final String command = String.format(\\\"curl %s --output-dir %s -o %s\\\", e, OUTPUT_DIR, fileName);\\r\\n\\r\\n                 try {\\r\\n                     FileUtils.forceMkdirParent(new File(OUTPUT_DIR + fileName));\\r\\n                 } catch (IOException ex) {\\r\\n                     log.error(\\\"Failed to create parent folders for file: {}\\\", fileName, ex);\\r\\n                 }\\r\\n\\r\\n                 try {\\r\\n                     new ProcessBuilder(\\\"cmd\\\", \\\"/c\\\", command)\\r\\n                         .inheritIO()\\r\\n                         .start()\\r\\n                         .waitFor();\\r\\n                 } catch (Exception ex) {\\r\\n                     log.error(\\\"Failed to execute command: {}\\\", command, ex);\\r\\n                 }\\r\\n             });\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   `ProcessBuilder` 強迫我地一定要將一句完整既 command 斬件，再用 varargs 既形式傳入。\\r\\n    -   但如果我地執行既 command 係 `cmd /c`，咁我地就可以將一句完整既 command 作為 `cmd /c` 既一個單獨既 argument 咁傳入。\\r\\n\";","export default \"# 1 Spring Cloud Config 簡介\\r\\n\\r\\n關於 Spring Cloud Config 既基本簡介可以喺呢篇度搵到：[Spring Cloud Config——使用獨立既 Git 配置 repo - Spring Cloud Config 簡介](/blog/spring-cloud-config#1-spring-cloud-config-簡介)。\\r\\n\\r\\n## 1.1 JDBC backend\\r\\n\\r\\n今次呢篇係關於利用 JDBC backend，我地會用 RDBMS 傳統 DB 黎儲存所有配置資料。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 建立 RDBMS\\r\\n\\r\\n今次測試會用到 H2 in-memory DB 以及 MySQL，而 H2 我地只需要喺 code 度初始化就可以。\\r\\n\\r\\n## 2.1 建立測試用 MySQL 連線\\r\\n\\r\\n我地可以參考返呢篇文：[Docker 基本操作 - MySQL](/blog/docker-basics#332-mysql)。\\r\\n\\r\\n啟動左 Docker Desktop 之後，執行以下 command，喺 MySQL 度建立一個叫 `scc` 既 database：\\r\\n\\r\\n```bash\\r\\ndocker container run -d --rm -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_USER=mysql -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=scc -v \\\"C:/docker-data/mysql:/var/lib/mysql\\\" --name mysql mysql:latest\\r\\n```\\r\\n\\r\\n註：如果個 Docker Desktop 唔係用 WSL，咁就可能需要先去 Docker Desktop 既設定度將 `C:/` 加落 Resources ➜ File Sharing。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 建立 table\\r\\n\\r\\n先進入 Docker container 並且登入 MySQL 既 CLI，存取 `scc` database：\\r\\n\\r\\n```bash\\r\\ndocker container exec -it mysql mysql -u\\\"root\\\" -p\\\"root\\\" scc\\r\\n```\\r\\n\\r\\nSpring Cloud Config 默認會用 `properties` table。\\r\\n\\r\\n```sql\\r\\nCREATE TABLE `properties` (\\r\\n\\t`application` VARCHAR(200) NOT NULL,\\r\\n\\t`profile` VARCHAR(200) NOT NULL,\\r\\n\\t`label` VARCHAR(200) NOT NULL,\\r\\n\\t`key` VARCHAR(200) NOT NULL,\\r\\n\\t`value` VARCHAR(200) NULL\\r\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 DEFAULT COLLATE=utf8mb4_0900_ai_ci;\\r\\n```\\r\\n\\r\\n註：如果想用 `properties` 以外既 table 名係可以既，稍後可以喺 config server 既配置度改條 SELECT SQL。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 新增紀錄\\r\\n\\r\\n```sql\\r\\nINSERT INTO `properties` (`application`, `profile`, `label`, `key`, `value`)\\r\\nVALUES ('spring-cloud-config-client-demo', 'dev', 'master', 'my.prop', 'Hello MySQL!');\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 3 動手寫\\r\\n\\r\\n## 3.1 Config server\\r\\n\\r\\nProject structure：\\r\\n\\r\\n-   `src/main/java`\\r\\n    -   `/code`\\r\\n        -   `MainConfigServerApp.java`\\r\\n-   `src/main/resources`\\r\\n    -   `application.yml`\\r\\n    -   `bootstrap.yml`\\r\\n    -   `data-h2.sql`\\r\\n    -   `schema-h2.sql`\\r\\n\\r\\n### 3.1.1 Maven dependencies\\r\\n\\r\\n```xml\\r\\n<dependencyManagement>\\r\\n\\t<dependencies>\\r\\n\\t\\t<dependency>\\r\\n\\t\\t\\t<groupId>org.springframework.cloud</groupId>\\r\\n\\t\\t\\t<artifactId>spring-cloud-dependencies</artifactId>\\r\\n\\t\\t\\t<version>Hoxton.SR12</version>\\r\\n\\t\\t\\t<type>pom</type>\\r\\n\\t\\t\\t<scope>import</scope>\\r\\n\\t\\t</dependency>\\r\\n\\t\\t<dependency>\\r\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t\\t<artifactId>spring-boot-dependencies</artifactId>\\r\\n\\t\\t\\t<version>2.3.12.RELEASE</version>\\r\\n\\t\\t\\t<type>pom</type>\\r\\n\\t\\t\\t<scope>import</scope>\\r\\n\\t\\t</dependency>\\r\\n\\t</dependencies>\\r\\n</dependencyManagement>\\r\\n\\r\\n<dependencies>\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.cloud</groupId>\\r\\n\\t\\t<artifactId>spring-cloud-config-server</artifactId>\\r\\n\\t</dependency>\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t<artifactId>spring-boot-starter-data-jpa</artifactId>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<!-- MySQL -->\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>mysql</groupId>\\r\\n\\t\\t<artifactId>mysql-connector-java</artifactId>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<!-- H2 -->\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>com.h2database</groupId>\\r\\n\\t\\t<artifactId>h2</artifactId>\\r\\n\\t</dependency>\\r\\n</dependencies>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.1.2 Java code\\r\\n\\r\\n`MainConfigServerApp.java`：\\r\\n\\r\\n```java\\r\\n@EnableConfigServer\\r\\n@SpringBootApplication\\r\\npublic class MainConfigServerApp {\\r\\n\\r\\n    public static void main(String[] args) {\\r\\n        SpringApplication.run(MainConfigServerApp.class);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.1.3 Bootstrap 配置\\r\\n\\r\\n`bootstrap.yml`：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\nencrypt:\\r\\n  key: michael ## or use the ENCRYPT_KEY environment variable\\r\\n\\r\\nspring:\\r\\n  profiles:\\r\\n    active: jdbc ## should be externalized\\r\\n  cloud:\\r\\n    config:\\r\\n      server:\\r\\n        encrypt:\\r\\n          enabled: true\\r\\n```\\r\\n\\r\\n註：一定要用 `jdbc` 既 Spring profile 先可以啟用到 JDBC backend。\\r\\n\\r\\n---\\r\\n\\r\\n### 3.1.4 Application 配置\\r\\n\\r\\n我地喺原先既 Git backend 配置度再加上 JDBC backend 既配置。\\r\\n\\r\\n`application.yml`：\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\nspring:\\r\\n  datasource:\\r\\n# MySQL\\r\\n#    url: jdbc:mysql://localhost:3306/scc\\r\\n#    username: mysql\\r\\n#    password: mysql\\r\\n# H2\\r\\n    url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=4\\r\\n    username: sa\\r\\n    password: \\r\\n    driver-class-name: org.h2.Driver\\r\\n  h2:\\r\\n    console:\\r\\n      enabled: true\\r\\n      path: /h2-console\\r\\n  sql:\\r\\n    init:\\r\\n      mode: always\\r\\n      platform: h2\\r\\n  jpa:\\r\\n    hibernate:\\r\\n      ddl-auto: none\\r\\n  cloud:\\r\\n    config:\\r\\n      server:\\r\\n        git:\\r\\n          clone-on-start: true\\r\\n          refresh-rate: 10\\r\\n          ignore-local-ssh-settings: true\\r\\n          uri: git@github.com:blackr1234/spring-cloud-config-demo.git\\r\\n          default-label: master\\r\\n          search-paths:\\r\\n            - \\\"{application}\\\"\\r\\n          host-key: 'AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg='\\r\\n          host-key-algorithm: ecdsa-sha2-nistp256\\r\\n          private-key: |\\r\\n                        -----BEGIN EC PRIVATE KEY-----\\r\\n                        MHcCAQEEIPnupl8oxl0Wj6xfOd/PobBG48m3pVkmubPem1XSyexEoAoGCCqGSM49\\r\\n                        AwEHoUQDQgAEUGO+DDpbpsgp3C+H68iTTaklmcnk2MSbbh4bwQVnMws09eqFqvA4\\r\\n                        RzcTRtAXt2IWkq4JHUg6rtjDnc/0zwSQyQ==\\r\\n                        -----END EC PRIVATE KEY-----\\r\\n        jdbc:\\r\\n          enabled: true\\r\\n          sql: 'SELECT `key`, `value` FROM properties WHERE application = ? AND profile = ? AND label = ?'\\r\\n          order: 1\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   `spring.cloud.config.server.jdbc.sql`\\r\\n    -   條 SQL prepared statement 唔預你大改，因為啲 params（`?`）會塞既 data 係固定既。\\r\\n    -   佢主要係畀你加減下啲 quotes，去令到條 SQL 可以適用喺我地用既 DB 度，例如 `key` 同 `value` 喺某啲版本既某啲 DB 可以係 reserved words，咁既話就一定要加 quotes。\\r\\n    -   如果想用默認既 `properties` 以外既 table 名，可以喺度改。\\r\\n    -   除非用最新版 Spring Cloud Config `4.0.1`，否則 JDBC backend 係唔支援 default label，即係同 Git backend 唔同。\\r\\n\\r\\n---\\r\\n\\r\\n### 3.1.5 初始化 H2 in-memory DB 既配置檔\\r\\n\\r\\n`src/main/resources/schema-h2.sql`：\\r\\n\\r\\n```sql\\r\\nCREATE TABLE `properties` (\\r\\n    `application` VARCHAR(200) NOT NULL,\\r\\n    `profile` VARCHAR(200) NOT NULL,\\r\\n    `label` VARCHAR(200) NOT NULL,\\r\\n    `key` VARCHAR(200) NOT NULL,\\r\\n    `value` CLOB(10K) NULL\\r\\n);\\r\\n```\\r\\n\\r\\n`src/main/resources/data-h2.sql`：\\r\\n\\r\\n```sql\\r\\nINSERT INTO `properties` (`application`, `profile`, `label`, `key`, `value`)\\r\\nVALUES ('spring-cloud-config-client-demo', 'dev', 'master', 'my.prop', 'Hello H2!');\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 Config client\\r\\n\\r\\n至於 config client，我地可以完全用返之前寫落果個，詳情可以睇返呢篇：[Spring Cloud Config——使用獨立既 Git 配置 repo - Config client](/blog/spring-cloud-config-git#32-config-client)。\\r\\n\\r\\n---\\r\\n\\r\\n# 4 簡單測試\\r\\n\\r\\n## 4.1 步驟\\r\\n\\r\\n1. 啟動 config server。\\r\\n1. 啟動 config client。\\r\\n1. 檢查 `my.prop` 既 value，應該係而家 DB 裡面既 value。\\r\\n1. 更改 DB 裡面既 `my.prop` 既 value。\\r\\n1. Call config client 既 `/actuator/refresh` API。\\r\\n    - Response body 裡面會有一個 array，其中一個 string 就係 `my.prop`，意味住 `my.prop` 既 value 改變左。\\r\\n1. 檢查 `my.prop` 既 value，應該係我地改成既新 value。\\r\\n\\r\\n---\\r\\n\\r\\n## 4.2 檢查 property value\\r\\n\\r\\n針對 `my.prop`，我地有以下既方法：\\r\\n\\r\\n1. Call config client 既 `/actuator/env` API，response body 會有 `my.prop` 既 value，呢個方法只需要配置好 Actuator 就可以用。\\r\\n1. 因為我地有特登寫 code 去做 logging，所以我地可以留意 config client 既 log 裡面 `my.prop` 既 value。\\r\\n\\r\\n---\\r\\n\\r\\n# 5 配置紀錄既應用次序\\r\\n\\r\\n可以睇返呢篇：[Spring Cloud Config——使用獨立既 Git 配置 repo - 配置檔既應用次序](/blog/spring-cloud-config-git#5-配置檔既應用次序)。\\r\\n\\r\\n## 5.1 自己發現到既 Bug\\r\\n\\r\\n我喺 2023-01-07 發現到 `spring-cloud-config-server` 版本 `4.0.0` 或以前既 JDBC backend 對於配置紀錄既應用次序同 Git backend 有唔同，之後 Spring Cloud 項目既維護人員確認左個 bug，然後喺新版本 `4.0.1` 度 fix。\\r\\n\\r\\n### 5.1.1 問題核心\\r\\n\\r\\nGit backend 既實現畀到出黎既次序係：\\r\\n\\r\\n1. `application`\\r\\n1. `{spring.application.name}`\\r\\n1. `application-{profile}`\\r\\n1. `{spring.application.name}-{profile}`\\r\\n\\r\\n但當我地使用 JDBC backend，個次序就會變左：\\r\\n\\r\\n1. `application`\\r\\n1. `application-{profile}`\\r\\n1. `{spring.application.name}`\\r\\n1. `{spring.application.name}-{profile}`\\r\\n\\r\\n呢個 bug 一直存在喺 JDBC backend 既 code，但唔影響 Git backend。\\r\\n\\r\\n詳見：[GitHub - spring-cloud/spring-config-config - issue #2205](https://github.com/spring-cloud/spring-cloud-config/issues/2205#issuecomment-1374253402)\\r\\n\\r\\n---\\r\\n\\r\\n### 5.1.2 即時解決方法\\r\\n\\r\\n確定適用既 Spring Boot 版本：`2.7.1`\\r\\n\\r\\n如果等唔切 `spring-cloud-config-server` 推出新版本，或者因為某啲原因而唔想用新版本，咁喺使用舊版本既情況下，我地可以覆蓋 Spring 有問題既 Java class。\\r\\n\\r\\n以下係改好左既 `org.springframework.cloud.config.server.environment.JdbcEnvironmentRepository`，我地只要將佢放喺我地既 config server 既 `src/main/java` 既對應 package 度，個 Java app 運行既時候就會用我地果個版本既 Java class。\\r\\n\\r\\n唯一既改動就係將 `findOne` method 既 2 個 for loops 調轉。\\r\\n\\r\\n```java\\r\\npackage org.springframework.cloud.config.server.environment;\\r\\n\\r\\n/**\\r\\n * <p>This class is a duplicate of the same class from Spring Cloud Config.\\r\\n * This version fixes a bug in the order of queries with application names and profiles.</p>\\r\\n *\\r\\n * @author Dave Syer\\r\\n * @author Michael Chung\\r\\n * @see <a href=\\\"https://github.com/spring-cloud/spring-cloud-config/issues/2205\\\">Spring Cloud Config issue #2205</a>\\r\\n * @see <a href=\\\"https://github.com/spring-cloud/spring-cloud-config/pull/2207/commits/cc5aae457eef2ab5925669b4c608bbb3f003e694\\\">Spring Cloud Config issue #2207 - commit</a>\\r\\n */\\r\\npublic class JdbcEnvironmentRepository implements EnvironmentRepository, Ordered {\\r\\n\\r\\n\\t// ...\\r\\n\\r\\n\\t@Override\\r\\n\\tpublic Environment findOne(String application, String profile, String label) {\\r\\n\\r\\n\\t\\t// ...\\r\\n\\r\\n\\t\\t// XXX fixed the order\\r\\n\\t\\tfor (String env : envs) {\\r\\n\\t\\t\\tfor (String app : applications) {\\r\\n\\t\\t\\t\\ttry {\\r\\n\\t\\t\\t\\t\\tMap<String, Object> next = this.jdbc.query(this.sql, this.extractor, app, env, label);\\r\\n\\t\\t\\t\\t\\tif (next != null && !next.isEmpty()) {\\r\\n\\t\\t\\t\\t\\t\\tenvironment.add(new PropertySource(app + \\\"-\\\" + env, next));\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tcatch (DataAccessException e) {\\r\\n\\t\\t\\t\\t\\tif (!failOnError) {\\r\\n\\t\\t\\t\\t\\t\\tif (logger.isDebugEnabled()) {\\r\\n\\t\\t\\t\\t\\t\\t\\tlogger.debug(\\\"Failed to retrieve configuration from JDBC Repository\\\", e);\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\telse {\\r\\n\\t\\t\\t\\t\\t\\tthrow e;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn environment;\\r\\n\\t}\\r\\n}\\r\\n```\\r\\n\\r\\n註：\\r\\n\\r\\n-   呢個方法都係試出黎。\\r\\n-   Spring 既 class loading 複雜，而根據經驗，新舊版本既實現都可以好唔同。\\r\\n    -   並唔能夠保證舊版或者新版既 Spring Boot 項目甚或冇用 Spring 既 Maven 項目都一樣可以咁做黎覆蓋第三方 library 既 source code。\\r\\n-   但至少試過喺呢個 Spring Boot 版本下打包成 JAR 之後都可以成功覆蓋到。\\r\\n\\r\\n---\\r\\n\\r\\n# 6 連線容錯測試\\r\\n\\r\\n根據測試，JDBC backend 並唔容許 DB 連線失敗，因為佢冇用 cache，所以當個 config DB 有 downtime，config client 係有可能啟動唔到。\\r\\n\\r\\n---\\r\\n\\r\\n## 6.1 使用 JDBC backend 而 DB 連線失敗\\r\\n\\r\\n模擬連線失敗場景：\\r\\n\\r\\n1. 啟動 MySQL Docker container。\\r\\n1. 啟動 config server。\\r\\n1. 啟動 config client。\\r\\n1. 呢個時候，我地可以見到 config server 既 log 度有 SELECT SQL 既 logs。\\r\\n1. 暫停 MySQL Docker container。\\r\\n1. 重新啟動 config client，可以見到 config client 啟動既時候停左喺度一陣之後，就因為喺 config server 度拎唔到配置而繼續執行，而視乎個 JAR 檔裡面既配置能唔能夠滿足到啲 Spring beans 既需要，個 config client 有可能會啟動失敗。咁都係因為 config server 冇任何 cache，所以佢每次都會問 DB 拎配置紀錄。\\r\\n\";","export default \"# 1 kubectl 介紹\\r\\n\\r\\n`kubectl` 係一個用黎操作雲端 K8s clusters 既 K8s 資源既一個 CLI 工具。\\r\\n\\r\\n---\\r\\n\\r\\n# 2 登入 K8s cluster\\r\\n\\r\\n用之前需要先成功登入 K8s cluster，拎到 client certificate、client key、token 等等既 data，之後就可以操作佢上面既 K8s 資源。\\r\\n\\r\\n呢啲 data 儲存喺 `C:/Users/<username>/.kube/config` 裡面。\\r\\n\\r\\n我地可以登入多個 K8s clusters，然後喺佢地之間 switch 黎 switch 去。\\r\\n\\r\\n## 2.1 本地開發環境：Docker Desktop\\r\\n\\r\\n如果係喺本地開發環境，直接喺 Docker Desktop 度 enable Kubernetes 就唔洗額外登入。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 本地開發環境：Minikube\\r\\n\\r\\n如果係喺本地開發環境，直接用 Minikube 就唔洗額外登入。\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 登入 Azure Kubernetes Service（AKS）\\r\\n\\r\\n如果係用 AKS，就要用 Azure CLI 登入：\\r\\n\\r\\n```bash\\r\\naz login -u <email>\\r\\naz aks get-credentials -n <cluster name> -g <resource group> --admin --overwrite-existing\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 3 kubectl 指令\\r\\n\\r\\n## 3.1 切換 cluster\\r\\n\\r\\n```bash\\r\\nkubectl config use-context <context name>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.2 查看目前 cluster\\r\\n\\r\\n我地可以睇到已經登入左既 cluster、佢既 context name、目前既默認 namespace，以及目前既 cluster（打左星號 `*`）：\\r\\n\\r\\n```bash\\r\\nkubectl config get-contexts\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.3 切換默認 namespace\\r\\n\\r\\n```bash\\r\\nkubectl config set-context --current --namespace=<namespace>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.4 列出所有 K8s 資源種類\\r\\n\\r\\n```bash\\r\\nkubectl api-resources -o wide\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.5 列出某種類既 K8s 資源\\r\\n\\r\\n```bash\\r\\nkubectl get <resource type>\\r\\n```\\r\\n\\r\\n### 3.5.1 `Pod`\\r\\n\\r\\n睇 pod name、幾多個 containers 已經 ready、status、create 左幾耐：\\r\\n\\r\\n```bash\\r\\nkubectl get pods\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.5.2 `Deployment`\\r\\n\\r\\n```bash\\r\\nkubectl get deployments\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.5.3 `ReplicaSet`\\r\\n\\r\\n```bash\\r\\nkubectl get replicasets\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.5.4 `HorizontalPodAutoscaler`\\r\\n\\r\\n```bash\\r\\nkubectl get horizontalpodautoscalers\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.5.5 `AuthorizationPolicy`\\r\\n\\r\\n```bash\\r\\nkubectl get authorizationpolicys\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.5.6 `Service`\\r\\n\\r\\n```bash\\r\\nkubectl get services\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.5.7 `VirtualService`\\r\\n\\r\\n```bash\\r\\nkubectl get virtualservices\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.5.8 `DestinationRule`\\r\\n\\r\\n```bash\\r\\nkubectl get destinationrules\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.5.9 `ServiceAccount`\\r\\n\\r\\n```bash\\r\\nkubectl get serviceaccounts\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 3.5.10 `Event`\\r\\n\\r\\n```bash\\r\\nkubectl get events\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.6 檢視 K8s 資源內容\\r\\n\\r\\n用 `get` 列出某種類既 K8s 資源之後，我地會見到個別 K8s 資源既名，然後就可以呢啲名黎 reference 個別 K8s 資源。\\r\\n\\r\\n```bash\\r\\nkubectl describe <resource type> <resource name>\\r\\n```\\r\\n\\r\\n比較常需要檢視既 K8s 資源有 `Pod` 以及 `Deployment`，因為：\\r\\n\\r\\n-   `Pod` 既內容可以話畀我地知而家個 microservice 用咩參數黎運行，例如 Image ID、env、args、requests、limits，可以幫助我地 troubleshoot 問題。\\r\\n-   `Deployment` 定義左 pod template，係生成 `Pod` 既範本，修改佢之後 rollout restart 或者 delete `Pod` 就可以避免重新部署個 microservice。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.7 修改 K8s 資源內容\\r\\n\\r\\n```bash\\r\\nkubectl edit <resource type> <resource name>\\r\\n```\\r\\n\\r\\n執行之後，會自動彈出 Notepad，修改完之後喺 Notepad 度 save，之後退出 Notepad，就會見到返回修改完成既回應。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.8 刪除 K8s 資源\\r\\n\\r\\n```bash\\r\\nkubectl delete <resource type> <resource name>\\r\\n```\\r\\n\\r\\n`Pod` 算係比較常需要刪除既 K8s 資源，因為：\\r\\n\\r\\n-   為左加快開發，我地會想即時改變 microservice 既執行參數，但係因為 `Pod` 裡面既 microservice 已經運行緊，就咁修改 `Pod` 唔會起到作用，所以就要修改 `Deployment` 既 pod template，然後刪除運行緊既 `Pod`，等 K8s 自動生成 `Pod` 黎滿足 `ReplicaSet` 要求既 `Pod` 數量。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.9 查看 `Pod` 日誌\\r\\n\\r\\n```bash\\r\\nkubectl logs <pod name>\\r\\n```\\r\\n\\r\\nFollow logs（佢會一直咁 stream logs 去我地個 console）：\\r\\n\\r\\n```bash\\r\\nkubectl logs -f <pod name>\\r\\n```\\r\\n\\r\\n睇最後 `20` 行 logs，並且繼續 follow：\\r\\n\\r\\n```bash\\r\\nkubectl logs -f <pod name> --tail=20\\r\\n```\\r\\n\\r\\n儲存喺檔案度（視乎 K8s 會為 `Pod` keep 幾多 logs，有上限）：\\r\\n\\r\\n```bash\\r\\nkubectl logs <pod name> > logs.txt\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.10 Port-forward `Pod`\\r\\n\\r\\n我地部署左一個 web microservice 上 K8s 之後，當個 `Pod` 成功運行緊，我地就可以試下佢既 HTTP API 功能。\\r\\n\\r\\n其中一個方式就係直接訪問個 `Pod`，呢個時候就需要用到 `port-forward`。\\r\\n\\r\\n```bash\\r\\nkubectl port-forward <pod name> <port>\\r\\nkubectl port-forward <pod name> <local port>:<remote port>\\r\\n```\\r\\n\\r\\n例子一：假如個 `Pod` expose 緊 `8080`，而我地又想 local port 同 remote port 用埋同一個：\\r\\n\\r\\n```bash\\r\\nkubectl port-forward <pod name> 8080\\r\\n```\\r\\n\\r\\n之後我地可以：\\r\\n\\r\\n```bash\\r\\ncurl localhost:8080\\r\\n```\\r\\n\\r\\n例子二：假如個 `Pod` expose 緊 `8080`，而我地又想 local port 用另一個，例如係 `8081`：\\r\\n\\r\\n```bash\\r\\nkubectl port-forward <pod name> 8081:8080\\r\\n```\\r\\n\\r\\n之後我地可以：\\r\\n\\r\\n```bash\\r\\ncurl localhost:8081\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.11 對 `Pod` 裡面既 container 執行指令\\r\\n\\r\\n有時如果需要檢視 container 裡面既檔案，或者執行一啲指令，都可以做到：\\r\\n\\r\\n```bash\\r\\nkubectl exec -i -t --container=<container> <pod name> -- /bin/bash\\r\\n```\\r\\n\\r\\n場景：\\r\\n\\r\\n-   執行 `ls -l` 以及 `cat <filename>` 去睇下有咩檔案，以及個別檔案內容。\\r\\n-   執行 `java -version` 去了解 Java microservice 既 Java 版本。\\r\\n\\r\\n---\\r\\n\\r\\n## 3.12 查看某種類 K8s 資源既資源使用情況\\r\\n\\r\\n呢度既「資源使用情況」係指 CPU、memory、storage。\\r\\n\\r\\n```bash\\r\\nkubectl top <resource type>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 3.13 部署 K8s 資源\\r\\n\\r\\n```bash\\r\\nkubectl apply -f path/to/file.yml\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 4 參考資料\\r\\n\\r\\n-   [Kubernetes 官方文檔 - Organizing Cluster Access Using kubeconfig Files](https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/)\\r\\n-   [Kubernetes 官方文檔 - Command line tool (kubectl)](https://kubernetes.io/docs/reference/kubectl/)\\r\\n-   [Kubectl Command Cheatsheet](https://www.bluematador.com/learn/kubectl-cheatsheet)\\r\\n\";","export default \"# 1 Azure Service Bus 簡介\\r\\n\\r\\nMicrosoft 既 Azure Service Bus（ASB）係一個 message queue 既雲服務，係用黎畀唔同既微服務之間進行異步既溝通（asynchronous communication）。佢同 RabbitMQ 以及 Kafka 相類似。\\r\\n\\r\\n負責發布訊息既微服務會將文字訊息發送到 ASB，然後 ASB 會暫時儲存住呢啲訊息，而訂閱左呢個 ASB 既微服務會即時留到訊息。當訂閱方成功接受到訊息，ASB 就會移除呢啲已經傳送既訊息。\\r\\n\\r\\nASB 有以下既 messaging entities：\\r\\n\\r\\n|   Messaging entity   | 描述                                                                                                                                                                                                                                                                                                                                                                                                                                               |\\r\\n| :------------------: | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\r\\n|        Queue         | 就咁一條隊列，發布方同訂閱方都會使用同一條隊列收發訊息。                                                                                                                                                                                                                                                                                                                                                                                           |\\r\\n| Topic、subscriptions | Topic 係一個訊息發送對象；而 subscriptions 係隸屬於 topic，我地可以視佢地為 queues。當個 topic 收到訊息，佢既所有 subscriptions 都會收到同一個訊息。發布方只會將訊息發送到 topic，唔會知道 subscriptions 既存在。一個 topic 可以有 `0` 至 `N` 個 subscriptions。視乎需要，訂閱方既 `N` 個微服務可能會使用同一個 subscription（同一個訊息，只有 `1` 個訂閱方既微服務收到）或者各自使用獨立既 subscription（同一個訊息，所有訂閱方既微服務都收到）。 |\\r\\n\\r\\n---\\r\\n\\r\\n# 2 動手寫\\r\\n\\r\\n## 2.1 Maven dependencies\\r\\n\\r\\n```xml\\r\\n<dependencyManagement>\\r\\n\\t<dependencies>\\r\\n\\t\\t<dependency>\\r\\n\\t\\t\\t<groupId>org.springframework.cloud</groupId>\\r\\n\\t\\t\\t<artifactId>spring-cloud-dependencies</artifactId>\\r\\n\\t\\t\\t<version>2021.0.3</version>\\r\\n\\t\\t\\t<type>pom</type>\\r\\n\\t\\t\\t<scope>import</scope>\\r\\n\\t\\t</dependency>\\r\\n\\t\\t<dependency>\\r\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t\\t<artifactId>spring-boot-dependencies</artifactId>\\r\\n\\t\\t\\t<version>2.7.1</version>\\r\\n\\t\\t\\t<type>pom</type>\\r\\n\\t\\t\\t<scope>import</scope>\\r\\n\\t\\t</dependency>\\r\\n\\t</dependencies>\\r\\n</dependencyManagement>\\r\\n\\r\\n<dependencies>\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.boot</groupId>\\r\\n\\t\\t<artifactId>spring-boot-starter-web</artifactId>\\r\\n\\t</dependency>\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.springframework.cloud</groupId>\\r\\n\\t\\t<artifactId>spring-cloud-stream</artifactId>\\r\\n\\t</dependency>\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>com.azure.spring</groupId>\\r\\n\\t\\t<artifactId>spring-cloud-azure-stream-binder-servicebus</artifactId>\\r\\n\\t\\t<version>4.3.0</version>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.apache.commons</groupId>\\r\\n\\t\\t<artifactId>commons-lang3</artifactId>\\r\\n\\t</dependency>\\r\\n\\r\\n\\t<dependency>\\r\\n\\t\\t<groupId>org.projectlombok</groupId>\\r\\n\\t\\t<artifactId>lombok</artifactId>\\r\\n\\t\\t<scope>provided</scope>\\r\\n\\t</dependency>\\r\\n</dependencies>\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.2 Java code\\r\\n\\r\\n### 2.2.1 新式 function 做法\\r\\n\\r\\nProject structure：\\r\\n\\r\\n-   `src/main/java`\\r\\n    -   `/code`\\r\\n        -   `/config`\\r\\n            -   `MessageConfig.java`\\r\\n        -   `/controller`\\r\\n            -   `SampleController.java`\\r\\n\\r\\n`MessageConfig.java`：\\r\\n\\r\\n```java\\r\\n@Slf4j\\r\\n@Configuration\\r\\npublic class MessageConfig {\\r\\n\\r\\n    @Bean\\r\\n    public Supplier<String> supplyBinding() {\\r\\n        return () -> {\\r\\n            final String dateTime = LocalDateTime.now(ZoneId.of(\\\"Hongkong\\\")).format(DateTimeFormatter.ofPattern(\\\"uuuu-MM-dd HH:mm:ss\\\"));\\r\\n            final String message = String.format(\\\"Test msg - %s (%s)\\\", RandomStringUtils.randomAlphanumeric(8), dateTime);\\r\\n            log.info(\\\"Sending message: {}\\\", message);\\r\\n            return message;\\r\\n        };\\r\\n    }\\r\\n\\r\\n    @Bean\\r\\n    public Consumer<String> consumeBinding() {\\r\\n        return message -> {\\r\\n            log.info(\\\"Successfully received message: {}\\\", message);\\r\\n        };\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n`SampleController.java`：\\r\\n\\r\\n```java\\r\\n@Slf4j\\r\\n@RestController\\r\\npublic class SampleController {\\r\\n\\r\\n    @Autowired\\r\\n    StreamBridge streamBridge;\\r\\n\\r\\n    @GetMapping(\\\"/test/{value}\\\")\\r\\n    public ResponseEntity<String> testSend(@PathVariable(\\\"value\\\") String value) {\\r\\n        log.info(\\\"Sending value {} to topic\\\", value);\\r\\n        streamBridge.send(\\\"supplyBinding-out-0\\\", value);\\r\\n        return ResponseEntity.ok(\\\"ok\\\");\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### 2.2.2 舊式 annotation 做法\\r\\n\\r\\nProject structure：\\r\\n\\r\\n-   `src/main/java`\\r\\n    -   `/code`\\r\\n        -   `/config`\\r\\n            -   `MessageBinding.java`\\r\\n            -   `MessageConfig.java`\\r\\n        -   `/controller`\\r\\n            -   `SampleController.java`\\r\\n\\r\\n`MessageBinding.java`：\\r\\n\\r\\n```java\\r\\npublic interface MessageBinding {\\r\\n\\r\\n    @Output(\\\"supplyBinding-out-0\\\")\\r\\n    MessageChannel supplyBinding();\\r\\n\\r\\n    @Input(\\\"consumeBinding-in-0\\\")\\r\\n    SubscribableChannel consumeBinding();\\r\\n}\\r\\n```\\r\\n\\r\\n`MessageConfig.java`：\\r\\n\\r\\n```java\\r\\n@Slf4j\\r\\n@EnableBinding(MessageBinding.class)\\r\\npublic class MessageConfig {\\r\\n\\r\\n    @Autowired\\r\\n    MessageBinding messageBinding;\\r\\n\\r\\n    @StreamListener(\\\"consumeBinding-in-0\\\")\\r\\n    public void consumeBinding(String msg) {\\r\\n        log.info(\\\"Successfully received message: {}\\\", msg);\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n`SampleController.java`：\\r\\n\\r\\n```java\\r\\n@Slf4j\\r\\n@RestController\\r\\n@EnableBinding(MessageBinding.class)\\r\\npublic class SampleController {\\r\\n\\r\\n    @Autowired\\r\\n    MessageBinding messageBinding;\\r\\n\\r\\n    @GetMapping(\\\"/test/{value}\\\")\\r\\n    public ResponseEntity<String> testSend(@PathVariable(\\\"value\\\") String value) throws Exception {\\r\\n        log.info(\\\"Sending message: {}\\\", value);\\r\\n        publish(value);\\r\\n        return ResponseEntity.ok(\\\"ok\\\");\\r\\n    }\\r\\n\\r\\n    private void publish(String msg) throws Exception {\\r\\n\\r\\n        log.info(\\\"Start publishing message: {}\\\", msg);\\r\\n\\r\\n        try {\\r\\n            if (!messageBinding.supplyBinding().send(MessageBuilder.withPayload(msg).build(), 30_000L)) {\\r\\n                log.error(\\\"Failed to publish message. send() returns false.\\\");\\r\\n                throw new Exception(\\\"Failed to publish message.\\\");\\r\\n            }\\r\\n\\r\\n            log.info(\\\"Successfully published message.\\\");\\r\\n        } catch (Exception e) {\\r\\n            log.error(\\\"Failed to publish message.\\\", e);\\r\\n            throw e;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n## 2.3 Application 配置\\r\\n\\r\\n<!-- prettier-ignore -->\\r\\n```yaml\\r\\nspring:\\r\\n  cloud:\\r\\n    stream:\\r\\n      binders:\\r\\n        testBinder1:\\r\\n          type: servicebus\\r\\n          environment:\\r\\n            spring.cloud.azure.servicebus.connection-string: Endpoint=sb://xxxxxx.servicebus.windows.net/;SharedAccessKeyName=my-test-topic-policy;SharedAccessKey=xxxxxx;EntityPath=my-test-topic\\r\\n        testBinder2:\\r\\n          type: servicebus\\r\\n          environment:\\r\\n            spring.cloud.azure.servicebus.connection-string: Endpoint=sb://xxxxxx.servicebus.windows.net/;SharedAccessKeyName=my-test-topic-policy;SharedAccessKey=xxxxxx;EntityPath=my-test-topic\\r\\n\\r\\n      bindings:\\r\\n        supplyBinding-out-0:\\r\\n          destination: my-test-topic\\r\\n          binder: testBinder1\\r\\n        consumeBinding-in-0:\\r\\n          destination: my-test-topic\\r\\n          group: my-test-subscription\\r\\n          binder: testBinder2\\r\\n\\r\\n      function: # 新式 function 做法\\r\\n        definition: supplyBinding;consumeBinding\\r\\n\\r\\n      servicebus:\\r\\n        bindings:\\r\\n          supplyBinding-out-0:\\r\\n            producer:\\r\\n              requeue-rejected: true\\r\\n              entity-type: topic\\r\\n          consumeBinding-in-0:\\r\\n            consumer:\\r\\n              requeue-rejected: true\\r\\n              auto-complete: true\\r\\n              entity-type: topic\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n# 3 已知問題\\r\\n\\r\\n當我地用以下 Java code 去發送訊息：\\r\\n\\r\\n```java\\r\\nstreamBridge.send(\\\"supply-out-0\\\", \\\"[hello world]\\\");\\r\\nstreamBridge.send(\\\"supply-out-0\\\", (Object) \\\"[hello world]\\\", MediaType.TEXT_PLAIN);\\r\\n```\\r\\n\\r\\n就會導致以下呢個 exception：\\r\\n\\r\\n```plaintext\\r\\njava.lang.IllegalStateException: Failed to convert. Possible bug as the conversion probably shouldn't have been attampted here\\r\\n    at org.springframework.cloud.function.json.JacksonMapper.doFromJson(JacksonMapper.java:70)\\r\\n    at org.springframework.cloud.function.json.JsonMapper.fromJson(JsonMapper.java:94)\\r\\n```\\r\\n\\r\\n參考：\\r\\n\\r\\n-   [How to use StreamBridge to send String message and bypass message conversion?](https://stackoverflow.com/questions/75371351/how-to-use-streambridge-to-send-string-message-and-bypass-message-conversion)\\r\\n\\r\\n---\\r\\n\\r\\n# 4 參考資料\\r\\n\\r\\n-   [Microsoft 官方文檔 - Service Bus queues, topics, and subscriptions](https://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-queues-topics-subscriptions)\\r\\n-   [Spring Cloud Azure 官方文檔 - Sending and Receiving Messages from/to Service Bus](https://microsoft.github.io/spring-cloud-azure/current/reference/html/index.html#sending-and-receiving-messages-fromto-service-bus)\\r\\n\\r\\n其他：\\r\\n\\r\\n-   [Microsoft 官方文檔 - Azure Service Bus Samples client library for Java](https://learn.microsoft.com/en-us/samples/azure/azure-sdk-for-java/servicebus-samples/)\\r\\n-   [Microsoft 官方文檔 - Send messages to an Azure Service Bus topic and receive messages from subscriptions to the topic (Java)](https://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-java-how-to-use-topics-subscriptions)\\r\\n-   [Microsoft 官方文檔 - Spring Cloud Stream with Azure Service Bus](https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/configure-spring-cloud-stream-binder-java-app-with-service-bus)\\r\\n-   [GitHub - Azure/azure-sdk-for-java - SendMessageBatchSample](https://github.com/Azure/azure-sdk-for-java/blob/main/sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/SendMessageBatchSample.java)\\r\\n\\r\\nASB 唔同既 messaging entities 既概念：\\r\\n\\r\\n-   [Microsoft 官方文檔 - Service Bus queues, topics, and subscriptions](https://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-queues-topics-subscriptions)\\r\\n\";","export default \"* {\\r\\n\\toutline: none !important;\\r\\n}\\r\\n\\r\\nhtml,\\r\\nbody {\\r\\n\\theight: 100% !important;\\r\\n\\toverscroll-behavior-y: none !important;\\r\\n}\\r\\n\\r\\nbody {\\r\\n\\tmargin: 0;\\r\\n\\t-webkit-tap-highlight-color: transparent !important;\\r\\n\\t-webkit-font-smoothing: antialiased !important;\\r\\n\\t-moz-osx-font-smoothing: grayscale !important;\\r\\n\\r\\n\\t/* self-defined */\\r\\n\\toverflow-y: scroll;\\r\\n\\tbackground-color: #b3e5fc !important;\\r\\n}\\r\\n\\r\\nbody::before {\\r\\n\\tcontent: \\\"\\\";\\r\\n\\tdisplay: block;\\r\\n\\tposition: fixed;\\r\\n\\ttop: 0;\\r\\n\\tleft: 0;\\r\\n\\twidth: 100%;\\r\\n\\theight: 100%;\\r\\n\\tz-index: -1000;\\r\\n\\tbackground: linear-gradient(to bottom, #ffcdd2, #b3e5fc) no-repeat center center;\\r\\n\\tbackground-size: cover;\\r\\n}\\r\\n\\r\\nbutton,\\r\\nbr,\\r\\nimg,\\r\\n::placeholder,\\r\\na:not(.allow-select) {\\r\\n\\t-webkit-touch-callout: none;\\r\\n\\t-webkit-user-select: none;\\r\\n\\t-khtml-user-select: none;\\r\\n\\t-moz-user-select: none;\\r\\n\\t-ms-user-select: none;\\r\\n\\tuser-select: none;\\r\\n\\r\\n\\t-webkit-user-drag: none;\\r\\n\\t-khtml-user-drag: none;\\r\\n\\t-moz-user-drag: none;\\r\\n\\t-ms-user-drag: none;\\r\\n\\tuser-drag: none;\\r\\n}\\r\\n\\r\\nimg {\\r\\n\\timage-orientation: from-image !important;\\r\\n}\\r\\n\\r\\ncode,\\r\\n.code {\\r\\n\\tfont-family: monospace;\\r\\n}\\r\\n\\r\\n::selection {\\r\\n\\tcolor: white !important;\\r\\n\\tbackground: #e91e63 !important;\\r\\n\\t-webkit-text-fill-color: white !important;\\r\\n}\\r\\n\\r\\n::-moz-selection {\\r\\n\\tcolor: white !important;\\r\\n\\tbackground: #e91e63 !important;\\r\\n\\t-webkit-text-fill-color: white !important;\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar {\\r\\n\\twidth: 12px;\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar-track {\\r\\n\\tbackground: linear-gradient(to bottom, #f8bbd0, #b3e5fc);\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar-thumb {\\r\\n\\tbackground: linear-gradient(to bottom, #f06292, #ba68c8);\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar-thumb:hover {\\r\\n\\tbackground: linear-gradient(to bottom, #e91e63, #7b1fa2);\\r\\n}\\r\\n\\r\\n.particles-wrapper {\\r\\n\\tposition: fixed !important;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\r\\n\\twidth: 100%;\\r\\n\\theight: 100%;\\r\\n\\tz-index: -1;\\r\\n}\\r\\n\";","import styled from \"styled-components\";\r\n\r\nconst NameAndRole = styled.div`\r\n\tpadding: 2vw 0vw 1vw 6vw;\r\n\tline-height: 1;\r\n`;\r\n\r\nconst Name = styled.code`\r\n\tdisplay: block;\r\n\tcolor: #e91e63;\r\n\tfont-size: 3em;\r\n\tcursor: default;\r\n\t-webkit-box-reflect: below 0em -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), to(rgba(255, 255, 255, 0.1)));\r\n`;\r\n\r\nconst Role = styled.code`\r\n\tdisplay: block;\r\n\tcolor: #0277bd;\r\n\tfont-size: 1.75em;\r\n\tcursor: default;\r\n\tpadding-top: 1em;\r\n\t-webkit-box-reflect: below 0em -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), to(rgba(255, 255, 255, 0.1)));\r\n`;\r\n\r\nconst exports = { NameAndRole, Name, Role };\r\nexport default exports;\r\nexport { NameAndRole, Name, Role };\r\n","import styled from \"styled-components\";\r\n\r\nconst Body = styled.div`\r\n\twidth: 90%;\r\n\tdisplay: block;\r\n\tmargin: 0 auto;\r\n\tpadding: 1em 0em 0em 0em;\r\n`;\r\n\r\nconst NoSelect = styled.div`\r\n\t-webkit-touch-callout: none !important;\r\n\t-webkit-user-select: none !important;\r\n\t-khtml-user-select: none !important;\r\n\t-moz-user-select: none !important;\r\n\t-ms-user-select: none !important;\r\n\tuser-select: none !important;\r\n\r\n\t-webkit-user-drag: none !important;\r\n\t-khtml-user-drag: none !important;\r\n\t-moz-user-drag: none !important;\r\n\t-ms-user-drag: none !important;\r\n\tuser-drag: none !important;\r\n`;\r\n\r\nconst GradientText = styled.div`\r\n\tcolor: purple;\r\n\tfont-size: 1.25em;\r\n\tpadding-bottom: 1em;\r\n\tcursor: default;\r\n\tline-height: 1.5;\r\n\r\n\t@supports (display: grid) {\r\n\t\tbackground: linear-gradient(to bottom, #e91e63, #9c27b0);\r\n\t\t-webkit-background-clip: text;\r\n\t\t-webkit-text-fill-color: transparent;\r\n\t}\r\n`;\r\n\r\nconst NormalText = styled.div`\r\n\tcolor: purple;\r\n\tfont-size: 1.25em;\r\n\tpadding-bottom: 1em;\r\n\tcursor: default;\r\n\tline-height: 1.5;\r\n`;\r\n\r\nconst exports = { Body, NoSelect, GradientText, NormalText };\r\nexport default exports;\r\nexport { Body, NoSelect, GradientText, NormalText };\r\n","const responsiveMaxWidth = window.devicePixelRatio === 2 ? 766 : 767;\r\nconst responsiveMinWidth = responsiveMaxWidth + 1;\r\n\r\nconst exports = { responsiveMaxWidth, responsiveMinWidth };\r\nexport default exports;\r\nexport { responsiveMaxWidth, responsiveMinWidth };\r\n","import React from \"react\";\r\n\r\nconst workProjects = [\r\n\t{\r\n\t\tprojectId: \"bea-dio-bifd\",\r\n\t\tprojectName: \"Bank of East Asia (Contracted by Hudson Global Resources)\",\r\n\t\tprojectNature: \"6th Work Experience\",\r\n\t\tyear: \"Jul 2021 ~ Oct 2021\",\r\n\t\timages: [\r\n\t\t\t\"work-projects/bea-dio-bifd/26f.jpg\",\r\n\t\t\t\"work-projects/bea-dio-bifd/department.jpg\",\r\n\t\t\t\"work-projects/bea-dio-bifd/office-1.jpg\",\r\n\t\t\t\"work-projects/bea-dio-bifd/office-2.jpg\",\r\n\t\t\t\"work-projects/bea-dio-bifd/seat-1.jpg\",\r\n\t\t\t\"work-projects/bea-dio-bifd/seat-2.jpg\",\r\n\t\t],\r\n\t\tposition: \"Java Developer\",\r\n\t\tcontractPeriod: \"2021-7-6 ~ 2021-10-8\",\r\n\t\tworkLocation: \"BEA Tower, Millennium City 5\",\r\n\t\tteamSize: \"4\",\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tI am a web developer in the Business Innovation and Fintech Department of the Digital &amp; Innovation\r\n\t\t\t\tOffice who is responsible for implementing features for the recently launched BEA Mall mobile app that\r\n\t\t\t\tinvolve development in several Spring back-end microservice projects and a front-end JavaScript project.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tWorking in a small team, I am given the flexibility in implementing new changes and the opportunity to\r\n\t\t\t\tcontribute ideas including code refactoring and smarter ways of doing things like creating environments\r\n\t\t\t\tfor multiple developers to work and test at the same time and Git branching strategy.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tResponsibilities:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Implement new features for the BEA Mall mobile app\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;&ensp;&ensp;&ensp;•&ensp;Add new APIs in its back-end microservices and work with front-end\r\n\t\t\t\tcolleague to meet new requirements in user journey\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;&ensp;&ensp;&ensp;•&ensp;Add new functions to its CMS web application (front-end and back-end)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Contribute to code refactoring and DevOps practices, including Git branching and creating\r\n\t\t\t\tseparate environments for testing\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Back-end tech: Java 8, Spring Boot, JPA/Hibernate and SQL Server\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Front-end tech: React.js, Vue.js\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;DevOps tech: GitLab, JIRA, Jenkins\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"ant-financial-world-first\",\r\n\t\tprojectName: \"World First Asia Ltd. (acquired by Ant Financial, Alibaba)\",\r\n\t\tprojectNature: \"5th Work Experience\",\r\n\t\tyear: \"Dec 2019 ~ Jun 2021\",\r\n\t\timages: [\r\n\t\t\t\"work-projects/worldfirst/Double Eleven 2020 - Alibaba Office - 1.jpg\",\r\n\t\t\t\"work-projects/worldfirst/Double Eleven 2020 - Alibaba Office - 2.jpg\",\r\n\t\t\t\"work-projects/worldfirst/Double Eleven 2020 - Alibaba Office - 3.jpg\",\r\n\t\t\t\"work-projects/worldfirst/team.jpg\",\r\n\t\t\t\"work-projects/worldfirst/ali-day.jpg\",\r\n\t\t\t\"work-projects/worldfirst/performance-evaluation.png\",\r\n\t\t],\r\n\t\tposition: \"Software Engineer\",\r\n\t\tcontractPeriod: \"2019-12-16 ~ present\",\r\n\t\tworkLocation: \"Chubby Tower\",\r\n\t\tteamSize: \"~12 (HK, excluding UK and China)\",\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tI was a back-end developer who engaged in different areas of development from analyzing business\r\n\t\t\t\trequirements and estimating changes in systems, implementing the required code changes, testing and\r\n\t\t\t\tcollaborating with the QA team and UAT with project owners, all the way to deployment and production\r\n\t\t\t\tmonitoring.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tWe worked very closely with the Ant Financial development team from Mainland China on the Replatforming\r\n\t\t\t\tproject to revamp legacy back-end money transferring systems after the company was acquired by Ant.\r\n\t\t\t\tBesides, our team used the agile development methodology.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tResponsibilities:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Perform system analysis and prepare SA documentations\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Coordinate with other teams that are located in HK (local), UK (foreign) and CN (Ant\r\n\t\t\t\tFinancial colleagues) to implement new features within tight deadlines\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Work with Amazon US developers and implement API calls according to their tech specs and\r\n\t\t\t\tcontract\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Integrate eBay's OAuth and APIs with back-end systems\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Enhance features and improve user experiences of legacy systems\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Proactively contribute technical ideas and R&amp;D to improve code base of Spring Boot\r\n\t\t\t\tprojects\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;&ensp;&ensp;&ensp;•&ensp;Rewrite and refactor code written by UK colleagues\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;&ensp;&ensp;&ensp;•&ensp;Integrate latest Spring Cloud tech\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;TDD and BDD with JUnit, Mockito and Cucumber, and aim at &gt;90% change and branch\r\n\t\t\t\tcoverages\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Pair programming, a lot of code reviews and QA (very transparent and collaborative team\r\n\t\t\t\twork)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Agile development: constantly participate in standup, sprint grooming &amp; planning, UAT,\r\n\t\t\t\trelease, retrospective, etc.\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;&ensp;&ensp;&ensp;•&ensp;Work closely with product team, development team and business team to\r\n\t\t\t\tdeliver products\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;&ensp;&ensp;&ensp;•&ensp;Always work on proof of concept and minimal viable product\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Back-end tech: Java 8, Spring Boot/Cloud, Ant Financial tech stack\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Front-end tech: HTML, JavaScript\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;DevOps tech: Docker Compose, Git, GitLab, Bitbucket, JIRA, Confluence, Jenkins (CI/CD),\r\n\t\t\t\tBamboo (CI/CD), SonarQube (code analysis tool), Sumo Logic (log management), Visual Paradigm (sequence\r\n\t\t\t\tdiagram tool), Postman, Swagger, Mockoon\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"hksarg-wfao\",\r\n\t\tprojectName: \"HKSARG Working Family Allowance Office (Contracted by Chandler Macleod)\",\r\n\t\tprojectNature: \"4th Work Experience\",\r\n\t\tyear: \"Jun 2019 ~ Nov 2019\",\r\n\t\timages: [\r\n\t\t\t\"work-projects/wfao-eform/team.jpg\",\r\n\t\t\t\"work-projects/wfao-eform/attachment.png\",\r\n\t\t\t\"work-projects/wfao-eform/date-picker.png\",\r\n\t\t\t\"work-projects/wfao-eform/debug.png\",\r\n\t\t\t\"work-projects/wfao-eform/dynamic-list.png\",\r\n\t\t\t\"work-projects/wfao-eform/mobile-validation.jpg\",\r\n\t\t\t\"work-projects/wfao-eform/mobile.jpg\",\r\n\t\t\t\"work-projects/wfao-eform/overview.png\",\r\n\t\t\t\"work-projects/wfao-eform/password-strength-indicator.png\",\r\n\t\t\t\"work-projects/wfao-eform/preview.png\",\r\n\t\t\t\"work-projects/wfao-eform/step.png\",\r\n\t\t\t\"work-projects/wfao-eform/switch-language.png\",\r\n\t\t],\r\n\t\tposition: \"Contract Analyst Programmer\",\r\n\t\tcontractPeriod: \"2019-6-24 ~ 2019-11-30\",\r\n\t\tworkLocation: \"One Harbor Square\",\r\n\t\tteamSize: \"~15 (SA + AP)\",\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tI worked as a T-25 contractor in Working Family Allowance Office (WFAO) for a short term contract of 5\r\n\t\t\t\tmonths. I was responsible for R&amp;D in web development with React JS.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tResponsibilities:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Fully implement a e-form web app in React + Redux + Spring Boot\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Enhance Spring MVC + JPA/Hibernate + ZK web applications\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Analyze existing applications, propose solutions, work on proof of concept and\r\n\t\t\t\timplementation\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tAcquired new technologies:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;React (JS library)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Redux (state management)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Semantic UI (layout)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Some other NPM open source libraries\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"lkk-infinitus\",\r\n\t\tprojectName: \"LKK Health Products Group Limited / Infinitus Horizon Global Ltd.\",\r\n\t\tprojectNature: \"3rd Work Experience\",\r\n\t\tyear: \"Mar 2018 ~ Jun 2019\",\r\n\t\timages: [\r\n\t\t\t\"work-projects/infinitus-dsis/2018.jpg\",\r\n\t\t\t\"work-projects/infinitus-dsis/2019.jpg\",\r\n\t\t\t\"work-projects/infinitus-dsis/henry-chan-comments-on-work.jpg\",\r\n\t\t],\r\n\t\tposition: \"Software Engineer\",\r\n\t\tcontractPeriod: \"2018-3-23 ~ 2018-9-16 (Contracted by Kelly Services), 2018-9-17 ~ 2019-6-7 (permanent)\",\r\n\t\tworkLocation: \"Infinitus Plaza and Lee Gardens 2\",\r\n\t\tteamSize: \"5~6\",\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tI was a full-stack back-end software developer in LKK Infinitus, the largest direct selling dietary\r\n\t\t\t\tsupplement manufacturer in Mainland China. I was responsible for maintaining a web platform and the\r\n\t\t\t\tback-end system of a direct-selling integrated system and implementing changes to achieve business\r\n\t\t\t\tobjectives and goals. Besides, our team used the agile development methodology.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />I was first a contractor in the company but then my supervisor gave me a permanet role and I\r\n\t\t\t\tbecame a member of the LKK Infinitus family.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tProject: Direct-Selling Integrated System\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;A multilingual web platform built by vendor for internal users all around the world to\r\n\t\t\t\tplace sales orders, create members, manage inventories, view business reports, etc\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tResponsibilities:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Bug fixing and enhancements to support changing business requirements\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Participate in requirement gathering and meetings to understand business requirements\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tAround 8 supporting Spring Boot microservice applications\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Web automation on DSIS and HTML version of reports\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Generating and testing MyBatis mappers\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Report templating with HTML + CSS + FreeMarker + Java + iText\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Responsible for full implementation from scratch\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tBack-end technologies: Java 8, Spring MVC, Spring Boot, Spring Cloud, MyBatis, FreeMarker, OpenFeign,\r\n\t\t\t\tSwaggerUI, iText PDF\r\n\t\t\t\t<br />\r\n\t\t\t\tFront-end technologies: JavaScript, jQuery\r\n\t\t\t\t<br />\r\n\t\t\t\tTesting technologies: Postman, JMeter, JUnit, Mockito, SeleniumHQ\r\n\t\t\t\t<br />\r\n\t\t\t\tDevOps technologies: Docker, Jenkins, Git, JIRA, Confluence, BitBucket\r\n\t\t\t\t<br />\r\n\t\t\t\tOverall responsibilities: Back-end (30%), front-end (25%), automated testing (30%), DevOps (10%),\r\n\t\t\t\tdocumentation (5%)\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tNote: Changed to permanent contract since 17 Sep 2019.\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"dbs-bank\",\r\n\t\tprojectName: \"DBS Bank (HK) (Contracted by Kelly Services)\",\r\n\t\tprojectNature: \"2nd Work Experience\",\r\n\t\tyear: \"Mar 2017 ~ Mar 2018\",\r\n\t\timages: [\r\n\t\t\t\"work-projects/dbs-ifile/1_dashboard.png\",\r\n\t\t\t\"work-projects/dbs-ifile/2_1_add_user.png\",\r\n\t\t\t\"work-projects/dbs-ifile/2_2_update_user.png\",\r\n\t\t\t\"work-projects/dbs-ifile/2_users.png\",\r\n\t\t\t\"work-projects/dbs-ifile/3_user_groups.png\",\r\n\t\t\t\"work-projects/dbs-ifile/4_doc_types.png\",\r\n\t\t\t\"work-projects/dbs-ifile/5_recent_events.png\",\r\n\t\t\t\"work-projects/dbs-eforms/sc0.png\",\r\n\t\t\t\"work-projects/dbs-eforms/sc1.png\",\r\n\t\t\t\"work-projects/dbs-eforms/sc2.png\",\r\n\t\t\t\"work-projects/dbs-eforms/sc3.png\",\r\n\t\t\t\"work-projects/dbs-eforms/sc4.png\",\r\n\t\t\t\"work-projects/dbs-eforms/sc5.png\",\r\n\t\t\t\"work-projects/dbs-eforms/sc6.png\",\r\n\t\t\t\"work-projects/dbs-eforms/sc7.png\",\r\n\t\t\t\"work-projects/dbs-other-projects/bizcare.png\",\r\n\t\t\t\"work-projects/dbs-other-projects/bizcare-about.png\",\r\n\t\t\t\"work-projects/dbs-other-projects/bizcare-consolidation.png\",\r\n\t\t\t\"work-projects/dbs-other-projects/bizcare-consolidation-result.png\",\r\n\t\t\t\"work-projects/dbs-other-projects/bizcare-consolidation-about.png\",\r\n\t\t\t\"work-projects/dbs-other-projects/customer-total-portfolio-rtpo.png\",\r\n\t\t\t\"work-projects/dbs-other-projects/customer-total-portfolio-rtpo-2.png\",\r\n\t\t\t\"work-projects/dbs-other-projects/customer-total-portfolio-rtpo-3.png\",\r\n\t\t\t\"work-projects/dbs-other-projects/customer-total-portfolio-rtpo-about.png\",\r\n\t\t\t\"work-projects/dbs-other-projects/demand-letter-generator.png\",\r\n\t\t\t\"work-projects/dbs-other-projects/demand-letter-generator-about.png\",\r\n\t\t],\r\n\t\tposition: \"Software Engineer\",\r\n\t\tcontractPeriod: \"2017-3-20 ~ 2018-3-19\",\r\n\t\tworkLocation: \"One Island East, sometimes Millennium City 6 and The Center\",\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tI was a contract software developer in DBS and I was responsible for R&amp;D on their new projects. The\r\n\t\t\t\tcompany had 2 large web projects, one that allowed internal business users to search and view scanned\r\n\t\t\t\tand indexed PDF documents and one that streamlined the form filling and endorsement workflow of its\r\n\t\t\t\tcustomer relationship managers, as well as many small robotic process automation projects for\r\n\t\t\t\tfacilitating different groups of business users.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tProject 1: Paper Digitization / iFile\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;A web platform for business users to manage and view OCR'ed PDF documents\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tTechnologies: Java 8, Spring Boot, Hibernate/JPA, Apache Camel, ElasticSearch, AngularJS, JavaScript,\r\n\t\t\t\tSQL Server, MySQL\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tResponsibilities: Mainly back-end (web services and database design, documentation, etc) and a small\r\n\t\t\t\tproportion of front-end\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tDevelopment period: Mar 2017 ~ Sep 2017\r\n\t\t\t\t<br />\r\n\t\t\t\tTeam size: 3 (1 back-end, 1 front-end, 1 lead)\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t~\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tProject 2: e-Forms\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;A web platform for relationship managers to work on credit application forms with approval\r\n\t\t\t\tworkflow\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tTechnologies: Java 8, Spring Boot, Hibernate/JPA, Angular2, SQL Server, MySQL\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tResponsibilities: Mainly back-end (web services and database design, etc) and a small proportion of\r\n\t\t\t\tfront-end\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tDevelopment period: Oct 2017 ~ Mar 2018\r\n\t\t\t\t<br />\r\n\t\t\t\tTeam size: 5 (1 back-end, 1 front-end, 1 UI/UX designer, 1 BA, 1 lead)\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t~\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tOther small adhoc projects\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tFunctions &amp; use cases:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Web automation - grab data / batch update records in banking systems since there is no API\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Generate demand letter Microsoft Word documents for soft collectors to print out and send\r\n\t\t\t\tto obligors\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Loading data from delimited flat files and files of other layouts to RDBMS for audit\r\n\t\t\t\tpurposes\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Generate PDF files from HTML created from WYSIWYG editor\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tTechnologies: Java 8, Selenium, JavaFX, Spring Boot, Hibernate/JPA, iText, Apache POI, JasperReports\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tResponsibilities: Full implementation\r\n\t\t\t\t<br />\r\n\t\t\t\tDevelopment period: 1 week ~ 1 month\r\n\t\t\t\t<br />\r\n\t\t\t\tTeam size: 2 (1 developer and 1 lead)\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"ibm\",\r\n\t\tprojectName: \"IBM (Contracted by Kelly Services)\",\r\n\t\tprojectNature: \"1st Work Experience\",\r\n\t\tyear: \"Mar 2016 ~ Feb 2017\",\r\n\t\timages: [\r\n\t\t\t\"work-projects/ibm-bea-cso/20160517 - IBM - Interface Team.jpg\",\r\n\t\t\t\"work-projects/ibm-bea-cso/20161110 - IBM - Farewell Lunch.jpg\",\r\n\t\t\t\"work-projects/ibm-bea-cso/20161201 - IBM - Work.jpg\",\r\n\t\t\t\"work-projects/ibm-bea-cso/20161213 - IBM - Overtime.jpg\",\r\n\t\t\t\"work-projects/ibm-bea-cso/20161223 - IBM - Group Photo.jpg\",\r\n\t\t\t\"work-projects/ibm-bea-cso/20161230 - IBM - Karaoke with BEA Users.jpg\",\r\n\t\t],\r\n\t\tposition: \"IT Specialist\",\r\n\t\tcontractPeriod: \"2016-3-7 ~ 2017-3-6\",\r\n\t\tworkLocation: \"On-site at BEA Tower, Millennium City 5\",\r\n\t\tteamSize: \"~10 (Interface team), ~50 (whole project team)\",\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tIt was my honour to join the IBM Global Business Services division as a contractor and participated in\r\n\t\t\t\ttheir large banking project. I was responsible for development, writing unit test cases, working with\r\n\t\t\t\tend users on-site, collaborating with the SIT and QA teams to complete end-to-end testing.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />I really appreciated all of my colleagues in IBM, especially my team lead who was extremely\r\n\t\t\t\ttechnical and hard-working, during my contract period since they taught me a lot of hard skills. Without\r\n\t\t\t\tthem, I could hardly equip the soft skills that brought me further in my career.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tThe Bank of East Asia - Consolidated Settlement Operation System (CSO)\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tAn SI project that aims at integrating a banking system, Calypso, and migrating the deprecated back\r\n\t\t\t\toffice solution, KTP, to a new solution namely CSO. Many interface reports have been redesigned to meet\r\n\t\t\t\trequirements of the other parties of our client.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tContract period: 7 Mar 2016 ~ 6 Mar 2017\r\n\t\t\t\t<br />\r\n\t\t\t\tWork location: on-site at BEA Tower, Millennium City 5\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tMy Responsibilities:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Clarification on business requirements with users from the Settlement Operations Department\r\n\t\t\t\t(SOD)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Development\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;&ensp;&ensp;&ensp;•&ensp;Upstream integration and migration (30% of time)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;•&ensp;Manipulating XMLs from two banking systems (TCL and\r\n\t\t\t\tKPS) and using Calypso's API\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;&ensp;&ensp;&ensp;•&ensp;Downstream reporting (70% of time)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;•&ensp;Full implementation of interface reports (HKTR for\r\n\t\t\t\tHKMA) by strictly following Functional and Interface Specifications\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;•&ensp;Defect fixing and maintenance of other interface\r\n\t\t\t\treports (i.e. BRT, BSL, CSA, CRM, EAL and IFP) during the SIT, UAT and PIS periods\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;•&ensp;Database schema migration\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Unit testing and end-to-end testing with JUnit and Mockito\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Application deployment with Jenkins and automated deployment scripts\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Continuous integration and delivery with SVN and RTC version control\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Training the IT Department to maintain the solution\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Documentation with Javadoc\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n];\r\n\r\nexport default workProjects;\r\nexport { workProjects };\r\n","import React from \"react\";\r\n\r\nconst hobbyProjects = [\r\n\t{\r\n\t\tprojectId: \"dse-maths-question-generator\",\r\n\t\tprojectName: \"DSE Maths Question Generator\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2021,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/dse-maths-question-generator-mobile/selecting-answers.png\",\r\n\t\t\t\"hobby-projects/dse-maths-question-generator-mobile/submitted-and-displaying-answer.png\",\r\n\t\t\t\"hobby-projects/dse-maths-question-generator-pc/selecting-answers.png\",\r\n\t\t\t\"hobby-projects/dse-maths-question-generator-pc/submitted-and-displaying-answer.png\",\r\n\t\t],\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tA React web app that displays a list of DSE Maths exam questions where the Q&amp;A generators are ported\r\n\t\t\t\tfrom the Puzzle &amp; DSE Maths game (my final year project).\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tNPM libraries used in this project: Bootstrap, React Bootstrap, KaTeX, Lodash.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tWeb app URLs:\r\n\t\t\t\t<br />\r\n\t\t\t\tTC:{\" \"}\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName=\"allow-select\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"external nofollow noopener noreferrer\"\r\n\t\t\t\t\thref=\"https://blackr1234.github.io/dse-maths-question-generator-web/#/tc\"\r\n\t\t\t\t>\r\n\t\t\t\t\thttps://blackr1234.github.io/dse-maths-question-generator-web/#/tc\r\n\t\t\t\t</a>\r\n\t\t\t\t<br />\r\n\t\t\t\tEN:{\" \"}\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName=\"allow-select\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"external nofollow noopener noreferrer\"\r\n\t\t\t\t\thref=\"https://blackr1234.github.io/dse-maths-question-generator-web/#/en\"\r\n\t\t\t\t>\r\n\t\t\t\t\thttps://blackr1234.github.io/dse-maths-question-generator-web/#/en\r\n\t\t\t\t</a>\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"react-sudoku-solver\",\r\n\t\tprojectName: \"React Sudoku Solver\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2021,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/react-sudoku-solver/sudoku-solver-video.gif\",\r\n\t\t\t\"hobby-projects/react-sudoku-solver/solved.png\",\r\n\t\t\t\"hobby-projects/react-sudoku-solver/solved-2.png\",\r\n\t\t\t\"hobby-projects/react-sudoku-solver/unsolved.png\",\r\n\t\t],\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tA React web app that allows manual entry of Sudoku puzzles and is capable of solving some of the Expert\r\n\t\t\t\tlevel puzzles.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tNPM libraries used in this project: Material UI, Lodash.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tWeb app URL:\r\n\t\t\t\t<br />\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName=\"allow-select\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"external nofollow noopener noreferrer\"\r\n\t\t\t\t\thref=\"https://blackr1234.github.io/sudoku-web/\"\r\n\t\t\t\t>\r\n\t\t\t\t\thttps://blackr1234.github.io/sudoku-web/\r\n\t\t\t\t</a>\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"srt-subtitle-fixer\",\r\n\t\tprojectName: \"SRT Subtitle Fixer\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2021,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/srt-subtitle-fixer/initial-screen.png\",\r\n\t\t\t\"hobby-projects/srt-subtitle-fixer/all-good.png\",\r\n\t\t\t\"hobby-projects/srt-subtitle-fixer/result-screen.webp\",\r\n\t\t\t\"hobby-projects/srt-subtitle-fixer/warnings-and-errors.png\",\r\n\t\t\t\"hobby-projects/srt-subtitle-fixer/text-diff-section.png\",\r\n\t\t\t\"hobby-projects/srt-subtitle-fixer/ass-to-srt.png\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tA React and Spring Boot web app deployed on the Heroku cloud for correcting ASS and SRT subtitles.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tWeb app URL:\r\n\t\t\t\t<br />\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName=\"allow-select\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"external nofollow noopener noreferrer\"\r\n\t\t\t\t\thref=\"https://blackr1234.github.io/srt-subtitle-fixer-web/\"\r\n\t\t\t\t>\r\n\t\t\t\t\thttps://blackr1234.github.io/srt-subtitle-fixer-web/\r\n\t\t\t\t</a>\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tThis is a full-stack web project that I did for entertainment purpose (movie watching). Sometimes the\r\n\t\t\t\tASS or SRT files I download from the Internet have file format issues or multiple subtitle lines that\r\n\t\t\t\tsome TV players do not fully support. So I decided to write myself a program that helps correcting ASS\r\n\t\t\t\tand SRT files.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tFront-end webpage is deployed on GitHub Pages. It uses React and React Bootstrap.\r\n\t\t\t\t<br />\r\n\t\t\t\tBack-end web app is deployed on Heroku. It uses Spring Boot Starter Web.\r\n\t\t\t\t<br />\r\n\t\t\t\tThe whole project took around 24 ~ 30 hours (excluding layout tweaks).\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tFunctionalities:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Automatically convert ASS subtitle format into SRT subtitle format (even if file extension\r\n\t\t\t\tis wrong, it can automatically detect the correct format)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Show warning and error logs in the webpage's result section if the SRT file has file format\r\n\t\t\t\tissues\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Sort subtitles by start time\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Remove text formatting\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Correct sequence numbers (start from 1 and increase by 1)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Combine multiple-line subtitles into single line\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Translate between Simplified Chinese and Traditional Chinese\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Adjust start time and end time (e.g. +500ms for all subtitles, or expand/shrink the whole\r\n\t\t\t\tduration)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Show before-and-after text diff (using the text-diff JavaScript library)\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"spring-jpa-mapstruct\",\r\n\t\tprojectName: \"Back-end web app with Spring, JPA/Hibernate & MapStruct\",\r\n\t\tprojectNature: \"Individual (learning)\",\r\n\t\tyear: 2020,\r\n\t\timages: [],\r\n\t\tdescription: (\r\n\t\t\t<>A simple back-end web application for learning MapStruct, a compile-time library that maps Java beans.</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"eyval-downloader\",\r\n\t\tprojectName: \"Eyval.net Magazine Downloader\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2020,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/eyval-downloader/1.png\",\r\n\t\t\t\"hobby-projects/eyval-downloader/2.png\",\r\n\t\t\t\"hobby-projects/eyval-downloader/3.png\",\r\n\t\t\t\"hobby-projects/eyval-downloader/4.png\",\r\n\t\t],\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tA simple Java program using Jsoup to grab URLs and download magazine images of a given search keyword\r\n\t\t\t\tfrom Eyval.net.\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"eportfolio\",\r\n\t\tprojectName: \"E-Portfolio\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2019,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/eportfolio/Console Log.jpg\",\r\n\t\t\t\"hobby-projects/eportfolio/Home Page (Mobile).jpg\",\r\n\t\t\t\"hobby-projects/eportfolio/Project (Mobile).jpg\",\r\n\t\t\t\"hobby-projects/eportfolio/Blog Page (Mobile).jpg\",\r\n\t\t\t\"hobby-projects/eportfolio/Blog Post (Mobile).jpg\",\r\n\t\t\t\"hobby-projects/eportfolio/Menu (Mobile).jpg\",\r\n\t\t\t\"hobby-projects/eportfolio/Home Page (Desktop).jpg\",\r\n\t\t\t\"hobby-projects/eportfolio/Blog Page (Desktop).jpg\",\r\n\t\t\t\"hobby-projects/eportfolio/WebP Files.jpg\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tA React/Node.js web app written from scratch for job application purposes. It is a complete rewrite of a\r\n\t\t\t\tWix e-portfolio website with a similar layout design.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tResponsive web design (or mobile friendliness) is one of the primary goals when designing this website.\r\n\t\t\t\tThis project also supports lazy loading and Google WebP format of images on the Work Experiences and\r\n\t\t\t\tHobby Projects pages, so even these pages have tons of images, it is still blazing fast to load them and\r\n\t\t\t\tthe result is on-demand and low network data consumption and a good user experience.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tThe gallery component and the fullscreen gallery component on these pages are tailor-made from scratch,\r\n\t\t\t\treplacing 3rd party libraries namely React Awesome Slider, React Slick and React Image Lightbox used in\r\n\t\t\t\tthe past, to fulfil the needs for online manga style of navigation between images by clicking left and\r\n\t\t\t\tright areas, indicating that the image is still loading by applying a blinking effect and displaying\r\n\t\t\t\tthumbnail images with autoscroll animation since most of these images cannot be fully displayed when\r\n\t\t\t\tremaining static because of their aspect ratios.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tNPM packages used:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;JS library: React (with Hooks)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Routing: React Router DOM, React Router Hash Link\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;State management: Redux\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;UI layout: Semantic UI React, Styled Components\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Content: React Markdown (with Remark GFM plugin), Markdown TOC\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Animation &amp; effects: React Particles JS, Typewriter Effect, React Lazyload\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Data persistence: Firebase, localStorage\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tPrevious Wix website:\r\n\t\t\t\t<br />\r\n\t\t\t\thttps://blackr1234.wix.com/eport\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"hardware-picker-web\",\r\n\t\tprojectName: \"Hardware Picker Web\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2019,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/hardware-picker-web-mobile/Add Product to Cart (Android).jpg\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-mobile/Dark Mode - Off (Android).jpg\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-mobile/Dark Mode - On (Android).jpg\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-mobile/Decrement Shopping Cart Product Quantity (Android).jpg\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-mobile/First Visit (Android).jpg\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-mobile/Increment Shopping Cart Product Quantity (Android).jpg\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-mobile/Product Added to Cart (Android).jpg\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-mobile/Product Removed from Cart (Android).jpg\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-mobile/Product Search (Android).jpg\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-mobile/Remove Product from Cart (Android).jpg\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-mobile/Shopping Cart (Android).jpg\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-pc/Add Product to Cart (Desktop).png\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-pc/Dark Mode - Off (Desktop).png\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-pc/Dark Mode - On (Desktop).png\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-pc/First Visit (Desktop).png\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-pc/Product Added to Cart (Desktop).png\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-pc/Product Removed from Cart (Desktop).png\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-pc/Product Search (Desktop).png\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-pc/Remove Product from Cart (Desktop).png\",\r\n\t\t\t\"hobby-projects/hardware-picker-web-pc/Shopping Cart (Desktop).png\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tA project that consists of a backend Spring Boot project and a front-end project. These applications run\r\n\t\t\t\tin different ports.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tThe backend application has scheduling enabled to fetch PC hardware data from Jumbo and Centralfield\r\n\t\t\t\tevery 5 minutes and has caching enabled. Redis is used for caching product data.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tThe frontend application is written in simple HTML, CSS and JavaScript. JavaScript library Vue is used\r\n\t\t\t\tfor faster development. Framework7 is used for responsive layout design.\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"jira-backup-automator\",\r\n\t\tprojectName: \"JIRA Backup Automator\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2019,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/jira-backup-automator/JIRA Backup Automator - All - Hovered.png\",\r\n\t\t\t\"hobby-projects/jira-backup-automator/JIRA Backup Automator - All.png\",\r\n\t\t\t\"hobby-projects/jira-backup-automator/JIRA Backup Automator - Issue.png\",\r\n\t\t\t\"hobby-projects/jira-backup-automator/JIRA Backup Automator - Project.png\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tA Spring Boot project that can be used as a scheduled job for automatically downloading HTML files of\r\n\t\t\t\tJIRA issues of multiple projects from a corporate JIRA website.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tIt uses SeleniumHQ-based library to grab HTML files and Jsoup to process the HTML files and collect\r\n\t\t\t\tstatistics. These statistics, including data for chart display, are populated in index HTML files with\r\n\t\t\t\tthe help of Apache FreeMarker template engine. jQuery, Chart.js and ApexChart.js are used.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tThe index HTML files and JIRA HTML files altogether form an offline website for viewing JIRA issues.\r\n\t\t\t\tJSON files, attachments and images are also downloaded as well. These files are downloaded, generated\r\n\t\t\t\tand finally form a website with dashboards with a single click.\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"docker-manager\",\r\n\t\tprojectName: \"Docker Manager (macOS/Windows)\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2018,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - About.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - Build Image.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - Container Diff.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - Container File Structure.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - Container Info and Log.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - Container List.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - Create Network.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - Dock Badge Indicating the Number of Running Containers.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - Explore.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - Image List with Updatable Image Highlighted.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - Image List.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - Load Image.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - macOS Applications.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - Network List.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - Pull Image - Tag List.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - Pulling Image.png\",\r\n\t\t\t\"hobby-projects/docker-manager/Docker Manager - Run Container with Configurations.png\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tA simple JavaFX tool for managing docker images, containers and networks on a local environment. It uses\r\n\t\t\t\tthe docker-java library to establish connection with Docker. Works equally great on macOS and Windows\r\n\t\t\t\tplatforms.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tFunctionalities:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Explore popular images on Docker Hub\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Build, pull, save, load, tag and remove images\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Indicate updatable images\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Run container from image with name, ports, environment variables, volumes and network\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Check container info, log and file structure\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Diff, rename, start, pause, resume, stop, kill and remove containers\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Creating and removing networks\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tAdditional non-functional features:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;UI design and colour scheme\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Keyboard shortcuts for fast navigation\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Ability to install as an app on macOS (.DMG)\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"mp3-player\",\r\n\t\tprojectName: \"MP3 Player\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2017,\r\n\t\timages: [\"hobby-projects/mp3-player/MP3 Player.jpg\"],\r\n\t\tdescription: <>An MP3 player desktop application written in JavaFX and 3rd-party libraries.</>,\r\n\t},\r\n\t{\r\n\t\tprojectId: \"pdf-editor\",\r\n\t\tprojectName: \"PDF Editor\",\r\n\t\tprojectNature: \"Individual (part of work)\",\r\n\t\tyear: 2017,\r\n\t\timages: [\"hobby-projects/pdf-editor/PDF Editor.png\"],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tA JavaFX program that is capable of merging, rearranging and organizing PDF pages from different PDF\r\n\t\t\t\tfiles.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: <>Users can save all pages on the workbench as a new PDF file.</>,\r\n\t},\r\n\t{\r\n\t\tprojectId: \"sqlite-dbms-fx\",\r\n\t\tprojectName: \"SQLite DBMS FX\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2017,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/sqlite-dbms-fx/SQLite DBMS FX - Add Column.png\",\r\n\t\t\t\"hobby-projects/sqlite-dbms-fx/SQLite DBMS FX - Add Record.png\",\r\n\t\t\t\"hobby-projects/sqlite-dbms-fx/SQLite DBMS FX - Add Table.png\",\r\n\t\t\t\"hobby-projects/sqlite-dbms-fx/SQLite DBMS FX - Manipulating Records.png\",\r\n\t\t\t\"hobby-projects/sqlite-dbms-fx/SQLite DBMS FX - Operation Failure.png\",\r\n\t\t\t\"hobby-projects/sqlite-dbms-fx/SQLite DBMS FX - User SQL Execution.png\",\r\n\t\t\t\"hobby-projects/sqlite-dbms-fx/SQLite DBMS FX - Viewing Database.png\",\r\n\t\t],\r\n\t\tdescriptionOverview: <>A previous Swing database manager project rewritten in JavaFX.</>,\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\t* There is also another version that utilizes a third-party library to generate POJO classes for JavaFX\r\n\t\t\t\tTableView's PropertyValueFactory reflection purposes.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />* This tool can be installed on jPlatform.\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"software-version-checker\",\r\n\t\tprojectName: \"Software Version Checker\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2017,\r\n\t\timages: [\"hobby-projects/software-version-checker/Software Version Checker.png\"],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tA JavaFX program coded with third-party API that simplifies the process of checking software versions on\r\n\t\t\t\tofficial websites of the software that I use.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tWhen there is a newer version released, the software is highlighted.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tClicking on an item will open up the equivalent URL in the browser.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />* This tool can be installed on jPlatform.\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"jplatform\",\r\n\t\tprojectName: \"jPlatform\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2017,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - About.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - App Corrupted.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - App Info Properties File.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Clock Styles.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Console in Developer Mode.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Install App.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Keep or Remove Data.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Log File.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Main Screen.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Multiple App Windows.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Overwrite or Reinstall App.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Platform Settings Properties File.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Rearrange App Icons.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Restart and Shut Down Actions Close Apps First.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Restart or Shut Down Failure.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Show All Apps in Taskbar.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Show Platform Only in Taskbar.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Transparent Windows.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Uninstall Apps.png\",\r\n\t\t\t\"hobby-projects/jplatform/jPlatform - Update App.png\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tA JavaFX program that acts as a simple application platform (similar to most mobile operating systems,\r\n\t\t\t\te.g. iOS), allowing users to install independent JavaFX GUI applications.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tIt has the ability to run pre-compiled JavaFX GUI bytecode \"on-the-fly\" without re-deploying the core\r\n\t\t\t\tprogram.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tOther key features:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;1.&ensp;Source code integrity verification\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;2.&ensp;Drag-and-drop app icon arrangement\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;3.&ensp;Transparent windows\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;4.&ensp;Console window (developer mode)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;5.&ensp;Logging to log file\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"substitute-cli-tool\",\r\n\t\tprojectName: \"Substitute CLI Tool\",\r\n\t\tprojectNature: \"Individual (for work purposes)\",\r\n\t\tyear: 2016,\r\n\t\timages: [\"hobby-projects/substitute-cli/Substitute CLI.png\"],\r\n\t\tdescription: (\r\n\t\t\t<>\r\n\t\t\t\tA Java program that is able to find and replace strings or regular expressions in specified lines and\r\n\t\t\t\tpositions in specified files and directories.\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"create-table-viewer\",\r\n\t\tprojectName: \"Create Table Viewer\",\r\n\t\tprojectNature: \"Individual (for work purposes)\",\r\n\t\tyear: 2016,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/create-table-viewer/Create Table Viewer - Create CSV.png\",\r\n\t\t\t\"hobby-projects/create-table-viewer/Create Table Viewer - Home.png\",\r\n\t\t\t\"hobby-projects/create-table-viewer/Create Table Viewer - Read Create Table SQL.png\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tA Java program written in JavaFX framework that made my development work easy when I was in the IBM BEA\r\n\t\t\t\tproject.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tFunctionalities:\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;1.&ensp;Read SQL files, display schema information\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;2.&ensp;Generate EJB entity classes with getters and setters (member variables in lowerCamelCase)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;3.&ensp;Generate processor classes with setter methods from the entity classes\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;4.&ensp;Read values from specific CSV file with column header\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;5.&ensp;Generate CREATE TABLE SQL statement from lists of column specifications stored in text\r\n\t\t\t\tfiles\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;6.&ensp;Generate CSV files with random values (in maximum length of their defined formats)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;7.&ensp;Search column names with partial text\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;8.&ensp;Format SQL files with alignment\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />* This tool can be installed on jPlatform.\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"self-built-pc-hardware-picker\",\r\n\t\tprojectName: \"Self-built PC Hardware Picker\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2016,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/self-built-hardware-pickers/Centralfield & Jumbo Hardware Pickers.png\",\r\n\t\t\t\"hobby-projects/self-built-hardware-pickers/Centralfield Hardware Picker - Menu.png\",\r\n\t\t\t\"hobby-projects/self-built-hardware-pickers/Centralfield Hardware Picker.png\",\r\n\t\t\t\"hobby-projects/self-built-hardware-pickers/Jumbo Computer Hardware Picker - Menu.png\",\r\n\t\t\t\"hobby-projects/self-built-hardware-pickers/Jumbo Computer Hardware Picker.png\",\r\n\t\t\t\"hobby-projects/self-built-hardware-pickers/Product not found alert.png\",\r\n\t\t\t\"hobby-projects/self-built-hardware-pickers/Self-built PC Hardware Picker.png\",\r\n\t\t\t\"hobby-projects/self-built-hardware-pickers/Total price fluctuation alert.png\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tWritten in JavaFX. All catgory data and product information are retrieved from a self-built database\r\n\t\t\t\twith dynamic product categories.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tThe two latest versions can directly retrieve hardware product information from the Jumbo Computer\r\n\t\t\t\twebsite and the Centralfield website and provide handy functionalities:\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;1.&ensp;Save and open hardware lists\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;2.&ensp;Alert when product(s) are not found from the server\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;3.&ensp;Alert when the total price has fluctuated since last save\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />* These tools can be installed on jPlatform.\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"graph-adt\",\r\n\t\tprojectName: \"Graph ADT\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2016,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/graph-adt/Graph.png\",\r\n\t\t\t\"hobby-projects/graph-adt/UML - Factory (Java).png\",\r\n\t\t\t\"hobby-projects/graph-adt/UML - Graph (Java).png\",\r\n\t\t\t\"hobby-projects/graph-adt/UML (C sharp).png\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tThe graph abstract data type abstract class written in two languages, Java and C#, with inheritances of\r\n\t\t\t\tdirected graph and undirected graph. DFS and BFS are applied to find the path from one vertex to\r\n\t\t\t\tanother. Weighted graphs with Dijkstra's algorithm are included as well. All methods are tested with\r\n\t\t\t\tJUnit test cases.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tThe Java version can be used as an API and it is documented in Javadoc. The C# version has XML\r\n\t\t\t\tdocumentation comments within the solution.\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"notes\",\r\n\t\tprojectName: \"Notes\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2016,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/notes/About.png\",\r\n\t\t\t\"hobby-projects/notes/Account Login.png\",\r\n\t\t\t\"hobby-projects/notes/Account Sign Up.png\",\r\n\t\t\t\"hobby-projects/notes/Context Menu.png\",\r\n\t\t\t\"hobby-projects/notes/Note-taking.png\",\r\n\t\t\t\"hobby-projects/notes/Save Alert.png\",\r\n\t\t\t\"hobby-projects/notes/Search.png\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tA note-editing Java program written in JavaFX framework that connects to a RethinkDB database (NoSQL,\r\n\t\t\t\tDocument-oriented).\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tFunctionalities:\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;1.&ensp;Note editing\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;2.&ensp;Account registration\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;3.&ensp;Online storage and document synchronization\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;4.&ensp;Note search\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tThere is also another version that connects to a MySQL database.\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />* This tool can be installed on jPlatform.\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"file-transfer-manager\",\r\n\t\tprojectName: \"File Transfer Manager\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2015,\r\n\t\timages: [\"hobby-projects/file-transfer-manager/Sending & Receiving Files.png\"],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>A Java program that handles sending and receiving files and folders over Internet connection.</>\r\n\t\t),\r\n\t\tdescriptionContinued: <>* Recipient's router must be configured to forward the target port for file transfer</>,\r\n\t},\r\n\t{\r\n\t\tprojectId: \"postgresql-database-manager\",\r\n\t\tprojectName: \"PostgreSQL Database Manager\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2015,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/postgresql-dbms/Connect Database.png\",\r\n\t\t\t\"hobby-projects/postgresql-dbms/Create Table.png\",\r\n\t\t\t\"hobby-projects/postgresql-dbms/View Schema.png\",\r\n\t\t\t\"hobby-projects/postgresql-dbms/View Data.png\",\r\n\t\t\t\"hobby-projects/postgresql-dbms/Export SQL.png\",\r\n\t\t],\r\n\t\tdescriptionOverview: <>A PostgreSQL database management system written in Java.</>,\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tFunctionalities:\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;1.&ensp;Connecting to an PostgreSQL database\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;2.&ensp;Displaying table structure\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;3.&ensp;Updating data\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;4.&ensp;Renaming column names\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;5.&ensp;Adding and deleting columns\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;6.&ensp;Adding and deleting data records\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;7.&ensp;Adding and deleting tables\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;8.&ensp;Filtering data without inputting SQL\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;9.&ensp;Executing custom SQL statements and displaying query results (also supports CREATE TABLE,\r\n\t\t\t\tALTER TABLE, DROP TABLE, DELETE, INSERT, etc)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;10.&ensp;Importing and exporting .sql files in UTF-8\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;11.&ensp;Chinese language support\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"oracle-database-manager\",\r\n\t\tprojectName: \"Oracle Database Manager\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2015,\r\n\t\timages: [\"hobby-projects/oracle-dbms/Connect Database.png\"],\r\n\t\tdescriptionOverview: <>An Oracle database management system written in Java.</>,\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tFunctionalities:\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;1.&ensp;Connecting to an Oracle database\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;2.&ensp;Displaying table structure\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;3.&ensp;Updating data\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;4.&ensp;Renaming column names\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;5.&ensp;Adding and deleting columns\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;6.&ensp;Adding and deleting data records\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;7.&ensp;Adding and deleting tables\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;8.&ensp;Filtering data without inputting SQL\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;9.&ensp;Executing custom SQL statements and displaying query results (also supports CREATE TABLE,\r\n\t\t\t\tALTER TABLE, DROP TABLE, DELETE, INSERT, etc)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;10.&ensp;Importing and exporting .sql files in UTF-8\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;11.&ensp;Chinese language support\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"photo-viewer\",\r\n\t\tprojectName: \"Photo Viewer & Photo Viewer FX\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2015,\r\n\t\timages: [\"hobby-projects/photo-viewer/Photo Viewer.png\"],\r\n\t\tdescriptionOverview: <>Two photo viewers: one written in Java whereas the other one written in JavaFX.</>,\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tFunctionalities:\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;1.&ensp;Opening JPG, PNG and BMP image files with drag and drop gesture\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;2.&ensp;Moving the image with left mouse drags or the WASD keys\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;3.&ensp;Zooming in/out with right mouse drags or the up/down arrow keys\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;4.&ensp;Navigating to the file directory of the image and highlighting the image file with middle\r\n\t\t\t\tmouse clicks or the Enter key\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;5.&ensp;Jumping to previous/next image with mouse wheel scrolls or the left/right arrow keys\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;6.&ensp;Deleting the image to the Recycle Bin with the Delete key\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t* Bilinear sampling is used when opening and resizing the image\r\n\t\t\t\t<br />\r\n\t\t\t\t** For the JavaFX version, drag and drop gesture is disabled after an image is opened\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"search-gui-cli\",\r\n\t\tprojectName: \"Search (GUI & CLI)\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2015,\r\n\t\timages: [\"hobby-projects/search-gui/Search (GUI).png\"],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tTwo programs: one constructed with JTable and other JComponents whereas the other one in command line\r\n\t\t\t\tinterface.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tFunctionalities:\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tGUI version:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;1.&ensp;Displaying all records\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;2.&ensp;Adding and deleting records\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;3.&ensp;Changing row height\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;4.&ensp;Incremental search (a.k.a. search as you type) with all matching texts highlighted\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;5.&ensp;Search with predefined regular expressions (only comma (,) for separating filter text\r\n\t\t\t\tkeywords and/or key phrases and \"NOT \" word are supported)\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tCLI version:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;1.&ensp;Displaying all records\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;2.&ensp;Adding and deleting records\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;3.&ensp;Search with predefined regular expressions (only comma (,) for separating filter text\r\n\t\t\t\tkeywords and/or key phrases and \"NOT \" word are supported)\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />* Commas are treated as the AND operator when the All radio button is selected and they are\r\n\t\t\t\tregarded as the OR operator when the Any radio button is selected\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"mysql-database-manager\",\r\n\t\tprojectName: \"MySQL Database Manager\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2015,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/mysql-dbms/Add Table.png\",\r\n\t\t\t\"hobby-projects/mysql-dbms/Connect Database (Chinese).png\",\r\n\t\t\t\"hobby-projects/mysql-dbms/Connect Database.png\",\r\n\t\t\t\"hobby-projects/mysql-dbms/Execute SQL.png\",\r\n\t\t\t\"hobby-projects/mysql-dbms/Filter Data.png\",\r\n\t\t\t\"hobby-projects/mysql-dbms/Insert Record (column with an Auto Increment property).png\",\r\n\t\t],\r\n\t\tdescriptionOverview: <>A MySQL database management system written in Java.</>,\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tFunctionalities:\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;1.&ensp;Connecting to a MySQL database\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;2.&ensp;Displaying table structure\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;3.&ensp;Updating data\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;4.&ensp;Renaming column names\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;5.&ensp;Adding and deleting columns\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;6.&ensp;Adding and deleting data records\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;7.&ensp;Adding and deleting tables\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;8.&ensp;Filtering data without inputting SQL\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;9.&ensp;Executing custom SQL statements and displaying query results (also supports CREATE TABLE,\r\n\t\t\t\tALTER TABLE, DROP TABLE, DELETE, INSERT, etc)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;10.&ensp;Importing and exporting .sql files in UTF-8\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;11.&ensp;Supporting table creation with Auto Increment primary key\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;12.&ensp;Allowing the use of \"last insert id\" expression to represent \"LAST_INSERT_ID()\"\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;13.&ensp;Chinese language support\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"sqlite-database-manager\",\r\n\t\tprojectName: \"SQLite Database Manager\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2015,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/sqlite-dbms/Add column.png\",\r\n\t\t\t\"hobby-projects/sqlite-dbms/Add record.png\",\r\n\t\t\t\"hobby-projects/sqlite-dbms/Add table.png\",\r\n\t\t\t\"hobby-projects/sqlite-dbms/Execute SQL.png\",\r\n\t\t\t\"hobby-projects/sqlite-dbms/Export SQL.png\",\r\n\t\t\t\"hobby-projects/sqlite-dbms/Filter Data.png\",\r\n\t\t\t\"hobby-projects/sqlite-dbms/Home page.png\",\r\n\t\t],\r\n\t\tdescriptionOverview: <>A SQLite database management system written in Java.</>,\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tFunctionalities:\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;1.&ensp;Creating new .db files\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;2.&ensp;Reading .db files with drag &amp; drop gesture\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;3.&ensp;Displaying table structure\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;4.&ensp;Updating data\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;5.&ensp;Renaming column names\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;6.&ensp;Adding and deleting columns\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;7.&ensp;Adding and deleting data records\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;8.&ensp;Adding and deleting tables\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;9.&ensp;Filtering data without inputting SQL\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;10.&ensp;Executing custom SQL statements and displaying query results (also supports CREATE TABLE,\r\n\t\t\t\tALTER TABLE, DROP TABLE, DELETE, INSERT, PRAGMA, etc)\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;11.&ensp;Importing and exporting .sql files in UTF-8\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;12.&ensp;Filtering corrupt database files in the drag &amp; drop gesture and the Open dialog\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;13.&ensp;Chinese language support\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"xiangqi-banqi\",\r\n\t\tprojectName: \"Xiangqi & Banqi\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\tyear: 2015,\r\n\t\timages: [\"hobby-projects/xiangqi-banqi/Banqi.png\", \"hobby-projects/xiangqi-banqi/Xiangqi.png\"],\r\n\t\tdescription: (\r\n\t\t\t<>Two Chinese chess games written in Java with 2P on local machine and over Internet connection.</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"puzzle-and-dse-maths\",\r\n\t\tprojectName: \"Puzzle & DSE Maths\",\r\n\t\tprojectNature: \"Individual (Final Year Project)\",\r\n\t\tyear: 2015,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/puzzle-and-dse-maths/Battle page.png\",\r\n\t\t\t\"hobby-projects/puzzle-and-dse-maths/Card page.png\",\r\n\t\t\t\"hobby-projects/puzzle-and-dse-maths/Home Page.png\",\r\n\t\t\t\"hobby-projects/puzzle-and-dse-maths/Question page.png\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tAn object-oriented Java desktop application that utilizes databases (MySQL and SQLite) to store data,\r\n\t\t\t\thaving entertainment functions similar to the popular game, Puzzle &amp; Dragons, and a hundred of\r\n\t\t\t\tusers.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tMy tasks:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Product implementation\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Data validation and error testing\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Promoting and updating official website and Facebook app page\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Collecting feedbacks from users\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Product presentation\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Documentation\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Maintenance of front-end and back-end of the software\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tOfficial website:\r\n\t\t\t\t<br />\r\n\t\t\t\thttp://pndm.weebly.com\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tFacebook app page:\r\n\t\t\t\t<br />\r\n\t\t\t\thttps://www.facebook.com/pndmaths\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"hr-lightswitch\",\r\n\t\tprojectName: \"Human Resources Department LightSwitch application\",\r\n\t\tprojectNature: \"Group project (5 members)\",\r\n\t\tyear: 2015,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/human-resources-department-lightswitch/LightSwitch UI.jpg\",\r\n\t\t\t\"hobby-projects/human-resources-department-lightswitch/LightSwitch ERD.png\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tAn ASP.NET LightSwitch HTML5 application with basic personnel management functions developed under the\r\n\t\t\t\tfeature-driven development (FDD) model.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tMy responsibilities:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Designing Microsoft SQL Server database model\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Designing user interfaces and screens\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Application testing and debugging\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Product presentation\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;User manual and report writing\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"online-shopping-website\",\r\n\t\tprojectName: \"Online shopping website\",\r\n\t\tprojectNature: \"Group project (5 members)\",\r\n\t\tyear: 2014,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/online-shopping-website/Cart With Item.jpg\",\r\n\t\t\t\"hobby-projects/online-shopping-website/Main Page.jpg\",\r\n\t\t\t\"hobby-projects/online-shopping-website/PayPal Confirm.jpg\",\r\n\t\t\t\"hobby-projects/online-shopping-website/Product Brand Only Omega.jpg\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tAn ASP.NET (object-oriented C#) e-commerce website with shopping cart function, Google account login and\r\n\t\t\t\tPayPal payment gateway integration.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tMy responsibilities:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Reviewing and researching online tutorials and past works\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Full project implementation\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Website testing and debugging\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Product presentation and demonstration\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;User manual, weekly project log and management report writing\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"chinese-medical-system\",\r\n\t\tprojectName: \"Traditional Chinese Medicine Medical Record System\",\r\n\t\tprojectNature: \"Group project (5 members)\",\r\n\t\tyear: 2013,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/traditional-chinese-medicine-medical-record-system/Medical Record System.png\",\r\n\t\t\t\"hobby-projects/traditional-chinese-medicine-medical-record-system/Medical Record System 2.png\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tAn object-oriented Java desktop application that allows doctors to record and view daily medical\r\n\t\t\t\tmeetings with their patients.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tMy responsibilities:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Designing and defining Java classes\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Partial project implementation\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Data validation and error testing\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Product presentation\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Documentation\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"kowloon-motor-bus-routes-db-design\",\r\n\t\tprojectName: \"A database design with SQLs for customers to find out Kowloon Motor Bus routes\",\r\n\t\tprojectNature: \"Group project (5 members)\",\r\n\t\tyear: 2013,\r\n\t\timages: [],\r\n\t\tdescriptionOverview: <>A database design with SQLs for customers to find out Kowloon Motor Bus routes.</>,\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tMy responsibilities:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Finding bus information\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Designing database tables and fields\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Product presentation\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Documentation\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"pgm-photo-editor\",\r\n\t\tprojectName: \"Portable Grey Map Photo Editor\",\r\n\t\tprojectNature: \"Group project (6 members)\",\r\n\t\tyear: 2012,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/pgm-photo-editor/Ultimate PGM Editor.png\",\r\n\t\t\t\"hobby-projects/pgm-photo-editor/Ultimate PGM Editor - View PGM.png\",\r\n\t\t\t\"hobby-projects/pgm-photo-editor/Team Photo.jpg\",\r\n\t\t\t\"hobby-projects/pgm-photo-editor/Project Requirements 1.png\",\r\n\t\t\t\"hobby-projects/pgm-photo-editor/Project Requirements 2.png\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tA photo editing Windows console application written in C that handles Portable Grey Map photos by\r\n\t\t\t\tshowing in ASCII characters and applying photo effects.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tMy responsibilities:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Leading the whole project group\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Complete project implementation\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Input validation and error-testing\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Product presentation and demonstration\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"vocab-game\",\r\n\t\tprojectName: \"English Vocabulary Game\",\r\n\t\tprojectNature: \"Individual (School-based Assessment)\",\r\n\t\tyear: 2011,\r\n\t\timages: [\r\n\t\t\t\"hobby-projects/vocabulary-game/Loading Screen.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Message from Author.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Main Screen.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Vocab Guessing Screen.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Success and Rating Screen.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Vocab Guessing Screen - Challenging - 1.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Vocab Guessing Screen - Challenging - 2.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Success and Rating Screen - Challenging.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Menu.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Mini Game Hangman.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Mini Game Hangman - Good Job.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Create Account.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Account Status.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Account Achievements.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Instructions.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Instructions - How to save your game.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Instructions - My Account.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/Unlock with Key.png\",\r\n\t\t\t\"hobby-projects/vocabulary-game/About Screen.png\",\r\n\t\t],\r\n\t\tdescriptionOverview: (\r\n\t\t\t<>\r\n\t\t\t\tAA vocabulary guessing game running inside Windows console and written in Pascal that aims at improving\r\n\t\t\t\tchildren's English.\r\n\t\t\t</>\r\n\t\t),\r\n\t\tdescriptionContinued: (\r\n\t\t\t<>\r\n\t\t\t\tMy tasks:\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Project implementation\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Input validation and error-testing\r\n\t\t\t\t<br />\r\n\t\t\t\t&ensp;•&ensp;Documentation\r\n\t\t\t</>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tprojectId: \"snake-tetris\",\r\n\t\tprojectName: \"Snake, Tetris\",\r\n\t\tprojectNature: \"Individual (hobby project)\",\r\n\t\timages: [\"hobby-projects/snake-tetris/Snake.png\", \"hobby-projects/snake-tetris/Tetris.png\"],\r\n\t\tdescription: <>Two epic game projects written in C that run in Windows console.</>,\r\n\t},\r\n];\r\n\r\nexport default hobbyProjects;\r\nexport { hobbyProjects };\r\n","const blogPosts = [\r\n\t{\r\n\t\tpostId: \"coding-java-1\",\r\n\t\tsrc: \"config/blog/2020-09/coding-java-1.md\",\r\n\t\ttitle: \"Java 開發筆記（一）\",\r\n\t\tdescription: \"Java 開發筆記 - 安裝所需程式\",\r\n\t\tdate: 1600158060000,\r\n\t\tthumbnail: \"blog/2020-09/coding-java-1/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Tools\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"coding-java-2\",\r\n\t\tsrc: \"config/blog/2020-09/coding-java-2.md\",\r\n\t\ttitle: \"Java 開發筆記（二）\",\r\n\t\tdescription: \"Java 開發筆記 - 建立 project\",\r\n\t\tdate: 1600158060000,\r\n\t\tthumbnail: \"blog/2020-09/coding-java-2/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Maven\", \"Tools\"],\r\n\t\tpreviousPostId: \"coding-java-1\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"coding-java-3\",\r\n\t\tsrc: \"config/blog/2020-09/coding-java-3.md\",\r\n\t\ttitle: \"Java 開發筆記（三）\",\r\n\t\tdescription: \"Java 開發筆記 - Java 基礎知識\",\r\n\t\tdate: 1600158060000,\r\n\t\tthumbnail: \"blog/2020-09/coding-java-3/thumbnail.svg\",\r\n\t\ttags: [\"Java\"],\r\n\t\tpreviousPostId: \"coding-java-2\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"coding-java-4\",\r\n\t\tsrc: \"config/blog/2020-09/coding-java-4.md\",\r\n\t\ttitle: \"Java 開發筆記（四）\",\r\n\t\tdescription: \"Java 開發筆記 - Spring 基礎知識\",\r\n\t\tdate: 1600158060000,\r\n\t\tthumbnail: \"blog/2020-09/coding-java-4/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Spring\"],\r\n\t\tpreviousPostId: \"coding-java-3\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"coding-java-5\",\r\n\t\tsrc: \"config/blog/2020-09/coding-java-5.md\",\r\n\t\ttitle: \"Java 開發筆記（五）\",\r\n\t\tdescription: \"Java 開發筆記 - 幾款超有用必學 3rd party libraries\",\r\n\t\tdate: 1600158060000,\r\n\t\tthumbnail: \"blog/2020-09/coding-java-5/thumbnail.svg\",\r\n\t\ttags: [\"Java\"],\r\n\t\tpreviousPostId: \"coding-java-4\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"coding-java-6\",\r\n\t\tsrc: \"config/blog/2020-09/coding-java-6.md\",\r\n\t\ttitle: \"Java 開發筆記（六）\",\r\n\t\tdescription: \"Java 開發筆記 - Dependency Management\",\r\n\t\tdate: 1600158060000,\r\n\t\tthumbnail: \"blog/2020-09/coding-java-6/thumbnail.png\",\r\n\t\ttags: [\"Java\", \"Maven\", \"Tools\"],\r\n\t\tpreviousPostId: \"coding-java-5\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"spring-mapstruct\",\r\n\t\tsrc: \"config/blog/2020-09/spring-mapstruct.md\",\r\n\t\ttitle: \"在 Spring Boot + JPA 項目中使用 MapStruct\",\r\n\t\tdescription:\r\n\t\t\t\"如何在 Spring Boot + JPA 項目中針對 1-to-M relationship 既 entities 使用 MapStruct，同時學習 JPA／Hibernate 既 best practices\",\r\n\t\tdate: 1600844400000,\r\n\t\tthumbnail: \"blog/2020-09/spring-mapstruct/thumbnail.png\",\r\n\t\ttags: [\"Java\", \"Spring\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"web-scraping-with-jsoup\",\r\n\t\tsrc: \"config/blog/2020-09/web-scraping-with-jsoup.md\",\r\n\t\ttitle: \"網頁抓取（一） - jsoup\",\r\n\t\tdescription: \"如何使用 jsoup 抓取網頁，喺網頁獲取有用資訊\",\r\n\t\tdate: 1601106158420,\r\n\t\tthumbnail: \"blog/2020-09/web-scraping-with-jsoup/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"HTML\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"git-basics\",\r\n\t\tsrc: \"config/blog/2020-09/git-basics.md\",\r\n\t\ttitle: \"Git 基本操作\",\r\n\t\tdescription: \"如何使用 Git 既基本 commands 進行版本控制\",\r\n\t\tdate: 1601209992512,\r\n\t\tthumbnail: \"blog/2020-09/git-basics/thumbnail.png\",\r\n\t\ttags: [\"Git\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"web-scraping-with-selenide\",\r\n\t\tsrc: \"config/blog/2020-10/web-scraping-with-selenide.md\",\r\n\t\ttitle: \"網頁抓取（二） - Selenium/Selenide\",\r\n\t\tdescription: \"如何使用 Selenium/Selenide 抓取網頁，喺網頁獲取有用資訊\",\r\n\t\tdate: 1602282648516,\r\n\t\tthumbnail: \"blog/2020-10/web-scraping-with-selenide/thumbnail.png\",\r\n\t\ttags: [\"Java\", \"HTML\"],\r\n\t\tpreviousPostId: \"web-scraping-with-jsoup\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"writing-chrome-extensions\",\r\n\t\tsrc: \"config/blog/2020-10/writing-chrome-extensions.md\",\r\n\t\ttitle: \"寫第一個 Chrome Extension\",\r\n\t\tdescription: \"教你寫 Chrome extensions 方便自己瀏覽某啲網站\",\r\n\t\tdate: 1602321277331,\r\n\t\tthumbnail: \"blog/2020-10/writing-chrome-extensions/thumbnail.png\",\r\n\t\ttags: [\"HTML\", \"JavaScript\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"using-lombok\",\r\n\t\tsrc: \"config/blog/2020-10/using-lombok.md\",\r\n\t\ttitle: \"在 Java 項目中使用 Lombok\",\r\n\t\tdescription: \"如何利用 Lombok annotations 簡化部分 Java class 代碼\",\r\n\t\tdate: 1602606188503,\r\n\t\tthumbnail: \"blog/2020-10/using-lombok/thumbnail.png\",\r\n\t\ttags: [\"Java\"],\r\n\t\tpreviousPostId: \"coding-java-5\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"new-jdk-features-since-8\",\r\n\t\tsrc: \"config/blog/2020-10/new-jdk-features-since-8.md\",\r\n\t\ttitle: \"Java 8 之後既新功能\",\r\n\t\tdescription: \"介紹 JDK 8 之後——JDK 9 至 17 既重要新功能\",\r\n\t\tdate: 1602745960926,\r\n\t\tthumbnail: \"blog/2020-10/new-jdk-features-since-8/thumbnail.png\",\r\n\t\ttags: [\"Java\"],\r\n\t\tpreviousPostId: \"coding-java-3\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"react-web-1\",\r\n\t\tsrc: \"config/blog/2020-10/react-web-1.md\",\r\n\t\ttitle: \"React JS 網頁開發筆記（一）\",\r\n\t\tdescription: \"React JS 網頁開發筆記 - 安裝所需程式\",\r\n\t\tdate: 1603721666940,\r\n\t\tthumbnail: \"blog/2020-10/react-web-1/thumbnail.svg\",\r\n\t\ttags: [\"HTML\", \"JavaScript\", \"React\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"pull-data-with-retrofit\",\r\n\t\tsrc: \"config/blog/2021-04/pull-data-with-retrofit.md\",\r\n\t\ttitle: \"Retrofit HTTP Client\",\r\n\t\tdescription: \"使用 Retrofit 發起 HTTP 請求，下載 Jumbo Computer 硬件報價資訊\",\r\n\t\tdate: 1618335185389,\r\n\t\tthumbnail: \"blog/2021-04/pull-data-with-retrofit/thumbnail.svg\",\r\n\t\ttags: [\"Java\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"web-security\",\r\n\t\tsrc: \"config/blog/2021-05/web-security.md\",\r\n\t\ttitle: \"網頁安全\",\r\n\t\tdescription: \"Microlearning：網頁安全學習筆記 - 比較 cookie 同 local storage、session ID 同 access token\",\r\n\t\tdate: 1620943103004,\r\n\t\tthumbnail: \"blog/2021-05/web-security/thumbnail.svg\",\r\n\t\ttags: [\"Web\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"react-calculator\",\r\n\t\tsrc: \"config/blog/2021-05/react-calculator.md\",\r\n\t\ttitle: \"用 React 寫 Calculator\",\r\n\t\tdescription: \"React JS 網頁開發筆記 - 寫 calculator\",\r\n\t\tdate: 1621208270609,\r\n\t\tthumbnail: \"blog/2021-05/react-calculator/thumbnail.svg\",\r\n\t\ttags: [\"HTML\", \"JavaScript\", \"React\"],\r\n\t\tpreviousPostId: \"react-web-1\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"ffmpeg-basics\",\r\n\t\tsrc: \"config/blog/2021-05/ffmpeg-basics.md\",\r\n\t\ttitle: \"FFmpeg 基本功能\",\r\n\t\tdescription: \"用 FFmpeg 處理 MKV、MP4 影片\",\r\n\t\tdate: 1621680521007,\r\n\t\tthumbnail: \"blog/2021-05/ffmpeg-basics/thumbnail.svg\",\r\n\t\ttags: [\"Tools\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"js-advanced-syntax\",\r\n\t\tsrc: \"config/blog/2021-05/js-advanced-syntax.md\",\r\n\t\ttitle: \"進階 JavaScript\",\r\n\t\tdescription: \"JavaScript 進階語法、功能一覽\",\r\n\t\tdate: 1622097654576,\r\n\t\tthumbnail: \"blog/2021-05/js-advanced-syntax/thumbnail.svg\",\r\n\t\ttags: [\"JavaScript\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"task-scheduling-issue\",\r\n\t\tsrc: \"config/blog/2021-06/task-scheduling-issue.md\",\r\n\t\ttitle: \"低級 task scheduling 錯誤\",\r\n\t\tdescription: \"從錯誤中學習 - Production 場上面遇到既低級 task scheduling 錯誤\",\r\n\t\tdate: 1622834317140,\r\n\t\tthumbnail: \"blog/2021-06/task-scheduling-issue/thumbnail.svg\",\r\n\t\ttags: [\"Problem solving\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"java-collections-generic-type-covariance\",\r\n\t\tsrc: \"config/blog/2021-06/java-collections-generic-type-covariance.md\",\r\n\t\ttitle: \"Java collections 進階 - generic type 同 covariance\",\r\n\t\tdescription:\r\n\t\t\t\"Java 支持繼承（extends/implements），但如果作為 collections（例如 List）既 generic type，用法又係咪一樣？\",\r\n\t\tdate: 1623238901298,\r\n\t\tthumbnail: \"blog/2021-06/java-collections-generic-type-covariance/thumbnail.svg\",\r\n\t\ttags: [\"Java\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"sql-basics-sql-server\",\r\n\t\tsrc: \"config/blog/2021-08/sql-basics-sql-server.md\",\r\n\t\ttitle: \"SQL 基礎 - SQL Server\",\r\n\t\tdescription: \"SQL Server 既基本 SQL 語法\",\r\n\t\tdate: 1628525244290,\r\n\t\tthumbnail: \"blog/2021-08/sql-basics-sql-server/thumbnail.svg\",\r\n\t\ttags: [\"SQL\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"charles-proxy\",\r\n\t\tsrc: \"config/blog/2021-08/charles-proxy.md\",\r\n\t\ttitle: \"Charles 代理伺服器\",\r\n\t\tdescription: \"如何使用 Charles 代理伺服器截取 HTTP／HTTPS（SSL）通訊內容\",\r\n\t\tdate: 1629015445943,\r\n\t\tthumbnail: \"blog/2021-08/charles-proxy/thumbnail.png\",\r\n\t\ttags: [\"Web\", \"Tools\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"java-8-group-list-items\",\r\n\t\tsrc: \"config/blog/2021-09/java-8-group-list-items.md\",\r\n\t\ttitle: \"Java 8：Group 起一個 List<Item>\",\r\n\t\tdescription: \"應該用咩方法去 group 起一個 List<Item> 變成 Map<String, List<Item>>？小心因為 null key 而出錯！\",\r\n\t\tdate: 1630571718451,\r\n\t\tthumbnail: \"blog/2021-09/java-8-group-list-items/thumbnail.svg\",\r\n\t\ttags: [\"Java\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"spring-aop\",\r\n\t\tsrc: \"config/blog/2021-09/spring-aop.md\",\r\n\t\ttitle: \"Spring 基礎功能：AOP\",\r\n\t\tdescription: \"利用 Spring 底層 AOP 技術截取 method call 資訊或者取締原有返回結果\",\r\n\t\tdate: 1631169562982,\r\n\t\tthumbnail: \"blog/2021-09/spring-aop/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Spring\"],\r\n\t\tpreviousPostId: \"coding-java-4\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"java-test-overview\",\r\n\t\tsrc: \"config/blog/2021-09/java-test-overview.md\",\r\n\t\ttitle: \"Java 測試（一）：簡介\",\r\n\t\tdescription: \"簡單介紹一下 Java 既 testing 種類同埋 libraries\",\r\n\t\tdate: 1631246726719,\r\n\t\tthumbnail: \"blog/2021-09/java-test-overview/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Testing\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"java-test-junit\",\r\n\t\tsrc: \"config/blog/2021-09/java-test-junit.md\",\r\n\t\ttitle: \"Java 測試（二）：JUnit\",\r\n\t\tdescription: \"動手用 JUnit 寫 unit test cases\",\r\n\t\tdate: 1631246726719,\r\n\t\tthumbnail: \"blog/2021-09/java-test-junit/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Testing\"],\r\n\t\tpreviousPostId: \"java-test-overview\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"java-test-mockito\",\r\n\t\tsrc: \"config/blog/2021-09/java-test-mockito.md\",\r\n\t\ttitle: \"Java 測試（三）：Mockito\",\r\n\t\tdescription: \"動手用 Mockito 寫 unit test cases\",\r\n\t\tdate: 1631246726719,\r\n\t\tthumbnail: \"blog/2021-09/java-test-mockito/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Testing\"],\r\n\t\tpreviousPostId: \"java-test-overview\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"java-logging\",\r\n\t\tsrc: \"config/blog/2021-09/java-logging.md\",\r\n\t\ttitle: \"Java Logging\",\r\n\t\tdescription: \"如何用 Slf4j 以及 Logback 為普通 Java 程式以及 Spring Boot 項目做 logging\",\r\n\t\tdate: 1631501446037,\r\n\t\tthumbnail: \"blog/2021-09/java-logging/thumbnail.svg\",\r\n\t\ttags: [\"Java\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"markdown-basics\",\r\n\t\tsrc: \"config/blog/2021-09/markdown-basics.md\",\r\n\t\ttitle: \"用 Markdown 寫 doc\",\r\n\t\tdescription: \"Markdown 係一種純文字既檔案，可以用簡單符號表達文字格式，用黎寫 doc 就岩曬！\",\r\n\t\tdate: 1631526176065,\r\n\t\tthumbnail: \"blog/2021-09/markdown-basics/thumbnail.svg\",\r\n\t\ttags: [\"Tools\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"nodejs-cryptojs\",\r\n\t\tsrc: \"config/blog/2021-09/nodejs-cryptojs.md\",\r\n\t\ttitle: \"NodeJS + CryptoJS 加密解密\",\r\n\t\tdescription: \"寫一個簡單既 NodeJS 加密解密小工具\",\r\n\t\tdate: 1631601768706,\r\n\t\tthumbnail: \"blog/2021-09/nodejs-cryptojs/thumbnail.svg\",\r\n\t\ttags: [\"JavaScript\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"html-webp\",\r\n\t\tsrc: \"config/blog/2021-09/html-webp.md\",\r\n\t\ttitle: \"HTML 網頁顯示 WebP 圖片\",\r\n\t\tdescription:\r\n\t\t\t\"Google 既 WebP 圖片格式比起最廣泛使用既圖片格式，可以大大縮減檔案大小而又唔太影響質素，亦適合用喺 HTML 網頁上面\",\r\n\t\tdate: 1631635463271,\r\n\t\tthumbnail: \"blog/2021-09/html-webp/thumbnail.svg\",\r\n\t\ttags: [\"HTML\", \"Tools\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"kafka-cli\",\r\n\t\tsrc: \"config/blog/2021-09/kafka-cli.md\",\r\n\t\ttitle: \"透過 CLI 學習 Kafka\",\r\n\t\tdescription: \"用 Kafka CLI 學習同埋測試 Kafka 既基本 publish-subscribe、MQ 功能\",\r\n\t\tdate: 1631736004796,\r\n\t\tthumbnail: \"blog/2021-09/kafka-cli/thumbnail.svg\",\r\n\t\ttags: [\"Tools\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"jpa-usage\",\r\n\t\tsrc: \"config/blog/2021-09/jpa-usage.md\",\r\n\t\ttitle: \"JPA／Hibernate 使用方式\",\r\n\t\tdescription: \"一篇文章展示喺 Spring Boot 項目裡面 JPA／Hibernate 既各種使用方式\",\r\n\t\tdate: 1631784392508,\r\n\t\tthumbnail: \"blog/2021-09/jpa-usage/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Spring\"],\r\n\t\tpreviousPostId: \"coding-java-4\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"spring-caching-redis\",\r\n\t\tsrc: \"config/blog/2021-09/spring-caching-redis.md\",\r\n\t\ttitle: \"Spring 項目使用 Redis 做 caching\",\r\n\t\tdescription: \"如何喺 Spring Boot + JPA 項目裡面使用 Redis 做 caching，減少訪問 RDMS database\",\r\n\t\tdate: 1631910922979,\r\n\t\tthumbnail: \"blog/2021-09/spring-caching-redis/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Spring\", \"Tools\"],\r\n\t\tpreviousPostId: \"jpa-usage\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"spring-graphql-api\",\r\n\t\tsrc: \"config/blog/2021-09/spring-graphql-api.md\",\r\n\t\ttitle: \"Spring 項目暴露 GraphQL API\",\r\n\t\tdescription: \"如何喺 Spring Boot + JPA 項目暴露 GraphQL API，允許將多個 API calls 包裝成 1 個\",\r\n\t\tdate: 1632203409896,\r\n\t\tthumbnail: \"blog/2021-09/spring-graphql-api/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Spring\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"java-8-hashmap\",\r\n\t\tsrc: \"config/blog/2021-09/java-8-hashmap.md\",\r\n\t\ttitle: \"Java 8 HashMap 原理\",\r\n\t\tdescription: \"拆解 Java 8 既 HashMap 點運作，同時了解 Object class 既 hashCode、equals methods\",\r\n\t\tdate: 1632633327505,\r\n\t\tthumbnail: \"blog/2021-09/java-8-hashmap/thumbnail.svg\",\r\n\t\ttags: [\"Java\"],\r\n\t\tpreviousPostId: \"coding-java-3\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"spring-boot-elk-logging\",\r\n\t\tsrc: \"config/blog/2021-10/spring-boot-elk-logging.md\",\r\n\t\ttitle: \"Spring 項目使用 ELK 做 logging\",\r\n\t\tdescription:\r\n\t\t\t\"如何喺 Spring Boot 項目連接 ELK stack（即 Elasticsearch、Logstash、Kibana），方便我地睇 log 同搵 log\",\r\n\t\tdate: 1635678086168,\r\n\t\tthumbnail: \"blog/2021-10/spring-boot-elk-logging/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Spring\", \"Tools\"],\r\n\t\tpreviousPostId: \"java-logging\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"spring-resttemplate-trap\",\r\n\t\tsrc: \"config/blog/2021-10/spring-resttemplate-trap.md\",\r\n\t\ttitle: \"Spring JSON 變 XML response 問題\",\r\n\t\tdescription: \"經一事長一智 - Spring Boot 項目使用 RestTemplate 令 HTTP response 變左 XML 格式\",\r\n\t\tdate: 1635967874570,\r\n\t\tthumbnail: \"blog/2021-10/spring-resttemplate-trap/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Spring\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"java-remote-debug\",\r\n\t\tsrc: \"config/blog/2021-11/java-remote-debug.md\",\r\n\t\ttitle: \"Remote debug Java 程式\",\r\n\t\tdescription: \"如何 debug 遠端既 Java 程式\",\r\n\t\tdate: 1637509836764,\r\n\t\tthumbnail: \"blog/2021-11/java-remote-debug/thumbnail.svg\",\r\n\t\ttags: [\"Java\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"spring-cloud-config-git\",\r\n\t\tsrc: \"config/blog/2022-06/spring-cloud-config-git.md\",\r\n\t\ttitle: \"Spring Cloud Config——使用獨立既 Git 配置 repo\",\r\n\t\tdescription:\r\n\t\t\t\"如何利用 Spring Cloud Config Server、Spring Cloud Config Client 架構，將 Spring 配置放到另一個獨立既 Git repo，集中配置\",\r\n\t\tdate: 1654429047701,\r\n\t\tthumbnail: \"blog/2022-06/spring-cloud-config-git/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Spring\", \"Git\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"curl-basics\",\r\n\t\tsrc: \"config/blog/2022-07/curl-basics.md\",\r\n\t\ttitle: \"cURL 基本操作\",\r\n\t\tdescription: \"如何使用 cURL 既基本 commands 黎發出 HTTP 請求\",\r\n\t\tdate: 1656662996874,\r\n\t\tthumbnail: \"blog/2022-07/curl-basics/thumbnail.svg\",\r\n\t\ttags: [\"Web\", \"Tools\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"redis-basics\",\r\n\t\tsrc: \"config/blog/2022-07/redis-basics.md\",\r\n\t\ttitle: \"透過 Redis CLI 學習 Redis\",\r\n\t\tdescription: \"用 Redis CLI 學習 Redis 既基本 CRUD 讀寫功能\",\r\n\t\tdate: 1657410017667,\r\n\t\tthumbnail: \"blog/2022-07/redis-basics/thumbnail.svg\",\r\n\t\ttags: [\"Tools\"],\r\n\t\tpreviousPostId: \"spring-caching-redis\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"java-test-powermock\",\r\n\t\tsrc: \"config/blog/2022-07/java-test-powermock.md\",\r\n\t\ttitle: \"Java 測試（四）：PowerMock\",\r\n\t\tdescription: \"動手用 PowerMock 寫 unit test cases\",\r\n\t\tdate: 1657656508560,\r\n\t\tthumbnail: \"blog/2022-07/java-test-powermock/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Testing\"],\r\n\t\tpreviousPostId: \"java-test-overview\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"java-test-wiremock\",\r\n\t\tsrc: \"config/blog/2022-07/java-test-wiremock.md\",\r\n\t\ttitle: \"Java 測試（五）：WireMock\",\r\n\t\tdescription: \"動手用 WireMock 寫 integration test cases\",\r\n\t\tdate: 1657984014406,\r\n\t\tthumbnail: \"blog/2022-07/java-test-powermock/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Testing\"],\r\n\t\tpreviousPostId: \"java-test-overview\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"docker-basics\",\r\n\t\tsrc: \"config/blog/2022-07/docker-basics.md\",\r\n\t\ttitle: \"Docker 基本操作\",\r\n\t\tdescription: \"如何使用 Docker 既基本 commands 喺本地部署 infrastructure 工具，方便開發\",\r\n\t\tdate: 1658562960514,\r\n\t\tthumbnail: \"blog/2022-07/docker-basics/thumbnail.svg\",\r\n\t\ttags: [\"Tools\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"spring-webflux-1\",\r\n\t\tsrc: \"config/blog/2022-07/spring-webflux-1.md\",\r\n\t\ttitle: \"Spring Webflux（一）\",\r\n\t\tdescription: \"開始嘗試用 Spring Webflux 實現 reactive programming\",\r\n\t\tdate: 1658781595516,\r\n\t\tthumbnail: \"blog/2022-07/spring-webflux-1/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Spring\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"batch-download-files\",\r\n\t\tsrc: \"config/blog/2022-08/batch-download-files.md\",\r\n\t\ttitle: \"批量下載檔案\",\r\n\t\tdescription: \"用 Java 實現 jsoup + ProcessBuilder + cURL 下載多個檔案\",\r\n\t\tdate: 1661884151313,\r\n\t\tthumbnail: \"blog/2022-08/batch-download-files/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"HTML\", \"Tools\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"spring-cloud-config-jdbc\",\r\n\t\tsrc: \"config/blog/2023-01/spring-cloud-config-jdbc.md\",\r\n\t\ttitle: \"Spring Cloud Config——使用 RDBMS（JDBC）存放配置\",\r\n\t\tdescription:\r\n\t\t\t\"如何利用 Spring Cloud Config Server、Spring Cloud Config Client 架構，將 Spring 配置放到 RDBMS（JDBC），集中配置。另外仲有 Spring Cloud Config Server 既 bug 發現！\",\r\n\t\tdate: 1673810149233,\r\n\t\tthumbnail: \"blog/2023-01/spring-cloud-config-jdbc/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Spring\", \"Problem solving\"],\r\n\t\tpreviousPostId: \"spring-cloud-config-git\",\r\n\t},\r\n\t{\r\n\t\tpostId: \"spring-azure-service-bus\",\r\n\t\tsrc: \"config/blog/2023-04/spring-azure-service-bus.md\",\r\n\t\ttitle: \"Spring 項目中訂閱 Azure Service Bus\",\r\n\t\tdescription:\r\n\t\t\t\"如何喺 Spring Boot 項目利用 Microsoft 既 Azure Service Bus 發送、接收訊息。另外仲有 Spring Cloud Stream 既 bug 發現！\",\r\n\t\tdate: 1681141701231,\r\n\t\tthumbnail: \"blog/2023-04/spring-azure-service-bus/thumbnail.svg\",\r\n\t\ttags: [\"Java\", \"Spring\", \"Tools\", \"Cloud\"],\r\n\t},\r\n\t{\r\n\t\tpostId: \"kubectl-basics\",\r\n\t\tsrc: \"config/blog/2023-04/kubectl-basics.md\",\r\n\t\ttitle: \"kubectl 基本操作\",\r\n\t\tdescription: \"如何使用 kubectl 既基本 commands 管理 K8s 資源\",\r\n\t\tdate: 1682658340478,\r\n\t\tthumbnail: \"blog/2023-04/kubectl-basics/thumbnail.svg\",\r\n\t\ttags: [\"Tools\", \"Cloud\"],\r\n\t},\r\n].map((e) => ({\r\n\t...e,\r\n\tpath: \"/blog/\" + e.postId,\r\n}));\r\n\r\nexport default blogPosts;\r\nexport { blogPosts };\r\n","const blogPostTags = [\r\n\t{\r\n\t\tname: \"Java\",\r\n\t\ticon: \"code\",\r\n\t\tcolor: \"blue\",\r\n\t},\r\n\t{\r\n\t\tname: \"Spring\",\r\n\t\ticon: \"leaf\",\r\n\t\tcolor: \"green\",\r\n\t},\r\n\t{\r\n\t\tname: \"Maven\",\r\n\t\ticon: \"setting\",\r\n\t\tcolor: \"red\",\r\n\t},\r\n\t{\r\n\t\tname: \"Web\",\r\n\t\ticon: \"internet explorer\",\r\n\t\tcolor: \"purple\",\r\n\t},\r\n\t{\r\n\t\tname: \"HTML\",\r\n\t\ticon: \"html5\",\r\n\t\tcolor: \"orange\",\r\n\t},\r\n\t{\r\n\t\tname: \"JavaScript\",\r\n\t\ticon: \"js\",\r\n\t\tcolor: \"yellow\",\r\n\t},\r\n\t{\r\n\t\tname: \"React\",\r\n\t\ticon: \"react\",\r\n\t\tcolor: \"teal\",\r\n\t},\r\n\t{\r\n\t\tname: \"SQL\",\r\n\t\ticon: \"database\",\r\n\t\tcolor: \"pink\",\r\n\t},\r\n\t{\r\n\t\tname: \"Git\",\r\n\t\ticon: \"github\",\r\n\t\tcolor: \"orange\",\r\n\t},\r\n\t{\r\n\t\tname: \"Testing\",\r\n\t\ticon: \"repeat\",\r\n\t\tcolor: \"violet\",\r\n\t},\r\n\t{\r\n\t\tname: \"Tools\",\r\n\t\ticon: \"wrench\",\r\n\t\tcolor: \"black\",\r\n\t},\r\n\t{\r\n\t\tname: \"Cloud\",\r\n\t\tcolor: \"grey\",\r\n\t},\r\n\t{\r\n\t\tname: \"Problem solving\",\r\n\t\tcolor: \"brown\",\r\n\t},\r\n];\r\n\r\nexport default blogPostTags;\r\nexport { blogPostTags };\r\n","const firebaseHost =\r\n\tprocess.env.NODE_ENV === \"production\"\r\n\t\t? \"https://michael-chung-eportfolio.firebaseio.com\"\r\n\t\t: \"https://michael-chung-eportfolio-dev.firebaseio.com\";\r\n\r\nconst exports = { firebaseHost };\r\nexport default exports;\r\nexport { firebaseHost };\r\n","import { memo, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Container, Menu, Dropdown, Responsive } from \"semantic-ui-react\";\r\nimport { NameAndRole, Name, Role } from \"./Styles\";\r\nimport { Body } from \"./../Styles\";\r\nimport { responsiveMinWidth } from \"../../config\";\r\n\r\nfunction SiteHeader(props) {\r\n\tconst [openExp, setOpenExp] = useState(false);\r\n\r\n\tconst location = useLocation();\r\n\tconst currentPath = location.pathname;\r\n\r\n\tconst linkPath = (to) => ({\r\n\t\t...(currentPath === to ? {} : { as: Link, to }),\r\n\t\tactive: currentPath === to,\r\n\t\tstyle: {\r\n\t\t\ttextAlign: \"center\",\r\n\t\t\tpointerEvents: currentPath === to && \"none\",\r\n\t\t},\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"site-header\">\r\n\t\t\t<NameAndRole>\r\n\t\t\t\t<Name>Chung Cheuk Hang Michael</Name>\r\n\t\t\t\t<Role>Web Developer</Role>\r\n\t\t\t</NameAndRole>\r\n\r\n\t\t\t<Responsive as={Body} minWidth={responsiveMinWidth} style={{ paddingBottom: \"1em\" }}>\r\n\t\t\t\t<Container text textAlign=\"center\">\r\n\t\t\t\t\t<Menu stackable borderless compact widths={5} size=\"tiny\" inverted>\r\n\t\t\t\t\t\t<Menu.Item name=\"Home\" color=\"blue\" {...linkPath(\"/\")} draggable={false} />\r\n\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\tsimple\r\n\t\t\t\t\t\t\ttext=\"My Experiences\"\r\n\t\t\t\t\t\t\topen={openExp}\r\n\t\t\t\t\t\t\tonMouseEnter={() => setOpenExp(true)}\r\n\t\t\t\t\t\t\tonMouseLeave={() => setOpenExp(false)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t<Dropdown.Item {...linkPath(\"/workExp\")} draggable={false}>\r\n\t\t\t\t\t\t\t\t\tWork\r\n\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t<Dropdown.Item {...linkPath(\"/hobbyProject\")} draggable={false}>\r\n\t\t\t\t\t\t\t\t\tHobby Projects\r\n\t\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t</Dropdown>\r\n\r\n\t\t\t\t\t\t<Menu.Item name=\"Personality\" color=\"purple\" {...linkPath(\"/personality\")} draggable={false} />\r\n\t\t\t\t\t\t<Menu.Item name=\"Blog\" color=\"teal\" {...linkPath(\"/blog\")} draggable={false} />\r\n\t\t\t\t\t\t<Menu.Item name=\"Contact\" color=\"yellow\" {...linkPath(\"/contact\")} draggable={false} />\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t</Container>\r\n\t\t\t</Responsive>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(SiteHeader, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as SiteHeader };\r\n","const CHANGE_IMAGE_POPUP_SOURCE = \"CHANGE_IMAGE_POPUP_SOURCE\";\r\n\r\nconst exports = { CHANGE_IMAGE_POPUP_SOURCE };\r\nexport default exports;\r\nexport { CHANGE_IMAGE_POPUP_SOURCE };\r\n","import { CHANGE_IMAGE_POPUP_SOURCE } from \"./actionTypes\";\r\n\r\nconst changeImagePopupSource = (data) => ({\r\n\ttype: CHANGE_IMAGE_POPUP_SOURCE,\r\n\tdata,\r\n});\r\n\r\nconst exports = { changeImagePopupSource };\r\nexport default exports;\r\nexport { changeImagePopupSource };\r\n","import { memo, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeImagePopupSource } from \"../../../../redux/action\";\r\n\r\nfunction Avatar(props) {\r\n\tconst [queryString, setQueryString] = useState(\"\");\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst src = \"avatar.jpg\";\r\n\r\n\treturn (\r\n\t\t<div style={{ paddingTop: \"3em\" }}>\r\n\t\t\t<picture>\r\n\t\t\t\t<source type=\"image/webp\" srcSet={encodeURIComponent(src.replace(/\\.(jpg|png|gif)/, \".webp\"))} />\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={`${src}${queryString}`}\r\n\t\t\t\t\talt=\"My profile pic\"\r\n\t\t\t\t\tdraggable=\"false\"\r\n\t\t\t\t\tclassName=\"ui large circular centered spaced image\"\r\n\t\t\t\t\tonContextMenu={(e) => e.preventDefault()}\r\n\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\tchangeImagePopupSource({\r\n\t\t\t\t\t\t\t\timages: [src],\r\n\t\t\t\t\t\t\t\tactiveIndex: 0,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonError={() => setTimeout(() => setQueryString(`?${Math.random()}`), 1000)}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tcursor: \"pointer\",\r\n\t\t\t\t\t\tpadding: \"8px\",\r\n\t\t\t\t\t\tbackground: `\r\n\t\t\t\t\t\tradial-gradient(\r\n\t\t\t\t\t\t\tcircle at 50% 0,\r\n\t\t\t\t\t\t\trgba(255, 0, 0, 0.375),\r\n\t\t\t\t\t\t\trgba(255, 0, 0, 0) 70.71%\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tradial-gradient(\r\n\t\t\t\t\t\t\tcircle at 6.7% 75%,\r\n\t\t\t\t\t\t\trgba(0, 0, 255, 0.375),\r\n\t\t\t\t\t\t\trgba(0, 0, 255, 0) 70.71%\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tradial-gradient(\r\n\t\t\t\t\t\t\tcircle at 93.3% 75%,\r\n\t\t\t\t\t\t\trgba(0, 255, 0, 0.375),\r\n\t\t\t\t\t\t\trgba(0, 255, 0, 0) 70.71%\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\twhite\r\n\t\t\t\t\t`,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</picture>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(Avatar, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as Avatar };\r\n","import { memo, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport { NoSelect } from \"../../../Styles\";\r\n\r\nconst CircleShortcutWrapper = styled(\r\n\t({ themeColor, hovered, hoverBg, normalBg, hoverTextColor, normalTextColor, glowEffectBg, ...props }) => (\r\n\t\t<div {...props} />\r\n\t)\r\n)`\r\n\t.circle-shortcut {\r\n\t\twidth: 150px;\r\n\t\theight: 150px;\r\n\t\tmin-width: 150px;\r\n\t\tmin-height: 150px;\r\n\t\ttransition: 250ms;\r\n\t\tborder: none;\r\n\t\tbackground-color: ${({ hovered, hoverBg, normalBg }) => (hovered ? hoverBg : normalBg)} !important;\r\n\t\tbox-shadow: 0 0 30px ${({ glowEffectBg }) => glowEffectBg} !important;\r\n\t\t${({ hovered }) => (hovered ? \"transform: scale(0.95);\" : \"\")}\r\n\t}\r\n\r\n\t.circle-shortcut-macaron {\r\n\t\twidth: 150px;\r\n\t\theight: 165px;\r\n\t\tmin-width: 150px;\r\n\t\tmin-height: 165px;\r\n\t\ttransition: 250ms;\r\n\t\tborder: none;\r\n\t\tbox-shadow: none;\r\n\t\tbackground-color: transparent;\r\n\t\tbackground-image: url(\"macaron-${({ themeColor }) => themeColor}.png\");\r\n\t\tbackground-image: -webkit-image-set(\r\n\t\t\turl(\"macaron-${({ themeColor }) => themeColor}.webp\") 1x,\r\n\t\t\turl(\"macaron-${({ themeColor }) => themeColor}-2x.webp\") 2x\r\n\t\t);\r\n\t\tbackground-size: 98%;\r\n\t\tbackground-repeat: no-repeat;\r\n\t\tbackground-position: center;\r\n\t\t${({ hovered }) => (hovered ? \"transform: scale(1.15);\" : \"\")}\r\n\t}\r\n\r\n\t.circle-shortcut h3 {\r\n\t\ttransition: 250ms;\r\n\t\tcolor: ${({ hovered, normalTextColor, hoverTextColor }) =>\r\n\t\t\thovered ? hoverTextColor : normalTextColor} !important;\r\n\t}\r\n\r\n\t.circle-shortcut-macaron h3 {\r\n\t\ttransition: 250ms;\r\n\t\tmargin-top: -1.5em !important;\r\n\t\tcolor: ${({ normalTextColor }) => normalTextColor} !important;\r\n\t}\r\n\r\n\t@media (hover: hover) {\r\n\t\t.circle-shortcut,\r\n\t\t.circle-shortcut-macaron {\r\n\t\t\t-webkit-box-reflect: below 0em -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), to(rgba(255, 255, 255, 0.1)));\r\n\t\t}\r\n\r\n\t\t.circle-shortcut-macaron:hover {\r\n\t\t\tfilter: drop-shadow(0 0 20px ${({ glowEffectBg }) => glowEffectBg});\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction CircleShortcut(props) {\r\n\tconst {\r\n\t\tlinkTo,\r\n\t\ttext,\r\n\t\tthemeColor,\r\n\t\tnormalColor: normalTextColor,\r\n\t\thoverColor: hoverTextColor,\r\n\t\tnormalBg,\r\n\t\thoverBg,\r\n\t\tglowEffectBg,\r\n\t} = props;\r\n\r\n\tconst [isHovered, setHovered] = useState(false);\r\n\r\n\treturn (\r\n\t\t<NoSelect style={{ display: \"inline-block\" }}>\r\n\t\t\t<CircleShortcutWrapper\r\n\t\t\t\tthemeColor={themeColor}\r\n\t\t\t\thoverBg={hoverBg}\r\n\t\t\t\thoverTextColor={hoverTextColor}\r\n\t\t\t\tnormalBg={normalBg}\r\n\t\t\t\tnormalTextColor={normalTextColor}\r\n\t\t\t\tglowEffectBg={glowEffectBg}\r\n\t\t\t\thovered={isHovered}\r\n\t\t\t>\r\n\t\t\t\t<Link to={linkTo} draggable={false}>\r\n\t\t\t\t\t<Segment\r\n\t\t\t\t\t\tclassName=\"circle-shortcut-macaron\"\r\n\t\t\t\t\t\tcircular\r\n\t\t\t\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\t\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\t\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\t\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\t\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\t\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Header as=\"h3\" style={{ textTransform: \"uppercase\" }}>\r\n\t\t\t\t\t\t\t{text || \"\"}\r\n\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t</Link>\r\n\t\t\t</CircleShortcutWrapper>\r\n\t\t</NoSelect>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(CircleShortcut, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as CircleShortcut };\r\n","import { memo, useState } from \"react\";\r\nimport { Responsive } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport { responsiveMaxWidth, responsiveMinWidth } from \"../../../../config\";\r\n\r\nconst CONSOLE_LOG_PREFIX = \"console.log('\";\r\nconst CONSOLE_LOG_PREFIX_MOBILE = \"console.log<br />('\";\r\nconst CONSOLE_LOG_SUFFIX = \"')\";\r\n\r\nconst MacTerminal = styled.div`\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n\theight: 25px;\r\n\tbackground-color: #dad9d9;\r\n\tmargin: 0 auto;\r\n\tfont-family: monospace;\r\n\tpadding: auto;\r\n\tfloat: none;\r\n\tborder-radius: 5px 5px 0 0;\r\n\tcursor: move;\r\n\r\n\t.macos-terminal-button {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\tborder-radius: 100%;\r\n\t\twidth: 15px;\r\n\t\theight: 15px;\r\n\t\ttop: 19px;\r\n\t\tmargin: 0 auto;\r\n\t\tcursor: pointer;\r\n\t\ttransition: 100ms;\r\n\r\n\t\t&:active {\r\n\t\t\tfilter: brightness(1.1);\r\n\t\t}\r\n\t}\r\n\r\n\t.macos-terminal-button.red {\r\n\t\tbackground-color: #ec6559;\r\n\t\tleft: 10px;\r\n\t}\r\n\r\n\t.macos-terminal-button.yellow {\r\n\t\tbackground-color: #e0c04c;\r\n\t\tleft: 32.5px;\r\n\t}\r\n\r\n\t.macos-terminal-button.green {\r\n\t\tbackground-color: #72bf47;\r\n\t\tleft: 55px;\r\n\t}\r\n\r\n\t.macos-terminal-button-red-icon {\r\n\t\tposition: absolute;\r\n\t\twidth: 68%;\r\n\t\theight: 8%;\r\n\t\tleft: 16%;\r\n\t\ttop: 46%;\r\n\t\tborder-radius: 25px;\r\n\t\tbackground-color: #975513;\r\n\t}\r\n\r\n\t.macos-terminal-button-red-icon-1 {\r\n\t\ttransform: rotate(45deg);\r\n\t}\r\n\r\n\t.macos-terminal-button-red-icon-2 {\r\n\t\ttransform: rotate(-45deg);\r\n\t}\r\n\r\n\t.macos-terminal-button-yellow-icon {\r\n\t\tposition: absolute;\r\n\t\twidth: 68%;\r\n\t\theight: 8%;\r\n\t\tleft: 16%;\r\n\t\ttop: 46%;\r\n\t\tborder-radius: 25px;\r\n\t\tbackground-color: #975513;\r\n\t}\r\n\r\n\t.macos-terminal-button-green-icon {\r\n\t\tposition: absolute;\r\n\t\tborder-top: solid 30px transparent;\r\n\t\tborder-right: solid 30px transparent;\r\n\t\tborder-bottom: solid 30px #0c7404;\r\n\t\tborder-left: solid 30px #0c7404;\r\n\t\tborder-bottom-left-radius: 15px;\r\n\t}\r\n\r\n\t.macos-terminal-button-green-icon-1 {\r\n\t\ttop: -143.5%;\r\n\t\tleft: -156.5%;\r\n\t\ttransform: scale(0.1);\r\n\t}\r\n\r\n\t.macos-terminal-button-green-icon-2 {\r\n\t\ttop: -156.5%;\r\n\t\tleft: -143.5%;\r\n\t\ttransform: scale(0.1) rotate(180deg);\r\n\t}\r\n\r\n\t.macos-terminal-corner-anchor {\r\n\t\tposition: absolute;\r\n\t\tborder-right: solid 30px transparent;\r\n\t\tborder-bottom: solid 30px transparent;\r\n\t\tborder-top: solid 30px transparent;\r\n\r\n\t\t::before,\r\n\t\t::after {\r\n\t\t\tbox-sizing: border-box;\r\n\t\t}\r\n\t}\r\n\r\n\t.macos-terminal-corner-anchor-top-left {\r\n\t\tleft: -13px;\r\n\t\ttop: -14.5px;\r\n\t\tcursor: nwse-resize;\r\n\t\ttransform: scale(0.5) rotate(45deg);\r\n\t}\r\n\r\n\t.macos-terminal-corner-anchor-top-right {\r\n\t\tright: -13px;\r\n\t\ttop: -14.5px;\r\n\t\tcursor: nesw-resize;\r\n\t\ttransform: scale(0.5) rotate(135deg);\r\n\t}\r\n\r\n\t.macos-terminal-corner-anchor-bottom-left {\r\n\t\tleft: -13px;\r\n\t\tbottom: -14px;\r\n\t\tcursor: nesw-resize;\r\n\t\ttransform: scale(0.5) rotate(-45deg);\r\n\t}\r\n\r\n\t.macos-terminal-corner-anchor-bottom-right {\r\n\t\tright: -13px;\r\n\t\tbottom: -14px;\r\n\t\tcursor: nwse-resize;\r\n\t\ttransform: scale(0.5) rotate(-135deg);\r\n\t}\r\n\r\n\t.macos-terminal-side-anchor {\r\n\t\tposition: absolute;\r\n\t}\r\n\r\n\t.macos-terminal-side-anchor-top {\r\n\t\ttop: 11.5px;\r\n\t\twidth: 100%;\r\n\t\theight: 5px;\r\n\t\tcursor: n-resize;\r\n\t}\r\n\r\n\t.macos-terminal-side-anchor-left {\r\n\t\tbottom: 11.5px;\r\n\t\ttop: 13px;\r\n\t\tleft: -2.5px;\r\n\t\twidth: 5px;\r\n\t\theight: 78%;\r\n\t\tcursor: w-resize;\r\n\t}\r\n\r\n\t.macos-terminal-side-anchor-bottom {\r\n\t\tbottom: 11.5px;\r\n\t\twidth: 100%;\r\n\t\theight: 5px;\r\n\t\tcursor: s-resize;\r\n\t}\r\n\r\n\t.macos-terminal-side-anchor-right {\r\n\t\tbottom: 11.5px;\r\n\t\ttop: 13px;\r\n\t\tright: -3px;\r\n\t\twidth: 5px;\r\n\t\theight: 78%;\r\n\t\tcursor: e-resize;\r\n\t}\r\n`;\r\n\r\nfunction MacTerminalButtons(props) {\r\n\tconst [isHovered, setHovered] = useState(false);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"macos-terminal-button red\"\r\n\t\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\t>\r\n\t\t\t\t{isHovered && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"macos-terminal-button-red-icon macos-terminal-button-red-icon-1\" />\r\n\t\t\t\t\t\t<div className=\"macos-terminal-button-red-icon macos-terminal-button-red-icon-2\" />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"macos-terminal-button yellow\"\r\n\t\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\t>\r\n\t\t\t\t{isHovered && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"macos-terminal-button-yellow-icon\" />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"macos-terminal-button green\"\r\n\t\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\t>\r\n\t\t\t\t{isHovered && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"macos-terminal-button-green-icon macos-terminal-button-green-icon-1\" />\r\n\t\t\t\t\t\t<div className=\"macos-terminal-button-green-icon macos-terminal-button-green-icon-2\" />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"macos-terminal-side-anchor macos-terminal-side-anchor-top\" />\r\n\t\t\t<div className=\"macos-terminal-side-anchor macos-terminal-side-anchor-left\" />\r\n\t\t\t<div className=\"macos-terminal-side-anchor macos-terminal-side-anchor-right\" />\r\n\t\t\t<div className=\"macos-terminal-side-anchor macos-terminal-side-anchor-bottom\" />\r\n\t\t\t<div className=\"macos-terminal-corner-anchor macos-terminal-corner-anchor-top-left\" />\r\n\t\t\t<div className=\"macos-terminal-corner-anchor macos-terminal-corner-anchor-top-right\" />\r\n\t\t\t<div className=\"macos-terminal-corner-anchor macos-terminal-corner-anchor-bottom-left\" />\r\n\t\t\t<div className=\"macos-terminal-corner-anchor macos-terminal-corner-anchor-bottom-right\" />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst SelfTypingText = styled(({ isMobile, ...props }) => <code {...props} />)`\r\n\tdisplay: inline;\r\n\ttext-align: center;\r\n\tfont-size: ${({ isMobile }) => (isMobile ? \"2.75vw\" : \"2vw\")};\r\n\tcursor: type;\r\n\tline-height: 1;\r\n\tword-wrap: break-word;\r\n\r\n\tspan {\r\n\t\tcolor: #76ff03 !important;\r\n\t\ttext-shadow: #76ff03 0 0 5px !important;\r\n\t}\r\n\r\n\tspan.Typewriter__wrapper::selection {\r\n\t\tcolor: #ffeb3b !important;\r\n\t\t-webkit-text-fill-color: #ffeb3b !important;\r\n\t\tbackground-color: #76ff03 !important;\r\n\t}\r\n\r\n\tspan.Typewriter__wrapper::-moz-selection {\r\n\t\tcolor: #ffeb3b !important;\r\n\t\t-webkit-text-fill-color: #ffeb3b !important;\r\n\t\tbackground-color: #76ff03 !important;\r\n\t}\r\n\r\n\tspan.Typewriter__cursor {\r\n\t\t-webkit-touch-callout: none !important;\r\n\t\t-webkit-user-select: none !important;\r\n\t\t-khtml-user-select: none !important;\r\n\t\t-moz-user-select: none !important;\r\n\t\t-ms-user-select: none !important;\r\n\t\tuser-select: none !important;\r\n\t}\r\n\r\n\t.Typewriter {\r\n\t\tdisplay: inline-block;\r\n\t\tborder-radius: ${({ isMobile }) => (isMobile ? \"1.8em\" : \"0.8em\")};\r\n\t\tpadding: 20px;\r\n\t}\r\n`;\r\n\r\nfunction ConsoleLogText(props) {\r\n\tconst typewriterOnInit =\r\n\t\t(isMobile, ...consoleLogLines) =>\r\n\t\t(typewriter) => {\r\n\t\t\ttypewriter.pauseFor(1000);\r\n\t\t\tconsoleLogLines.forEach((line, i, arr) => {\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\ttypewriter.deleteChars(arr[i - 1].length + CONSOLE_LOG_SUFFIX.length);\r\n\t\t\t\t}\r\n\t\t\t\ttypewriter.pauseFor(250);\r\n\t\t\t\tif (i === 0) {\r\n\t\t\t\t\ttypewriter.typeString(isMobile ? CONSOLE_LOG_PREFIX_MOBILE : CONSOLE_LOG_PREFIX);\r\n\t\t\t\t}\r\n\t\t\t\ttypewriter.typeString(line + CONSOLE_LOG_SUFFIX).callFunction(() => {\r\n\t\t\t\t\tif (!document[`isPrintedConsoleLogLine${i + 1}`]) {\r\n\t\t\t\t\t\tconsole.log(line);\r\n\t\t\t\t\t\tdocument[`isPrintedConsoleLogLine${i + 1}`] = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (i < arr.length - 1) {\r\n\t\t\t\t\ttypewriter.pauseFor(1500);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ttypewriter.pauseFor(3000);\r\n\t\t\tfor (let i = 0; i < 5; i++) {\r\n\t\t\t\ttypewriter.deleteChars(1);\r\n\t\t\t\ttypewriter.pauseFor(50);\r\n\t\t\t}\r\n\t\t\ttypewriter.pauseFor(200);\r\n\t\t\ttypewriter.start();\r\n\t\t};\r\n\r\n\tconst typewriter = (\r\n\t\t<Typewriter\r\n\t\t\toptions={{ delay: 50, deleteSpeed: 25, loop: true }}\r\n\t\t\tonInit={typewriterOnInit(\r\n\t\t\t\tfalse,\r\n\t\t\t\t\"Welcome to my eportfolio\",\r\n\t\t\t\t\"Learn more about me here!\",\r\n\t\t\t\t\"And have a nice day~\"\r\n\t\t\t)}\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tcursor: \"default\",\r\n\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\tborderRadius: \"5px\",\r\n\t\t\t\tboxShadow: \"0 0 15px #455a64\",\r\n\t\t\t\tbackground: \"linear-gradient(to right, #4f355f, #493b52, #424242, #373737)\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<MacTerminal>\r\n\t\t\t\t<MacTerminalButtons />\r\n\t\t\t</MacTerminal>\r\n\t\t\t<Responsive as={SelfTypingText} minWidth={responsiveMinWidth}>\r\n\t\t\t\t{typewriter}\r\n\t\t\t</Responsive>\r\n\t\t\t<Responsive as={SelfTypingText} maxWidth={responsiveMaxWidth} isMobile>\r\n\t\t\t\t{typewriter}\r\n\t\t\t</Responsive>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(ConsoleLogText, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as ConsoleLogText };\r\n","import { memo } from \"react\";\r\nimport { Navigate, useLocation } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Grid, Segment } from \"semantic-ui-react\";\r\nimport { Avatar } from \"./Avatar\";\r\nimport { CircleShortcut } from \"./CircleShortcut\";\r\nimport { Body } from \"../../../Styles\";\r\nimport { GradientText } from \"../../../Styles\";\r\nimport { ConsoleLogText } from \"./ConsoleLogText\";\r\nimport moment from \"moment\";\r\n\r\nfunction Home(props) {\r\n\tconst age = moment().diff(\"1994-11-06\", \"years\");\r\n\r\n\tconst location = useLocation();\r\n\r\n\treturn location.pathname !== \"/\" ? (\r\n\t\t<Navigate to=\"/\" replace />\r\n\t) : (\r\n\t\t<Body>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>Home | {process.env.REACT_APP_TITLE}</title>\r\n\t\t\t</Helmet>\r\n\r\n\t\t\t<Grid stackable centered>\r\n\t\t\t\t<Grid.Column width={6} stretched>\r\n\t\t\t\t\t<Avatar></Avatar>\r\n\t\t\t\t</Grid.Column>\r\n\r\n\t\t\t\t<Grid.Column width={10} stretched>\r\n\t\t\t\t\t<Segment vertical basic>\r\n\t\t\t\t\t\t<ConsoleLogText />\r\n\t\t\t\t\t</Segment>\r\n\r\n\t\t\t\t\t<Segment vertical basic>\r\n\t\t\t\t\t\t<Grid stackable padded columns={3}>\r\n\t\t\t\t\t\t\t<Grid.Column textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t<CircleShortcut\r\n\t\t\t\t\t\t\t\t\tlinkTo=\"/workExp\"\r\n\t\t\t\t\t\t\t\t\ttext=\"Work\"\r\n\t\t\t\t\t\t\t\t\tthemeColor=\"red\"\r\n\t\t\t\t\t\t\t\t\tnormalColor=\"#f44336\"\r\n\t\t\t\t\t\t\t\t\thoverColor=\"#ffcdd2\"\r\n\t\t\t\t\t\t\t\t\tnormalBg=\"#ffcdd2\"\r\n\t\t\t\t\t\t\t\t\thoverBg=\"#b71c1c\"\r\n\t\t\t\t\t\t\t\t\tglowEffectBg=\"#f44336\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t\t<Grid.Column textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t<CircleShortcut\r\n\t\t\t\t\t\t\t\t\tlinkTo=\"/hobbyProject\"\r\n\t\t\t\t\t\t\t\t\ttext=\"Hobby Projects\"\r\n\t\t\t\t\t\t\t\t\tthemeColor=\"blue\"\r\n\t\t\t\t\t\t\t\t\tnormalColor=\"#2196f3\"\r\n\t\t\t\t\t\t\t\t\thoverColor=\"#bbdefb\"\r\n\t\t\t\t\t\t\t\t\tnormalBg=\"#bbdefb\"\r\n\t\t\t\t\t\t\t\t\thoverBg=\"#0d47a1\"\r\n\t\t\t\t\t\t\t\t\tglowEffectBg=\"#2196f3\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t\t<Grid.Column textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t<CircleShortcut\r\n\t\t\t\t\t\t\t\t\tlinkTo=\"/blog\"\r\n\t\t\t\t\t\t\t\t\ttext=\"Blog\"\r\n\t\t\t\t\t\t\t\t\tthemeColor=\"green\"\r\n\t\t\t\t\t\t\t\t\tnormalColor=\"#4caf50\"\r\n\t\t\t\t\t\t\t\t\thoverColor=\"#c8e6c9\"\r\n\t\t\t\t\t\t\t\t\tnormalBg=\"#c8e6c9\"\r\n\t\t\t\t\t\t\t\t\thoverBg=\"#1b5e20\"\r\n\t\t\t\t\t\t\t\t\tglowEffectBg=\"#4caf50\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Segment>\r\n\r\n\t\t\t\t\t<Segment vertical>\r\n\t\t\t\t\t\t<GradientText>\r\n\t\t\t\t\t\t\tI am a {age}-year-old web developer who is enthusiastic about building software that\r\n\t\t\t\t\t\t\trequires logical thinking, problem solving, creativity and design elements.\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\tI find programming itself to be a great way to achieve things like automating repetitive\r\n\t\t\t\t\t\t\twork. In this digital age, I am proud of being able to think digitally and do things\r\n\t\t\t\t\t\t\tdigitally and keep up with the fashion.\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<br />I am seeking to work with a company where I can effectively utilize my versatile skill\r\n\t\t\t\t\t\t\tset and innovative ideas to contribute towards the company's growth.\r\n\t\t\t\t\t\t</GradientText>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t</Body>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(Home, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as Home };\r\n","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction getCubeStyle(index, itemCountPerRow) {\r\n\treturn `\r\n\t\t.sk-cube${index + 1} {\r\n\t\t\tanimation-delay: ${Number(0.1 * (Math.floor(index / 3) + (index % itemCountPerRow))).toFixed(1)}s;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nconst LoadingIndicatorWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n`;\r\n\r\nconst LoadingIndicatorContainer = styled.div`\r\n\tposition: absolute;\r\n\twidth: 40px;\r\n\theight: 40px;\r\n\r\n\t.sk-cube {\r\n\t\twidth: 33%;\r\n\t\theight: 33%;\r\n\t\tbackground-color: rgba(255, 87, 34, 0.75);\r\n\t\tfloat: left;\r\n\t\ttransform: scale3d(0, 0, 1);\r\n\t\tanimation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out;\r\n\t}\r\n\r\n\t${Array(9)\r\n\t\t.fill(null)\r\n\t\t.map((v, i) => getCubeStyle(i, 3))\r\n\t\t.join(\"\")}\r\n\r\n\t@keyframes sk-cubeGridScaleDelay {\r\n\t\t0%,\r\n\t\t100% {\r\n\t\t\ttransform: scale3d(0, 0, 1);\r\n\t\t}\r\n\t\t35%,\r\n\t\t70% {\r\n\t\t\ttransform: scale3d(1, 1, 1);\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction LoadingIndicator(props) {\r\n\treturn (\r\n\t\t<LoadingIndicatorWrapper>\r\n\t\t\t<LoadingIndicatorContainer>\r\n\t\t\t\t<div className=\"sk-cube sk-cube1\"></div>\r\n\t\t\t\t<div className=\"sk-cube sk-cube2\"></div>\r\n\t\t\t\t<div className=\"sk-cube sk-cube3\"></div>\r\n\t\t\t\t<div className=\"sk-cube sk-cube4\"></div>\r\n\t\t\t\t<div className=\"sk-cube sk-cube5\"></div>\r\n\t\t\t\t<div className=\"sk-cube sk-cube6\"></div>\r\n\t\t\t\t<div className=\"sk-cube sk-cube7\"></div>\r\n\t\t\t\t<div className=\"sk-cube sk-cube8\"></div>\r\n\t\t\t\t<div className=\"sk-cube sk-cube9\"></div>\r\n\t\t\t</LoadingIndicatorContainer>\r\n\t\t</LoadingIndicatorWrapper>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(LoadingIndicator, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as LoadingIndicator };\r\n","import { memo, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Lazyload from \"react-lazyload\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { NoSelect } from \"../Styles\";\r\nimport { LoadingIndicator } from \"./LoadingIndicator\";\r\nimport { changeImagePopupSource } from \"../../redux/action\";\r\n\r\nconst scrollImageHorizontally = (hiddenWidth) => keyframes`\r\n\t98% {\r\n\t\ttransform: translateX(-${hiddenWidth}px);\r\n\t}\r\n\t100% {\r\n\t\ttransform: translateX(0px);\r\n\t}\r\n`;\r\n\r\nconst scrollImageVertically = (hiddenHeight) => keyframes`\r\n\t 98% {\r\n\t \ttransform: translateY(-${hiddenHeight}px);\r\n\t }\r\n\t 100% {\r\n\t \ttransform: translateY(0px);\r\n\t }\r\n`;\r\n\r\nconst GalleryWrapper = styled.div`\r\n\tdisplay: inline-block;\r\n\tposition: relative;\r\n\tmax-width: ${({ maxWidth }) => maxWidth};\r\n\tmax-height: ${({ maxHeight }) => maxHeight};\r\n\tmargin: 15px;\r\n\tborder-radius: 20px;\r\n\toverflow: hidden;\r\n\ttransition: 250ms;\r\n\tcursor: zoom-in;\r\n\r\n\t* {\r\n\t\ttransition: 250ms;\r\n\t}\r\n\r\n\timg {\r\n\t\tobject-fit: cover;\r\n\t\tanimation: ${({ hiddenWidth, hiddenHeight }) =>\r\n\t\t\t\thiddenWidth\r\n\t\t\t\t\t? scrollImageHorizontally(hiddenWidth)\r\n\t\t\t\t\t: hiddenHeight\r\n\t\t\t\t\t? scrollImageVertically(hiddenHeight)\r\n\t\t\t\t\t: \"none\"}\r\n\t\t\t15s linear infinite;\r\n\t\t${({ loaded }) => (loaded ? \"\" : \"animation: loading-image 2.5s linear infinite;\")};\r\n\t}\r\n\r\n\t@keyframes loading-image {\r\n\t\t50% {\r\n\t\t\topacity: 0.5;\r\n\t\t\tfilter: brightness(200%);\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst GalleryButtons = styled.div`\r\n\t.image-button {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\twidth: 33%;\r\n\t\theight: 100%;\r\n\t\tborder: none;\r\n\t\ttransition: 500ms;\r\n\t\tbackground-color: transparent;\r\n\t\tcursor: ${({ loaded }) => (loaded ? \"pointer\" : \"wait\")};\r\n\t\topacity: ${({ loaded }) => (loaded ? 0.75 : 0.25)};\r\n\t}\r\n\r\n\t.previous-image-button {\r\n\t\tleft: 0;\r\n\t\tborder-radius: 20px 0 0 20px;\r\n\t}\r\n\r\n\t.next-image-button {\r\n\t\tright: 0;\r\n\t\tborder-radius: 0 20px 20px 0;\r\n\t}\r\n`;\r\n\r\nconst IndexAndCount = styled.span`\r\n\tposition: absolute;\r\n\ttop: 10px;\r\n\tright: 10px;\r\n\tpadding: 3px 10px 3px 10px;\r\n\tcolor: white;\r\n\tbackground-color: rgba(0, 0, 0, 0.8);\r\n\tborder-radius: 15px;\r\n\ttext-align: center;\r\n`;\r\n\r\nfunction Gallery(props) {\r\n\tconst { images } = props;\r\n\tlet { width, height } = props;\r\n\tif (!width && !height) {\r\n\t\twidth = \"300px\";\r\n\t\theight = \"300px\";\r\n\t}\r\n\twidth = (width || \"auto\") + \"\";\r\n\theight = (height || \"auto\") + \"\";\r\n\r\n\tconst [displayIndex, setDisplayIndex] = useState(null);\r\n\tconst [activeIndex, setActiveIndex] = useState(0);\r\n\tconst [isLoaded, setLoaded] = useState(false);\r\n\tconst [queryString, setQueryString] = useState(\"\");\r\n\tconst [preferredWidth, setPreferredWidth] = useState(width);\r\n\tconst [hiddenWidth, setHiddenWidth] = useState(0);\r\n\tconst [hiddenHeight, setHiddenHeight] = useState(0);\r\n\tconst [originalWidth, setOriginalWidth] = useState(undefined);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst swipeConfig = {\r\n\t\tonSwipedLeft: () => {\r\n\t\t\tif (!images || images.length < 2 || !isLoaded) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetLoaded(false);\r\n\t\t\tsetQueryString(\"\");\r\n\t\t\tsetActiveIndex((activeIndex + 1) % images.length);\r\n\t\t},\r\n\t\tonSwipedRight: () => {\r\n\t\t\tif (!images || images.length < 2 || !isLoaded) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetLoaded(false);\r\n\t\t\tsetQueryString(\"\");\r\n\t\t\tsetActiveIndex((activeIndex + images.length - 1) % images.length);\r\n\t\t},\r\n\t\tpreventDefaultTouchmoveEvent: true,\r\n\t};\r\n\tconst imageCenterSwipeHandlers = useSwipeable(swipeConfig);\r\n\tconst buttonsSwipeHandlers = useSwipeable(swipeConfig);\r\n\r\n\tconst GalleryButton = (props) => {\r\n\t\tconst { className, clickToIndex } = props;\r\n\r\n\t\tconst [isHovered, setHovered] = useState(false);\r\n\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tclassName={className}\r\n\t\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\r\n\t\t\t\t\tsetHovered(false);\r\n\r\n\t\t\t\t\tif (!isLoaded) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetLoaded(false);\r\n\t\t\t\t\tsetQueryString(\"\");\r\n\t\t\t\t\tsetActiveIndex(clickToIndex);\r\n\t\t\t\t}}\r\n\t\t\t\tstyle={{ ...(isHovered && { backgroundColor: \"rgba(3, 169, 244, 0.25)\" }) }}\r\n\t\t\t/>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{images && images.length > 0 && (\r\n\t\t\t\t<Lazyload once height={height} offset={400}>\r\n\t\t\t\t\t<GalleryWrapper\r\n\t\t\t\t\t\tloaded={isLoaded}\r\n\t\t\t\t\t\tmaxWidth={width}\r\n\t\t\t\t\t\tmaxHeight={height}\r\n\t\t\t\t\t\thiddenWidth={hiddenWidth}\r\n\t\t\t\t\t\thiddenHeight={hiddenHeight}\r\n\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\tchangeImagePopupSource({\r\n\t\t\t\t\t\t\t\t\timages,\r\n\t\t\t\t\t\t\t\t\tactiveIndex: activeIndex,\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{...imageCenterSwipeHandlers}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<picture>\r\n\t\t\t\t\t\t\t<source\r\n\t\t\t\t\t\t\t\ttype=\"image/webp\"\r\n\t\t\t\t\t\t\t\tsrcSet={encodeURIComponent(\r\n\t\t\t\t\t\t\t\t\timages[activeIndex].replace(/\\.(jpg|png|gif)/, \"-crop.webp\")\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={`${images[activeIndex]}${queryString}`}\r\n\t\t\t\t\t\t\t\talt={images[activeIndex].replace(/\\.(jpg|png|gif)/, \"\")}\r\n\t\t\t\t\t\t\t\tdraggable={false}\r\n\t\t\t\t\t\t\t\twidth={preferredWidth}\r\n\t\t\t\t\t\t\t\tonContextMenu={(e) => e.preventDefault()}\r\n\t\t\t\t\t\t\t\tonLoad={({ target }) => {\r\n\t\t\t\t\t\t\t\t\tsetLoaded(true);\r\n\t\t\t\t\t\t\t\t\tsetDisplayIndex(activeIndex);\r\n\r\n\t\t\t\t\t\t\t\t\tlet windowWidth = originalWidth;\r\n\t\t\t\t\t\t\t\t\tconst windowHeight = Number(height.replace(/px/, \"\"));\r\n\t\t\t\t\t\t\t\t\tconst imgWidth = target.width;\r\n\t\t\t\t\t\t\t\t\tconst imgHeight = target.height;\r\n\t\t\t\t\t\t\t\t\tlet hiddenWidth = 0;\r\n\t\t\t\t\t\t\t\t\tlet hiddenHeight = 0;\r\n\r\n\t\t\t\t\t\t\t\t\tif (!windowWidth) {\r\n\t\t\t\t\t\t\t\t\t\tsetOriginalWidth(imgWidth);\r\n\t\t\t\t\t\t\t\t\t\twindowWidth = imgWidth;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (imgWidth / imgHeight > windowWidth / windowHeight) {\r\n\t\t\t\t\t\t\t\t\t\tconst newScaleWidth = (windowHeight * imgWidth) / imgHeight / windowWidth;\r\n\t\t\t\t\t\t\t\t\t\tsetPreferredWidth(newScaleWidth * 100 + \"%\");\r\n\r\n\t\t\t\t\t\t\t\t\t\thiddenWidth = (windowHeight * imgWidth) / imgHeight - windowWidth;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (imgHeight / imgWidth > windowHeight / windowWidth) {\r\n\t\t\t\t\t\t\t\t\t\tsetPreferredWidth(\"100%\");\r\n\t\t\t\t\t\t\t\t\t\thiddenHeight = (windowWidth * imgHeight) / imgWidth - windowHeight;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tsetHiddenWidth(hiddenWidth);\r\n\r\n\t\t\t\t\t\t\t\t\tif (imgWidth < windowWidth) {\r\n\t\t\t\t\t\t\t\t\t\t// const newImg = new Image();\r\n\t\t\t\t\t\t\t\t\t\t// newImg.onload = ({ target }) => {\r\n\t\t\t\t\t\t\t\t\t\t// \tsetHiddenHeight(target.height - windowHeight);\r\n\t\t\t\t\t\t\t\t\t\t// };\r\n\t\t\t\t\t\t\t\t\t\t// newImg.src = target.src;\r\n\t\t\t\t\t\t\t\t\t\tsetHiddenHeight(0);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tsetHiddenHeight(hiddenHeight);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonError={() => setTimeout(() => setQueryString(`?${Math.random()}`), 1000)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</picture>\r\n\t\t\t\t\t</GalleryWrapper>\r\n\r\n\t\t\t\t\t{images.length >= 2 && (\r\n\t\t\t\t\t\t<GalleryButtons loaded={isLoaded} {...buttonsSwipeHandlers}>\r\n\t\t\t\t\t\t\t<GalleryButton\r\n\t\t\t\t\t\t\t\tclassName=\"image-button previous-image-button\"\r\n\t\t\t\t\t\t\t\tclickToIndex={(activeIndex + images.length - 1) % images.length}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<GalleryButton\r\n\t\t\t\t\t\t\t\tclassName=\"image-button next-image-button\"\r\n\t\t\t\t\t\t\t\tclickToIndex={(activeIndex + 1) % images.length}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</GalleryButtons>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{images.length > 1 && (\r\n\t\t\t\t\t\t<NoSelect style={{ pointerEvents: \"none\" }}>\r\n\t\t\t\t\t\t\t<IndexAndCount>\r\n\t\t\t\t\t\t\t\t{displayIndex + 1}/{images.length}\r\n\t\t\t\t\t\t\t</IndexAndCount>\r\n\t\t\t\t\t\t</NoSelect>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{!isLoaded && <LoadingIndicator />}\r\n\t\t\t\t</Lazyload>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(Gallery, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as Gallery };\r\n","import { memo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonWrapper = styled(({ hovered, capitalize, ...props }) => <div {...props} />)`\r\n\tbutton {\r\n\t\tdisplay: flex !important;\r\n\t\talign-items: center !important;\r\n\t\tjustify-content: center !important;\r\n\r\n\t\tpadding: 0.6em 1.25em !important;\r\n\t\tfont-size: 0.95em !important;\r\n\t\tfont-weight: bold !important;\r\n\t\t${({ capitalize }) => (capitalize ? \"text-transform: uppercase !important;\" : \"\")}\r\n\t\tcolor: white !important;\r\n\t\tcursor: pointer !important;\r\n\t\ttransition: 250ms ease-in-out !important;\r\n\t\tborder: none !important;\r\n\t\tborder-radius: 2em !important;\r\n\t\tbox-shadow: 0 0 1.5em ${({ hovered }) => (hovered ? \"#244ab6\" : \"#b63c18\")} !important;\r\n\t\tbackground-size: 300% 100% !important;\r\n\t\tbackground-image: linear-gradient(to right, #ff1744, #ff9100, #651fff, #00b0ff) !important;\r\n\t\t${({ hovered }) => (hovered ? \"background-position: 100% 0; !important\" : \"\")}\r\n\t}\r\n`;\r\n\r\nfunction GradientButton(props) {\r\n\tconst { children = \"\", capitalize, action, ...rest } = props;\r\n\r\n\tconst [isHovered, setHovered] = useState(false);\r\n\r\n\treturn (\r\n\t\t<ButtonWrapper capitalize={capitalize} hovered={isHovered}>\r\n\t\t\t<button\r\n\t\t\t\t{...rest}\r\n\t\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetHovered(false);\r\n\t\t\t\t\tif (typeof action === \"function\") {\r\n\t\t\t\t\t\taction();\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</button>\r\n\t\t</ButtonWrapper>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(GradientButton, (prev, next) => prev.action === next.action);\r\nexport default memoComponent;\r\nexport { memoComponent as GradientButton };\r\n","import { memo, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Label, Segment, Header, Icon, Responsive } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport { Gallery } from \"../reusable/Gallery\";\r\nimport { GradientButton } from \"../reusable/GradientButton\";\r\nimport { NoSelect, GradientText } from \"../Styles\";\r\n// import { ImageSlideshow } from \"../reusable/slideshow/ImageSlideshow\";\r\n// import { MobileImageSlideshow } from \"../reusable/slideshow/MobileImageSlideshow\";\r\nimport moment from \"moment\";\r\nimport { responsiveMaxWidth, responsiveMinWidth } from \"../../config\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\n\r\nconst HeaderLinkWrapper = styled(({ hovered, ...props }) => <span {...props} />)`\r\n\ta {\r\n\t\ttransition: 250ms !important;\r\n\t\tcolor: ${({ hovered }) => (hovered ? \"#e91e63\" : \"black\")} !important;\r\n\t}\r\n`;\r\n\r\nfunction Project(props) {\r\n\tconst { detail, inverted } = props;\r\n\tconst { path, projectName, projectNature, year, images, descriptionOverview, description } = detail;\r\n\r\n\tconst leftToRight = inverted !== true;\r\n\tconst colors = [\"#b71c1c\", \"#0d47a1\", \"#1b5e20\", \"#e65100\", \"#3e2723\"];\r\n\tconst yearColor = Number.isInteger(year) ? colors[(moment().year() % year) % colors.length] : \"#212121\";\r\n\r\n\tconst [isHovered, setHovered] = useState(false);\r\n\r\n\tconst constructImage = () => (\r\n\t\t<Grid.Column width={8} textAlign=\"center\" verticalAlign={isEmpty(images) ? \"middle\" : null}>\r\n\t\t\t{(images || []).length > 0 ? (\r\n\t\t\t\t<div style={{ top: \"20px\", position: \"sticky\" }}>\r\n\t\t\t\t\t<Segment\r\n\t\t\t\t\t\traised\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: \"transparent\",\r\n\t\t\t\t\t\t\tborderRadius: \"1.5em\",\r\n\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Gallery images={images} width=\"100%\" height=\"400px\" />\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Responsive as={NoSelect} minWidth={responsiveMinWidth}>\r\n\t\t\t\t\t<Label size=\"large\">\r\n\t\t\t\t\t\t<Icon name=\"dont\" />\r\n\t\t\t\t\t\tNo screenshot available\r\n\t\t\t\t\t</Label>\r\n\t\t\t\t</Responsive>\r\n\t\t\t)}\r\n\t\t</Grid.Column>\r\n\t);\r\n\r\n\tconst constructDescription = () => (\r\n\t\t<Grid.Column width={8}>\r\n\t\t\t<div style={{ top: \"20px\", position: \"sticky\" }}>\r\n\t\t\t\t<NoSelect>\r\n\t\t\t\t\t<Responsive\r\n\t\t\t\t\t\tas={Label}\r\n\t\t\t\t\t\tminWidth={responsiveMinWidth}\r\n\t\t\t\t\t\ttag\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\tbackgroundColor: yearColor,\r\n\t\t\t\t\t\t\tfloat: !leftToRight && \"right\",\r\n\t\t\t\t\t\t\ttransform: !leftToRight && \"scaleX(-1)\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div style={{ transform: !leftToRight && \"scaleX(-1)\" }}>\r\n\t\t\t\t\t\t\t{Number.isInteger(year) ? \"Year \" + year : year || \"Others\"}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Responsive>\r\n\t\t\t\t\t<Responsive\r\n\t\t\t\t\t\tas={Label}\r\n\t\t\t\t\t\tmaxWidth={responsiveMaxWidth}\r\n\t\t\t\t\t\ttag\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\tbackgroundColor: yearColor,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Number.isInteger(year) ? \"Year \" + year : year || \"Others\"}\r\n\t\t\t\t\t</Responsive>\r\n\t\t\t\t</NoSelect>\r\n\t\t\t\t<Header as=\"h2\" style={{ cursor: \"default\" }}>\r\n\t\t\t\t\t<HeaderLinkWrapper hovered={isHovered}>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tclassName=\"allow-select\"\r\n\t\t\t\t\t\t\tto={path}\r\n\t\t\t\t\t\t\tstate={{ fromAllProjects: true }}\r\n\t\t\t\t\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\t\t\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\t\t\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\t\t\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\t\t\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\t\t\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{projectName || \"\"}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</HeaderLinkWrapper>\r\n\t\t\t\t\t<Header.Subheader>{projectNature || \"\"}</Header.Subheader>\r\n\t\t\t\t</Header>\r\n\t\t\t\t<GradientText>{description || descriptionOverview || \"\"}</GradientText>\r\n\r\n\t\t\t\t<div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\", height: \"3em\" }}>\r\n\t\t\t\t\t<Link to={path} state={{ fromAllProjects: true }}>\r\n\t\t\t\t\t\t<Responsive as={GradientButton} minWidth={responsiveMinWidth} capitalize>\r\n\t\t\t\t\t\t\tLearn More\r\n\t\t\t\t\t\t\t<Icon name=\"chevron right\" size=\"large\" style={{ margin: \"0 -0.25em 0 0.25em\" }} />\r\n\t\t\t\t\t\t</Responsive>\r\n\t\t\t\t\t\t<Responsive as={GradientButton} maxWidth={responsiveMaxWidth} capitalize>\r\n\t\t\t\t\t\t\tDetails\r\n\t\t\t\t\t\t\t<Icon name=\"chevron right\" size=\"large\" style={{ margin: \"0 -0.25em 0 0.25em\" }} />\r\n\t\t\t\t\t\t</Responsive>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Grid.Column>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Grid stackable reversed={leftToRight && \"mobile\"} relaxed>\r\n\t\t\t{leftToRight ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{constructImage()}\r\n\t\t\t\t\t{constructDescription()}\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{constructDescription()}\r\n\t\t\t\t\t{constructImage()}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(Project, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as Project };\r\n","import { memo, Fragment } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Header, Divider } from \"semantic-ui-react\";\r\nimport { Body } from \"../../Styles\";\r\nimport { Project } from \"../Project\";\r\nimport { workProjects } from \"../../../config\";\r\n\r\nfunction WorkExp(props) {\r\n\treturn (\r\n\t\t<Body>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>My Work Experiences | {process.env.REACT_APP_TITLE}</title>\r\n\t\t\t</Helmet>\r\n\r\n\t\t\t<Header size=\"huge\" style={{ cursor: \"default\" }}>\r\n\t\t\t\tMy Work Experiences\r\n\t\t\t</Header>\r\n\r\n\t\t\t{(workProjects || [])\r\n\t\t\t\t.map(({ projectId, ...rest }) => ({ ...rest, path: `/workExp/${projectId}` }))\r\n\t\t\t\t.map((project, i) => (\r\n\t\t\t\t\t<Fragment key={i}>\r\n\t\t\t\t\t\t<Divider section />\r\n\t\t\t\t\t\t<Project detail={project} />\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t))}\r\n\t\t</Body>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(WorkExp, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as WorkExp };\r\n","import { memo, Fragment } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Header, Divider } from \"semantic-ui-react\";\r\nimport { Body } from \"../../Styles\";\r\nimport { Project } from \"../Project\";\r\nimport { hobbyProjects } from \"../../../config\";\r\n\r\nfunction HobbyProject(props) {\r\n\treturn (\r\n\t\t<Body>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>My Hobby Projects | {process.env.REACT_APP_TITLE}</title>\r\n\t\t\t</Helmet>\r\n\r\n\t\t\t<Header size=\"huge\" style={{ cursor: \"default\" }}>\r\n\t\t\t\tMy Hobby Projects\r\n\t\t\t</Header>\r\n\t\t\t{(hobbyProjects || [])\r\n\t\t\t\t.map(({ projectId, ...rest }) => ({ ...rest, path: `/hobbyProject/${projectId}` }))\r\n\t\t\t\t.map((project, i, projects) => (\r\n\t\t\t\t\t<Fragment key={i}>\r\n\t\t\t\t\t\t<Divider section />\r\n\t\t\t\t\t\t<Project detail={project} inverted={(projects.length - i) % 2 === 1} />\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t))}\r\n\t\t</Body>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(HobbyProject, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as HobbyProject };\r\n","import { memo } from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\nimport { NoSelect } from \"../../Styles\";\r\n\r\nfunction PageNotFound(props) {\r\n\treturn (\r\n\t\t<NoSelect>\r\n\t\t\t<Message\r\n\t\t\t\terror\r\n\t\t\t\tfloating\r\n\t\t\t\tsize=\"huge\"\r\n\t\t\t\ticon=\"find\"\r\n\t\t\t\theader=\"404 Not found\"\r\n\t\t\t\tcontent=\"Sorry, we are not able to locate the webpage you are looking for.\"\r\n\t\t\t\tstyle={{ backgroundColor: \"transparent\", boxShadow: \"none\" }}\r\n\t\t\t/>\r\n\t\t</NoSelect>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(PageNotFound, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as PageNotFound };\r\n","import { memo, useState } from \"react\";\r\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Lazyload from \"react-lazyload\";\r\nimport { Segment, Header, Label, Button, Divider, Icon, Responsive } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport { PageNotFound } from \"./PageNotFound\";\r\nimport { Body, NoSelect, GradientText } from \"../../Styles\";\r\nimport moment from \"moment\";\r\nimport { responsiveMaxWidth, responsiveMinWidth, workProjects, hobbyProjects } from \"../../../config\";\r\nimport { changeImagePopupSource } from \"../../../redux/action\";\r\nimport find from \"lodash/find\";\r\n\r\nconst CustomSegment = styled(Segment)`\r\n\tbackground-color: rgba(255, 255, 255, 0.25) !important;\r\n\r\n\timg {\r\n\t\tposition: relative;\r\n\t\tmax-width: 50%;\r\n\t\tmax-height: 400px;\r\n\t\tdisplay: block;\r\n\t\tmargin: 20px auto;\r\n\t\tborder-radius: 10px;\r\n\t\tbox-shadow: 0 0 15px rgba(0, 0, 0, 0.5);\r\n\t\tbackground-size: 200% 200%;\r\n\t\ttransition: transform 400ms cubic-bezier(0, 1.2, 0.2, 1.5);\r\n\t\tcursor: zoom-in;\r\n\t}\r\n`;\r\n\r\nfunction ProjectDetail(props) {\r\n\tconst { projectType, backPath } = props;\r\n\tconst { projectId } = useParams();\r\n\tconst project = find([...workProjects, ...hobbyProjects], { projectId });\r\n\tconst {\r\n\t\tprojectName,\r\n\t\tprojectNature,\r\n\t\tyear,\r\n\t\timages,\r\n\t\tposition,\r\n\t\tcontractPeriod,\r\n\t\tworkLocation,\r\n\t\tteamSize,\r\n\t\tdescriptionOverview,\r\n\t\tdescriptionContinued,\r\n\t\tdescription,\r\n\t} = project || {};\r\n\r\n\tconst colors = [\"#b71c1c\", \"#0d47a1\", \"#1b5e20\", \"#e65100\", \"#3e2723\"];\r\n\tconst yearColor = Number.isInteger(year) ? colors[(moment().year() % year) % colors.length] : \"#212121\";\r\n\r\n\tconst [hoverImageIndex, setHoverImageIndex] = useState(null);\r\n\tconst [queryString, setQueryString] = useState(\"\");\r\n\r\n\tconst location = useLocation();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst backToAllProjectsButton = (\r\n\t\t<span\r\n\t\t\tonClick={() => {\r\n\t\t\t\tif (window.history?.length >= 2 && location?.state?.fromAllProjects) {\r\n\t\t\t\t\tnavigate(-1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnavigate(backPath);\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Responsive\r\n\t\t\t\tas={Button}\r\n\t\t\t\tminWidth={responsiveMinWidth}\r\n\t\t\t\tbasic\r\n\t\t\t\tcompact\r\n\t\t\t\tcolor=\"pink\"\r\n\t\t\t\tsize=\"medium\"\r\n\t\t\t\tcontent={\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\tBack to <b>{projectType || \"\"}</b>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\ticon=\"arrow left\"\r\n\t\t\t\tlabelPosition=\"left\"\r\n\t\t\t/>\r\n\t\t\t<Responsive maxWidth={responsiveMaxWidth}>\r\n\t\t\t\t<Button basic compact color=\"pink\" size=\"medium\" icon=\"arrow left\" content=\"Back\" />\r\n\t\t\t</Responsive>\r\n\t\t</span>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Body>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>\r\n\t\t\t\t\t{project ? projectName : \"404 Not Found\"} | {projectType || \"Project\"} |{\" \"}\r\n\t\t\t\t\t{process.env.REACT_APP_TITLE}\r\n\t\t\t\t</title>\r\n\t\t\t</Helmet>\r\n\r\n\t\t\t{project ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{backToAllProjectsButton}\r\n\r\n\t\t\t\t\t<Header size=\"huge\" style={{ cursor: \"default\" }}>\r\n\t\t\t\t\t\t{projectName || \"\"}\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t\t<Divider section />\r\n\r\n\t\t\t\t\t<CustomSegment style={{ padding: \"3em 5vw\" }}>\r\n\t\t\t\t\t\t<NoSelect>\r\n\t\t\t\t\t\t\t<Label.Group>\r\n\t\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\t\ttag\r\n\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: yearColor,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{Number.isInteger(year) ? \"Year \" + year : year || \"Others\"}\r\n\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t<Label tag size=\"large\" color=\"teal\">\r\n\t\t\t\t\t\t\t\t\t{projectNature || \"\"}\r\n\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t</Label.Group>\r\n\t\t\t\t\t\t</NoSelect>\r\n\r\n\t\t\t\t\t\t<GradientText style={{ paddingTop: \"2em\" }}>\r\n\t\t\t\t\t\t\t{position && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\tPosition: {position}\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{contractPeriod && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\tContract period: {contractPeriod}\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{workLocation && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\tWork location: {workLocation}\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{teamSize && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\tTeam size: {teamSize}\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{(position || contractPeriod || workLocation || teamSize) && <br />}\r\n\r\n\t\t\t\t\t\t\t{description || (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{descriptionOverview}\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t{descriptionContinued}\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) ||\r\n\t\t\t\t\t\t\t\t\"\"}\r\n\t\t\t\t\t\t</GradientText>\r\n\r\n\t\t\t\t\t\t{images && images.length > 0 && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Divider horizontal section style={{ paddingBottom: \"2em\" }}>\r\n\t\t\t\t\t\t\t\t\t<Header as=\"h5\" style={{ opacity: 0.5 }}>\r\n\t\t\t\t\t\t\t\t\t\t<Icon name=\"photo\" />\r\n\t\t\t\t\t\t\t\t\t\tScreenshots / Photos\r\n\t\t\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t\t\t</Divider>\r\n\r\n\t\t\t\t\t\t\t\t{images.map((image, i) => (\r\n\t\t\t\t\t\t\t\t\t<Lazyload key={i} once height=\"400px\" offset={400}>\r\n\t\t\t\t\t\t\t\t\t\t<picture>\r\n\t\t\t\t\t\t\t\t\t\t\t<source\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"image/webp\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrcSet={encodeURIComponent(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\timage.replace(/\\.(jpg|png|gif)/, \"-crop.webp\")\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={`${image}${queryString}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt={image.replace(/\\.(jpg|png|gif)/, \"\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdraggable={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonContextMenu={(e) => e.preventDefault()}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={() => setHoverImageIndex(i)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonMouseOver={() => setHoverImageIndex(i)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonMouseLeave={() => setHoverImageIndex(null)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonTouchStart={() => setHoverImageIndex(i)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonTouchEnd={() => setHoverImageIndex(null)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonTouchCancel={() => setHoverImageIndex(null)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetHoverImageIndex(null);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangeImagePopupSource({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\timages,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactiveIndex: i,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonError={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTimeout(() => setQueryString(`?${Math.random()}`), 1000)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...(i === hoverImageIndex && {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransform: \"scale(1.2)\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tboxShadow: \"0 0 30px rgba(0, 0, 0, 1)\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tzIndex: 1,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...(hoverImageIndex === null ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(i !== hoverImageIndex && {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilter: \"brightness(0.75) blur(2px)\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})),\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</picture>\r\n\t\t\t\t\t\t\t\t\t</Lazyload>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</CustomSegment>\r\n\r\n\t\t\t\t\t<Divider section />\r\n\t\t\t\t\t{backToAllProjectsButton}\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<PageNotFound />\r\n\t\t\t)}\r\n\t\t</Body>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(ProjectDetail, (prev, next) => prev.projectId === next.projectId);\r\nexport default memoComponent;\r\nexport { memoComponent as ProjectDetail };\r\n","import { memo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NoSelect } from \"../../../Styles\";\r\n\r\nconst HightlightedTextStyle = styled(NoSelect)`\r\n\tdisplay: inline-block;\r\n\tcolor: ${({ hovered }) => (hovered ? \"purple\" : \"gold\")};\r\n\tbackground: ${({ hovered }) => (hovered ? \"gold\" : \"purple\")};\r\n\t${({ hovered }) => (hovered ? \"cursor: pointer;\" : \"\")}\r\n\tfont-size: 1.25em;\r\n\tfont-weight: bold;\r\n\tpadding: 2px 8px 2px 8px;\r\n\tmargin: 0 3px 0 3px;\r\n\tborder-radius: 5px;\r\n\ttransition: 250ms;\r\n\t-webkit-box-reflect: below 0em -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), to(rgba(255, 255, 255, 0.1)));\r\n`;\r\n\r\nconst openLink = (url) => window.open(url, \"_blank\", \"noopener\");\r\n\r\nfunction HightlightedText(props) {\r\n\tconst { url } = props;\r\n\r\n\tconst [isHovered, setHovered] = useState(false);\r\n\r\n\treturn (\r\n\t\t<HightlightedTextStyle\r\n\t\t\t{...props}\r\n\t\t\thovered={isHovered}\r\n\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\tonClick={() => {\r\n\t\t\t\tsetHovered(false);\r\n\t\t\t\topenLink(url);\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(HightlightedText, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as HightlightedText };\r\n","import { Fragment, memo, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Header, Grid, Divider } from \"semantic-ui-react\";\r\nimport { HightlightedText } from \"./HightlightedText\";\r\nimport { Body, NormalText } from \"../../../Styles\";\r\nimport { changeImagePopupSource } from \"../../../../redux/action\";\r\n\r\nconst personalityConfigs = [\r\n\t{\r\n\t\ttitle: (\r\n\t\t\t<>\r\n\t\t\t\tMe Today (2021) <span style={{ fontWeight: \"normal\" }}>😎</span>\r\n\t\t\t</>\r\n\t\t),\r\n\t\tpersonalities: [\"I\", \"N\", \"T\", \"J\", \"-T\"],\r\n\t\tisActive: true,\r\n\t},\r\n\t{ title: \"Me Back in 2019\", personalities: [\"I\", \"S\", \"T\", \"J\", \"-A\"] },\r\n];\r\n\r\nconst personalityCombinationDescriptions = {\r\n\t\"INTJ-T\": \"I question everything!\",\r\n\t\"ISTJ-A\": \"Logic means a lot to me!\",\r\n};\r\n\r\nconst personalityNames = {\r\n\tI: \"introverted\",\r\n\tE: \"extraverted\",\r\n\tN: \"intuitive\",\r\n\tS: \"observant\",\r\n\tT: \"thinking\",\r\n\tF: \"feeling\",\r\n\tJ: \"judging\",\r\n\tP: \"prospecting\",\r\n\t\"-A\": \"assertive\",\r\n\t\"-T\": \"turbulent\",\r\n};\r\n\r\nconst personalityLinks = {\r\n\tI: \"https://www.16personalities.com/articles/mind-introverted-vs-extraverted\",\r\n\tE: \"https://www.16personalities.com/articles/mind-introverted-vs-extraverted\",\r\n\tN: \"https://www.16personalities.com/articles/energy-intuitive-vs-observant\",\r\n\tS: \"https://www.16personalities.com/articles/energy-intuitive-vs-observant\",\r\n\tT: \"https://www.16personalities.com/articles/nature-thinking-vs-feeling\",\r\n\tF: \"https://www.16personalities.com/articles/nature-thinking-vs-feeling\",\r\n\tJ: \"https://www.16personalities.com/articles/tactics-judging-vs-prospecting\",\r\n\tP: \"https://www.16personalities.com/articles/tactics-judging-vs-prospecting\",\r\n\t\"-A\": \"https://www.16personalities.com/articles/identity-assertive-vs-turbulent\",\r\n\t\"-T\": \"https://www.16personalities.com/articles/identity-assertive-vs-turbulent\",\r\n};\r\n\r\nconst personalityDescriptions = {\r\n\tI: \"I feel energetic and comfortable when work independently. I am self-reflective and studious.\",\r\n\tE: \"\",\r\n\tN: \"I like thinking in different dimensions and exploring possibilities. I can provide new directions when necessary.\",\r\n\tS: \"I am pragmatic so I see things by looking at how to make them in reality. I often focus on details just like every bit of this website: fonts, colours and backgrounds.\",\r\n\tT: \"I make decision based on truths and principles and by analyzing the pros and cons. As a result, I enjoy technical fields where logic is important to finding the solution.\",\r\n\tF: \"\",\r\n\tJ: \"I am task-oriented and I like to have things well-organized and planned.\",\r\n\tP: \"\",\r\n\t\"-A\": \"I am confident and do not worry too much.\",\r\n\t\"-T\": \"I am eager to improve my skills. I am also a perfectionist.\",\r\n};\r\n\r\nfunction Personality(props) {\r\n\tconst [queryString, setQueryString] = useState(\"\");\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst constructPersonalitySection = (title, personalities, isActive) => {\r\n\t\tconst imageSrc = `personality-test-result-${personalities.join(\"\").replaceAll(\"-\", \"\").toLowerCase()}.png`;\r\n\t\tconst url = `https://www.16personalities.com/${personalities\r\n\t\t\t.slice(0, 4)\r\n\t\t\t.map((e) => e.toLowerCase())\r\n\t\t\t.join(\"\")}-personality`;\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Header size=\"large\" style={{ cursor: \"default\" }}>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</Header>\r\n\r\n\t\t\t\t<div style={{ ...(!isActive && { opacity: 0.5 }) }}>\r\n\t\t\t\t\t<Grid stackable>\r\n\t\t\t\t\t\t<Grid.Column width={6}>\r\n\t\t\t\t\t\t\t<picture>\r\n\t\t\t\t\t\t\t\t<source\r\n\t\t\t\t\t\t\t\t\ttype=\"image/webp\"\r\n\t\t\t\t\t\t\t\t\tsrcSet={encodeURIComponent(imageSrc.replace(/\\.(jpg|png|gif)/, \".webp\"))}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={`${imageSrc}${queryString}`}\r\n\t\t\t\t\t\t\t\t\talt=\"Personality test result\"\r\n\t\t\t\t\t\t\t\t\tdraggable=\"false\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"ui bordered rounded image\"\r\n\t\t\t\t\t\t\t\t\tonContextMenu={(e) => e.preventDefault()}\r\n\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\t\t\tchangeImagePopupSource({\r\n\t\t\t\t\t\t\t\t\t\t\t\timages: [imageSrc],\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveIndex: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonError={() => setTimeout(() => setQueryString(`?${Math.random()}`), 1000)}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</picture>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t<Grid.Column width={10}>\r\n\t\t\t\t\t\t\t<NormalText>\r\n\t\t\t\t\t\t\t\tI am <HightlightedText url={url}>{personalities.join(\"\")}</HightlightedText>.{\" \"}\r\n\t\t\t\t\t\t\t\t{personalityCombinationDescriptions[personalities.join(\"\")]}\r\n\t\t\t\t\t\t\t\t{personalities.map((personality, i) => (\r\n\t\t\t\t\t\t\t\t\t<Fragment key={i}>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<br />I am a\r\n\t\t\t\t\t\t\t\t\t\t<HightlightedText url={personalityLinks[personality]}>\r\n\t\t\t\t\t\t\t\t\t\t\t{personalityNames[personality]} ({personality})\r\n\t\t\t\t\t\t\t\t\t\t</HightlightedText>\r\n\t\t\t\t\t\t\t\t\t\tperson - {personalityDescriptions[personality]}\r\n\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</NormalText>\r\n\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Body>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>Who I am | {process.env.REACT_APP_TITLE}</title>\r\n\t\t\t</Helmet>\r\n\r\n\t\t\t<Header size=\"huge\" style={{ cursor: \"default\" }}>\r\n\t\t\t\tWho I am\r\n\t\t\t</Header>\r\n\t\t\t<Divider section />\r\n\r\n\t\t\t{personalityConfigs.map(({ title, personalities, isActive }, i) => (\r\n\t\t\t\t<Fragment key={i}>\r\n\t\t\t\t\t{constructPersonalitySection(title, personalities, isActive)}\r\n\t\t\t\t\t{i < personalityConfigs.length - 1 && <Divider section />}\r\n\t\t\t\t</Fragment>\r\n\t\t\t))}\r\n\t\t</Body>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(Personality, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as Personality };\r\n","import axios from \"axios\";\r\nimport { firebaseHost } from \"../config\";\r\n\r\nconst postComment = ({ firstName, lastName, phone, email, message, clientIp }) => {\r\n\tconst date = new Date();\r\n\r\n\treturn axios.post(`${firebaseHost}/comments.json`, {\r\n\t\t...(firstName && { firstName }),\r\n\t\t...(lastName && { lastName }),\r\n\t\t...(phone && { phone }),\r\n\t\t...(email && { email }),\r\n\t\t...(message && { message }),\r\n\t\t...(clientIp && { clientIp }),\r\n\t\tdate: date.getTime(),\r\n\t\tdateISO: date.toISOString(),\r\n\t});\r\n};\r\n\r\nconst exports = { postComment };\r\nexport default exports;\r\nexport { postComment };\r\n","const getCookiesConsent = () => Number(localStorage.getItem(\"cookiesConsent\")) || \"0\";\r\n\r\nconst setCookiesConsent = (accepted) => localStorage.setItem(\"cookiesConsent\", accepted ? \"1\" : \"0\");\r\n\r\nconst getReadBlogPostIds = () => (localStorage.getItem(\"readBlogPostIds\") || \"\").split(\",\").filter((e) => e) || [];\r\n\r\nconst addReadBlogPostId = (postId) => {\r\n\tconst readBlogPostIds = getReadBlogPostIds();\r\n\tlocalStorage.setItem(\"readBlogPostIds\", Array.from(new Set([...readBlogPostIds, postId])).join(\",\"));\r\n};\r\n\r\nconst getBlogPostFontSizeLevel = () => Number(localStorage.getItem(\"fontSizeLevel\")) || 1;\r\n\r\nconst setBlogPostFontSizeLevel = (fontSizeLevel) => localStorage.setItem(\"fontSizeLevel\", fontSizeLevel);\r\n\r\nconst LocalStorageService = {\r\n\tgetCookiesConsent,\r\n\tsetCookiesConsent,\r\n\tgetReadBlogPostIds,\r\n\taddReadBlogPostId,\r\n\tgetBlogPostFontSizeLevel,\r\n\tsetBlogPostFontSizeLevel,\r\n};\r\n\r\nexport default LocalStorageService;\r\nexport {\r\n\tgetCookiesConsent,\r\n\tsetCookiesConsent,\r\n\tgetReadBlogPostIds,\r\n\taddReadBlogPostId,\r\n\tgetBlogPostFontSizeLevel,\r\n\tsetBlogPostFontSizeLevel,\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst getClientIp = () => axios.get(\"https://1.1.1.1/cdn-cgi/trace\");\r\n\r\nconst exports = { getClientIp };\r\nexport default exports;\r\nexport { getClientIp };\r\n","import { memo, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n\tSegment,\r\n\tHeader,\r\n\tItem,\r\n\tCard,\r\n\tLabel,\r\n\tButton,\r\n\tIcon,\r\n\tImage,\r\n\tMessage,\r\n\tDivider,\r\n\tResponsive,\r\n} from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport { Body, NoSelect } from \"../../../Styles\";\r\nimport { responsiveMaxWidth, responsiveMinWidth, blogPosts, blogPostTags } from \"../../../../config\";\r\nimport moment from \"moment\";\r\nimport get from \"lodash/get\";\r\nimport find from \"lodash/find\";\r\nimport union from \"lodash/union\";\r\nimport intersection from \"lodash/intersection\";\r\nimport without from \"lodash/without\";\r\nimport uniqBy from \"lodash/uniqBy\";\r\nimport { LocalStorageService } from \"../../../../service\";\r\n\r\nconst CustomItemGroup = styled(Item.Group)`\r\n\ta {\r\n\t\ttransition: 250ms !important;\r\n\r\n\t\t&:hover {\r\n\t\t\tcolor: #e91e63 !important;\r\n\t\t}\r\n\t}\r\n\r\n\timg {\r\n\t\tmax-width: 80px !important;\r\n\t\tmax-height: 80px !important;\r\n\t\twidth: auto !important;\r\n\t\theight: auto !important;\r\n\t\tmargin: auto !important;\r\n\t}\r\n`;\r\n\r\nconst CustomCardGroup = styled(Item.Group)`\r\n\timg {\r\n\t\tmax-width: 40px !important;\r\n\t\tmax-height: 40px !important;\r\n\t\twidth: auto !important;\r\n\t\theight: auto !important;\r\n\t\tfloat: right !important;\r\n\t}\r\n`;\r\n\r\nconst HeaderLink = styled(({ hovered, ...props }) => <span {...props} />)`\r\n\ta {\r\n\t\ttransition: 250ms !important;\r\n\t\tcolor: ${({ hovered }) => (hovered ? \"#e91e63\" : \"black\")} !important;\r\n\t}\r\n`;\r\n\r\nfunction HeaderLinkWrapper(props) {\r\n\tconst { title, path } = props;\r\n\r\n\tconst [isHovered, setHovered] = useState(false);\r\n\r\n\treturn (\r\n\t\t<HeaderLink hovered={isHovered}>\r\n\t\t\t<Link\r\n\t\t\t\tto={path}\r\n\t\t\t\tstate={{ fromAllBlogPosts: true }}\r\n\t\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\t>\r\n\t\t\t\t{title}\r\n\t\t\t</Link>\r\n\t\t</HeaderLink>\r\n\t);\r\n}\r\n\r\nfunction Blog(props) {\r\n\tconst readBlogPostIdsFromLocalStorage = LocalStorageService.getReadBlogPostIds();\r\n\r\n\tconst allBlogPostTags = uniqBy(\r\n\t\t[\r\n\t\t\t...blogPostTags,\r\n\t\t\t...blogPosts.flatMap(({ tags = [] }) => tags).map((name) => ({ name, icon: \"hashtag\", color: \"grey\" })),\r\n\t\t],\r\n\t\t\"name\"\r\n\t);\r\n\tconst [wantedTagNames, setWantedTagNames] = useState([]);\r\n\tconst [unwantedTagNames, setUnwantedTagNames] = useState([]);\r\n\r\n\tconst filteredBlogPosts = blogPosts\r\n\t\t.filter(\r\n\t\t\t({ tags = [] }) =>\r\n\t\t\t\t(wantedTagNames.length === 0 || intersection(tags, wantedTagNames).length > 0) &&\r\n\t\t\t\tintersection(tags, unwantedTagNames).length === 0\r\n\t\t)\r\n\t\t.slice()\r\n\t\t.reverse();\r\n\r\n\tconst toBlogTags = (tags) => (\r\n\t\t<>\r\n\t\t\t{tags.map((tag, i) => (\r\n\t\t\t\t<Label\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tas=\"a\"\r\n\t\t\t\t\tcolor={get(find(allBlogPostTags, { name: tag }), \"color\", \"grey\")}\r\n\t\t\t\t\tonClick={() => setWantedTagNames(union(wantedTagNames, [tag]))}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Icon name={get(find(allBlogPostTags, { name: tag }), \"icon\", \"hashtag\")} />\r\n\t\t\t\t\t{tag}\r\n\t\t\t\t</Label>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Body>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>All Blog Posts | {process.env.REACT_APP_TITLE}</title>\r\n\t\t\t</Helmet>\r\n\r\n\t\t\t<Header size=\"huge\" style={{ cursor: \"default\" }}>\r\n\t\t\t\tAll Blog Posts\r\n\t\t\t</Header>\r\n\t\t\t<Divider section />\r\n\r\n\t\t\t<Segment vertical basic clearing>\r\n\t\t\t\t<NoSelect>\r\n\t\t\t\t\t<Label.Group style={{ textAlign: \"center\" }}>\r\n\t\t\t\t\t\t{allBlogPostTags.map((tag, i) => (\r\n\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\tas=\"a\"\r\n\t\t\t\t\t\t\t\tcolor={tag.color || \"grey\"}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\topacity:\r\n\t\t\t\t\t\t\t\t\t\twantedTagNames.includes(tag.name) || unwantedTagNames.includes(tag.name)\r\n\t\t\t\t\t\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t\t\t\t\t\t: 0.35,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tif (wantedTagNames.includes(tag.name)) {\r\n\t\t\t\t\t\t\t\t\t\tsetWantedTagNames(without(wantedTagNames, tag.name));\r\n\t\t\t\t\t\t\t\t\t\tsetUnwantedTagNames(union(unwantedTagNames, [tag.name]));\r\n\t\t\t\t\t\t\t\t\t} else if (unwantedTagNames.includes(tag.name)) {\r\n\t\t\t\t\t\t\t\t\t\tsetUnwantedTagNames(without(unwantedTagNames, tag.name));\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tsetWantedTagNames(union(wantedTagNames, [tag.name]));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\tname={\r\n\t\t\t\t\t\t\t\t\t\t(wantedTagNames.includes(tag.name)\r\n\t\t\t\t\t\t\t\t\t\t\t? \"check\"\r\n\t\t\t\t\t\t\t\t\t\t\t: unwantedTagNames.includes(tag.name)\r\n\t\t\t\t\t\t\t\t\t\t\t? \"x\"\r\n\t\t\t\t\t\t\t\t\t\t\t: tag.icon) || \"hashtag\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{tag.name}\r\n\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Label.Group>\r\n\t\t\t\t</NoSelect>\r\n\t\t\t</Segment>\r\n\r\n\t\t\t{filteredBlogPosts && filteredBlogPosts.length > 0 ? (\r\n\t\t\t\t<Segment vertical>\r\n\t\t\t\t\t<Responsive as={CustomItemGroup} minWidth={responsiveMinWidth} divided relaxed>\r\n\t\t\t\t\t\t{filteredBlogPosts.map(({ postId, path, thumbnail, title, date, description, tags }, i) => (\r\n\t\t\t\t\t\t\t<Item key={i}>\r\n\t\t\t\t\t\t\t\t<Item.Image\r\n\t\t\t\t\t\t\t\t\tas={Link}\r\n\t\t\t\t\t\t\t\t\tto={path}\r\n\t\t\t\t\t\t\t\t\tstate={{ fromAllBlogPosts: true }}\r\n\t\t\t\t\t\t\t\t\tsrc={thumbnail}\r\n\t\t\t\t\t\t\t\t\tsize=\"tiny\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Item.Content>\r\n\t\t\t\t\t\t\t\t\t<Item.Header\r\n\t\t\t\t\t\t\t\t\t\tas={Link}\r\n\t\t\t\t\t\t\t\t\t\tto={path}\r\n\t\t\t\t\t\t\t\t\t\tstate={{ fromAllBlogPosts: true }}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"allow-select\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t\t\t\t\t{!readBlogPostIdsFromLocalStorage.includes(postId) && (\r\n\t\t\t\t\t\t\t\t\t\t\t<Label color=\"pink\" circular empty style={{ marginLeft: \"5px\" }} />\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Item.Header>\r\n\t\t\t\t\t\t\t\t\t<Item.Meta style={{ cursor: \"default\" }}>\r\n\t\t\t\t\t\t\t\t\t\t<span>{moment(date).format(\"YYYY-MM-DD\")}</span>\r\n\t\t\t\t\t\t\t\t\t</Item.Meta>\r\n\t\t\t\t\t\t\t\t\t<Item.Description style={{ cursor: \"default\" }}>{description}</Item.Description>\r\n\t\t\t\t\t\t\t\t\t<Item.Extra>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tas={Link}\r\n\t\t\t\t\t\t\t\t\t\t\tto={path}\r\n\t\t\t\t\t\t\t\t\t\t\tstate={{ fromAllBlogPosts: true }}\r\n\t\t\t\t\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"pink\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tContinue reading\r\n\t\t\t\t\t\t\t\t\t\t\t<Icon name=\"right chevron\" />\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t{tags && tags.length ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<NoSelect>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Label.Group>{toBlogTags(tags)}</Label.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t</NoSelect>\r\n\t\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t</Item.Extra>\r\n\t\t\t\t\t\t\t\t</Item.Content>\r\n\t\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Responsive>\r\n\r\n\t\t\t\t\t<Responsive\r\n\t\t\t\t\t\tas={CustomCardGroup}\r\n\t\t\t\t\t\tmaxWidth={responsiveMaxWidth}\r\n\t\t\t\t\t\tstyle={{ width: \"100%\", display: \"block\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{filteredBlogPosts.map(({ postId, path, thumbnail, title, date, description, tags }, i) => (\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\tstyle={{ width: \"100%\", display: \"block\", background: \"rgba(255, 255, 255, 0.4)\" }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Card.Content>\r\n\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\tas={Link}\r\n\t\t\t\t\t\t\t\t\t\tto={path}\r\n\t\t\t\t\t\t\t\t\t\tstate={{ fromAllBlogPosts: true }}\r\n\t\t\t\t\t\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={thumbnail}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t\t\t\t<HeaderLinkWrapper title={title} path={path} />\r\n\t\t\t\t\t\t\t\t\t\t{!readBlogPostIdsFromLocalStorage.includes(postId) && (\r\n\t\t\t\t\t\t\t\t\t\t\t<Label color=\"pink\" circular empty style={{ marginLeft: \"5px\" }} />\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t\t\t<Card.Meta as={NoSelect}>{moment(date).format(\"YYYY-MM-DD\")}</Card.Meta>\r\n\t\t\t\t\t\t\t\t\t<Card.Description as={NoSelect}>{description}</Card.Description>\r\n\t\t\t\t\t\t\t\t</Card.Content>\r\n\t\t\t\t\t\t\t\t<Card.Content extra>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tas={Link}\r\n\t\t\t\t\t\t\t\t\t\tto={path}\r\n\t\t\t\t\t\t\t\t\t\tstate={{ fromAllBlogPosts: true }}\r\n\t\t\t\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"pink\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tRead\r\n\t\t\t\t\t\t\t\t\t\t<Icon name=\"right chevron\" />\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t{tags && tags.length ? (\r\n\t\t\t\t\t\t\t\t\t\t<NoSelect>\r\n\t\t\t\t\t\t\t\t\t\t\t<Label.Group>{toBlogTags(tags)}</Label.Group>\r\n\t\t\t\t\t\t\t\t\t\t</NoSelect>\r\n\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t</Card.Content>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Responsive>\r\n\t\t\t\t</Segment>\r\n\t\t\t) : (\r\n\t\t\t\t<NoSelect>\r\n\t\t\t\t\t<Message\r\n\t\t\t\t\t\tinfo\r\n\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\tsize=\"huge\"\r\n\t\t\t\t\t\ticon=\"find\"\r\n\t\t\t\t\t\theader=\"No post found\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: \"transparent\", boxShadow: \"none\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</NoSelect>\r\n\t\t\t)}\r\n\t\t</Body>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(Blog, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as Blog };\r\n","import styled from \"styled-components\";\r\n\r\nconst MarkdownLink = styled(({ hovered, ...props }) => <span {...props} />)`\r\n\ta {\r\n\t\tcolor: ${({ hovered }) => (hovered ? \"#3f51b5\" : \"#0288d1\")} !important;\r\n\t\ttransition: 250ms;\r\n\t\tposition: relative;\r\n\t\tfont-weight: bold;\r\n\r\n\t\t&::after {\r\n\t\t\tcontent: \"\";\r\n\t\t\tposition: absolute;\r\n\t\t\tbottom: 0;\r\n\t\t\tleft: 0;\r\n\t\t\twidth: ${({ hovered }) => (hovered ? 100 : 0)}%;\r\n\t\t\theight: 1px;\r\n\t\t\tbackground: #3f51b5;\r\n\t\t\ttransition: 250ms;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst exports = { MarkdownLink };\r\nexport default exports;\r\nexport { MarkdownLink };\r\n","import { memo, useState } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport styled from \"styled-components\";\r\nimport toc from \"markdown-toc-unlazy\";\r\n\r\nconst CustomHeader = styled(({ hovered, ...props }) => <div {...props} />)`\r\n\ta {\r\n\t\tdisplay: block !important;\r\n\t\tfont-size: 1.25em !important;\r\n\t\tcolor: ${({ hovered }) => (hovered ? \"#e91e63\" : \"#455a64\")} !important;\r\n\t\tbackground: ${({ hovered }) =>\r\n\t\t\thovered\r\n\t\t\t\t? \"linear-gradient(to right, rgba(244, 143, 177, 0.25), rgba(176, 190, 197, 0.25), rgba(176, 190, 197, 0.25))\"\r\n\t\t\t\t: \"rgba(176, 190, 197, 0.25)\"} !important;\r\n\t\ttransition: 250ms;\r\n\t}\r\n`;\r\n\r\nfunction HeaderWrapper(props) {\r\n\tconst [isHovered, setHovered] = useState(false);\r\n\r\n\treturn (\r\n\t\t<CustomHeader\r\n\t\t\thovered={isHovered}\r\n\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\tonClick={() => setHovered(false)}\r\n\t\t>\r\n\t\t\t<Header {...props} />\r\n\t\t</CustomHeader>\r\n\t);\r\n}\r\n\r\nfunction TocMarkdown(props) {\r\n\tconst { markdown } = props;\r\n\r\n\tconst tableOfContents = markdown ? toc(markdown).json : null;\r\n\tconst minLevel = markdown ? Math.min(...tableOfContents.map((toc) => toc.lvl)) : null;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{markdown && (\r\n\t\t\t\t<div style={{ paddingBottom: \"40px\" }}>\r\n\t\t\t\t\t{tableOfContents.map((toc, i) => (\r\n\t\t\t\t\t\t<HeaderWrapper\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tas={HashLink}\r\n\t\t\t\t\t\t\tto={\"#\" + toc.slug}\r\n\t\t\t\t\t\t\tsmooth\r\n\t\t\t\t\t\t\treplace\r\n\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\tattached={i === 0 ? \"top\" : i === tableOfContents.length - 1 ? \"bottom\" : true}\r\n\t\t\t\t\t\t\tstyle={{ paddingLeft: (toc.lvl + 1 - minLevel) * 20 - 5 + \"px\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{toc.content.replace(/`/g, \"\")}\r\n\t\t\t\t\t\t</HeaderWrapper>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(TocMarkdown, (prev, next) => prev.markdown === next.markdown);\r\nexport default memoComponent;\r\nexport { memoComponent as TocMarkdown };\r\n","import styled from \"styled-components\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nconst FONT_SIZE_INCREMENT = 2;\r\nconst FONT_SIZE_MIN = 14;\r\n\r\nconst CustomMarkdown = styled(({ fontSizeLevel, ...props }) => <ReactMarkdown {...props} />)`\r\n\tword-wrap: break-word;\r\n\r\n\t.paragraph {\r\n\t\tfont-size: ${({ fontSizeLevel = 0 }) => fontSizeLevel * FONT_SIZE_INCREMENT + FONT_SIZE_MIN}px !important;\r\n\t\tline-height: 1.75em !important;\r\n\t\tmargin-bottom: 1em !important;\r\n\t}\r\n\r\n\tli {\r\n\t\tfont-size: ${({ fontSizeLevel = 0 }) => fontSizeLevel * FONT_SIZE_INCREMENT + FONT_SIZE_MIN}px !important;\r\n\t\tline-height: 1.75em !important;\r\n\t}\r\n\r\n\tpre {\r\n\t\toverflow: auto;\r\n\t\tborder-radius: 5px;\r\n\t\tpadding: 20px;\r\n\t\tcolor: #455a64;\r\n\t\tbackground-color: rgba(144, 164, 174, 0.2);\r\n\t\tborder: 1px solid #90a4ae;\r\n\t\tline-height: 1.2em;\r\n\t\ttransition: 250ms;\r\n\t\tfont-size: ${({ fontSizeLevel = 0 }) => fontSizeLevel * FONT_SIZE_INCREMENT + FONT_SIZE_MIN}px !important;\r\n\t}\r\n\r\n\t*:not(pre):not(code) > code {\r\n\t\tcolor: #d81b60;\r\n\t\tbackground-color: rgba(27, 31, 35, 0.05);\r\n\t\tborder-radius: 3px;\r\n\t\tpadding: 0.2em 0.4em;\r\n\t\ttransition: 250ms;\r\n\t}\r\n\r\n\tspan.react-syntax-highlighter-line-number {\r\n\t\t-webkit-touch-callout: none;\r\n\t\t-webkit-user-select: none;\r\n\t\t-khtml-user-select: none;\r\n\t\t-moz-user-select: none;\r\n\t\t-ms-user-select: none;\r\n\t\tuser-select: none;\r\n\t\t-webkit-user-drag: none;\r\n\t\t-khtml-user-drag: none;\r\n\t\t-moz-user-drag: none;\r\n\t\t-ms-user-drag: none;\r\n\t\tuser-drag: none;\r\n\t}\r\n\r\n\thr {\r\n\t\tmargin: 20px auto;\r\n\t\tborder: 1px solid rgba(144, 164, 174, 0.5);\r\n\t}\r\n\r\n\timg {\r\n\t\tposition: relative;\r\n\t\tmax-width: 50%;\r\n\t\tmax-height: 400px;\r\n\t\tdisplay: block;\r\n\t\tmargin: 20px auto;\r\n\t\tpadding: 3px;\r\n\t\tborder-radius: 15px;\r\n\t\tbox-shadow: 0 0 15px rgba(0, 0, 0, 0.5);\r\n\t\tbackground: linear-gradient(to right, red, orange, yellow);\r\n\t\tbackground-size: 200% 200%;\r\n\t\ttransition: 400ms cubic-bezier(0, 1.2, 0.2, 1.5);\r\n\t\tanimation: animated-border 3s ease infinite;\r\n\t\tcursor: zoom-in;\r\n\t}\r\n\r\n\t@keyframes animated-border {\r\n\t\t0% {\r\n\t\t\tbackground-position: 0% 0%;\r\n\t\t}\r\n\r\n\t\t50% {\r\n\t\t\tbackground-position: 100% 100%;\r\n\t\t}\r\n\r\n\t\t100% {\r\n\t\t\tbackground-position: 0% 0%;\r\n\t\t}\r\n\t}\r\n\r\n\tblockquote {\r\n\t\tfont-style: italic;\r\n\t\topacity: 0.5;\r\n\t\tpadding-left: 25px;\r\n\t\tborder-left: 5px solid rgba(41, 182, 246, 0.5);\r\n\t\ttransition: 250ms;\r\n\t}\r\n\r\n\tul,\r\n\tol {\r\n\t\tpadding-inline-start: 20px;\r\n\t}\r\n\r\n\ttable {\r\n\t\tborder-collapse: collapse;\r\n\t\tborder-style: hidden;\r\n\t\tborder-radius: 5px !important;\r\n\t\tbox-shadow: 0 0 0 1px #90a4ae;\r\n\t}\r\n\r\n\tthead th {\r\n\t\tbackground-color: rgba(144, 164, 174, 0.25);\r\n\t}\r\n\ttr:nth-child(even) td {\r\n\t\tbackground-color: rgba(144, 164, 174, 0.05);\r\n\t}\r\n\r\n\tth:first-child {\r\n\t\tborder-top-left-radius: 5px;\r\n\t}\r\n\tth:last-child {\r\n\t\tborder-top-right-radius: 5px;\r\n\t}\r\n\ttr:last-child td:first-child {\r\n\t\tborder-bottom-left-radius: 5px;\r\n\t}\r\n\ttr:last-child td:last-child {\r\n\t\tborder-bottom-right-radius: 5px;\r\n\t}\r\n\r\n\tth,\r\n\ttd {\r\n\t\tborder: 1px solid #90a4ae;\r\n\t\tpadding: 8px;\r\n\t\tline-height: 1.75em !important;\r\n\t\tfont-size: ${({ fontSizeLevel = 0 }) => fontSizeLevel * FONT_SIZE_INCREMENT + FONT_SIZE_MIN}px !important;\r\n\t}\r\n\r\n\t@media (hover: hover) {\r\n\t\tpre:hover {\r\n\t\t\tbackground-color: rgba(224, 224, 224, 0.4);\r\n\t\t}\r\n\r\n\t\t*:not(pre):not(code) > code:hover {\r\n\t\t\tbackground-color: rgba(236, 64, 122, 0.15);\r\n\t\t}\r\n\r\n\t\tblockquote:hover {\r\n\t\t\tborder-radius: 0 15px 15px 0;\r\n\t\t\tbackground-color: rgba(144, 164, 174, 0.25);\r\n\t\t}\r\n\t}\r\n`;\r\nexport default CustomMarkdown;\r\nexport { CustomMarkdown };\r\n","function CustomParagraphRenderer(props) {\r\n\treturn <div className=\"paragraph\" {...props} />;\r\n}\r\nexport default CustomParagraphRenderer;\r\nexport { CustomParagraphRenderer };\r\n","const isScrollToTopButtonVisible = () =>\r\n\tdocument.scrollingElement && document.scrollingElement.scrollTop >= document.scrollingElement.offsetHeight * 0.75;\r\n\r\nconst isScrolledToBottom = () =>\r\n\tMath.abs(\r\n\t\tdocument.scrollingElement.scrollTop +\r\n\t\t\tdocument.scrollingElement.offsetHeight -\r\n\t\t\tdocument.scrollingElement.scrollHeight\r\n\t) < 20;\r\n\r\nconst scrollToElement = (element, delay) =>\r\n\tsetTimeout(() => {\r\n\t\tif (\r\n\t\t\t// element.getBoundingClientRect().top means how much window's top is above the element's top\r\n\t\t\t(isScrolledToBottom() && element.getBoundingClientRect().top < 0) ||\r\n\t\t\t(!isScrolledToBottom() && Math.abs(element.getBoundingClientRect().top) > 20)\r\n\t\t) {\r\n\t\t\telement.scrollIntoView(true);\r\n\t\t\tscrollToElement(element, 250);\r\n\t\t}\r\n\t}, delay);\r\n\r\nconst ScrollUtils = {\r\n\tisScrollToTopButtonVisible,\r\n\tisScrolledToBottom,\r\n\tscrollToElement,\r\n};\r\n\r\nexport default ScrollUtils;\r\nexport { isScrollToTopButtonVisible, isScrolledToBottom, scrollToElement };\r\n","import toc from \"markdown-toc-unlazy\";\r\n\r\nconst generateTocJsonFromMarkdown = (markdown) => toc(markdown).json;\r\n\r\nconst MarkdownTocUtils = {\r\n\tgenerateTocJsonFromMarkdown,\r\n};\r\nexport default MarkdownTocUtils;\r\nexport { generateTocJsonFromMarkdown };\r\n","import { useCallback } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { Header, Icon, Responsive } from \"semantic-ui-react\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport filter from \"lodash/filter\";\r\nimport { ScrollUtils } from \"../../../../../utils\";\r\nimport { responsiveMinWidth } from \"../../../../../config\";\r\n\r\nfunction Heading(props) {\r\n\tconst { anchorRef, level, children } = props;\r\n\r\n\tconst location = useLocation();\r\n\r\n\tconst ref = useCallback(\r\n\t\t(node) => {\r\n\t\t\tif (node && location.hash && anchorRef === decodeURIComponent(location.hash.replace(/#/, \"\"))) {\r\n\t\t\t\tScrollUtils.scrollToElement(node, 500);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t\t[]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Header as={\"h\" + level} className={`header-with-anchor header-with-anchor-${level}`}>\r\n\t\t\t<HashLink ref={ref} id={anchorRef} to={\"#\" + anchorRef} smooth replace>\r\n\t\t\t\t<Responsive as={Icon} minWidth={responsiveMinWidth} name=\"linkify\" />\r\n\t\t\t</HashLink>\r\n\t\t\t{children}\r\n\t\t</Header>\r\n\t);\r\n}\r\n\r\nfunction CustomHeadingRenderer(props) {\r\n\tconst { tocArray, level, children = [] } = props;\r\n\r\n\tconst headingText = children.map((e) => (typeof e === \"string\" ? e : e.props.children.join(\"\"))).join(\"\");\r\n\tconst anchorRef = isEmpty(tocArray) ? null : (filter(tocArray, { content: headingText })[0] || {}).slug;\r\n\r\n\treturn (\r\n\t\t<Heading anchorRef={anchorRef} level={level}>\r\n\t\t\t{children}\r\n\t\t</Heading>\r\n\t);\r\n}\r\nexport default CustomHeadingRenderer;\r\nexport { CustomHeadingRenderer };\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { MarkdownLink } from \"../Styles\";\r\nimport startsWith from \"lodash/startsWith\";\r\n\r\nfunction CustomMarkdownLink(props) {\r\n\tconst { href, children } = props;\r\n\r\n\tconst [isHovered, setHovered] = useState(false);\r\n\r\n\treturn (\r\n\t\t<MarkdownLink\r\n\t\t\thovered={isHovered}\r\n\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\tonClick={() => setHovered(false)}\r\n\t\t>\r\n\t\t\t{startsWith(href, \"#\") ? (\r\n\t\t\t\t<HashLink to={href} smooth replace className=\"allow-select\">\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</HashLink>\r\n\t\t\t) : startsWith(href, \"http\") ? (\r\n\t\t\t\t<a href={href} target=\"_blank\" rel=\"external nofollow noopener noreferrer\" className=\"allow-select\">\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</a>\r\n\t\t\t) : (\r\n\t\t\t\t<Link to={href} className=\"allow-select\">\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\t\t</MarkdownLink>\r\n\t);\r\n}\r\n\r\nfunction CustomLinkRenderer(props) {\r\n\tconst { href, ...rest } = props;\r\n\r\n\treturn <CustomMarkdownLink href={decodeURIComponent(href)} {...rest} />;\r\n}\r\nexport default CustomLinkRenderer;\r\nexport { CustomLinkRenderer };\r\n","function CustomTableRenderer(props) {\r\n\tconst { children } = props;\r\n\r\n\treturn (\r\n\t\t<div style={{ overflowX: \"auto\", marginTop: \"20px\", marginBottom: \"20px\" }}>\r\n\t\t\t<div style={{ display: \"inline-block\", margin: \"1px\" }}>\r\n\t\t\t\t<table>{children}</table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default CustomTableRenderer;\r\nexport { CustomTableRenderer };\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Lazyload from \"react-lazyload\";\r\nimport { changeImagePopupSource } from \"../../../../../redux/action\";\r\n\r\nfunction CustomMarkdownImage(props) {\r\n\tconst { src, style, ...rest } = props;\r\n\r\n\tconst [isHovered, setHovered] = useState(false);\r\n\tconst [queryString, setQueryString] = useState(\"\");\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn (\r\n\t\t<Lazyload once height=\"400px\" offset={400}>\r\n\t\t\t<picture>\r\n\t\t\t\t<source type=\"image/webp\" srcSet={encodeURIComponent(src.replace(/\\.(jpg|png|gif)/, \".webp\"))} />\r\n\t\t\t\t<img\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tsrc={`${src}${queryString}`}\r\n\t\t\t\t\talt={src.replace(/\\.(jpg|png|gif)/, \"\")}\r\n\t\t\t\t\tdraggable=\"false\"\r\n\t\t\t\t\tonContextMenu={(e) => e.preventDefault()}\r\n\t\t\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\tchangeImagePopupSource({\r\n\t\t\t\t\t\t\t\timages: [src],\r\n\t\t\t\t\t\t\t\tactiveIndex: 0,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonError={() => setTimeout(() => setQueryString(`?${Math.random()}`), 1000)}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t...style,\r\n\t\t\t\t\t\t...(isHovered && {\r\n\t\t\t\t\t\t\ttransform: \"scale(1.2)\",\r\n\t\t\t\t\t\t\tboxShadow: \"0 0 30px rgba(0, 0, 0, 1)\",\r\n\t\t\t\t\t\t\tzIndex: 1,\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</picture>\r\n\t\t</Lazyload>\r\n\t);\r\n}\r\n\r\nfunction CustomImageRenderer(props) {\r\n\treturn <CustomMarkdownImage {...props} />;\r\n}\r\nexport default CustomImageRenderer;\r\nexport { CustomImageRenderer };\r\n","import { memo } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport gfm from \"remark-gfm\";\r\nimport { CustomMarkdown } from \"./CustomMarkdown\";\r\nimport {\r\n\tCustomParagraphRenderer,\r\n\tCustomHeadingRenderer,\r\n\tCustomLinkRenderer,\r\n\tCustomTableRenderer,\r\n\tCustomImageRenderer,\r\n} from \"./renderers\";\r\nimport { MarkdownTocUtils } from \"../../../../utils\";\r\n// import SyntaxHighlighter from \"react-syntax-highlighter\";\r\n// import { anOldHope } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\n\r\n// const CustomCodeRenderer = ({ language, value }) => {\r\n// \treturn (\r\n// \t\t<SyntaxHighlighter\r\n// \t\t\tlanguage={language}\r\n// \t\t\tstyle={anOldHope}\r\n// \t\t\tshowLineNumbers={(value || \"\").includes(\"\\n\")}\r\n// \t\t\tlineNumberStyle={{}}\r\n// \t\t>\r\n// \t\t\t{value}\r\n// \t\t</SyntaxHighlighter>\r\n// \t);\r\n// };\r\n\r\nfunction MarkdownContent(props) {\r\n\tconst { markdown, fontSizeLevel } = props;\r\n\r\n\tconst processedMarkdown = markdown\r\n\t\t? markdown.replace(/\\t/g, \"    \").replace(/^<!-- [\\w-]*prettier[\\w-]* -->$/gm, \"\")\r\n\t\t: null;\r\n\r\n\tconst tocArray = markdown\r\n\t\t? MarkdownTocUtils.generateTocJsonFromMarkdown(processedMarkdown).map((toc) => ({\r\n\t\t\t\t...toc,\r\n\t\t\t\tcontent: toc.content.replace(/`/g, \"\"),\r\n\t\t  }))\r\n\t\t: [];\r\n\r\n\tconst headingRenderer = ({ level, children }) => (\r\n\t\t<CustomHeadingRenderer tocArray={tocArray} level={level}>\r\n\t\t\t{children}\r\n\t\t</CustomHeadingRenderer>\r\n\t);\r\n\r\n\treturn markdown ? (\r\n\t\t<div id=\"post-content\">\r\n\t\t\t<CustomMarkdown\r\n\t\t\t\tchildren={processedMarkdown}\r\n\t\t\t\tremarkPlugins={[gfm]}\r\n\t\t\t\tfontSizeLevel={fontSizeLevel}\r\n\t\t\t\tcomponents={{\r\n\t\t\t\t\tp: CustomParagraphRenderer,\r\n\t\t\t\t\th1: headingRenderer,\r\n\t\t\t\t\th2: headingRenderer,\r\n\t\t\t\t\th3: headingRenderer,\r\n\t\t\t\t\th4: headingRenderer,\r\n\t\t\t\t\th5: headingRenderer,\r\n\t\t\t\t\th6: headingRenderer,\r\n\t\t\t\t\ta: CustomLinkRenderer,\r\n\t\t\t\t\ttable: CustomTableRenderer,\r\n\t\t\t\t\timg: CustomImageRenderer,\r\n\t\t\t\t\t// code: CustomCodeRenderer,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<Header as=\"h2\">Content not available.</Header>\r\n\t);\r\n}\r\nconst memoComponent = memo(\r\n\tMarkdownContent,\r\n\t(prev, next) => prev.markdown === next.markdown && prev.fontSizeLevel === next.fontSizeLevel\r\n);\r\nexport default memoComponent;\r\nexport { memoComponent as MarkdownContent };\r\n","import { memo } from \"react\";\r\nimport \"./index.css\";\r\n\r\nfunction ReadingProgressBar(props) {\r\n\tconst { progress } = props;\r\n\r\n\treturn <progress id=\"reading-progress-bar\" max=\"100\" value={progress * 100}></progress>;\r\n}\r\n\r\nconst memoComponent = memo(ReadingProgressBar, (prev, next) => prev.progress === next.progress);\r\nexport default memoComponent;\r\nexport { memoComponent as ReadingProgressBar };\r\n","import { Fragment, memo, useState, useEffect } from \"react\";\r\nimport { Link, useParams, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Button, Grid, Header, Divider, Icon, Responsive } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport { MarkdownLink } from \"./Styles\";\r\nimport { PageNotFound } from \"./../PageNotFound\";\r\nimport { TocMarkdown } from \"./TocMarkdown\";\r\nimport { LocalStorageService } from \"../../../../service\";\r\nimport { MarkdownContent } from \"./MarkdownContent\";\r\nimport { ReadingProgressBar } from \"./ReadingProgressBar\";\r\nimport { Body } from \"../../../Styles\";\r\nimport { responsiveMaxWidth, responsiveMinWidth, blogPosts } from \"../../../../config\";\r\nimport first from \"lodash/first\";\r\nimport map from \"lodash/map\";\r\nimport filter from \"lodash/filter\";\r\nimport findIndex from \"lodash/findIndex\";\r\nimport find from \"lodash/find\";\r\nimport clamp from \"lodash/clamp\";\r\n\r\nconst HeaderWithAnchor = styled.div`\r\n\t.header-with-anchor:not(:hover) i::before {\r\n\t\t// content: none !important;\r\n\t\topacity: 0.2 !important;\r\n\t\tcolor: #9e9e9e;\r\n\t\ttransition: 400ms !important;\r\n\t}\r\n\r\n\t.header-with-anchor i {\r\n\t\tcolor: #e91e63 !important;\r\n\t}\r\n\r\n\t.header-with-anchor-1 i {\r\n\t\tmargin-left: -45px !important;\r\n\t}\r\n\r\n\t.header-with-anchor-2 i {\r\n\t\tmargin-left: -40px !important;\r\n\t}\r\n\r\n\t.header-with-anchor-3 i {\r\n\t\tmargin-left: -32px !important;\r\n\t}\r\n\r\n\t.header-with-anchor-4 i {\r\n\t\tmargin-left: -28.5px !important;\r\n\t}\r\n\r\n\t.header-with-anchor-5 i {\r\n\t\tmargin-left: -28px !important;\r\n\t}\r\n\r\n\t.header-with-anchor-6 i {\r\n\t\tmargin-left: -22px !important;\r\n\t}\r\n`;\r\n\r\nconst FontSizeButtonGroup = styled(Button.Group)`\r\n\tposition: fixed;\r\n\tbottom: 20px;\r\n\tright: 100px;\r\n\tz-index: 1000;\r\n\tborder-radius: 4px;\r\n\tbox-shadow: 0 0 10px rgba(0, 0, 0, 0.5) !important;\r\n\r\n\tbutton {\r\n\t\tpadding: 0 !important;\r\n\t\twidth: 30px !important;\r\n\t\theight: 30px !important;\r\n\t}\r\n`;\r\n\r\nfunction MarkdownLinkWrapper(props) {\r\n\tconst { title, path } = props;\r\n\r\n\tconst [isHovered, setHovered] = useState(false);\r\n\r\n\treturn (\r\n\t\t<MarkdownLink\r\n\t\t\thovered={isHovered}\r\n\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t>\r\n\t\t\t<Link className=\"allow-select\" to={path}>\r\n\t\t\t\t{title}\r\n\t\t\t</Link>\r\n\t\t</MarkdownLink>\r\n\t);\r\n}\r\n\r\nfunction BlogPost(props) {\r\n\tconst { postId } = useParams();\r\n\r\n\tconst [fontSizeLevel, setFontSizeLevel] = useState(LocalStorageService.getBlogPostFontSizeLevel());\r\n\r\n\tconst allBlogPosts = blogPosts.slice().reverse();\r\n\tconst currentPost = find(allBlogPosts, { postId });\r\n\r\n\tlet source = \"\";\r\n\ttry {\r\n\t\tsource = currentPost ? require(`!!raw-loader!../../../../${currentPost.src}`).default : \"\";\r\n\t} catch (e) {}\r\n\r\n\tconst location = useLocation();\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst backToAllBlogPostsButton = (\r\n\t\t<span\r\n\t\t\tonClick={() => {\r\n\t\t\t\tif (window.history?.length >= 2 && location?.state?.fromAllBlogPosts) {\r\n\t\t\t\t\tnavigate(-1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnavigate(\"/blog\");\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Responsive\r\n\t\t\t\tas={Button}\r\n\t\t\t\tminWidth={responsiveMinWidth}\r\n\t\t\t\tbasic\r\n\t\t\t\tcompact\r\n\t\t\t\tcolor=\"pink\"\r\n\t\t\t\tsize=\"medium\"\r\n\t\t\t\tcontent={\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\tBack to <b>All Blog Posts</b>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\ticon=\"arrow left\"\r\n\t\t\t\tlabelPosition=\"left\"\r\n\t\t\t/>\r\n\t\t\t<Responsive maxWidth={responsiveMaxWidth}>\r\n\t\t\t\t<Button basic compact color=\"pink\" size=\"medium\" icon=\"arrow left\" content=\"Back\" />\r\n\t\t\t</Responsive>\r\n\t\t</span>\r\n\t);\r\n\r\n\tconst newerPost = allBlogPosts[findIndex(allBlogPosts, (e) => e.postId === postId) - 1];\r\n\tconst newerButton = (\r\n\t\t<>\r\n\t\t\t<Responsive\r\n\t\t\t\tas={Button}\r\n\t\t\t\tminWidth={responsiveMinWidth}\r\n\t\t\t\tcompact\r\n\t\t\t\tcolor=\"violet\"\r\n\t\t\t\tsize=\"medium\"\r\n\t\t\t\tcontent={newerPost ? newerPost.title : \"Newer Post\"}\r\n\t\t\t\ticon=\"arrow left\"\r\n\t\t\t\tlabelPosition=\"left\"\r\n\t\t\t\tfloated=\"right\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\topacity: newerPost === undefined ? 0.35 : 1,\r\n\t\t\t\t\tcursor: newerPost === undefined && \"not-allowed\",\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Responsive maxWidth={responsiveMaxWidth}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcompact\r\n\t\t\t\t\tcolor=\"violet\"\r\n\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\ticon\r\n\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\topacity: newerPost === undefined ? 0.35 : 1,\r\n\t\t\t\t\t\tcursor: newerPost === undefined && \"not-allowed\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Icon name=\"arrow left\" />\r\n\t\t\t\t</Button>\r\n\t\t\t</Responsive>\r\n\t\t</>\r\n\t);\r\n\r\n\tconst olderPost = allBlogPosts[findIndex(allBlogPosts, (e) => e.postId === postId) + 1];\r\n\tconst olderButton = (\r\n\t\t<>\r\n\t\t\t<Responsive\r\n\t\t\t\tas={Button}\r\n\t\t\t\tminWidth={responsiveMinWidth}\r\n\t\t\t\tcompact\r\n\t\t\t\tcolor=\"purple\"\r\n\t\t\t\tsize=\"medium\"\r\n\t\t\t\tcontent={olderPost ? olderPost.title : \"Older Post\"}\r\n\t\t\t\ticon=\"arrow right\"\r\n\t\t\t\tlabelPosition=\"right\"\r\n\t\t\t\tfloated=\"right\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\topacity: olderPost === undefined ? 0.35 : 1,\r\n\t\t\t\t\tcursor: olderPost === undefined && \"not-allowed\",\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Responsive maxWidth={responsiveMaxWidth}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcompact\r\n\t\t\t\t\tcolor=\"purple\"\r\n\t\t\t\t\tsize=\"medium\"\r\n\t\t\t\t\ticon\r\n\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\topacity: olderPost === undefined ? 0.35 : 1,\r\n\t\t\t\t\t\tcursor: olderPost === undefined && \"not-allowed\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Icon name=\"arrow right\" />\r\n\t\t\t\t</Button>\r\n\t\t\t</Responsive>\r\n\t\t</>\r\n\t);\r\n\r\n\tconst buttons = (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Column width={6}>{backToAllBlogPostsButton}</Grid.Column>\r\n\t\t\t<Grid.Column width={10}>\r\n\t\t\t\t{olderPost && olderPost.path ? <Link to={olderPost.path}>{olderButton}</Link> : <>{olderButton}</>}\r\n\t\t\t\t{newerPost && newerPost.path ? <Link to={newerPost.path}>{newerButton}</Link> : <>{newerButton}</>}\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid>\r\n\t);\r\n\r\n\tconst [readingProgress, setReadingProgress] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (readingProgress >= 0.5) {\r\n\t\t\tLocalStorageService.addReadBlogPostId(postId);\r\n\t\t}\r\n\t}, [postId, readingProgress]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst scrollEventListener = (e) => {\r\n\t\t\tconst postContentElement = document.getElementById(\"post-content\");\r\n\t\t\tconst readProgress = clamp(\r\n\t\t\t\tpostContentElement &&\r\n\t\t\t\t\tdocument.scrollingElement &&\r\n\t\t\t\t\tdocument.documentElement &&\r\n\t\t\t\t\t(document.scrollingElement.scrollTop -\r\n\t\t\t\t\t\tpostContentElement.offsetTop +\r\n\t\t\t\t\t\tdocument.scrollingElement.offsetHeight / 2) /\r\n\t\t\t\t\t\t(postContentElement.scrollHeight - document.scrollingElement.offsetHeight / 2),\r\n\t\t\t\t0,\r\n\t\t\t\t1\r\n\t\t\t);\r\n\r\n\t\t\tsetReadingProgress(readProgress);\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"scroll\", scrollEventListener);\r\n\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"scroll\", scrollEventListener);\r\n\t\t};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ReadingProgressBar progress={readingProgress} />\r\n\r\n\t\t\t{currentPost && (\r\n\t\t\t\t<FontSizeButtonGroup floated=\"right\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"black\"\r\n\t\t\t\t\t\tdisabled={fontSizeLevel === 0}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tif (fontSizeLevel > 0) {\r\n\t\t\t\t\t\t\t\tsetFontSizeLevel((prevLevel) => {\r\n\t\t\t\t\t\t\t\t\tconst newLevel = prevLevel - 1;\r\n\t\t\t\t\t\t\t\t\tLocalStorageService.setBlogPostFontSizeLevel(newLevel);\r\n\t\t\t\t\t\t\t\t\treturn newLevel;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tstyle={{ width: \"50px\", fontSize: \"12px\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tA\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"black\"\r\n\t\t\t\t\t\tdisabled={fontSizeLevel === 3}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tif (fontSizeLevel < 3) {\r\n\t\t\t\t\t\t\t\tsetFontSizeLevel((prevLevel) => {\r\n\t\t\t\t\t\t\t\t\tconst newLevel = prevLevel + 1;\r\n\t\t\t\t\t\t\t\t\tLocalStorageService.setBlogPostFontSizeLevel(newLevel);\r\n\t\t\t\t\t\t\t\t\treturn newLevel;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tstyle={{ width: \"50px\", fontSize: \"18px\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tA\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</FontSizeButtonGroup>\r\n\t\t\t)}\r\n\r\n\t\t\t<Body>\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<title>\r\n\t\t\t\t\t\t{currentPost ? currentPost.title : \"404 Not Found\"} | Blog | {process.env.REACT_APP_TITLE}\r\n\t\t\t\t\t</title>\r\n\t\t\t\t</Helmet>\r\n\r\n\t\t\t\t{currentPost ? (\r\n\t\t\t\t\t<HeaderWithAnchor>\r\n\t\t\t\t\t\t{buttons}\r\n\t\t\t\t\t\t<Divider section />\r\n\r\n\t\t\t\t\t\t<Header as=\"h1\" style={{ cursor: \"default\" }}>\r\n\t\t\t\t\t\t\t{currentPost.title}\r\n\t\t\t\t\t\t</Header>\r\n\r\n\t\t\t\t\t\t{currentPost.previousPostId && (\r\n\t\t\t\t\t\t\t<Header as=\"h4\" style={{ textAlign: \"center\", lineHeight: \"1.8em\" }}>\r\n\t\t\t\t\t\t\t\t<div style={{ cursor: \"default\" }}>\r\n\t\t\t\t\t\t\t\t\t<b>Continued from previous post:</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<MarkdownLinkWrapper\r\n\t\t\t\t\t\t\t\t\ttitle={first(\r\n\t\t\t\t\t\t\t\t\t\tmap(filter(blogPosts, { postId: currentPost.previousPostId }), \"title\")\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\tpath={first(map(filter(blogPosts, { postId: currentPost.previousPostId }), \"path\"))}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", margin: \"3em 0\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={currentPost.thumbnail}\r\n\t\t\t\t\t\t\t\talt={currentPost.thumbnail.replace(/\\.(jpg|png|gif)/, \"\")}\r\n\t\t\t\t\t\t\t\tdraggable={false}\r\n\t\t\t\t\t\t\t\tonContextMenu={(e) => e.preventDefault()}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"50%\",\r\n\t\t\t\t\t\t\t\t\tmaxHeight: \"400px\",\r\n\t\t\t\t\t\t\t\t\tobjectFit: \"contain\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TocMarkdown markdown={source} />\r\n\r\n\t\t\t\t\t\t<MarkdownContent markdown={source} fontSizeLevel={fontSizeLevel} />\r\n\r\n\t\t\t\t\t\t{filter(blogPosts, { previousPostId: currentPost.postId }).length > 0 && (\r\n\t\t\t\t\t\t\t<Header as=\"h4\" style={{ textAlign: \"center\", lineHeight: \"1.8em\", paddingTop: \"2em\" }}>\r\n\t\t\t\t\t\t\t\t<div style={{ cursor: \"default\" }}>\r\n\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\tNext Post\r\n\t\t\t\t\t\t\t\t\t\t{filter(blogPosts, { previousPostId: currentPost.postId }).length > 1\r\n\t\t\t\t\t\t\t\t\t\t\t? \"s\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"\"}\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{filter(blogPosts, { previousPostId: currentPost.postId }).map((post, i, arr) => (\r\n\t\t\t\t\t\t\t\t\t<Fragment key={i}>\r\n\t\t\t\t\t\t\t\t\t\t<MarkdownLinkWrapper title={post.title} path={post.path} />\r\n\t\t\t\t\t\t\t\t\t\t{i < arr.length - 1 && <br />}\r\n\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{source && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Divider section />\r\n\r\n\t\t\t\t\t\t\t\t{buttons}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</HeaderWithAnchor>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<PageNotFound />\r\n\t\t\t\t)}\r\n\t\t\t</Body>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(BlogPost, (prev, next) => prev.postId === next.postId);\r\nexport default memoComponent;\r\nexport { memoComponent as BlogPost };\r\n","import { memo, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Header, Button, Form, Message, Icon, Modal, Transition } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport { Body, NoSelect } from \"../../Styles\";\r\nimport { GradientButton } from \"../../reusable/GradientButton\";\r\nimport { CommentService, NetworkService } from \"../../../service\";\r\nimport get from \"lodash/get\";\r\nimport mapValues from \"lodash/mapValues\";\r\n\r\nconst errorMessageMap = mapValues(\r\n\t{\r\n\t\t1: {\r\n\t\t\theader: \"Missing email/phone\",\r\n\t\t\tcontent: \"You must enter either your email or phone number.\",\r\n\t\t},\r\n\t\t2: {\r\n\t\t\theader: \"Missing message\",\r\n\t\t\tcontent: \"You must enter a message.\",\r\n\t\t},\r\n\t\t3: {\r\n\t\t\theader: \"Invalid email address\",\r\n\t\t\tcontent: \"The format of the email address you enter is invalid.\",\r\n\t\t},\r\n\t\t4: {\r\n\t\t\theader: \"Invalid phone number\",\r\n\t\t\tcontent: \"The format of the phone number you enter is invalid.\",\r\n\t\t},\r\n\t},\r\n\t(v) => ({\r\n\t\t...v,\r\n\t\tcontent: v.content + \" Please double-check your input.\",\r\n\t\theaderIcon: \"ban\",\r\n\t\tbuttonIcon: \"write\",\r\n\t\tbutton: \"Try again\",\r\n\t})\r\n);\r\n\r\nconst ContactFormWrapper = styled.div`\r\n\tinput,\r\n\ttextarea {\r\n\t\tbackground-color: rgba(255, 255, 255, 0.35) !important;\r\n\t\tcolor: #8e24aa !important;\r\n\t}\r\n\r\n\tform::before {\r\n\t\tbackground-color: transparent !important;\r\n\t}\r\n`;\r\n\r\nfunction Contact(props) {\r\n\tconst [firstName, setFirstName] = useState(\"\");\r\n\tconst [lastName, setLastName] = useState(\"\");\r\n\tconst [phone, setPhone] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [message, setMessage] = useState(\"\");\r\n\tconst [isSendButtonClicked, setSendButtonClicked] = useState(false);\r\n\tconst [isSent, setSent] = useState(0); // 0 = not sent, 1 = sending, 2 = sent\r\n\tconst [isErrorPopupOpen, setErrorPopupOpen] = useState(false);\r\n\r\n\tconst errorMissingEmailOrPhone =\r\n\t\t!!email || !!phone\r\n\t\t\t? false\r\n\t\t\t: isSendButtonClicked\r\n\t\t\t? {\r\n\t\t\t\t\tcontent: \"You must enter your email and/or phone no.\",\r\n\t\t\t\t\tpointing: \"above\",\r\n\t\t\t  }\r\n\t\t\t: true;\r\n\tconst errorMissingMessage = !!message\r\n\t\t? false\r\n\t\t: isSendButtonClicked\r\n\t\t? {\r\n\t\t\t\tcontent: \"You must leave a message.\",\r\n\t\t\t\tpointing: \"above\",\r\n\t\t  }\r\n\t\t: true;\r\n\tconst errorInvalidEmail =\r\n\t\t!!email && !new RegExp(\"^\\\\w+@\\\\w+\\\\.\\\\w+$\").test(email)\r\n\t\t\t? {\r\n\t\t\t\t\tcontent: \"You must enter a valid email.\",\r\n\t\t\t\t\tpointing: \"above\",\r\n\t\t\t  }\r\n\t\t\t: false;\r\n\tconst errorInvalidPhone =\r\n\t\t!!phone && !new RegExp(\"^(\\\\+?852)?\\\\d{8}$\").test(phone.replace(/\\s/g, \"\"))\r\n\t\t\t? {\r\n\t\t\t\t\tcontent: \"You must enter a valid HK phone no.\",\r\n\t\t\t\t\tpointing: \"above\",\r\n\t\t\t  }\r\n\t\t\t: false;\r\n\tconst errorMessageType = errorMissingEmailOrPhone\r\n\t\t? 1\r\n\t\t: errorMissingMessage\r\n\t\t? 2\r\n\t\t: errorInvalidEmail\r\n\t\t? 3\r\n\t\t: errorInvalidPhone\r\n\t\t? 4\r\n\t\t: 0;\r\n\tconst isValidInput = errorMessageType === 0;\r\n\r\n\tconst sendToFirebase = () => {\r\n\t\tNetworkService.getClientIp()\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (!response || !response.data) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst clientIp = (response.data.split(\"\\n\").filter((e) => e.startsWith(\"ip=\"))[0] || \"\").replace(\r\n\t\t\t\t\t/^ip=/,\r\n\t\t\t\t\t\"\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\tCommentService.postComment({\r\n\t\t\t\t\tfirstName,\r\n\t\t\t\t\tlastName,\r\n\t\t\t\t\tphone,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tmessage,\r\n\t\t\t\t\tclientIp,\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tsetSent(2);\r\n\t\t\t\t\t\tconsole.log(\"Successfully sent.\");\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\tsetSent(0);\r\n\t\t\t\t\t\talert(\"Failed to send (2).\");\r\n\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetSent(0);\r\n\t\t\t\talert(\"Failed to send (1).\");\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Body>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>Contact | {process.env.REACT_APP_TITLE}</title>\r\n\t\t\t</Helmet>\r\n\r\n\t\t\t<Header size=\"huge\" style={{ cursor: \"default\" }}>\r\n\t\t\t\tContact\r\n\t\t\t</Header>\r\n\r\n\t\t\t<Transition visible={isErrorPopupOpen} animation=\"scale\" duration={400}>\r\n\t\t\t\t<Modal open={isErrorPopupOpen}>\r\n\t\t\t\t\t<Header\r\n\t\t\t\t\t\ticon={get(errorMessageMap[errorMessageType], \"headerIcon\", \"\")}\r\n\t\t\t\t\t\tcontent={<NoSelect>{get(errorMessageMap[errorMessageType], \"header\", \"\")}</NoSelect>}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Modal.Content>\r\n\t\t\t\t\t\t<NoSelect>{get(errorMessageMap[errorMessageType], \"content\", \"\")}</NoSelect>\r\n\t\t\t\t\t</Modal.Content>\r\n\t\t\t\t\t<Modal.Actions>\r\n\t\t\t\t\t\t<Button color=\"red\" onClick={() => setErrorPopupOpen(false)}>\r\n\t\t\t\t\t\t\t<Icon name={get(errorMessageMap[errorMessageType], \"buttonIcon\", \"\")} />{\" \"}\r\n\t\t\t\t\t\t\t{get(errorMessageMap[errorMessageType], \"button\", \"\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Modal.Actions>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Transition>\r\n\r\n\t\t\t{isSent === 2 ? (\r\n\t\t\t\t<NoSelect>\r\n\t\t\t\t\t<Message\r\n\t\t\t\t\t\tinfo\r\n\t\t\t\t\t\tfloating\r\n\t\t\t\t\t\tsize=\"huge\"\r\n\t\t\t\t\t\ticon\r\n\t\t\t\t\t\tstyle={{ backgroundColor: \"transparent\", boxShadow: \"none\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span style={{ fontSize: \"3em\" }}>👌</span>\r\n\t\t\t\t\t\t<Message.Content>\r\n\t\t\t\t\t\t\t<Message.Header>Successfully Sent</Message.Header>\r\n\t\t\t\t\t\t\tAppreciate your time, I'll get back to you soon, cheers!\r\n\t\t\t\t\t\t</Message.Content>\r\n\t\t\t\t\t</Message>\r\n\t\t\t\t</NoSelect>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<ContactFormWrapper>\r\n\t\t\t\t\t\t<Form size=\"big\" loading={isSent > 0}>\r\n\t\t\t\t\t\t\t<Form.Group widths=\"equal\">\r\n\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\tlabel=\"First name\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"First name (optional)\"\r\n\t\t\t\t\t\t\t\t\tvalue={firstName}\r\n\t\t\t\t\t\t\t\t\tdisabled={isSent > 0}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setFirstName(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\tlabel=\"Last name\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Last name (optional)\"\r\n\t\t\t\t\t\t\t\t\tvalue={lastName}\r\n\t\t\t\t\t\t\t\t\tdisabled={isSent > 0}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setLastName(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group widths=\"equal\">\r\n\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"example@gmail.com\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\terror={errorMissingEmailOrPhone || errorInvalidEmail}\r\n\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\tdisabled={isSent > 0}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Mine: 6330 1333\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\terror={errorMissingEmailOrPhone || errorInvalidPhone}\r\n\t\t\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\t\t\tdisabled={isSent > 0}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setPhone(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.TextArea\r\n\t\t\t\t\t\t\t\trows={8}\r\n\t\t\t\t\t\t\t\tlabel=\"Message\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Leave me a message :)\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\terror={errorMissingMessage}\r\n\t\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\t\tdisabled={isSent > 0}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setMessage(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</ContactFormWrapper>\r\n\t\t\t\t\t<div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginTop: \"2em\" }}>\r\n\t\t\t\t\t\t<GradientButton\r\n\t\t\t\t\t\t\tcapitalize\r\n\t\t\t\t\t\t\tstyle={{ ...(isSent > 0 && { opacity: 0.5, pointerEvents: \"none\" }) }}\r\n\t\t\t\t\t\t\taction={\r\n\t\t\t\t\t\t\t\tisSent > 0\r\n\t\t\t\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t\t\t\t: () => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetSendButtonClicked(true);\r\n\t\t\t\t\t\t\t\t\t\t\tif (!isValidInput) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetErrorPopupOpen(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tsetSent(1);\r\n\t\t\t\t\t\t\t\t\t\t\tsendToFirebase();\r\n\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t</GradientButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Body>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(Contact, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as Contact };\r\n","import { memo, useState } from \"react\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ContactItemWrapper = styled(({ hovered, ...props }) => <div {...props} />)`\r\n\t.contact-item {\r\n\t\ttransition: 250ms;\r\n\t\topacity: ${({ hovered }) => (hovered ? 1 : 0.75)};\r\n\t\t${({ hovered }) => (hovered ? \"transform: scale(1.05);\" : \"\")}\r\n\t}\r\n`;\r\n\r\nfunction ContactItem(props) {\r\n\tconst { href, icon, color, iconRotation, header, subHeader } = props;\r\n\tconst isUrl = new RegExp(\"^https?://\", \"i\").test(href);\r\n\r\n\tconst [isHovered, setHovered] = useState(false);\r\n\r\n\treturn (\r\n\t\t// eslint-disable-next-line react/jsx-no-target-blank\r\n\t\t<a href={href} target={isUrl ? \"_blank\" : null} rel={isUrl ? \"external nofollow noopener noreferrer\" : null}>\r\n\t\t\t<ContactItemWrapper hovered={isHovered}>\r\n\t\t\t\t<Header\r\n\t\t\t\t\tclassName=\"contact-item\"\r\n\t\t\t\t\tas=\"h4\"\r\n\t\t\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\t\t\tonClick={() => setHovered(false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Icon name={icon} color={color} rotated={iconRotation} />\r\n\t\t\t\t\t<Header.Content>\r\n\t\t\t\t\t\t{header}\r\n\t\t\t\t\t\t<Header.Subheader>{subHeader}</Header.Subheader>\r\n\t\t\t\t\t</Header.Content>\r\n\t\t\t\t</Header>\r\n\t\t\t</ContactItemWrapper>\r\n\t\t</a>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(ContactItem, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as ContactItem };\r\n","import { memo } from \"react\";\r\nimport { Grid, Icon, Header, Divider, Responsive } from \"semantic-ui-react\";\r\nimport { ContactItem } from \"./ContactItem\";\r\nimport { Body, NoSelect } from \"./../Styles\";\r\nimport { responsiveMaxWidth, responsiveMinWidth } from \"../../config\";\r\nimport preval from \"preval.macro\";\r\nimport GitInfo from \"react-git-info/macro\";\r\nimport moment from \"moment\";\r\n\r\nfunction SiteFooter(props) {\r\n\tconst currentYear = new Date().getFullYear();\r\n\tconst lastUpdatedTime = preval`module.exports = new Date().getTime();`;\r\n\r\n\tconst gitInfo = GitInfo();\r\n\r\n\treturn (\r\n\t\t<div className=\"site-footer\">\r\n\t\t\t<Body>\r\n\t\t\t\t<Divider horizontal section>\r\n\t\t\t\t\t<Header as=\"h5\" style={{ opacity: 0.5 }}>\r\n\t\t\t\t\t\t<Icon name=\"react\" />\r\n\t\t\t\t\t\tReach Me Now!\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t</Divider>\r\n\t\t\t\t<Grid stackable padded columns={3}>\r\n\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t<ContactItem\r\n\t\t\t\t\t\t\thref=\"tel:+85263301333\"\r\n\t\t\t\t\t\t\ticon=\"phone\"\r\n\t\t\t\t\t\t\ticonRotation=\"clockwise\"\r\n\t\t\t\t\t\t\tcolor=\"teal\"\r\n\t\t\t\t\t\t\theader=\"Mobile\"\r\n\t\t\t\t\t\t\tsubHeader=\"6330 1333\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t<ContactItem\r\n\t\t\t\t\t\t\thref=\"mailto:michaelboyboy@gmail.com\"\r\n\t\t\t\t\t\t\ticon=\"mail\"\r\n\t\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\t\theader=\"Email\"\r\n\t\t\t\t\t\t\tsubHeader=\"michaelboyboy@gmail.com\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t<ContactItem\r\n\t\t\t\t\t\t\thref=\"https://hk.linkedin.com/in/mickchung\"\r\n\t\t\t\t\t\t\ticon=\"linkedin\"\r\n\t\t\t\t\t\t\tcolor=\"blue\"\r\n\t\t\t\t\t\t\theader=\"LinkedIn\"\r\n\t\t\t\t\t\t\tsubHeader=\"hk.linkedin.com/in/mickchung\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Divider />\r\n\r\n\t\t\t\t{[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops: {\r\n\t\t\t\t\t\t\tmaxWidth: responsiveMaxWidth,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tdiv: {\r\n\t\t\t\t\t\t\t\tfontSize: \"2.75vw\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops: {\r\n\t\t\t\t\t\t\tminWidth: responsiveMinWidth,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tlastUpdatedOn: {\r\n\t\t\t\t\t\t\t\tfloat: \"right\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t].map(({ props = {}, style = {} }, i) => (\r\n\t\t\t\t\t<Responsive key={i} {...props}>\r\n\t\t\t\t\t\t<div style={{ color: \"#4ba3c7\", ...(style.div || {}) }}>\r\n\t\t\t\t\t\t\t<NoSelect style={{ display: \"inline-block\" }}>\r\n\t\t\t\t\t\t\t\tCopyright © {currentYear} Chung Cheuk Hang Michael. All rights reserved.\r\n\t\t\t\t\t\t\t</NoSelect>\r\n\t\t\t\t\t\t\t<NoSelect style={{ display: \"inline-block\", ...(style.lastUpdatedOn || {}) }}>\r\n\t\t\t\t\t\t\t\tLast Updated On:{\" \"}\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\ttitle={moment(lastUpdatedTime).format(\"D MMM YYYY HH:mm:ss\")}\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"help\" }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{moment(lastUpdatedTime).format(\"D MMM YYYY\")}\r\n\t\t\t\t\t\t\t\t</span>{\" \"}\r\n\t\t\t\t\t\t\t\t/{\" \"}\r\n\t\t\t\t\t\t\t\t<span title={gitInfo.commit.hash} style={{ cursor: \"help\" }}>\r\n\t\t\t\t\t\t\t\t\t{gitInfo.commit.shortHash}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</NoSelect>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Responsive>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t<Divider hidden />\r\n\t\t\t</Body>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(SiteFooter, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as SiteFooter };\r\n","import { memo, useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport styled from \"styled-components\";\r\nimport { LoadingIndicator } from \"./LoadingIndicator\";\r\nimport { NoSelect } from \"../Styles\";\r\nimport { changeImagePopupSource } from \"../../redux/action\";\r\n\r\nconst FullScreenGalleryWrapper = styled.div`\r\n\tdisplay: flex;\r\n\ttext-align: center;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\tz-index: 1000;\r\n\tcursor: zoom-out;\r\n\ttransition: 500ms;\r\n\tbackground-color: rgba(0, 0, 0, 0.9);\r\n\topacity: ${({ show }) => (show ? 1 : 0)};\r\n\t${({ show }) => (show ? \"\" : \"pointer-events: none;\")};\r\n\r\n\timg {\r\n\t\twidth: 95vw;\r\n\t\theight: 95vh;\r\n\t\tobject-fit: contain;\r\n\t\ttransition: 500ms;\r\n\t\t${({ loaded }) => (loaded ? \"\" : \"filter: brightness(0.5);\")};\r\n\t}\r\n`;\r\n\r\nconst GalleryButtons = styled.div`\r\n\t.image-button {\r\n\t\tposition: fixed;\r\n\t\ttop: 0;\r\n\t\twidth: 33%;\r\n\t\theight: 100%;\r\n\t\tborder: none;\r\n\t\ttransition: 250ms;\r\n\t\tcursor: ${({ loaded }) => (loaded ? \"pointer\" : \"wait\")};\r\n\t\tbackground-color: transparent;\r\n\t}\r\n\r\n\t.previous-image-button {\r\n\t\tleft: 0;\r\n\t}\r\n\r\n\t.next-image-button {\r\n\t\tright: 0;\r\n\t}\r\n`;\r\n\r\nconst IndexAndCount = styled.span`\r\n\tposition: fixed;\r\n\ttop: 20px;\r\n\tright: 20px;\r\n\tpadding: 8px 15px 8px 15px;\r\n\tcolor: white;\r\n\tbackground-color: #455a64;\r\n\tborder-radius: 15px;\r\n\ttext-align: center;\r\n\tfont-size: 18px;\r\n\tbox-shadow: 0 0 10px 3px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nfunction FullScreenGallery(props) {\r\n\tconst { images, activeIndex, show, key } = useSelector((state) => state.imagePopupReducer);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [isLoaded, setLoaded] = useState(false);\r\n\tconst [queryString, setQueryString] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!show) {\r\n\t\t\tsetLoaded(false);\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [show]);\r\n\r\n\tconst hasImage = images && images.length > 0;\r\n\tconst hidden = !hasImage || !show;\r\n\r\n\tconst swipeConfig = {\r\n\t\tonSwipedLeft: () => {\r\n\t\t\tif (!images || images.length < 2 || !isLoaded) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetLoaded(false);\r\n\t\t\tsetQueryString(\"\");\r\n\t\t\tdispatch(\r\n\t\t\t\tchangeImagePopupSource({\r\n\t\t\t\t\tactiveIndex: (activeIndex + 1) % images.length,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\tonSwipedRight: () => {\r\n\t\t\tif (!images || images.length < 2 || !isLoaded) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetLoaded(false);\r\n\t\t\tsetQueryString(\"\");\r\n\t\t\tdispatch(\r\n\t\t\t\tchangeImagePopupSource({\r\n\t\t\t\t\tactiveIndex: (activeIndex + images.length - 1) % images.length,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\tonSwipedUp: () => {},\r\n\t\tonSwipedDown: () => {},\r\n\t\tpreventDefaultTouchmoveEvent: true,\r\n\t};\r\n\tconst imageCenterSwipeHandlers = useSwipeable(swipeConfig);\r\n\tconst buttonsSwipeHandlers = useSwipeable(swipeConfig);\r\n\r\n\tconst GalleryButton = (props) => {\r\n\t\tconst { className, clickToIndex } = props;\r\n\r\n\t\tconst [isHovered, setHovered] = useState(false);\r\n\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tclassName={`image-button ${className}`}\r\n\t\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\r\n\t\t\t\t\tsetHovered(false);\r\n\r\n\t\t\t\t\tif (!isLoaded) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsetLoaded(false);\r\n\t\t\t\t\tsetQueryString(\"\");\r\n\t\t\t\t\tdispatch(changeImagePopupSource({ activeIndex: clickToIndex }));\r\n\t\t\t\t}}\r\n\t\t\t\tstyle={{ ...(isHovered && isLoaded && { backgroundColor: \"rgba(3, 169, 244, 0.25)\" }) }}\r\n\t\t\t/>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{show && (\r\n\t\t\t\t<FullScreenGalleryWrapper\r\n\t\t\t\t\tshow={!hidden}\r\n\t\t\t\t\tloaded={isLoaded}\r\n\t\t\t\t\tonClick={() => dispatch(changeImagePopupSource({ show: false }))}\r\n\t\t\t\t\t{...imageCenterSwipeHandlers}\r\n\t\t\t\t>\r\n\t\t\t\t\t<picture>\r\n\t\t\t\t\t\t<source\r\n\t\t\t\t\t\t\ttype=\"image/webp\"\r\n\t\t\t\t\t\t\tsrcSet={\r\n\t\t\t\t\t\t\t\thasImage\r\n\t\t\t\t\t\t\t\t\t? encodeURIComponent(images[activeIndex].replace(/\\.(jpg|png|gif)/, \".webp\"))\r\n\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tsrc={hasImage ? `${images[activeIndex]}${queryString}` : null}\r\n\t\t\t\t\t\t\talt={hasImage ? images[activeIndex].replace(/\\.(jpg|png|gif)/, \"\") : null}\r\n\t\t\t\t\t\t\tdraggable={false}\r\n\t\t\t\t\t\t\tonContextMenu={(e) => e.preventDefault()}\r\n\t\t\t\t\t\t\tonLoad={() => setLoaded(true)}\r\n\t\t\t\t\t\t\tonError={() => setTimeout(() => setQueryString(`?${Math.random()}`), 1000)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</picture>\r\n\r\n\t\t\t\t\t{hasImage && images.length >= 2 && (\r\n\t\t\t\t\t\t<GalleryButtons loaded={isLoaded} {...buttonsSwipeHandlers}>\r\n\t\t\t\t\t\t\t<GalleryButton\r\n\t\t\t\t\t\t\t\tclassName=\"previous-image-button\"\r\n\t\t\t\t\t\t\t\tclickToIndex={(activeIndex + images.length - 1) % images.length}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<GalleryButton\r\n\t\t\t\t\t\t\t\tclassName=\"next-image-button\"\r\n\t\t\t\t\t\t\t\tclickToIndex={(activeIndex + 1) % images.length}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</GalleryButtons>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{hasImage && images.length > 1 && (\r\n\t\t\t\t\t\t<NoSelect style={{ pointerEvents: \"none\" }}>\r\n\t\t\t\t\t\t\t<IndexAndCount>\r\n\t\t\t\t\t\t\t\t{activeIndex + 1}/{images.length}\r\n\t\t\t\t\t\t\t</IndexAndCount>\r\n\t\t\t\t\t\t</NoSelect>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{!isLoaded && <LoadingIndicator />}\r\n\t\t\t\t</FullScreenGalleryWrapper>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(FullScreenGallery, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as FullScreenGallery };\r\n","import { memo, useEffect } from \"react\";\r\nimport { Routes, Route, useLocation, useNavigationType } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n// import { useTransition animated } from \"react-spring\";\r\nimport { SiteHeader } from \"./header/SiteHeader\";\r\nimport { Home, WorkExp, HobbyProject, ProjectDetail, Personality, Blog, BlogPost, Contact } from \"./center/pages\";\r\nimport { SiteFooter } from \"./footer/SiteFooter\";\r\nimport { FullScreenGallery } from \"./reusable/FullScreenGallery\";\r\nimport { changeImagePopupSource } from \"../redux/action\";\r\n\r\nfunction Eportfolio(props) {\r\n\tconst { historyChangeCallback } = props;\r\n\r\n\t// const location = useLocation();\r\n\t// const transitions = useTransition(location, (location) => location.pathname, {\r\n\t// \tfrom: { opacity: 0, position: \"absolute\" },\r\n\t// \tenter: { opacity: 1 },\r\n\t// \tleave: { opacity: 0 },\r\n\t// });\r\n\r\n\tconst location = useLocation();\r\n\tconst navigationType = useNavigationType();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(changeImagePopupSource({ show: false }));\r\n\r\n\t\tif (!location.hash && navigationType === \"PUSH\") {\r\n\t\t\twindow.scrollTo({ top: 0 });\r\n\t\t}\r\n\t\tif (historyChangeCallback) {\r\n\t\t\thistoryChangeCallback();\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [location]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<SiteHeader />\r\n\r\n\t\t\t{/* {transitions.map(({ item, props, key }) => (\r\n\t\t\t\t<animated.div key={key} style={{ ...props, width: \"100%\" }}> */}\r\n\t\t\t<Routes caseSensitive /*location={item}*/>\r\n\t\t\t\t<Route path=\"/*\" element={<Home />} />\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath=\"/workExp/:projectId\"\r\n\t\t\t\t\telement={<ProjectDetail projectType=\"My Work Experiences\" backPath=\"/workExp\" />}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route path=\"/workExp\" element={<WorkExp />} />\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath=\"/hobbyProject/:projectId\"\r\n\t\t\t\t\telement={<ProjectDetail projectType=\"My Hobby Projects\" backPath=\"/hobbyProject\" />}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route path=\"/hobbyProject\" element={<HobbyProject />} />\r\n\t\t\t\t<Route path=\"/personality\" element={<Personality />} />\r\n\t\t\t\t<Route path=\"/blog/:postId\" element={<BlogPost />} />\r\n\t\t\t\t<Route path=\"/blog\" element={<Blog />} />\r\n\t\t\t\t<Route path=\"/contact\" element={<Contact />} />\r\n\t\t\t</Routes>\r\n\t\t\t<SiteFooter />\r\n\t\t\t<FullScreenGallery />\r\n\t\t\t{/* </animated.div>\r\n\t\t\t))} */}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(Eportfolio, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as Eportfolio };\r\n","import { memo, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MenuItemWrapper = styled(({ hovered, ...props }) => <span {...props} />)`\r\n\ta {\r\n\t\tposition: relative;\r\n\t\tcolor: #e91e63;\r\n\t\ttext-decoration: none;\r\n\t\toverflow: hidden;\r\n\r\n\t\t-webkit-touch-callout: none;\r\n\t\t-webkit-user-select: none;\r\n\t\t-khtml-user-select: none;\r\n\t\t-moz-user-select: none;\r\n\t\t-ms-user-select: none;\r\n\t\tuser-select: none;\r\n\t\t-webkit-user-drag: none;\r\n\t\t-khtml-user-drag: none;\r\n\t\t-moz-user-drag: none;\r\n\t\t-ms-user-drag: none;\r\n\t\tuser-drag: none;\r\n\r\n\t\t&::after {\r\n\t\t\tcontent: \"\";\r\n\t\t\tposition: absolute;\r\n\t\t\tbottom: 0;\r\n\t\t\tleft: 50%;\r\n\t\t\twidth: ${({ hovered }) => (hovered ? 100 : 0)}%;\r\n\t\t\ttransform: translateX(-50%);\r\n\t\t\theight: 3px;\r\n\t\t\tbackground: #e91e63;\r\n\t\t\ttransition: 250ms;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction MenuItem(props) {\r\n\tconst { title, path, menuItemCallback } = props;\r\n\r\n\tconst [isHovered, setHovered] = useState(false);\r\n\r\n\tconst { pathname } = useLocation();\r\n\r\n\treturn (\r\n\t\t<MenuItemWrapper hovered={isHovered}>\r\n\t\t\t<Link\r\n\t\t\t\tclassName=\"code\"\r\n\t\t\t\tto={path}\r\n\t\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetHovered(false);\r\n\t\t\t\t\tif (pathname !== path && menuItemCallback) {\r\n\t\t\t\t\t\tmenuItemCallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...(pathname === path && {\r\n\t\t\t\t\t\topacity: 0.25,\r\n\t\t\t\t\t\tpointerEvents: \"none\",\r\n\t\t\t\t\t}),\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{title}\r\n\t\t\t</Link>\r\n\t\t</MenuItemWrapper>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(\r\n\tMenuItem,\r\n\t(prev, next) =>\r\n\t\tprev.title === next.title && prev.path === next.path && prev.menuItemCallback === next.menuItemCallback\r\n);\r\nexport default memoComponent;\r\nexport { memoComponent as MenuItem };\r\n","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MenuItem } from \"./MenuItem\";\r\n\r\nconst PATHS = [\r\n\t{\r\n\t\tpath: \"/\",\r\n\t\ttitle: \"Home\",\r\n\t},\r\n\t{\r\n\t\tpath: \"/workExp\",\r\n\t\ttitle: \"Work Experiences\",\r\n\t},\r\n\t{\r\n\t\tpath: \"/hobbyProject\",\r\n\t\ttitle: \"Hobby Projects\",\r\n\t},\r\n\t{\r\n\t\tpath: \"/personality\",\r\n\t\ttitle: \"Personality\",\r\n\t},\r\n\t{\r\n\t\tpath: \"/blog\",\r\n\t\ttitle: \"Blog\",\r\n\t},\r\n\t{\r\n\t\tpath: \"/contact\",\r\n\t\ttitle: \"Contact\",\r\n\t},\r\n];\r\n\r\nconst Overlay = styled(({ navMenuOpen, ...props }) => <div {...props} />)`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\ttransition: 250ms;\r\n\toverflow: hidden;\r\n\tz-index: 1000;\r\n\r\n\topacity: ${({ navMenuOpen }) => (navMenuOpen ? 1 : 0)};\r\n\tvisibility: ${({ navMenuOpen }) => (navMenuOpen ? \"visible\" : \"hidden\")};\r\n\r\n\tli {\r\n\t\tanimation: ${({ navMenuOpen }) => (navMenuOpen ? \"fadeInRight 0.5s ease forwards\" : \"\")};\r\n\t\tanimation-delay: ${({ navMenuOpen }) => (navMenuOpen ? \"0.1s\" : \"\")};\r\n\r\n\t\t&:nth-of-type(2) {\r\n\t\t\tanimation-delay: ${({ navMenuOpen }) => (navMenuOpen ? \"0.2s\" : \"\")};\r\n\t\t}\r\n\t\t&:nth-of-type(3) {\r\n\t\t\tanimation-delay: ${({ navMenuOpen }) => (navMenuOpen ? \"0.3s\" : \"\")};\r\n\t\t}\r\n\t\t&:nth-of-type(4) {\r\n\t\t\tanimation-delay: ${({ navMenuOpen }) => (navMenuOpen ? \"0.4s\" : \"\")};\r\n\t\t}\r\n\t\t&:nth-of-type(5) {\r\n\t\t\tanimation-delay: ${({ navMenuOpen }) => (navMenuOpen ? \"0.5s\" : \"\")};\r\n\t\t}\r\n\t\t&:nth-of-type(6) {\r\n\t\t\tanimation-delay: ${({ navMenuOpen }) => (navMenuOpen ? \"0.6s\" : \"\")};\r\n\t\t}\r\n\t}\r\n\r\n\tnav {\r\n\t\tposition: relative;\r\n\t\theight: 70%;\r\n\t\ttop: 50%;\r\n\t\ttransform: translateY(-50%);\r\n\t\tfont-size: 30px;\r\n\t\tfont-weight: bold;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\tul {\r\n\t\tlist-style: none;\r\n\t\tpadding: 0;\r\n\t\tmargin: 0 auto;\r\n\t\tdisplay: inline-block;\r\n\t\tposition: relative;\r\n\t\theight: 100%;\r\n\r\n\t\tli {\r\n\t\t\tdisplay: block;\r\n\t\t\theight: 25%;\r\n\t\t\theight: calc(100% / ${PATHS.length});\r\n\t\t\tmin-height: 50px;\r\n\t\t\tposition: relative;\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction FullScreenMenu(props) {\r\n\tconst { navMenuOpen, menuItemCallback } = props;\r\n\r\n\treturn (\r\n\t\t<Overlay navMenuOpen={navMenuOpen}>\r\n\t\t\t<nav>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{PATHS.map((path, i) => (\r\n\t\t\t\t\t\t<li key={i}>\r\n\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\ttitle={path.title}\r\n\t\t\t\t\t\t\t\tpath={path.path}\r\n\t\t\t\t\t\t\t\tmenuItemCallback={menuItemCallback}\r\n\t\t\t\t\t\t\t></MenuItem>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</Overlay>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(FullScreenMenu, (prev, next) => prev.navMenuOpen === next.navMenuOpen);\r\nexport default memoComponent;\r\nexport { memoComponent as FullScreenMenu };\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nconst ScrollToTopButton = styled(({ navMenuOpen, ...props }) => <Button {...props} />)`\r\n\tbottom: 75px;\r\n\tright: 20px;\r\n\tposition: fixed;\r\n\tz-index: 1001;\r\n\ttransition: all 250ms, right 0ms !important;\r\n\tbox-shadow: 0 0 10px rgba(0, 0, 0, 0.5) !important;\r\n\r\n\t@media (hover: hover) {\r\n\t\tright: ${({ navMenuOpen }) => (navMenuOpen ? \"32px\" : \"20px\")};\r\n\t}\r\n`;\r\n\r\nconst NavMenuButtonShadow = styled(({ navMenuOpen, ...props }) => <div {...props} />)`\r\n\twidth: 40px;\r\n\theight: 40px;\r\n\tbottom: 20px;\r\n\tright: 20px;\r\n\tposition: fixed;\r\n\tmargin-right: 4.5px;\r\n\tz-index: 1001;\r\n\tborder-radius: 10px;\r\n\ttransition: all 250ms, right 0ms !important;\r\n\tbackground: linear-gradient(-45deg, #ffa63d, #ff3d77, #338aff, #3cf0c5);\r\n\tbackground-size: 600%;\r\n\tanimation: animated-button 16s linear infinite !important;\r\n\tfilter: blur(15px);\r\n\tpointer-events: none;\r\n\r\n\t@media (hover: hover) {\r\n\t\tright: ${({ navMenuOpen }) => (navMenuOpen ? \"32px\" : \"20px\")};\r\n\t}\r\n`;\r\n\r\nconst ButtonsBackground = styled(({ show, navMenuOpen, ...props }) => <div {...props} />)`\r\n\tposition: fixed;\r\n\tdisplay: block;\r\n\tbottom: 0;\r\n\tright: 0;\r\n\twidth: 200px;\r\n\theight: 275px;\r\n\tz-index: 1000;\r\n\tpointer-events: none;\r\n\ttransition: 0ms !important;\r\n\tbackground: linear-gradient(\r\n\t\tto bottom right,\r\n\t\ttransparent,\r\n\t\ttransparent,\r\n\t\ttransparent,\r\n\t\trgba(0, 0, 0, 0.25),\r\n\t\trgba(0, 0, 0, 0.7)\r\n\t);\r\n\t${({ show }) => (show ? \"\" : \"opacity: 0;\")}\r\n\r\n\t@media (hover: hover) {\r\n\t\tright: ${({ navMenuOpen }) => (navMenuOpen ? \"0px\" : \"-12px\")};\r\n\t}\r\n`;\r\n\r\nconst exports = { ScrollToTopButton, NavMenuButtonShadow, ButtonsBackground };\r\nexport default exports;\r\nexport { ScrollToTopButton, NavMenuButtonShadow, ButtonsBackground };\r\n","import { memo, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NavMenuButtonWrapper = styled(({ hovered, navMenuOpen, ...props }) => <div {...props} />)`\r\n\twidth: 40px;\r\n\theight: 40px;\r\n\tbottom: 20px;\r\n\tright: 20px;\r\n\tposition: fixed;\r\n\tmargin-right: 4.5px;\r\n\tz-index: 1002;\r\n\tborder-radius: 10px;\r\n\tcursor: pointer;\r\n\ttransition: all 250ms, right 0ms !important;\r\n\tbackground: linear-gradient(-45deg, #ffa63d, #ff3d77, #338aff, #3cf0c5);\r\n\tbackground-size: 600%;\r\n\tanimation: animated-button 16s linear infinite !important;\r\n\tbox-shadow: 0 0 10px rgba(0, 0, 0, 0.5) !important;\r\n\r\n\t${({ hovered }) =>\r\n\t\thovered\r\n\t\t\t? `\r\n\tfilter: brightness(0.8);\r\n\r\n\tspan.middle {\r\n\t\topacity: ${({ navMenuOpen }) => (navMenuOpen ? 0 : 1)};\r\n\t}\r\n`\r\n\t\t\t: \"\"}\r\n\r\n\t@keyframes animated-button {\r\n\t\t0% {\r\n\t\t\tbackground-position: 0% 50%;\r\n\t\t}\r\n\t\t50% {\r\n\t\t\tbackground-position: 100% 50%;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\tbackground-position: 0% 50%;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (hover: hover) {\r\n\t\tright: ${({ navMenuOpen }) => (navMenuOpen ? \"32px\" : \"20px\")};\r\n\t}\r\n`;\r\n\r\nconst NavMenuButtonLine = styled(({ navMenuOpen, ...props }) => <span {...props} />)`\r\n\tbackground: white;\r\n\twidth: 24px;\r\n\theight: 4px;\r\n\tposition: absolute;\r\n\ttop: 9px;\r\n\tleft: 8px;\r\n\ttransition: 0.35s ease;\r\n\r\n\t&:nth-of-type(1) {\r\n\t\ttransform: ${({ navMenuOpen }) => (navMenuOpen ? \"translateY(9px) translateX(0) rotate(45deg)\" : \"\")};\r\n\t}\r\n\r\n\t&:nth-of-type(2) {\r\n\t\ttop: 18px;\r\n\t\t${({ navMenuOpen }) => (navMenuOpen ? \"opacity: 0;\" : \"\")}\r\n\t}\r\n\r\n\t&:nth-of-type(3) {\r\n\t\ttop: 27px;\r\n\t\ttransform: ${({ navMenuOpen }) => (navMenuOpen ? \"translateY(-9px) translateX(0) rotate(-45deg)\" : \"\")};\r\n\t}\r\n`;\r\n\r\nfunction NavMenuButton(props) {\r\n\tconst { navMenuOpen, show, action } = props;\r\n\r\n\tconst [isHovered, setHovered] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.body.style.overflow = navMenuOpen ? \"hidden\" : null;\r\n\t}, [navMenuOpen]);\r\n\r\n\treturn (\r\n\t\t<NavMenuButtonWrapper\r\n\t\t\thovered={isHovered}\r\n\t\t\tnavMenuOpen={navMenuOpen}\r\n\t\t\tstyle={{\r\n\t\t\t\topacity: show ? 1 : 0,\r\n\t\t\t\t...(!show && { pointerEvents: \"none\" }),\r\n\t\t\t}}\r\n\t\t\tonMouseEnter={() => setHovered(true)}\r\n\t\t\tonMouseOver={() => setHovered(true)}\r\n\t\t\tonMouseLeave={() => setHovered(false)}\r\n\t\t\tonTouchStart={() => setHovered(true)}\r\n\t\t\tonTouchEnd={() => setHovered(false)}\r\n\t\t\tonTouchCancel={() => setHovered(false)}\r\n\t\t\tonClick={() => {\r\n\t\t\t\tsetHovered(false);\r\n\t\t\t\tif (typeof action === \"function\") {\r\n\t\t\t\t\taction();\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<NavMenuButtonLine className=\"top\" navMenuOpen={navMenuOpen} />\r\n\t\t\t<NavMenuButtonLine className=\"middle\" navMenuOpen={navMenuOpen} />\r\n\t\t\t<NavMenuButtonLine className=\"bottom\" navMenuOpen={navMenuOpen} />\r\n\t\t</NavMenuButtonWrapper>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(\r\n\tNavMenuButton,\r\n\t(prev, next) => prev.navMenuOpen === next.navMenuOpen && prev.show === next.show && prev.action === next.action\r\n);\r\nexport default memoComponent;\r\nexport { memoComponent as NavMenuButton };\r\n","import { memo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NoSelect } from \"../Styles\";\r\nimport { LocalStorageService } from \"../../service\";\r\n\r\nconst CookiesConsentWrapper = styled(({ consent, ...props }) => <div {...props} />)`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\r\n\tposition: fixed;\r\n\tbottom: ${({ consent }) => (consent === 2 ? 0 : \"-100%\")};\r\n\twidth: 100%;\r\n\tpadding: 0.75em 1em;\r\n\tfont-size: 16px;\r\n\tcolor: #c1d5e0;\r\n\tbackground-color: rgba(38, 50, 56, 0.95);\r\n\tbox-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\r\n\tz-index: 2000;\r\n\tcursor: default;\r\n\r\n\tanimation: ${({ consent }) => (consent === 2 ? \"close\" : \"expand\")} 1.5s forwards;\r\n\t${({ consent }) => (consent === 2 ? \"\" : \"animation-delay: 1s;\")}\r\n\r\n\t@keyframes expand {\r\n\t\t100% {\r\n\t\t\tbottom: 0;\r\n\t\t}\r\n\t}\r\n\r\n\t@keyframes close {\r\n\t\t100% {\r\n\t\t\tbottom: -100%;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst CookiesConsentButton = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\r\n\tpadding: 10px 15px;\r\n\tmargin-left: 1em;\r\n\tz-index: 2001;\r\n\tborder-radius: 5px;\r\n\tcursor: pointer;\r\n\tfont-size: 15px;\r\n\tfont-weight: bold;\r\n\tcolor: #f57f17;\r\n\tbackground-color: #fdd835;\r\n\twhite-space: nowrap;\r\n\ttransition: 250ms !important;\r\n\r\n\t&:hover {\r\n\t\tfilter: brightness(0.85);\r\n\t}\r\n`;\r\n\r\nfunction CookiesConsent(props) {\r\n\t// 1 means already accepted before\r\n\t// 2 means just accepted\r\n\t// else means not accepted yet\r\n\tconst [consent, setConsent] = useState(LocalStorageService.getCookiesConsent());\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{consent !== 1 && (\r\n\t\t\t\t<NoSelect>\r\n\t\t\t\t\t<CookiesConsentWrapper consent={consent}>\r\n\t\t\t\t\t\tThis website uses cookies, local storage and/or similar technologies to store user settings so\r\n\t\t\t\t\t\tas to improve user experience.\r\n\t\t\t\t\t\t<CookiesConsentButton\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetConsent(2);\r\n\t\t\t\t\t\t\t\tLocalStorageService.setCookiesConsent(true);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tAccept\r\n\t\t\t\t\t\t</CookiesConsentButton>\r\n\t\t\t\t\t</CookiesConsentWrapper>\r\n\t\t\t\t</NoSelect>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst memoComponent = memo(CookiesConsent, (prev, next) => true);\r\nexport default memoComponent;\r\nexport { memoComponent as CookiesConsent };\r\n","import { useState, useEffect } from \"react\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Eportfolio } from \"./components/Eportfolio\";\r\nimport Particles from \"react-tsparticles\";\r\nimport { FullScreenMenu } from \"./components/global/FullScreenMenu\";\r\nimport { defaultConfig, snowConfig } from \"./config/particles\";\r\nimport { ScrollToTopButton, NavMenuButtonShadow, ButtonsBackground } from \"./components/global/button/AppButtons\";\r\nimport { NavMenuButton } from \"./components/global/button/NavMenuButton\";\r\nimport { CookiesConsent } from \"./components/global/CookiesConsent\";\r\nimport { ScrollUtils } from \"./utils\";\r\nimport { changeImagePopupSource } from \"./redux/action\";\r\n\r\nconst particlesConfig = new Date().getMonth() === 11 ? snowConfig : defaultConfig;\r\n\r\nfunction App(props) {\r\n\tconst { show: isImagePopupVisible } = useSelector((state) => state.imagePopupReducer);\r\n\r\n\tconst [isScrollToTopButtonVisible, setScrollToTopButtonVisible] = useState(false);\r\n\tconst [isNavMenuOpen, setNavMenuOpen] = useState(false);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tsetScrollToTopButtonVisible(ScrollUtils.isScrollToTopButtonVisible());\r\n\r\n\t\tconst escapeKeyListener = (e) => {\r\n\t\t\tif (e.keyCode === 27) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\te.stopPropagation();\r\n\r\n\t\t\t\tsetNavMenuOpen(false);\r\n\r\n\t\t\t\tif (isImagePopupVisible) {\r\n\t\t\t\t\tdispatch(changeImagePopupSource({ show: false }));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst scrollEventListener = (e) => setScrollToTopButtonVisible(ScrollUtils.isScrollToTopButtonVisible());\r\n\r\n\t\tdocument.addEventListener(\"keydown\", escapeKeyListener);\r\n\t\tdocument.addEventListener(\"scroll\", scrollEventListener);\r\n\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"keydown\", escapeKeyListener);\r\n\t\t\tdocument.removeEventListener(\"scroll\", scrollEventListener);\r\n\t\t};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [isImagePopupVisible]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HashRouter>\r\n\t\t\t\t<HashLink to=\"#top\" smooth replace>\r\n\t\t\t\t\t<ScrollToTopButton\r\n\t\t\t\t\t\ticon=\"chevron up\"\r\n\t\t\t\t\t\tcompact\r\n\t\t\t\t\t\tcircular\r\n\t\t\t\t\t\tsize=\"big\"\r\n\t\t\t\t\t\tcolor=\"yellow\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\topacity: !isScrollToTopButtonVisible || isNavMenuOpen || isImagePopupVisible ? 0 : 1,\r\n\t\t\t\t\t\t\tpointerEvents:\r\n\t\t\t\t\t\t\t\t!isScrollToTopButtonVisible || isNavMenuOpen || isImagePopupVisible ? \"none\" : false,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tnavMenuOpen={isNavMenuOpen}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</HashLink>\r\n\r\n\t\t\t\t<CookiesConsent />\r\n\r\n\t\t\t\t<NavMenuButton\r\n\t\t\t\t\tnavMenuOpen={isNavMenuOpen}\r\n\t\t\t\t\tshow={!isImagePopupVisible}\r\n\t\t\t\t\taction={() => setNavMenuOpen(!isNavMenuOpen)}\r\n\t\t\t\t/>\r\n\t\t\t\t<NavMenuButtonShadow style={{ opacity: isImagePopupVisible ? 0 : 1 }} navMenuOpen={isNavMenuOpen} />\r\n\r\n\t\t\t\t<ButtonsBackground\r\n\t\t\t\t\tid=\"nav-menu-buttons-background\"\r\n\t\t\t\t\tshow={!isImagePopupVisible}\r\n\t\t\t\t\tnavMenuOpen={isNavMenuOpen}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<FullScreenMenu navMenuOpen={isNavMenuOpen} menuItemCallback={() => setNavMenuOpen(false)} />\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\topacity: isNavMenuOpen ? 0 : 1,\r\n\t\t\t\t\t\ttransition: \"250ms\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Eportfolio historyChangeCallback={() => setScrollToTopButtonVisible(false)} />\r\n\t\t\t\t</div>\r\n\t\t\t</HashRouter>\r\n\r\n\t\t\t<Particles className=\"particles-wrapper\" params={particlesConfig} />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\nexport { App };\r\n","import { CHANGE_IMAGE_POPUP_SOURCE } from \"../action/actionTypes\";\r\n\r\nconst imagePopupReducer = (\r\n\tstate = {\r\n\t\timages: [],\r\n\t\tactiveIndex: null,\r\n\t\tshow: false,\r\n\t\tkey: null,\r\n\t},\r\n\t{ type, data }\r\n) => {\r\n\tswitch (type) {\r\n\t\tcase CHANGE_IMAGE_POPUP_SOURCE:\r\n\t\t\tconst hasImages = data.images && data.images.length > 0;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...data,\r\n\t\t\t\tshow: (data.show === undefined && (data.activeIndex >= 0 || hasImages)) || data.show,\r\n\t\t\t\tkey:\r\n\t\t\t\t\thasImages || (typeof data.show === \"boolean\" && state.show !== data.show)\r\n\t\t\t\t\t\t? Math.random()\r\n\t\t\t\t\t\t: state.key,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default imagePopupReducer;\r\nexport { imagePopupReducer };\r\n","import { combineReducers } from \"redux\";\r\nimport { imagePopupReducer } from \"./imagePopupReducer\";\r\n\r\nconst allReducers = combineReducers({ imagePopupReducer });\r\n\r\nexport default allReducers;\r\nexport { allReducers };\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport { allReducers } from \"./reducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst store =\r\n\tprocess.env.NODE_ENV === \"production\"\r\n\t\t? createStore(allReducers)\r\n\t\t: createStore(allReducers, composeWithDevTools(applyMiddleware(logger)));\r\n\r\nexport default store;\r\nexport { store };\r\n","import \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/stable\";\r\n\r\nimport \"./wdyr\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\nimport \"./index.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\nconsole.log(\"%c住手！\", \"color: red; font-size: 48px;\");\r\nconsole.log(\"%c\\x1b[7m這是專門提供給開發人員的瀏覽器功能。\", \"font-size: 20px;\");\r\nconsole.log(\"%c詳情請參考：https://en.wikipedia.org/wiki/Self-XSS\", \"font-size: 20px;\");\r\n\r\nif (module.hot) module.hot.accept();\r\n","export default \"import { Home } from \\\"./home/Home\\\";\\r\\nimport { WorkExp } from \\\"./WorkExp\\\";\\r\\nimport { HobbyProject } from \\\"./HobbyProject\\\";\\r\\nimport { ProjectDetail } from \\\"./ProjectDetail\\\";\\r\\nimport { Personality } from \\\"./personality/Personality\\\";\\r\\nimport { Blog } from \\\"./blog/Blog\\\";\\r\\nimport { BlogPost } from \\\"./blog/BlogPost\\\";\\r\\nimport { Contact } from \\\"./Contact\\\";\\r\\n\\r\\nconst exports = { Home, WorkExp, HobbyProject, ProjectDetail, Personality, Blog, BlogPost, Contact };\\r\\nexport default exports;\\r\\nexport { Home, WorkExp, HobbyProject, ProjectDetail, Personality, Blog, BlogPost, Contact };\\r\\n\";","export default \"import { memo } from \\\"react\\\";\\r\\nimport \\\"./index.css\\\";\\r\\n\\r\\nfunction ReadingProgressBar(props) {\\r\\n\\tconst { progress } = props;\\r\\n\\r\\n\\treturn <progress id=\\\"reading-progress-bar\\\" max=\\\"100\\\" value={progress * 100}></progress>;\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(ReadingProgressBar, (prev, next) => prev.progress === next.progress);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as ReadingProgressBar };\\r\\n\";","export default \"import { CustomParagraphRenderer } from \\\"./CustomParagraphRenderer\\\";\\r\\nimport { CustomHeadingRenderer } from \\\"./CustomHeadingRenderer\\\";\\r\\nimport { CustomLinkRenderer } from \\\"./CustomLinkRenderer\\\";\\r\\nimport { CustomTableRenderer } from \\\"./CustomTableRenderer\\\";\\r\\nimport { CustomImageRenderer } from \\\"./CustomImageRenderer\\\";\\r\\n\\r\\nconst renderers = {\\r\\n\\tCustomParagraphRenderer,\\r\\n\\tCustomHeadingRenderer,\\r\\n\\tCustomLinkRenderer,\\r\\n\\tCustomTableRenderer,\\r\\n\\tCustomImageRenderer,\\r\\n};\\r\\nexport default renderers;\\r\\nexport { CustomParagraphRenderer, CustomHeadingRenderer, CustomLinkRenderer, CustomTableRenderer, CustomImageRenderer };\\r\\n\";","export default \"import { responsiveMaxWidth, responsiveMinWidth } from \\\"./responsive\\\";\\r\\nimport { workProjects } from \\\"./workProjects\\\";\\r\\nimport { hobbyProjects } from \\\"./hobbyProjects\\\";\\r\\nimport { blogPosts } from \\\"./blogPosts\\\";\\r\\nimport { blogPostTags } from \\\"./blogPostTags\\\";\\r\\nimport { firebaseHost } from \\\"./firebase\\\";\\r\\n\\r\\nconst exports = {\\r\\n\\tresponsiveMaxWidth,\\r\\n\\tresponsiveMinWidth,\\r\\n\\tworkProjects,\\r\\n\\thobbyProjects,\\r\\n\\tblogPosts,\\r\\n\\tblogPostTags,\\r\\n\\tfirebaseHost,\\r\\n};\\r\\nexport default exports;\\r\\nexport { responsiveMaxWidth, responsiveMinWidth, workProjects, hobbyProjects, blogPosts, blogPostTags, firebaseHost };\\r\\n\";","export default \"import defaultConfig from \\\"./defaultConfig.json\\\";\\r\\nimport snowConfig from \\\"./snowConfig.json\\\";\\r\\n\\r\\nconst exports = { defaultConfig, snowConfig };\\r\\nexport default exports;\\r\\nexport { defaultConfig, snowConfig };\\r\\n\";","export default \"import { CHANGE_IMAGE_POPUP_SOURCE } from \\\"./actionTypes\\\";\\r\\n\\r\\nconst changeImagePopupSource = (data) => ({\\r\\n\\ttype: CHANGE_IMAGE_POPUP_SOURCE,\\r\\n\\tdata,\\r\\n});\\r\\n\\r\\nconst exports = { changeImagePopupSource };\\r\\nexport default exports;\\r\\nexport { changeImagePopupSource };\\r\\n\";","export default \"import { combineReducers } from \\\"redux\\\";\\r\\nimport { imagePopupReducer } from \\\"./imagePopupReducer\\\";\\r\\n\\r\\nconst allReducers = combineReducers({ imagePopupReducer });\\r\\n\\r\\nexport default allReducers;\\r\\nexport { allReducers };\\r\\n\";","export default \"import CommentService from \\\"./CommentService\\\";\\r\\nimport LocalStorageService from \\\"./LocalStorageService\\\";\\r\\nimport NetworkService from \\\"./NetworkService\\\";\\r\\n\\r\\nconst exports = { CommentService, LocalStorageService, NetworkService };\\r\\nexport default exports;\\r\\nexport { CommentService, LocalStorageService, NetworkService };\\r\\n\";","export default \"import ScrollUtils from \\\"./ScrollUtils\\\";\\r\\nimport MarkdownTocUtils from \\\"./MarkdownTocUtils\\\";\\r\\n\\r\\nconst exports = { ScrollUtils, MarkdownTocUtils };\\r\\nexport default exports;\\r\\nexport { ScrollUtils, MarkdownTocUtils };\\r\\n\";","export default \"import \\\"react-app-polyfill/ie11\\\";\\r\\nimport \\\"react-app-polyfill/stable\\\";\\r\\n\\r\\nimport \\\"./wdyr\\\";\\r\\n\\r\\nimport React from \\\"react\\\";\\r\\nimport ReactDOM from \\\"react-dom\\\";\\r\\nimport { App } from \\\"./App\\\";\\r\\nimport { Provider } from \\\"react-redux\\\";\\r\\nimport { store } from \\\"./redux/store\\\";\\r\\nimport \\\"./index.css\\\";\\r\\nimport \\\"semantic-ui-css/semantic.min.css\\\";\\r\\n\\r\\nReactDOM.render(\\r\\n\\t<Provider store={store}>\\r\\n\\t\\t<App />\\r\\n\\t</Provider>,\\r\\n\\tdocument.getElementById(\\\"root\\\")\\r\\n);\\r\\n\\r\\nconsole.log(\\\"%c住手！\\\", \\\"color: red; font-size: 48px;\\\");\\r\\nconsole.log(\\\"%c\\\\x1b[7m這是專門提供給開發人員的瀏覽器功能。\\\", \\\"font-size: 20px;\\\");\\r\\nconsole.log(\\\"%c詳情請參考：https://en.wikipedia.org/wiki/Self-XSS\\\", \\\"font-size: 20px;\\\");\\r\\n\\r\\nif (module.hot) module.hot.accept();\\r\\n\";","export default \"import { useState, useEffect } from \\\"react\\\";\\r\\nimport { HashRouter } from \\\"react-router-dom\\\";\\r\\nimport { HashLink } from \\\"react-router-hash-link\\\";\\r\\nimport { useSelector, useDispatch } from \\\"react-redux\\\";\\r\\nimport { Eportfolio } from \\\"./components/Eportfolio\\\";\\r\\nimport Particles from \\\"react-tsparticles\\\";\\r\\nimport { FullScreenMenu } from \\\"./components/global/FullScreenMenu\\\";\\r\\nimport { defaultConfig, snowConfig } from \\\"./config/particles\\\";\\r\\nimport { ScrollToTopButton, NavMenuButtonShadow, ButtonsBackground } from \\\"./components/global/button/AppButtons\\\";\\r\\nimport { NavMenuButton } from \\\"./components/global/button/NavMenuButton\\\";\\r\\nimport { CookiesConsent } from \\\"./components/global/CookiesConsent\\\";\\r\\nimport { ScrollUtils } from \\\"./utils\\\";\\r\\nimport { changeImagePopupSource } from \\\"./redux/action\\\";\\r\\n\\r\\nconst particlesConfig = new Date().getMonth() === 11 ? snowConfig : defaultConfig;\\r\\n\\r\\nfunction App(props) {\\r\\n\\tconst { show: isImagePopupVisible } = useSelector((state) => state.imagePopupReducer);\\r\\n\\r\\n\\tconst [isScrollToTopButtonVisible, setScrollToTopButtonVisible] = useState(false);\\r\\n\\tconst [isNavMenuOpen, setNavMenuOpen] = useState(false);\\r\\n\\r\\n\\tconst dispatch = useDispatch();\\r\\n\\r\\n\\tuseEffect(() => {\\r\\n\\t\\tsetScrollToTopButtonVisible(ScrollUtils.isScrollToTopButtonVisible());\\r\\n\\r\\n\\t\\tconst escapeKeyListener = (e) => {\\r\\n\\t\\t\\tif (e.keyCode === 27) {\\r\\n\\t\\t\\t\\te.preventDefault();\\r\\n\\t\\t\\t\\te.stopPropagation();\\r\\n\\r\\n\\t\\t\\t\\tsetNavMenuOpen(false);\\r\\n\\r\\n\\t\\t\\t\\tif (isImagePopupVisible) {\\r\\n\\t\\t\\t\\t\\tdispatch(changeImagePopupSource({ show: false }));\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tconst scrollEventListener = (e) => setScrollToTopButtonVisible(ScrollUtils.isScrollToTopButtonVisible());\\r\\n\\r\\n\\t\\tdocument.addEventListener(\\\"keydown\\\", escapeKeyListener);\\r\\n\\t\\tdocument.addEventListener(\\\"scroll\\\", scrollEventListener);\\r\\n\\r\\n\\t\\treturn () => {\\r\\n\\t\\t\\tdocument.removeEventListener(\\\"keydown\\\", escapeKeyListener);\\r\\n\\t\\t\\tdocument.removeEventListener(\\\"scroll\\\", scrollEventListener);\\r\\n\\t\\t};\\r\\n\\t\\t// eslint-disable-next-line react-hooks/exhaustive-deps\\r\\n\\t}, [isImagePopupVisible]);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<>\\r\\n\\t\\t\\t<HashRouter>\\r\\n\\t\\t\\t\\t<HashLink to=\\\"#top\\\" smooth replace>\\r\\n\\t\\t\\t\\t\\t<ScrollToTopButton\\r\\n\\t\\t\\t\\t\\t\\ticon=\\\"chevron up\\\"\\r\\n\\t\\t\\t\\t\\t\\tcompact\\r\\n\\t\\t\\t\\t\\t\\tcircular\\r\\n\\t\\t\\t\\t\\t\\tsize=\\\"big\\\"\\r\\n\\t\\t\\t\\t\\t\\tcolor=\\\"yellow\\\"\\r\\n\\t\\t\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\t\\t\\topacity: !isScrollToTopButtonVisible || isNavMenuOpen || isImagePopupVisible ? 0 : 1,\\r\\n\\t\\t\\t\\t\\t\\t\\tpointerEvents:\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t!isScrollToTopButtonVisible || isNavMenuOpen || isImagePopupVisible ? \\\"none\\\" : false,\\r\\n\\t\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t\\t\\tnavMenuOpen={isNavMenuOpen}\\r\\n\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t</HashLink>\\r\\n\\r\\n\\t\\t\\t\\t<CookiesConsent />\\r\\n\\r\\n\\t\\t\\t\\t<NavMenuButton\\r\\n\\t\\t\\t\\t\\tnavMenuOpen={isNavMenuOpen}\\r\\n\\t\\t\\t\\t\\tshow={!isImagePopupVisible}\\r\\n\\t\\t\\t\\t\\taction={() => setNavMenuOpen(!isNavMenuOpen)}\\r\\n\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t<NavMenuButtonShadow style={{ opacity: isImagePopupVisible ? 0 : 1 }} navMenuOpen={isNavMenuOpen} />\\r\\n\\r\\n\\t\\t\\t\\t<ButtonsBackground\\r\\n\\t\\t\\t\\t\\tid=\\\"nav-menu-buttons-background\\\"\\r\\n\\t\\t\\t\\t\\tshow={!isImagePopupVisible}\\r\\n\\t\\t\\t\\t\\tnavMenuOpen={isNavMenuOpen}\\r\\n\\t\\t\\t\\t/>\\r\\n\\r\\n\\t\\t\\t\\t<FullScreenMenu navMenuOpen={isNavMenuOpen} menuItemCallback={() => setNavMenuOpen(false)} />\\r\\n\\r\\n\\t\\t\\t\\t<div\\r\\n\\t\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\t\\twidth: \\\"100%\\\",\\r\\n\\t\\t\\t\\t\\t\\topacity: isNavMenuOpen ? 0 : 1,\\r\\n\\t\\t\\t\\t\\t\\ttransition: \\\"250ms\\\",\\r\\n\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t<Eportfolio historyChangeCallback={() => setScrollToTopButtonVisible(false)} />\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</HashRouter>\\r\\n\\r\\n\\t\\t\\t<Particles className=\\\"particles-wrapper\\\" params={particlesConfig} />\\r\\n\\t\\t</>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nexport default App;\\r\\nexport { App };\\r\\n\";","export default \"import { memo, useEffect } from \\\"react\\\";\\r\\nimport { Routes, Route, useLocation, useNavigationType } from \\\"react-router-dom\\\";\\r\\nimport { useDispatch } from \\\"react-redux\\\";\\r\\n// import { useTransition animated } from \\\"react-spring\\\";\\r\\nimport { SiteHeader } from \\\"./header/SiteHeader\\\";\\r\\nimport { Home, WorkExp, HobbyProject, ProjectDetail, Personality, Blog, BlogPost, Contact } from \\\"./center/pages\\\";\\r\\nimport { SiteFooter } from \\\"./footer/SiteFooter\\\";\\r\\nimport { FullScreenGallery } from \\\"./reusable/FullScreenGallery\\\";\\r\\nimport { changeImagePopupSource } from \\\"../redux/action\\\";\\r\\n\\r\\nfunction Eportfolio(props) {\\r\\n\\tconst { historyChangeCallback } = props;\\r\\n\\r\\n\\t// const location = useLocation();\\r\\n\\t// const transitions = useTransition(location, (location) => location.pathname, {\\r\\n\\t// \\tfrom: { opacity: 0, position: \\\"absolute\\\" },\\r\\n\\t// \\tenter: { opacity: 1 },\\r\\n\\t// \\tleave: { opacity: 0 },\\r\\n\\t// });\\r\\n\\r\\n\\tconst location = useLocation();\\r\\n\\tconst navigationType = useNavigationType();\\r\\n\\tconst dispatch = useDispatch();\\r\\n\\r\\n\\tuseEffect(() => {\\r\\n\\t\\tdispatch(changeImagePopupSource({ show: false }));\\r\\n\\r\\n\\t\\tif (!location.hash && navigationType === \\\"PUSH\\\") {\\r\\n\\t\\t\\twindow.scrollTo({ top: 0 });\\r\\n\\t\\t}\\r\\n\\t\\tif (historyChangeCallback) {\\r\\n\\t\\t\\thistoryChangeCallback();\\r\\n\\t\\t}\\r\\n\\t\\t// eslint-disable-next-line react-hooks/exhaustive-deps\\r\\n\\t}, [location]);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<>\\r\\n\\t\\t\\t<SiteHeader />\\r\\n\\r\\n\\t\\t\\t{/* {transitions.map(({ item, props, key }) => (\\r\\n\\t\\t\\t\\t<animated.div key={key} style={{ ...props, width: \\\"100%\\\" }}> */}\\r\\n\\t\\t\\t<Routes caseSensitive /*location={item}*/>\\r\\n\\t\\t\\t\\t<Route path=\\\"/*\\\" element={<Home />} />\\r\\n\\t\\t\\t\\t<Route\\r\\n\\t\\t\\t\\t\\tpath=\\\"/workExp/:projectId\\\"\\r\\n\\t\\t\\t\\t\\telement={<ProjectDetail projectType=\\\"My Work Experiences\\\" backPath=\\\"/workExp\\\" />}\\r\\n\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t<Route path=\\\"/workExp\\\" element={<WorkExp />} />\\r\\n\\t\\t\\t\\t<Route\\r\\n\\t\\t\\t\\t\\tpath=\\\"/hobbyProject/:projectId\\\"\\r\\n\\t\\t\\t\\t\\telement={<ProjectDetail projectType=\\\"My Hobby Projects\\\" backPath=\\\"/hobbyProject\\\" />}\\r\\n\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t<Route path=\\\"/hobbyProject\\\" element={<HobbyProject />} />\\r\\n\\t\\t\\t\\t<Route path=\\\"/personality\\\" element={<Personality />} />\\r\\n\\t\\t\\t\\t<Route path=\\\"/blog/:postId\\\" element={<BlogPost />} />\\r\\n\\t\\t\\t\\t<Route path=\\\"/blog\\\" element={<Blog />} />\\r\\n\\t\\t\\t\\t<Route path=\\\"/contact\\\" element={<Contact />} />\\r\\n\\t\\t\\t</Routes>\\r\\n\\t\\t\\t<SiteFooter />\\r\\n\\t\\t\\t<FullScreenGallery />\\r\\n\\t\\t\\t{/* </animated.div>\\r\\n\\t\\t\\t))} */}\\r\\n\\t\\t</>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(Eportfolio, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as Eportfolio };\\r\\n\";","export default \"import styled from \\\"styled-components\\\";\\r\\n\\r\\nconst Body = styled.div`\\r\\n\\twidth: 90%;\\r\\n\\tdisplay: block;\\r\\n\\tmargin: 0 auto;\\r\\n\\tpadding: 1em 0em 0em 0em;\\r\\n`;\\r\\n\\r\\nconst NoSelect = styled.div`\\r\\n\\t-webkit-touch-callout: none !important;\\r\\n\\t-webkit-user-select: none !important;\\r\\n\\t-khtml-user-select: none !important;\\r\\n\\t-moz-user-select: none !important;\\r\\n\\t-ms-user-select: none !important;\\r\\n\\tuser-select: none !important;\\r\\n\\r\\n\\t-webkit-user-drag: none !important;\\r\\n\\t-khtml-user-drag: none !important;\\r\\n\\t-moz-user-drag: none !important;\\r\\n\\t-ms-user-drag: none !important;\\r\\n\\tuser-drag: none !important;\\r\\n`;\\r\\n\\r\\nconst GradientText = styled.div`\\r\\n\\tcolor: purple;\\r\\n\\tfont-size: 1.25em;\\r\\n\\tpadding-bottom: 1em;\\r\\n\\tcursor: default;\\r\\n\\tline-height: 1.5;\\r\\n\\r\\n\\t@supports (display: grid) {\\r\\n\\t\\tbackground: linear-gradient(to bottom, #e91e63, #9c27b0);\\r\\n\\t\\t-webkit-background-clip: text;\\r\\n\\t\\t-webkit-text-fill-color: transparent;\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nconst NormalText = styled.div`\\r\\n\\tcolor: purple;\\r\\n\\tfont-size: 1.25em;\\r\\n\\tpadding-bottom: 1em;\\r\\n\\tcursor: default;\\r\\n\\tline-height: 1.5;\\r\\n`;\\r\\n\\r\\nconst exports = { Body, NoSelect, GradientText, NormalText };\\r\\nexport default exports;\\r\\nexport { Body, NoSelect, GradientText, NormalText };\\r\\n\";","export default \"import { memo, useState } from \\\"react\\\";\\r\\nimport { Link } from \\\"react-router-dom\\\";\\r\\nimport { Grid, Label, Segment, Header, Icon, Responsive } from \\\"semantic-ui-react\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport { Gallery } from \\\"../reusable/Gallery\\\";\\r\\nimport { GradientButton } from \\\"../reusable/GradientButton\\\";\\r\\nimport { NoSelect, GradientText } from \\\"../Styles\\\";\\r\\n// import { ImageSlideshow } from \\\"../reusable/slideshow/ImageSlideshow\\\";\\r\\n// import { MobileImageSlideshow } from \\\"../reusable/slideshow/MobileImageSlideshow\\\";\\r\\nimport moment from \\\"moment\\\";\\r\\nimport { responsiveMaxWidth, responsiveMinWidth } from \\\"../../config\\\";\\r\\nimport isEmpty from \\\"lodash/isEmpty\\\";\\r\\n\\r\\nconst HeaderLinkWrapper = styled(({ hovered, ...props }) => <span {...props} />)`\\r\\n\\ta {\\r\\n\\t\\ttransition: 250ms !important;\\r\\n\\t\\tcolor: ${({ hovered }) => (hovered ? \\\"#e91e63\\\" : \\\"black\\\")} !important;\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction Project(props) {\\r\\n\\tconst { detail, inverted } = props;\\r\\n\\tconst { path, projectName, projectNature, year, images, descriptionOverview, description } = detail;\\r\\n\\r\\n\\tconst leftToRight = inverted !== true;\\r\\n\\tconst colors = [\\\"#b71c1c\\\", \\\"#0d47a1\\\", \\\"#1b5e20\\\", \\\"#e65100\\\", \\\"#3e2723\\\"];\\r\\n\\tconst yearColor = Number.isInteger(year) ? colors[(moment().year() % year) % colors.length] : \\\"#212121\\\";\\r\\n\\r\\n\\tconst [isHovered, setHovered] = useState(false);\\r\\n\\r\\n\\tconst constructImage = () => (\\r\\n\\t\\t<Grid.Column width={8} textAlign=\\\"center\\\" verticalAlign={isEmpty(images) ? \\\"middle\\\" : null}>\\r\\n\\t\\t\\t{(images || []).length > 0 ? (\\r\\n\\t\\t\\t\\t<div style={{ top: \\\"20px\\\", position: \\\"sticky\\\" }}>\\r\\n\\t\\t\\t\\t\\t<Segment\\r\\n\\t\\t\\t\\t\\t\\traised\\r\\n\\t\\t\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\t\\t\\tbackgroundColor: \\\"transparent\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\tborderRadius: \\\"1.5em\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\tpadding: 0,\\r\\n\\t\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t<Gallery images={images} width=\\\"100%\\\" height=\\\"400px\\\" />\\r\\n\\t\\t\\t\\t\\t</Segment>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t) : (\\r\\n\\t\\t\\t\\t<Responsive as={NoSelect} minWidth={responsiveMinWidth}>\\r\\n\\t\\t\\t\\t\\t<Label size=\\\"large\\\">\\r\\n\\t\\t\\t\\t\\t\\t<Icon name=\\\"dont\\\" />\\r\\n\\t\\t\\t\\t\\t\\tNo screenshot available\\r\\n\\t\\t\\t\\t\\t</Label>\\r\\n\\t\\t\\t\\t</Responsive>\\r\\n\\t\\t\\t)}\\r\\n\\t\\t</Grid.Column>\\r\\n\\t);\\r\\n\\r\\n\\tconst constructDescription = () => (\\r\\n\\t\\t<Grid.Column width={8}>\\r\\n\\t\\t\\t<div style={{ top: \\\"20px\\\", position: \\\"sticky\\\" }}>\\r\\n\\t\\t\\t\\t<NoSelect>\\r\\n\\t\\t\\t\\t\\t<Responsive\\r\\n\\t\\t\\t\\t\\t\\tas={Label}\\r\\n\\t\\t\\t\\t\\t\\tminWidth={responsiveMinWidth}\\r\\n\\t\\t\\t\\t\\t\\ttag\\r\\n\\t\\t\\t\\t\\t\\tsize=\\\"large\\\"\\r\\n\\t\\t\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\t\\t\\tcolor: \\\"white\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\tbackgroundColor: yearColor,\\r\\n\\t\\t\\t\\t\\t\\t\\tfloat: !leftToRight && \\\"right\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\ttransform: !leftToRight && \\\"scaleX(-1)\\\",\\r\\n\\t\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t<div style={{ transform: !leftToRight && \\\"scaleX(-1)\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t{Number.isInteger(year) ? \\\"Year \\\" + year : year || \\\"Others\\\"}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</Responsive>\\r\\n\\t\\t\\t\\t\\t<Responsive\\r\\n\\t\\t\\t\\t\\t\\tas={Label}\\r\\n\\t\\t\\t\\t\\t\\tmaxWidth={responsiveMaxWidth}\\r\\n\\t\\t\\t\\t\\t\\ttag\\r\\n\\t\\t\\t\\t\\t\\tsize=\\\"large\\\"\\r\\n\\t\\t\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\t\\t\\tcolor: \\\"white\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\tbackgroundColor: yearColor,\\r\\n\\t\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t{Number.isInteger(year) ? \\\"Year \\\" + year : year || \\\"Others\\\"}\\r\\n\\t\\t\\t\\t\\t</Responsive>\\r\\n\\t\\t\\t\\t</NoSelect>\\r\\n\\t\\t\\t\\t<Header as=\\\"h2\\\" style={{ cursor: \\\"default\\\" }}>\\r\\n\\t\\t\\t\\t\\t<HeaderLinkWrapper hovered={isHovered}>\\r\\n\\t\\t\\t\\t\\t\\t<Link\\r\\n\\t\\t\\t\\t\\t\\t\\tclassName=\\\"allow-select\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tto={path}\\r\\n\\t\\t\\t\\t\\t\\t\\tstate={{ fromAllProjects: true }}\\r\\n\\t\\t\\t\\t\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\t\\t\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\t\\t\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\t\\t\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\t\\t\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\t\\t\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t{projectName || \\\"\\\"}\\r\\n\\t\\t\\t\\t\\t\\t</Link>\\r\\n\\t\\t\\t\\t\\t</HeaderLinkWrapper>\\r\\n\\t\\t\\t\\t\\t<Header.Subheader>{projectNature || \\\"\\\"}</Header.Subheader>\\r\\n\\t\\t\\t\\t</Header>\\r\\n\\t\\t\\t\\t<GradientText>{description || descriptionOverview || \\\"\\\"}</GradientText>\\r\\n\\r\\n\\t\\t\\t\\t<div style={{ display: \\\"flex\\\", justifyContent: \\\"flex-end\\\", alignItems: \\\"center\\\", height: \\\"3em\\\" }}>\\r\\n\\t\\t\\t\\t\\t<Link to={path} state={{ fromAllProjects: true }}>\\r\\n\\t\\t\\t\\t\\t\\t<Responsive as={GradientButton} minWidth={responsiveMinWidth} capitalize>\\r\\n\\t\\t\\t\\t\\t\\t\\tLearn More\\r\\n\\t\\t\\t\\t\\t\\t\\t<Icon name=\\\"chevron right\\\" size=\\\"large\\\" style={{ margin: \\\"0 -0.25em 0 0.25em\\\" }} />\\r\\n\\t\\t\\t\\t\\t\\t</Responsive>\\r\\n\\t\\t\\t\\t\\t\\t<Responsive as={GradientButton} maxWidth={responsiveMaxWidth} capitalize>\\r\\n\\t\\t\\t\\t\\t\\t\\tDetails\\r\\n\\t\\t\\t\\t\\t\\t\\t<Icon name=\\\"chevron right\\\" size=\\\"large\\\" style={{ margin: \\\"0 -0.25em 0 0.25em\\\" }} />\\r\\n\\t\\t\\t\\t\\t\\t</Responsive>\\r\\n\\t\\t\\t\\t\\t</Link>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</Grid.Column>\\r\\n\\t);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<Grid stackable reversed={leftToRight && \\\"mobile\\\"} relaxed>\\r\\n\\t\\t\\t{leftToRight ? (\\r\\n\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t{constructImage()}\\r\\n\\t\\t\\t\\t\\t{constructDescription()}\\r\\n\\t\\t\\t\\t</>\\r\\n\\t\\t\\t) : (\\r\\n\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t{constructDescription()}\\r\\n\\t\\t\\t\\t\\t{constructImage()}\\r\\n\\t\\t\\t\\t</>\\r\\n\\t\\t\\t)}\\r\\n\\t\\t</Grid>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(Project, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as Project };\\r\\n\";","export default \"import { memo, useState } from \\\"react\\\";\\r\\nimport { Helmet } from \\\"react-helmet\\\";\\r\\nimport { Header, Button, Form, Message, Icon, Modal, Transition } from \\\"semantic-ui-react\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport { Body, NoSelect } from \\\"../../Styles\\\";\\r\\nimport { GradientButton } from \\\"../../reusable/GradientButton\\\";\\r\\nimport { CommentService, NetworkService } from \\\"../../../service\\\";\\r\\nimport get from \\\"lodash/get\\\";\\r\\nimport mapValues from \\\"lodash/mapValues\\\";\\r\\n\\r\\nconst errorMessageMap = mapValues(\\r\\n\\t{\\r\\n\\t\\t1: {\\r\\n\\t\\t\\theader: \\\"Missing email/phone\\\",\\r\\n\\t\\t\\tcontent: \\\"You must enter either your email or phone number.\\\",\\r\\n\\t\\t},\\r\\n\\t\\t2: {\\r\\n\\t\\t\\theader: \\\"Missing message\\\",\\r\\n\\t\\t\\tcontent: \\\"You must enter a message.\\\",\\r\\n\\t\\t},\\r\\n\\t\\t3: {\\r\\n\\t\\t\\theader: \\\"Invalid email address\\\",\\r\\n\\t\\t\\tcontent: \\\"The format of the email address you enter is invalid.\\\",\\r\\n\\t\\t},\\r\\n\\t\\t4: {\\r\\n\\t\\t\\theader: \\\"Invalid phone number\\\",\\r\\n\\t\\t\\tcontent: \\\"The format of the phone number you enter is invalid.\\\",\\r\\n\\t\\t},\\r\\n\\t},\\r\\n\\t(v) => ({\\r\\n\\t\\t...v,\\r\\n\\t\\tcontent: v.content + \\\" Please double-check your input.\\\",\\r\\n\\t\\theaderIcon: \\\"ban\\\",\\r\\n\\t\\tbuttonIcon: \\\"write\\\",\\r\\n\\t\\tbutton: \\\"Try again\\\",\\r\\n\\t})\\r\\n);\\r\\n\\r\\nconst ContactFormWrapper = styled.div`\\r\\n\\tinput,\\r\\n\\ttextarea {\\r\\n\\t\\tbackground-color: rgba(255, 255, 255, 0.35) !important;\\r\\n\\t\\tcolor: #8e24aa !important;\\r\\n\\t}\\r\\n\\r\\n\\tform::before {\\r\\n\\t\\tbackground-color: transparent !important;\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction Contact(props) {\\r\\n\\tconst [firstName, setFirstName] = useState(\\\"\\\");\\r\\n\\tconst [lastName, setLastName] = useState(\\\"\\\");\\r\\n\\tconst [phone, setPhone] = useState(\\\"\\\");\\r\\n\\tconst [email, setEmail] = useState(\\\"\\\");\\r\\n\\tconst [message, setMessage] = useState(\\\"\\\");\\r\\n\\tconst [isSendButtonClicked, setSendButtonClicked] = useState(false);\\r\\n\\tconst [isSent, setSent] = useState(0); // 0 = not sent, 1 = sending, 2 = sent\\r\\n\\tconst [isErrorPopupOpen, setErrorPopupOpen] = useState(false);\\r\\n\\r\\n\\tconst errorMissingEmailOrPhone =\\r\\n\\t\\t!!email || !!phone\\r\\n\\t\\t\\t? false\\r\\n\\t\\t\\t: isSendButtonClicked\\r\\n\\t\\t\\t? {\\r\\n\\t\\t\\t\\t\\tcontent: \\\"You must enter your email and/or phone no.\\\",\\r\\n\\t\\t\\t\\t\\tpointing: \\\"above\\\",\\r\\n\\t\\t\\t  }\\r\\n\\t\\t\\t: true;\\r\\n\\tconst errorMissingMessage = !!message\\r\\n\\t\\t? false\\r\\n\\t\\t: isSendButtonClicked\\r\\n\\t\\t? {\\r\\n\\t\\t\\t\\tcontent: \\\"You must leave a message.\\\",\\r\\n\\t\\t\\t\\tpointing: \\\"above\\\",\\r\\n\\t\\t  }\\r\\n\\t\\t: true;\\r\\n\\tconst errorInvalidEmail =\\r\\n\\t\\t!!email && !new RegExp(\\\"^\\\\\\\\w+@\\\\\\\\w+\\\\\\\\.\\\\\\\\w+$\\\").test(email)\\r\\n\\t\\t\\t? {\\r\\n\\t\\t\\t\\t\\tcontent: \\\"You must enter a valid email.\\\",\\r\\n\\t\\t\\t\\t\\tpointing: \\\"above\\\",\\r\\n\\t\\t\\t  }\\r\\n\\t\\t\\t: false;\\r\\n\\tconst errorInvalidPhone =\\r\\n\\t\\t!!phone && !new RegExp(\\\"^(\\\\\\\\+?852)?\\\\\\\\d{8}$\\\").test(phone.replace(/\\\\s/g, \\\"\\\"))\\r\\n\\t\\t\\t? {\\r\\n\\t\\t\\t\\t\\tcontent: \\\"You must enter a valid HK phone no.\\\",\\r\\n\\t\\t\\t\\t\\tpointing: \\\"above\\\",\\r\\n\\t\\t\\t  }\\r\\n\\t\\t\\t: false;\\r\\n\\tconst errorMessageType = errorMissingEmailOrPhone\\r\\n\\t\\t? 1\\r\\n\\t\\t: errorMissingMessage\\r\\n\\t\\t? 2\\r\\n\\t\\t: errorInvalidEmail\\r\\n\\t\\t? 3\\r\\n\\t\\t: errorInvalidPhone\\r\\n\\t\\t? 4\\r\\n\\t\\t: 0;\\r\\n\\tconst isValidInput = errorMessageType === 0;\\r\\n\\r\\n\\tconst sendToFirebase = () => {\\r\\n\\t\\tNetworkService.getClientIp()\\r\\n\\t\\t\\t.then((response) => {\\r\\n\\t\\t\\t\\tif (!response || !response.data) {\\r\\n\\t\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tconst clientIp = (response.data.split(\\\"\\\\n\\\").filter((e) => e.startsWith(\\\"ip=\\\"))[0] || \\\"\\\").replace(\\r\\n\\t\\t\\t\\t\\t/^ip=/,\\r\\n\\t\\t\\t\\t\\t\\\"\\\"\\r\\n\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\tCommentService.postComment({\\r\\n\\t\\t\\t\\t\\tfirstName,\\r\\n\\t\\t\\t\\t\\tlastName,\\r\\n\\t\\t\\t\\t\\tphone,\\r\\n\\t\\t\\t\\t\\temail,\\r\\n\\t\\t\\t\\t\\tmessage,\\r\\n\\t\\t\\t\\t\\tclientIp,\\r\\n\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t.then((response) => {\\r\\n\\t\\t\\t\\t\\t\\tsetSent(2);\\r\\n\\t\\t\\t\\t\\t\\tconsole.log(\\\"Successfully sent.\\\");\\r\\n\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t.catch((error) => {\\r\\n\\t\\t\\t\\t\\t\\tsetSent(0);\\r\\n\\t\\t\\t\\t\\t\\talert(\\\"Failed to send (2).\\\");\\r\\n\\t\\t\\t\\t\\t\\tconsole.log(error);\\r\\n\\t\\t\\t\\t\\t});\\r\\n\\t\\t\\t})\\r\\n\\t\\t\\t.catch((error) => {\\r\\n\\t\\t\\t\\tsetSent(0);\\r\\n\\t\\t\\t\\talert(\\\"Failed to send (1).\\\");\\r\\n\\t\\t\\t\\tconsole.log(error);\\r\\n\\t\\t\\t});\\r\\n\\t};\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<Body>\\r\\n\\t\\t\\t<Helmet>\\r\\n\\t\\t\\t\\t<title>Contact | {process.env.REACT_APP_TITLE}</title>\\r\\n\\t\\t\\t</Helmet>\\r\\n\\r\\n\\t\\t\\t<Header size=\\\"huge\\\" style={{ cursor: \\\"default\\\" }}>\\r\\n\\t\\t\\t\\tContact\\r\\n\\t\\t\\t</Header>\\r\\n\\r\\n\\t\\t\\t<Transition visible={isErrorPopupOpen} animation=\\\"scale\\\" duration={400}>\\r\\n\\t\\t\\t\\t<Modal open={isErrorPopupOpen}>\\r\\n\\t\\t\\t\\t\\t<Header\\r\\n\\t\\t\\t\\t\\t\\ticon={get(errorMessageMap[errorMessageType], \\\"headerIcon\\\", \\\"\\\")}\\r\\n\\t\\t\\t\\t\\t\\tcontent={<NoSelect>{get(errorMessageMap[errorMessageType], \\\"header\\\", \\\"\\\")}</NoSelect>}\\r\\n\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t<Modal.Content>\\r\\n\\t\\t\\t\\t\\t\\t<NoSelect>{get(errorMessageMap[errorMessageType], \\\"content\\\", \\\"\\\")}</NoSelect>\\r\\n\\t\\t\\t\\t\\t</Modal.Content>\\r\\n\\t\\t\\t\\t\\t<Modal.Actions>\\r\\n\\t\\t\\t\\t\\t\\t<Button color=\\\"red\\\" onClick={() => setErrorPopupOpen(false)}>\\r\\n\\t\\t\\t\\t\\t\\t\\t<Icon name={get(errorMessageMap[errorMessageType], \\\"buttonIcon\\\", \\\"\\\")} />{\\\" \\\"}\\r\\n\\t\\t\\t\\t\\t\\t\\t{get(errorMessageMap[errorMessageType], \\\"button\\\", \\\"\\\")}\\r\\n\\t\\t\\t\\t\\t\\t</Button>\\r\\n\\t\\t\\t\\t\\t</Modal.Actions>\\r\\n\\t\\t\\t\\t</Modal>\\r\\n\\t\\t\\t</Transition>\\r\\n\\r\\n\\t\\t\\t{isSent === 2 ? (\\r\\n\\t\\t\\t\\t<NoSelect>\\r\\n\\t\\t\\t\\t\\t<Message\\r\\n\\t\\t\\t\\t\\t\\tinfo\\r\\n\\t\\t\\t\\t\\t\\tfloating\\r\\n\\t\\t\\t\\t\\t\\tsize=\\\"huge\\\"\\r\\n\\t\\t\\t\\t\\t\\ticon\\r\\n\\t\\t\\t\\t\\t\\tstyle={{ backgroundColor: \\\"transparent\\\", boxShadow: \\\"none\\\" }}\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t<span style={{ fontSize: \\\"3em\\\" }}>👌</span>\\r\\n\\t\\t\\t\\t\\t\\t<Message.Content>\\r\\n\\t\\t\\t\\t\\t\\t\\t<Message.Header>Successfully Sent</Message.Header>\\r\\n\\t\\t\\t\\t\\t\\t\\tAppreciate your time, I'll get back to you soon, cheers!\\r\\n\\t\\t\\t\\t\\t\\t</Message.Content>\\r\\n\\t\\t\\t\\t\\t</Message>\\r\\n\\t\\t\\t\\t</NoSelect>\\r\\n\\t\\t\\t) : (\\r\\n\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t<ContactFormWrapper>\\r\\n\\t\\t\\t\\t\\t\\t<Form size=\\\"big\\\" loading={isSent > 0}>\\r\\n\\t\\t\\t\\t\\t\\t\\t<Form.Group widths=\\\"equal\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Form.Input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfluid\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel=\\\"First name\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"First name (optional)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue={firstName}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdisabled={isSent > 0}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonChange={(e) => setFirstName(e.target.value)}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Form.Input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfluid\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel=\\\"Last name\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Last name (optional)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue={lastName}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdisabled={isSent > 0}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonChange={(e) => setLastName(e.target.value)}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t</Form.Group>\\r\\n\\t\\t\\t\\t\\t\\t\\t<Form.Group widths=\\\"equal\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Form.Input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfluid\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel=\\\"Email\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"example@gmail.com\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errorMissingEmailOrPhone || errorInvalidEmail}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue={email}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdisabled={isSent > 0}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonChange={(e) => setEmail(e.target.value)}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Form.Input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfluid\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel=\\\"Phone Number\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Mine: 6330 1333\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\terror={errorMissingEmailOrPhone || errorInvalidPhone}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue={phone}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdisabled={isSent > 0}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonChange={(e) => setPhone(e.target.value)}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t</Form.Group>\\r\\n\\t\\t\\t\\t\\t\\t\\t<Form.TextArea\\r\\n\\t\\t\\t\\t\\t\\t\\t\\trows={8}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tlabel=\\\"Message\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Leave me a message :)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\t\\t\\t\\t\\terror={errorMissingMessage}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tvalue={message}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdisabled={isSent > 0}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tonChange={(e) => setMessage(e.target.value)}\\r\\n\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t</Form>\\r\\n\\t\\t\\t\\t\\t</ContactFormWrapper>\\r\\n\\t\\t\\t\\t\\t<div style={{ display: \\\"flex\\\", justifyContent: \\\"center\\\", alignItems: \\\"center\\\", marginTop: \\\"2em\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t<GradientButton\\r\\n\\t\\t\\t\\t\\t\\t\\tcapitalize\\r\\n\\t\\t\\t\\t\\t\\t\\tstyle={{ ...(isSent > 0 && { opacity: 0.5, pointerEvents: \\\"none\\\" }) }}\\r\\n\\t\\t\\t\\t\\t\\t\\taction={\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tisSent > 0\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t? null\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t: () => {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetSendButtonClicked(true);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (!isValidInput) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetErrorPopupOpen(true);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetSent(1);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsendToFirebase();\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  }\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\tSend\\r\\n\\t\\t\\t\\t\\t\\t</GradientButton>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</>\\r\\n\\t\\t\\t)}\\r\\n\\t\\t</Body>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(Contact, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as Contact };\\r\\n\";","export default \"import { memo, Fragment } from \\\"react\\\";\\r\\nimport { Helmet } from \\\"react-helmet\\\";\\r\\nimport { Header, Divider } from \\\"semantic-ui-react\\\";\\r\\nimport { Body } from \\\"../../Styles\\\";\\r\\nimport { Project } from \\\"../Project\\\";\\r\\nimport { hobbyProjects } from \\\"../../../config\\\";\\r\\n\\r\\nfunction HobbyProject(props) {\\r\\n\\treturn (\\r\\n\\t\\t<Body>\\r\\n\\t\\t\\t<Helmet>\\r\\n\\t\\t\\t\\t<title>My Hobby Projects | {process.env.REACT_APP_TITLE}</title>\\r\\n\\t\\t\\t</Helmet>\\r\\n\\r\\n\\t\\t\\t<Header size=\\\"huge\\\" style={{ cursor: \\\"default\\\" }}>\\r\\n\\t\\t\\t\\tMy Hobby Projects\\r\\n\\t\\t\\t</Header>\\r\\n\\t\\t\\t{(hobbyProjects || [])\\r\\n\\t\\t\\t\\t.map(({ projectId, ...rest }) => ({ ...rest, path: `/hobbyProject/${projectId}` }))\\r\\n\\t\\t\\t\\t.map((project, i, projects) => (\\r\\n\\t\\t\\t\\t\\t<Fragment key={i}>\\r\\n\\t\\t\\t\\t\\t\\t<Divider section />\\r\\n\\t\\t\\t\\t\\t\\t<Project detail={project} inverted={(projects.length - i) % 2 === 1} />\\r\\n\\t\\t\\t\\t\\t</Fragment>\\r\\n\\t\\t\\t\\t))}\\r\\n\\t\\t</Body>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(HobbyProject, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as HobbyProject };\\r\\n\";","export default \"import { memo } from \\\"react\\\";\\r\\nimport { Message } from \\\"semantic-ui-react\\\";\\r\\nimport { NoSelect } from \\\"../../Styles\\\";\\r\\n\\r\\nfunction PageNotFound(props) {\\r\\n\\treturn (\\r\\n\\t\\t<NoSelect>\\r\\n\\t\\t\\t<Message\\r\\n\\t\\t\\t\\terror\\r\\n\\t\\t\\t\\tfloating\\r\\n\\t\\t\\t\\tsize=\\\"huge\\\"\\r\\n\\t\\t\\t\\ticon=\\\"find\\\"\\r\\n\\t\\t\\t\\theader=\\\"404 Not found\\\"\\r\\n\\t\\t\\t\\tcontent=\\\"Sorry, we are not able to locate the webpage you are looking for.\\\"\\r\\n\\t\\t\\t\\tstyle={{ backgroundColor: \\\"transparent\\\", boxShadow: \\\"none\\\" }}\\r\\n\\t\\t\\t/>\\r\\n\\t\\t</NoSelect>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(PageNotFound, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as PageNotFound };\\r\\n\";","export default \"import { memo, useState } from \\\"react\\\";\\r\\nimport { useParams, useLocation, useNavigate } from \\\"react-router-dom\\\";\\r\\nimport { useDispatch } from \\\"react-redux\\\";\\r\\nimport { Helmet } from \\\"react-helmet\\\";\\r\\nimport Lazyload from \\\"react-lazyload\\\";\\r\\nimport { Segment, Header, Label, Button, Divider, Icon, Responsive } from \\\"semantic-ui-react\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport { PageNotFound } from \\\"./PageNotFound\\\";\\r\\nimport { Body, NoSelect, GradientText } from \\\"../../Styles\\\";\\r\\nimport moment from \\\"moment\\\";\\r\\nimport { responsiveMaxWidth, responsiveMinWidth, workProjects, hobbyProjects } from \\\"../../../config\\\";\\r\\nimport { changeImagePopupSource } from \\\"../../../redux/action\\\";\\r\\nimport find from \\\"lodash/find\\\";\\r\\n\\r\\nconst CustomSegment = styled(Segment)`\\r\\n\\tbackground-color: rgba(255, 255, 255, 0.25) !important;\\r\\n\\r\\n\\timg {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\tmax-width: 50%;\\r\\n\\t\\tmax-height: 400px;\\r\\n\\t\\tdisplay: block;\\r\\n\\t\\tmargin: 20px auto;\\r\\n\\t\\tborder-radius: 10px;\\r\\n\\t\\tbox-shadow: 0 0 15px rgba(0, 0, 0, 0.5);\\r\\n\\t\\tbackground-size: 200% 200%;\\r\\n\\t\\ttransition: transform 400ms cubic-bezier(0, 1.2, 0.2, 1.5);\\r\\n\\t\\tcursor: zoom-in;\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction ProjectDetail(props) {\\r\\n\\tconst { projectType, backPath } = props;\\r\\n\\tconst { projectId } = useParams();\\r\\n\\tconst project = find([...workProjects, ...hobbyProjects], { projectId });\\r\\n\\tconst {\\r\\n\\t\\tprojectName,\\r\\n\\t\\tprojectNature,\\r\\n\\t\\tyear,\\r\\n\\t\\timages,\\r\\n\\t\\tposition,\\r\\n\\t\\tcontractPeriod,\\r\\n\\t\\tworkLocation,\\r\\n\\t\\tteamSize,\\r\\n\\t\\tdescriptionOverview,\\r\\n\\t\\tdescriptionContinued,\\r\\n\\t\\tdescription,\\r\\n\\t} = project || {};\\r\\n\\r\\n\\tconst colors = [\\\"#b71c1c\\\", \\\"#0d47a1\\\", \\\"#1b5e20\\\", \\\"#e65100\\\", \\\"#3e2723\\\"];\\r\\n\\tconst yearColor = Number.isInteger(year) ? colors[(moment().year() % year) % colors.length] : \\\"#212121\\\";\\r\\n\\r\\n\\tconst [hoverImageIndex, setHoverImageIndex] = useState(null);\\r\\n\\tconst [queryString, setQueryString] = useState(\\\"\\\");\\r\\n\\r\\n\\tconst location = useLocation();\\r\\n\\tconst dispatch = useDispatch();\\r\\n\\r\\n\\tconst navigate = useNavigate();\\r\\n\\r\\n\\tconst backToAllProjectsButton = (\\r\\n\\t\\t<span\\r\\n\\t\\t\\tonClick={() => {\\r\\n\\t\\t\\t\\tif (window.history?.length >= 2 && location?.state?.fromAllProjects) {\\r\\n\\t\\t\\t\\t\\tnavigate(-1);\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tnavigate(backPath);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}}\\r\\n\\t\\t>\\r\\n\\t\\t\\t<Responsive\\r\\n\\t\\t\\t\\tas={Button}\\r\\n\\t\\t\\t\\tminWidth={responsiveMinWidth}\\r\\n\\t\\t\\t\\tbasic\\r\\n\\t\\t\\t\\tcompact\\r\\n\\t\\t\\t\\tcolor=\\\"pink\\\"\\r\\n\\t\\t\\t\\tsize=\\\"medium\\\"\\r\\n\\t\\t\\t\\tcontent={\\r\\n\\t\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t\\tBack to <b>{projectType || \\\"\\\"}</b>\\r\\n\\t\\t\\t\\t\\t</>\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\ticon=\\\"arrow left\\\"\\r\\n\\t\\t\\t\\tlabelPosition=\\\"left\\\"\\r\\n\\t\\t\\t/>\\r\\n\\t\\t\\t<Responsive maxWidth={responsiveMaxWidth}>\\r\\n\\t\\t\\t\\t<Button basic compact color=\\\"pink\\\" size=\\\"medium\\\" icon=\\\"arrow left\\\" content=\\\"Back\\\" />\\r\\n\\t\\t\\t</Responsive>\\r\\n\\t\\t</span>\\r\\n\\t);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<Body>\\r\\n\\t\\t\\t<Helmet>\\r\\n\\t\\t\\t\\t<title>\\r\\n\\t\\t\\t\\t\\t{project ? projectName : \\\"404 Not Found\\\"} | {projectType || \\\"Project\\\"} |{\\\" \\\"}\\r\\n\\t\\t\\t\\t\\t{process.env.REACT_APP_TITLE}\\r\\n\\t\\t\\t\\t</title>\\r\\n\\t\\t\\t</Helmet>\\r\\n\\r\\n\\t\\t\\t{project ? (\\r\\n\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t{backToAllProjectsButton}\\r\\n\\r\\n\\t\\t\\t\\t\\t<Header size=\\\"huge\\\" style={{ cursor: \\\"default\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t{projectName || \\\"\\\"}\\r\\n\\t\\t\\t\\t\\t</Header>\\r\\n\\t\\t\\t\\t\\t<Divider section />\\r\\n\\r\\n\\t\\t\\t\\t\\t<CustomSegment style={{ padding: \\\"3em 5vw\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t<NoSelect>\\r\\n\\t\\t\\t\\t\\t\\t\\t<Label.Group>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Label\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttag\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsize=\\\"large\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcolor: \\\"white\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbackgroundColor: yearColor,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{Number.isInteger(year) ? \\\"Year \\\" + year : year || \\\"Others\\\"}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</Label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Label tag size=\\\"large\\\" color=\\\"teal\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{projectNature || \\\"\\\"}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</Label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</Label.Group>\\r\\n\\t\\t\\t\\t\\t\\t</NoSelect>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<GradientText style={{ paddingTop: \\\"2em\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t{position && (\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tPosition: {position}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</>\\r\\n\\t\\t\\t\\t\\t\\t\\t)}\\r\\n\\t\\t\\t\\t\\t\\t\\t{contractPeriod && (\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tContract period: {contractPeriod}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</>\\r\\n\\t\\t\\t\\t\\t\\t\\t)}\\r\\n\\t\\t\\t\\t\\t\\t\\t{workLocation && (\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tWork location: {workLocation}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</>\\r\\n\\t\\t\\t\\t\\t\\t\\t)}\\r\\n\\t\\t\\t\\t\\t\\t\\t{teamSize && (\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tTeam size: {teamSize}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</>\\r\\n\\t\\t\\t\\t\\t\\t\\t)}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t{(position || contractPeriod || workLocation || teamSize) && <br />}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t{description || (\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{descriptionOverview}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{descriptionContinued}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t) ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"\\\"}\\r\\n\\t\\t\\t\\t\\t\\t</GradientText>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t{images && images.length > 0 && (\\r\\n\\t\\t\\t\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Divider horizontal section style={{ paddingBottom: \\\"2em\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Header as=\\\"h5\\\" style={{ opacity: 0.5 }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Icon name=\\\"photo\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tScreenshots / Photos\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Header>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</Divider>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{images.map((image, i) => (\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Lazyload key={i} once height=\\\"400px\\\" offset={400}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<picture>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<source\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"image/webp\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsrcSet={encodeURIComponent(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\timage.replace(/\\\\.(jpg|png|gif)/, \\\"-crop.webp\\\")\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsrc={`${image}${queryString}`}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talt={image.replace(/\\\\.(jpg|png|gif)/, \\\"\\\")}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdraggable={false}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonContextMenu={(e) => e.preventDefault()}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonMouseEnter={() => setHoverImageIndex(i)}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonMouseOver={() => setHoverImageIndex(i)}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonMouseLeave={() => setHoverImageIndex(null)}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonTouchStart={() => setHoverImageIndex(i)}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonTouchEnd={() => setHoverImageIndex(null)}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonTouchCancel={() => setHoverImageIndex(null)}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonClick={() => {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetHoverImageIndex(null);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdispatch(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tchangeImagePopupSource({\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\timages,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tactiveIndex: i,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tonError={() =>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetTimeout(() => setQueryString(`?${Math.random()}`), 1000)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t...(i === hoverImageIndex && {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttransform: \\\"scale(1.2)\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tboxShadow: \\\"0 0 30px rgba(0, 0, 0, 1)\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tzIndex: 1,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}),\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t...(hoverImageIndex === null ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(i !== hoverImageIndex && {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfilter: \\\"brightness(0.75) blur(2px)\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t})),\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</picture>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Lazyload>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t))}\\r\\n\\t\\t\\t\\t\\t\\t\\t</>\\r\\n\\t\\t\\t\\t\\t\\t)}\\r\\n\\t\\t\\t\\t\\t</CustomSegment>\\r\\n\\r\\n\\t\\t\\t\\t\\t<Divider section />\\r\\n\\t\\t\\t\\t\\t{backToAllProjectsButton}\\r\\n\\t\\t\\t\\t</>\\r\\n\\t\\t\\t) : (\\r\\n\\t\\t\\t\\t<PageNotFound />\\r\\n\\t\\t\\t)}\\r\\n\\t\\t</Body>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(ProjectDetail, (prev, next) => prev.projectId === next.projectId);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as ProjectDetail };\\r\\n\";","export default \"import { memo, Fragment } from \\\"react\\\";\\r\\nimport { Helmet } from \\\"react-helmet\\\";\\r\\nimport { Header, Divider } from \\\"semantic-ui-react\\\";\\r\\nimport { Body } from \\\"../../Styles\\\";\\r\\nimport { Project } from \\\"../Project\\\";\\r\\nimport { workProjects } from \\\"../../../config\\\";\\r\\n\\r\\nfunction WorkExp(props) {\\r\\n\\treturn (\\r\\n\\t\\t<Body>\\r\\n\\t\\t\\t<Helmet>\\r\\n\\t\\t\\t\\t<title>My Work Experiences | {process.env.REACT_APP_TITLE}</title>\\r\\n\\t\\t\\t</Helmet>\\r\\n\\r\\n\\t\\t\\t<Header size=\\\"huge\\\" style={{ cursor: \\\"default\\\" }}>\\r\\n\\t\\t\\t\\tMy Work Experiences\\r\\n\\t\\t\\t</Header>\\r\\n\\r\\n\\t\\t\\t{(workProjects || [])\\r\\n\\t\\t\\t\\t.map(({ projectId, ...rest }) => ({ ...rest, path: `/workExp/${projectId}` }))\\r\\n\\t\\t\\t\\t.map((project, i) => (\\r\\n\\t\\t\\t\\t\\t<Fragment key={i}>\\r\\n\\t\\t\\t\\t\\t\\t<Divider section />\\r\\n\\t\\t\\t\\t\\t\\t<Project detail={project} />\\r\\n\\t\\t\\t\\t\\t</Fragment>\\r\\n\\t\\t\\t\\t))}\\r\\n\\t\\t</Body>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(WorkExp, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as WorkExp };\\r\\n\";","export default \"import { memo, useState } from \\\"react\\\";\\r\\nimport { Link } from \\\"react-router-dom\\\";\\r\\nimport { Helmet } from \\\"react-helmet\\\";\\r\\nimport {\\r\\n\\tSegment,\\r\\n\\tHeader,\\r\\n\\tItem,\\r\\n\\tCard,\\r\\n\\tLabel,\\r\\n\\tButton,\\r\\n\\tIcon,\\r\\n\\tImage,\\r\\n\\tMessage,\\r\\n\\tDivider,\\r\\n\\tResponsive,\\r\\n} from \\\"semantic-ui-react\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport { Body, NoSelect } from \\\"../../../Styles\\\";\\r\\nimport { responsiveMaxWidth, responsiveMinWidth, blogPosts, blogPostTags } from \\\"../../../../config\\\";\\r\\nimport moment from \\\"moment\\\";\\r\\nimport get from \\\"lodash/get\\\";\\r\\nimport find from \\\"lodash/find\\\";\\r\\nimport union from \\\"lodash/union\\\";\\r\\nimport intersection from \\\"lodash/intersection\\\";\\r\\nimport without from \\\"lodash/without\\\";\\r\\nimport uniqBy from \\\"lodash/uniqBy\\\";\\r\\nimport { LocalStorageService } from \\\"../../../../service\\\";\\r\\n\\r\\nconst CustomItemGroup = styled(Item.Group)`\\r\\n\\ta {\\r\\n\\t\\ttransition: 250ms !important;\\r\\n\\r\\n\\t\\t&:hover {\\r\\n\\t\\t\\tcolor: #e91e63 !important;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\timg {\\r\\n\\t\\tmax-width: 80px !important;\\r\\n\\t\\tmax-height: 80px !important;\\r\\n\\t\\twidth: auto !important;\\r\\n\\t\\theight: auto !important;\\r\\n\\t\\tmargin: auto !important;\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nconst CustomCardGroup = styled(Item.Group)`\\r\\n\\timg {\\r\\n\\t\\tmax-width: 40px !important;\\r\\n\\t\\tmax-height: 40px !important;\\r\\n\\t\\twidth: auto !important;\\r\\n\\t\\theight: auto !important;\\r\\n\\t\\tfloat: right !important;\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nconst HeaderLink = styled(({ hovered, ...props }) => <span {...props} />)`\\r\\n\\ta {\\r\\n\\t\\ttransition: 250ms !important;\\r\\n\\t\\tcolor: ${({ hovered }) => (hovered ? \\\"#e91e63\\\" : \\\"black\\\")} !important;\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction HeaderLinkWrapper(props) {\\r\\n\\tconst { title, path } = props;\\r\\n\\r\\n\\tconst [isHovered, setHovered] = useState(false);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<HeaderLink hovered={isHovered}>\\r\\n\\t\\t\\t<Link\\r\\n\\t\\t\\t\\tto={path}\\r\\n\\t\\t\\t\\tstate={{ fromAllBlogPosts: true }}\\r\\n\\t\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\t>\\r\\n\\t\\t\\t\\t{title}\\r\\n\\t\\t\\t</Link>\\r\\n\\t\\t</HeaderLink>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nfunction Blog(props) {\\r\\n\\tconst readBlogPostIdsFromLocalStorage = LocalStorageService.getReadBlogPostIds();\\r\\n\\r\\n\\tconst allBlogPostTags = uniqBy(\\r\\n\\t\\t[\\r\\n\\t\\t\\t...blogPostTags,\\r\\n\\t\\t\\t...blogPosts.flatMap(({ tags = [] }) => tags).map((name) => ({ name, icon: \\\"hashtag\\\", color: \\\"grey\\\" })),\\r\\n\\t\\t],\\r\\n\\t\\t\\\"name\\\"\\r\\n\\t);\\r\\n\\tconst [wantedTagNames, setWantedTagNames] = useState([]);\\r\\n\\tconst [unwantedTagNames, setUnwantedTagNames] = useState([]);\\r\\n\\r\\n\\tconst filteredBlogPosts = blogPosts\\r\\n\\t\\t.filter(\\r\\n\\t\\t\\t({ tags = [] }) =>\\r\\n\\t\\t\\t\\t(wantedTagNames.length === 0 || intersection(tags, wantedTagNames).length > 0) &&\\r\\n\\t\\t\\t\\tintersection(tags, unwantedTagNames).length === 0\\r\\n\\t\\t)\\r\\n\\t\\t.slice()\\r\\n\\t\\t.reverse();\\r\\n\\r\\n\\tconst toBlogTags = (tags) => (\\r\\n\\t\\t<>\\r\\n\\t\\t\\t{tags.map((tag, i) => (\\r\\n\\t\\t\\t\\t<Label\\r\\n\\t\\t\\t\\t\\tkey={i}\\r\\n\\t\\t\\t\\t\\tas=\\\"a\\\"\\r\\n\\t\\t\\t\\t\\tcolor={get(find(allBlogPostTags, { name: tag }), \\\"color\\\", \\\"grey\\\")}\\r\\n\\t\\t\\t\\t\\tonClick={() => setWantedTagNames(union(wantedTagNames, [tag]))}\\r\\n\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t<Icon name={get(find(allBlogPostTags, { name: tag }), \\\"icon\\\", \\\"hashtag\\\")} />\\r\\n\\t\\t\\t\\t\\t{tag}\\r\\n\\t\\t\\t\\t</Label>\\r\\n\\t\\t\\t))}\\r\\n\\t\\t</>\\r\\n\\t);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<Body>\\r\\n\\t\\t\\t<Helmet>\\r\\n\\t\\t\\t\\t<title>All Blog Posts | {process.env.REACT_APP_TITLE}</title>\\r\\n\\t\\t\\t</Helmet>\\r\\n\\r\\n\\t\\t\\t<Header size=\\\"huge\\\" style={{ cursor: \\\"default\\\" }}>\\r\\n\\t\\t\\t\\tAll Blog Posts\\r\\n\\t\\t\\t</Header>\\r\\n\\t\\t\\t<Divider section />\\r\\n\\r\\n\\t\\t\\t<Segment vertical basic clearing>\\r\\n\\t\\t\\t\\t<NoSelect>\\r\\n\\t\\t\\t\\t\\t<Label.Group style={{ textAlign: \\\"center\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t{allBlogPostTags.map((tag, i) => (\\r\\n\\t\\t\\t\\t\\t\\t\\t<Label\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tkey={i}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tas=\\\"a\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcolor={tag.color || \\\"grey\\\"}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\topacity:\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\twantedTagNames.includes(tag.name) || unwantedTagNames.includes(tag.name)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t? 1\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t: 0.35,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tonClick={() => {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (wantedTagNames.includes(tag.name)) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetWantedTagNames(without(wantedTagNames, tag.name));\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetUnwantedTagNames(union(unwantedTagNames, [tag.name]));\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t} else if (unwantedTagNames.includes(tag.name)) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetUnwantedTagNames(without(unwantedTagNames, tag.name));\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetWantedTagNames(union(wantedTagNames, [tag.name]));\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Icon\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname={\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(wantedTagNames.includes(tag.name)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t? \\\"check\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t: unwantedTagNames.includes(tag.name)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t? \\\"x\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t: tag.icon) || \\\"hashtag\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{tag.name}\\r\\n\\t\\t\\t\\t\\t\\t\\t</Label>\\r\\n\\t\\t\\t\\t\\t\\t))}\\r\\n\\t\\t\\t\\t\\t</Label.Group>\\r\\n\\t\\t\\t\\t</NoSelect>\\r\\n\\t\\t\\t</Segment>\\r\\n\\r\\n\\t\\t\\t{filteredBlogPosts && filteredBlogPosts.length > 0 ? (\\r\\n\\t\\t\\t\\t<Segment vertical>\\r\\n\\t\\t\\t\\t\\t<Responsive as={CustomItemGroup} minWidth={responsiveMinWidth} divided relaxed>\\r\\n\\t\\t\\t\\t\\t\\t{filteredBlogPosts.map(({ postId, path, thumbnail, title, date, description, tags }, i) => (\\r\\n\\t\\t\\t\\t\\t\\t\\t<Item key={i}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Item.Image\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tas={Link}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tto={path}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tstate={{ fromAllBlogPosts: true }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsrc={thumbnail}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsize=\\\"tiny\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tstyle={{ display: \\\"flex\\\", justifyContent: \\\"center\\\", alignItems: \\\"center\\\" }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Item.Content>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Item.Header\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tas={Link}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tto={path}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tstate={{ fromAllBlogPosts: true }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclassName=\\\"allow-select\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{title}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{!readBlogPostIdsFromLocalStorage.includes(postId) && (\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Label color=\\\"pink\\\" circular empty style={{ marginLeft: \\\"5px\\\" }} />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Item.Header>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Item.Meta style={{ cursor: \\\"default\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{moment(date).format(\\\"YYYY-MM-DD\\\")}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Item.Meta>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Item.Description style={{ cursor: \\\"default\\\" }}>{description}</Item.Description>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Item.Extra>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tas={Link}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tto={path}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tstate={{ fromAllBlogPosts: true }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbasic\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcompact\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfloated=\\\"right\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcolor=\\\"pink\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tContinue reading\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Icon name=\\\"right chevron\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</Button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{tags && tags.length ? (\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<NoSelect>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Label.Group>{toBlogTags(tags)}</Label.Group>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</NoSelect>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t) : null}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Item.Extra>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</Item.Content>\\r\\n\\t\\t\\t\\t\\t\\t\\t</Item>\\r\\n\\t\\t\\t\\t\\t\\t))}\\r\\n\\t\\t\\t\\t\\t</Responsive>\\r\\n\\r\\n\\t\\t\\t\\t\\t<Responsive\\r\\n\\t\\t\\t\\t\\t\\tas={CustomCardGroup}\\r\\n\\t\\t\\t\\t\\t\\tmaxWidth={responsiveMaxWidth}\\r\\n\\t\\t\\t\\t\\t\\tstyle={{ width: \\\"100%\\\", display: \\\"block\\\" }}\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t{filteredBlogPosts.map(({ postId, path, thumbnail, title, date, description, tags }, i) => (\\r\\n\\t\\t\\t\\t\\t\\t\\t<Card\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tkey={i}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstyle={{ width: \\\"100%\\\", display: \\\"block\\\", background: \\\"rgba(255, 255, 255, 0.4)\\\" }}\\r\\n\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Card.Content>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Image\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tas={Link}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tto={path}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tstate={{ fromAllBlogPosts: true }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfloated=\\\"right\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsrc={thumbnail}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Card.Header>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<HeaderLinkWrapper title={title} path={path} />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{!readBlogPostIdsFromLocalStorage.includes(postId) && (\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Label color=\\\"pink\\\" circular empty style={{ marginLeft: \\\"5px\\\" }} />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Card.Header>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Card.Meta as={NoSelect}>{moment(date).format(\\\"YYYY-MM-DD\\\")}</Card.Meta>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Card.Description as={NoSelect}>{description}</Card.Description>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</Card.Content>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Card.Content extra>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Button\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tas={Link}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tto={path}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tstate={{ fromAllBlogPosts: true }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbasic\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcompact\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfloated=\\\"right\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tcolor=\\\"pink\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tRead\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Icon name=\\\"right chevron\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{tags && tags.length ? (\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<NoSelect>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<Label.Group>{toBlogTags(tags)}</Label.Group>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</NoSelect>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t) : null}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</Card.Content>\\r\\n\\t\\t\\t\\t\\t\\t\\t</Card>\\r\\n\\t\\t\\t\\t\\t\\t))}\\r\\n\\t\\t\\t\\t\\t</Responsive>\\r\\n\\t\\t\\t\\t</Segment>\\r\\n\\t\\t\\t) : (\\r\\n\\t\\t\\t\\t<NoSelect>\\r\\n\\t\\t\\t\\t\\t<Message\\r\\n\\t\\t\\t\\t\\t\\tinfo\\r\\n\\t\\t\\t\\t\\t\\tfloating\\r\\n\\t\\t\\t\\t\\t\\tsize=\\\"huge\\\"\\r\\n\\t\\t\\t\\t\\t\\ticon=\\\"find\\\"\\r\\n\\t\\t\\t\\t\\t\\theader=\\\"No post found\\\"\\r\\n\\t\\t\\t\\t\\t\\tstyle={{ backgroundColor: \\\"transparent\\\", boxShadow: \\\"none\\\" }}\\r\\n\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t</NoSelect>\\r\\n\\t\\t\\t)}\\r\\n\\t\\t</Body>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(Blog, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as Blog };\\r\\n\";","export default \"import { Fragment, memo, useState, useEffect } from \\\"react\\\";\\r\\nimport { Link, useParams, useLocation, useNavigate } from \\\"react-router-dom\\\";\\r\\nimport { Helmet } from \\\"react-helmet\\\";\\r\\nimport { Button, Grid, Header, Divider, Icon, Responsive } from \\\"semantic-ui-react\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport { MarkdownLink } from \\\"./Styles\\\";\\r\\nimport { PageNotFound } from \\\"./../PageNotFound\\\";\\r\\nimport { TocMarkdown } from \\\"./TocMarkdown\\\";\\r\\nimport { LocalStorageService } from \\\"../../../../service\\\";\\r\\nimport { MarkdownContent } from \\\"./MarkdownContent\\\";\\r\\nimport { ReadingProgressBar } from \\\"./ReadingProgressBar\\\";\\r\\nimport { Body } from \\\"../../../Styles\\\";\\r\\nimport { responsiveMaxWidth, responsiveMinWidth, blogPosts } from \\\"../../../../config\\\";\\r\\nimport first from \\\"lodash/first\\\";\\r\\nimport map from \\\"lodash/map\\\";\\r\\nimport filter from \\\"lodash/filter\\\";\\r\\nimport findIndex from \\\"lodash/findIndex\\\";\\r\\nimport find from \\\"lodash/find\\\";\\r\\nimport clamp from \\\"lodash/clamp\\\";\\r\\n\\r\\nconst HeaderWithAnchor = styled.div`\\r\\n\\t.header-with-anchor:not(:hover) i::before {\\r\\n\\t\\t// content: none !important;\\r\\n\\t\\topacity: 0.2 !important;\\r\\n\\t\\tcolor: #9e9e9e;\\r\\n\\t\\ttransition: 400ms !important;\\r\\n\\t}\\r\\n\\r\\n\\t.header-with-anchor i {\\r\\n\\t\\tcolor: #e91e63 !important;\\r\\n\\t}\\r\\n\\r\\n\\t.header-with-anchor-1 i {\\r\\n\\t\\tmargin-left: -45px !important;\\r\\n\\t}\\r\\n\\r\\n\\t.header-with-anchor-2 i {\\r\\n\\t\\tmargin-left: -40px !important;\\r\\n\\t}\\r\\n\\r\\n\\t.header-with-anchor-3 i {\\r\\n\\t\\tmargin-left: -32px !important;\\r\\n\\t}\\r\\n\\r\\n\\t.header-with-anchor-4 i {\\r\\n\\t\\tmargin-left: -28.5px !important;\\r\\n\\t}\\r\\n\\r\\n\\t.header-with-anchor-5 i {\\r\\n\\t\\tmargin-left: -28px !important;\\r\\n\\t}\\r\\n\\r\\n\\t.header-with-anchor-6 i {\\r\\n\\t\\tmargin-left: -22px !important;\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nconst FontSizeButtonGroup = styled(Button.Group)`\\r\\n\\tposition: fixed;\\r\\n\\tbottom: 20px;\\r\\n\\tright: 100px;\\r\\n\\tz-index: 1000;\\r\\n\\tborder-radius: 4px;\\r\\n\\tbox-shadow: 0 0 10px rgba(0, 0, 0, 0.5) !important;\\r\\n\\r\\n\\tbutton {\\r\\n\\t\\tpadding: 0 !important;\\r\\n\\t\\twidth: 30px !important;\\r\\n\\t\\theight: 30px !important;\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction MarkdownLinkWrapper(props) {\\r\\n\\tconst { title, path } = props;\\r\\n\\r\\n\\tconst [isHovered, setHovered] = useState(false);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<MarkdownLink\\r\\n\\t\\t\\thovered={isHovered}\\r\\n\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t>\\r\\n\\t\\t\\t<Link className=\\\"allow-select\\\" to={path}>\\r\\n\\t\\t\\t\\t{title}\\r\\n\\t\\t\\t</Link>\\r\\n\\t\\t</MarkdownLink>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nfunction BlogPost(props) {\\r\\n\\tconst { postId } = useParams();\\r\\n\\r\\n\\tconst [fontSizeLevel, setFontSizeLevel] = useState(LocalStorageService.getBlogPostFontSizeLevel());\\r\\n\\r\\n\\tconst allBlogPosts = blogPosts.slice().reverse();\\r\\n\\tconst currentPost = find(allBlogPosts, { postId });\\r\\n\\r\\n\\tlet source = \\\"\\\";\\r\\n\\ttry {\\r\\n\\t\\tsource = currentPost ? require(`!!raw-loader!../../../../${currentPost.src}`).default : \\\"\\\";\\r\\n\\t} catch (e) {}\\r\\n\\r\\n\\tconst location = useLocation();\\r\\n\\tconst navigate = useNavigate();\\r\\n\\r\\n\\tconst backToAllBlogPostsButton = (\\r\\n\\t\\t<span\\r\\n\\t\\t\\tonClick={() => {\\r\\n\\t\\t\\t\\tif (window.history?.length >= 2 && location?.state?.fromAllBlogPosts) {\\r\\n\\t\\t\\t\\t\\tnavigate(-1);\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tnavigate(\\\"/blog\\\");\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}}\\r\\n\\t\\t>\\r\\n\\t\\t\\t<Responsive\\r\\n\\t\\t\\t\\tas={Button}\\r\\n\\t\\t\\t\\tminWidth={responsiveMinWidth}\\r\\n\\t\\t\\t\\tbasic\\r\\n\\t\\t\\t\\tcompact\\r\\n\\t\\t\\t\\tcolor=\\\"pink\\\"\\r\\n\\t\\t\\t\\tsize=\\\"medium\\\"\\r\\n\\t\\t\\t\\tcontent={\\r\\n\\t\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t\\tBack to <b>All Blog Posts</b>\\r\\n\\t\\t\\t\\t\\t</>\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\ticon=\\\"arrow left\\\"\\r\\n\\t\\t\\t\\tlabelPosition=\\\"left\\\"\\r\\n\\t\\t\\t/>\\r\\n\\t\\t\\t<Responsive maxWidth={responsiveMaxWidth}>\\r\\n\\t\\t\\t\\t<Button basic compact color=\\\"pink\\\" size=\\\"medium\\\" icon=\\\"arrow left\\\" content=\\\"Back\\\" />\\r\\n\\t\\t\\t</Responsive>\\r\\n\\t\\t</span>\\r\\n\\t);\\r\\n\\r\\n\\tconst newerPost = allBlogPosts[findIndex(allBlogPosts, (e) => e.postId === postId) - 1];\\r\\n\\tconst newerButton = (\\r\\n\\t\\t<>\\r\\n\\t\\t\\t<Responsive\\r\\n\\t\\t\\t\\tas={Button}\\r\\n\\t\\t\\t\\tminWidth={responsiveMinWidth}\\r\\n\\t\\t\\t\\tcompact\\r\\n\\t\\t\\t\\tcolor=\\\"violet\\\"\\r\\n\\t\\t\\t\\tsize=\\\"medium\\\"\\r\\n\\t\\t\\t\\tcontent={newerPost ? newerPost.title : \\\"Newer Post\\\"}\\r\\n\\t\\t\\t\\ticon=\\\"arrow left\\\"\\r\\n\\t\\t\\t\\tlabelPosition=\\\"left\\\"\\r\\n\\t\\t\\t\\tfloated=\\\"right\\\"\\r\\n\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\topacity: newerPost === undefined ? 0.35 : 1,\\r\\n\\t\\t\\t\\t\\tcursor: newerPost === undefined && \\\"not-allowed\\\",\\r\\n\\t\\t\\t\\t}}\\r\\n\\t\\t\\t/>\\r\\n\\t\\t\\t<Responsive maxWidth={responsiveMaxWidth}>\\r\\n\\t\\t\\t\\t<Button\\r\\n\\t\\t\\t\\t\\tcompact\\r\\n\\t\\t\\t\\t\\tcolor=\\\"violet\\\"\\r\\n\\t\\t\\t\\t\\tsize=\\\"medium\\\"\\r\\n\\t\\t\\t\\t\\ticon\\r\\n\\t\\t\\t\\t\\tfloated=\\\"right\\\"\\r\\n\\t\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\t\\topacity: newerPost === undefined ? 0.35 : 1,\\r\\n\\t\\t\\t\\t\\t\\tcursor: newerPost === undefined && \\\"not-allowed\\\",\\r\\n\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t<Icon name=\\\"arrow left\\\" />\\r\\n\\t\\t\\t\\t</Button>\\r\\n\\t\\t\\t</Responsive>\\r\\n\\t\\t</>\\r\\n\\t);\\r\\n\\r\\n\\tconst olderPost = allBlogPosts[findIndex(allBlogPosts, (e) => e.postId === postId) + 1];\\r\\n\\tconst olderButton = (\\r\\n\\t\\t<>\\r\\n\\t\\t\\t<Responsive\\r\\n\\t\\t\\t\\tas={Button}\\r\\n\\t\\t\\t\\tminWidth={responsiveMinWidth}\\r\\n\\t\\t\\t\\tcompact\\r\\n\\t\\t\\t\\tcolor=\\\"purple\\\"\\r\\n\\t\\t\\t\\tsize=\\\"medium\\\"\\r\\n\\t\\t\\t\\tcontent={olderPost ? olderPost.title : \\\"Older Post\\\"}\\r\\n\\t\\t\\t\\ticon=\\\"arrow right\\\"\\r\\n\\t\\t\\t\\tlabelPosition=\\\"right\\\"\\r\\n\\t\\t\\t\\tfloated=\\\"right\\\"\\r\\n\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\topacity: olderPost === undefined ? 0.35 : 1,\\r\\n\\t\\t\\t\\t\\tcursor: olderPost === undefined && \\\"not-allowed\\\",\\r\\n\\t\\t\\t\\t}}\\r\\n\\t\\t\\t/>\\r\\n\\t\\t\\t<Responsive maxWidth={responsiveMaxWidth}>\\r\\n\\t\\t\\t\\t<Button\\r\\n\\t\\t\\t\\t\\tcompact\\r\\n\\t\\t\\t\\t\\tcolor=\\\"purple\\\"\\r\\n\\t\\t\\t\\t\\tsize=\\\"medium\\\"\\r\\n\\t\\t\\t\\t\\ticon\\r\\n\\t\\t\\t\\t\\tfloated=\\\"right\\\"\\r\\n\\t\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\t\\topacity: olderPost === undefined ? 0.35 : 1,\\r\\n\\t\\t\\t\\t\\t\\tcursor: olderPost === undefined && \\\"not-allowed\\\",\\r\\n\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t<Icon name=\\\"arrow right\\\" />\\r\\n\\t\\t\\t\\t</Button>\\r\\n\\t\\t\\t</Responsive>\\r\\n\\t\\t</>\\r\\n\\t);\\r\\n\\r\\n\\tconst buttons = (\\r\\n\\t\\t<Grid>\\r\\n\\t\\t\\t<Grid.Column width={6}>{backToAllBlogPostsButton}</Grid.Column>\\r\\n\\t\\t\\t<Grid.Column width={10}>\\r\\n\\t\\t\\t\\t{olderPost && olderPost.path ? <Link to={olderPost.path}>{olderButton}</Link> : <>{olderButton}</>}\\r\\n\\t\\t\\t\\t{newerPost && newerPost.path ? <Link to={newerPost.path}>{newerButton}</Link> : <>{newerButton}</>}\\r\\n\\t\\t\\t</Grid.Column>\\r\\n\\t\\t</Grid>\\r\\n\\t);\\r\\n\\r\\n\\tconst [readingProgress, setReadingProgress] = useState(0);\\r\\n\\r\\n\\tuseEffect(() => {\\r\\n\\t\\tif (readingProgress >= 0.5) {\\r\\n\\t\\t\\tLocalStorageService.addReadBlogPostId(postId);\\r\\n\\t\\t}\\r\\n\\t}, [postId, readingProgress]);\\r\\n\\r\\n\\tuseEffect(() => {\\r\\n\\t\\tconst scrollEventListener = (e) => {\\r\\n\\t\\t\\tconst postContentElement = document.getElementById(\\\"post-content\\\");\\r\\n\\t\\t\\tconst readProgress = clamp(\\r\\n\\t\\t\\t\\tpostContentElement &&\\r\\n\\t\\t\\t\\t\\tdocument.scrollingElement &&\\r\\n\\t\\t\\t\\t\\tdocument.documentElement &&\\r\\n\\t\\t\\t\\t\\t(document.scrollingElement.scrollTop -\\r\\n\\t\\t\\t\\t\\t\\tpostContentElement.offsetTop +\\r\\n\\t\\t\\t\\t\\t\\tdocument.scrollingElement.offsetHeight / 2) /\\r\\n\\t\\t\\t\\t\\t\\t(postContentElement.scrollHeight - document.scrollingElement.offsetHeight / 2),\\r\\n\\t\\t\\t\\t0,\\r\\n\\t\\t\\t\\t1\\r\\n\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\tsetReadingProgress(readProgress);\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tdocument.addEventListener(\\\"scroll\\\", scrollEventListener);\\r\\n\\r\\n\\t\\treturn () => {\\r\\n\\t\\t\\tdocument.removeEventListener(\\\"scroll\\\", scrollEventListener);\\r\\n\\t\\t};\\r\\n\\t\\t// eslint-disable-next-line react-hooks/exhaustive-deps\\r\\n\\t}, []);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<>\\r\\n\\t\\t\\t<ReadingProgressBar progress={readingProgress} />\\r\\n\\r\\n\\t\\t\\t{currentPost && (\\r\\n\\t\\t\\t\\t<FontSizeButtonGroup floated=\\\"right\\\">\\r\\n\\t\\t\\t\\t\\t<Button\\r\\n\\t\\t\\t\\t\\t\\tcolor=\\\"black\\\"\\r\\n\\t\\t\\t\\t\\t\\tdisabled={fontSizeLevel === 0}\\r\\n\\t\\t\\t\\t\\t\\tonClick={() => {\\r\\n\\t\\t\\t\\t\\t\\t\\tif (fontSizeLevel > 0) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tsetFontSizeLevel((prevLevel) => {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tconst newLevel = prevLevel - 1;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tLocalStorageService.setBlogPostFontSizeLevel(newLevel);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn newLevel;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t});\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t\\t\\tstyle={{ width: \\\"50px\\\", fontSize: \\\"12px\\\" }}\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\tA\\r\\n\\t\\t\\t\\t\\t</Button>\\r\\n\\t\\t\\t\\t\\t<Button\\r\\n\\t\\t\\t\\t\\t\\tcolor=\\\"black\\\"\\r\\n\\t\\t\\t\\t\\t\\tdisabled={fontSizeLevel === 3}\\r\\n\\t\\t\\t\\t\\t\\tonClick={() => {\\r\\n\\t\\t\\t\\t\\t\\t\\tif (fontSizeLevel < 3) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tsetFontSizeLevel((prevLevel) => {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tconst newLevel = prevLevel + 1;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tLocalStorageService.setBlogPostFontSizeLevel(newLevel);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn newLevel;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t});\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t\\t\\tstyle={{ width: \\\"50px\\\", fontSize: \\\"18px\\\" }}\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\tA\\r\\n\\t\\t\\t\\t\\t</Button>\\r\\n\\t\\t\\t\\t</FontSizeButtonGroup>\\r\\n\\t\\t\\t)}\\r\\n\\r\\n\\t\\t\\t<Body>\\r\\n\\t\\t\\t\\t<Helmet>\\r\\n\\t\\t\\t\\t\\t<title>\\r\\n\\t\\t\\t\\t\\t\\t{currentPost ? currentPost.title : \\\"404 Not Found\\\"} | Blog | {process.env.REACT_APP_TITLE}\\r\\n\\t\\t\\t\\t\\t</title>\\r\\n\\t\\t\\t\\t</Helmet>\\r\\n\\r\\n\\t\\t\\t\\t{currentPost ? (\\r\\n\\t\\t\\t\\t\\t<HeaderWithAnchor>\\r\\n\\t\\t\\t\\t\\t\\t{buttons}\\r\\n\\t\\t\\t\\t\\t\\t<Divider section />\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<Header as=\\\"h1\\\" style={{ cursor: \\\"default\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t{currentPost.title}\\r\\n\\t\\t\\t\\t\\t\\t</Header>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t{currentPost.previousPostId && (\\r\\n\\t\\t\\t\\t\\t\\t\\t<Header as=\\\"h4\\\" style={{ textAlign: \\\"center\\\", lineHeight: \\\"1.8em\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div style={{ cursor: \\\"default\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>Continued from previous post:</b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<MarkdownLinkWrapper\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttitle={first(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmap(filter(blogPosts, { postId: currentPost.previousPostId }), \\\"title\\\")\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t)}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tpath={first(map(filter(blogPosts, { postId: currentPost.previousPostId }), \\\"path\\\"))}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t</Header>\\r\\n\\t\\t\\t\\t\\t\\t)}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div\\r\\n\\t\\t\\t\\t\\t\\t\\tstyle={{ display: \\\"flex\\\", justifyContent: \\\"center\\\", alignItems: \\\"center\\\", margin: \\\"3em 0\\\" }}\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t<img\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tsrc={currentPost.thumbnail}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\talt={currentPost.thumbnail.replace(/\\\\.(jpg|png|gif)/, \\\"\\\")}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdraggable={false}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tonContextMenu={(e) => e.preventDefault()}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\twidth: \\\"50%\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmaxHeight: \\\"400px\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tobjectFit: \\\"contain\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<TocMarkdown markdown={source} />\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<MarkdownContent markdown={source} fontSizeLevel={fontSizeLevel} />\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t{filter(blogPosts, { previousPostId: currentPost.postId }).length > 0 && (\\r\\n\\t\\t\\t\\t\\t\\t\\t<Header as=\\\"h4\\\" style={{ textAlign: \\\"center\\\", lineHeight: \\\"1.8em\\\", paddingTop: \\\"2em\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div style={{ cursor: \\\"default\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tNext Post\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{filter(blogPosts, { previousPostId: currentPost.postId }).length > 1\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t? \\\"s\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t: \\\"\\\"}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t:\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</b>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{filter(blogPosts, { previousPostId: currentPost.postId }).map((post, i, arr) => (\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Fragment key={i}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<MarkdownLinkWrapper title={post.title} path={post.path} />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{i < arr.length - 1 && <br />}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Fragment>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t))}\\r\\n\\t\\t\\t\\t\\t\\t\\t</Header>\\r\\n\\t\\t\\t\\t\\t\\t)}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t{source && (\\r\\n\\t\\t\\t\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Divider section />\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{buttons}\\r\\n\\t\\t\\t\\t\\t\\t\\t</>\\r\\n\\t\\t\\t\\t\\t\\t)}\\r\\n\\t\\t\\t\\t\\t</HeaderWithAnchor>\\r\\n\\t\\t\\t\\t) : (\\r\\n\\t\\t\\t\\t\\t<PageNotFound />\\r\\n\\t\\t\\t\\t)}\\r\\n\\t\\t\\t</Body>\\r\\n\\t\\t</>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(BlogPost, (prev, next) => prev.postId === next.postId);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as BlogPost };\\r\\n\";","export default \"import styled from \\\"styled-components\\\";\\r\\nimport ReactMarkdown from \\\"react-markdown\\\";\\r\\n\\r\\nconst FONT_SIZE_INCREMENT = 2;\\r\\nconst FONT_SIZE_MIN = 14;\\r\\n\\r\\nconst CustomMarkdown = styled(({ fontSizeLevel, ...props }) => <ReactMarkdown {...props} />)`\\r\\n\\tword-wrap: break-word;\\r\\n\\r\\n\\t.paragraph {\\r\\n\\t\\tfont-size: ${({ fontSizeLevel = 0 }) => fontSizeLevel * FONT_SIZE_INCREMENT + FONT_SIZE_MIN}px !important;\\r\\n\\t\\tline-height: 1.75em !important;\\r\\n\\t\\tmargin-bottom: 1em !important;\\r\\n\\t}\\r\\n\\r\\n\\tli {\\r\\n\\t\\tfont-size: ${({ fontSizeLevel = 0 }) => fontSizeLevel * FONT_SIZE_INCREMENT + FONT_SIZE_MIN}px !important;\\r\\n\\t\\tline-height: 1.75em !important;\\r\\n\\t}\\r\\n\\r\\n\\tpre {\\r\\n\\t\\toverflow: auto;\\r\\n\\t\\tborder-radius: 5px;\\r\\n\\t\\tpadding: 20px;\\r\\n\\t\\tcolor: #455a64;\\r\\n\\t\\tbackground-color: rgba(144, 164, 174, 0.2);\\r\\n\\t\\tborder: 1px solid #90a4ae;\\r\\n\\t\\tline-height: 1.2em;\\r\\n\\t\\ttransition: 250ms;\\r\\n\\t\\tfont-size: ${({ fontSizeLevel = 0 }) => fontSizeLevel * FONT_SIZE_INCREMENT + FONT_SIZE_MIN}px !important;\\r\\n\\t}\\r\\n\\r\\n\\t*:not(pre):not(code) > code {\\r\\n\\t\\tcolor: #d81b60;\\r\\n\\t\\tbackground-color: rgba(27, 31, 35, 0.05);\\r\\n\\t\\tborder-radius: 3px;\\r\\n\\t\\tpadding: 0.2em 0.4em;\\r\\n\\t\\ttransition: 250ms;\\r\\n\\t}\\r\\n\\r\\n\\tspan.react-syntax-highlighter-line-number {\\r\\n\\t\\t-webkit-touch-callout: none;\\r\\n\\t\\t-webkit-user-select: none;\\r\\n\\t\\t-khtml-user-select: none;\\r\\n\\t\\t-moz-user-select: none;\\r\\n\\t\\t-ms-user-select: none;\\r\\n\\t\\tuser-select: none;\\r\\n\\t\\t-webkit-user-drag: none;\\r\\n\\t\\t-khtml-user-drag: none;\\r\\n\\t\\t-moz-user-drag: none;\\r\\n\\t\\t-ms-user-drag: none;\\r\\n\\t\\tuser-drag: none;\\r\\n\\t}\\r\\n\\r\\n\\thr {\\r\\n\\t\\tmargin: 20px auto;\\r\\n\\t\\tborder: 1px solid rgba(144, 164, 174, 0.5);\\r\\n\\t}\\r\\n\\r\\n\\timg {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\tmax-width: 50%;\\r\\n\\t\\tmax-height: 400px;\\r\\n\\t\\tdisplay: block;\\r\\n\\t\\tmargin: 20px auto;\\r\\n\\t\\tpadding: 3px;\\r\\n\\t\\tborder-radius: 15px;\\r\\n\\t\\tbox-shadow: 0 0 15px rgba(0, 0, 0, 0.5);\\r\\n\\t\\tbackground: linear-gradient(to right, red, orange, yellow);\\r\\n\\t\\tbackground-size: 200% 200%;\\r\\n\\t\\ttransition: 400ms cubic-bezier(0, 1.2, 0.2, 1.5);\\r\\n\\t\\tanimation: animated-border 3s ease infinite;\\r\\n\\t\\tcursor: zoom-in;\\r\\n\\t}\\r\\n\\r\\n\\t@keyframes animated-border {\\r\\n\\t\\t0% {\\r\\n\\t\\t\\tbackground-position: 0% 0%;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t50% {\\r\\n\\t\\t\\tbackground-position: 100% 100%;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t100% {\\r\\n\\t\\t\\tbackground-position: 0% 0%;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tblockquote {\\r\\n\\t\\tfont-style: italic;\\r\\n\\t\\topacity: 0.5;\\r\\n\\t\\tpadding-left: 25px;\\r\\n\\t\\tborder-left: 5px solid rgba(41, 182, 246, 0.5);\\r\\n\\t\\ttransition: 250ms;\\r\\n\\t}\\r\\n\\r\\n\\tul,\\r\\n\\tol {\\r\\n\\t\\tpadding-inline-start: 20px;\\r\\n\\t}\\r\\n\\r\\n\\ttable {\\r\\n\\t\\tborder-collapse: collapse;\\r\\n\\t\\tborder-style: hidden;\\r\\n\\t\\tborder-radius: 5px !important;\\r\\n\\t\\tbox-shadow: 0 0 0 1px #90a4ae;\\r\\n\\t}\\r\\n\\r\\n\\tthead th {\\r\\n\\t\\tbackground-color: rgba(144, 164, 174, 0.25);\\r\\n\\t}\\r\\n\\ttr:nth-child(even) td {\\r\\n\\t\\tbackground-color: rgba(144, 164, 174, 0.05);\\r\\n\\t}\\r\\n\\r\\n\\tth:first-child {\\r\\n\\t\\tborder-top-left-radius: 5px;\\r\\n\\t}\\r\\n\\tth:last-child {\\r\\n\\t\\tborder-top-right-radius: 5px;\\r\\n\\t}\\r\\n\\ttr:last-child td:first-child {\\r\\n\\t\\tborder-bottom-left-radius: 5px;\\r\\n\\t}\\r\\n\\ttr:last-child td:last-child {\\r\\n\\t\\tborder-bottom-right-radius: 5px;\\r\\n\\t}\\r\\n\\r\\n\\tth,\\r\\n\\ttd {\\r\\n\\t\\tborder: 1px solid #90a4ae;\\r\\n\\t\\tpadding: 8px;\\r\\n\\t\\tline-height: 1.75em !important;\\r\\n\\t\\tfont-size: ${({ fontSizeLevel = 0 }) => fontSizeLevel * FONT_SIZE_INCREMENT + FONT_SIZE_MIN}px !important;\\r\\n\\t}\\r\\n\\r\\n\\t@media (hover: hover) {\\r\\n\\t\\tpre:hover {\\r\\n\\t\\t\\tbackground-color: rgba(224, 224, 224, 0.4);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t*:not(pre):not(code) > code:hover {\\r\\n\\t\\t\\tbackground-color: rgba(236, 64, 122, 0.15);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tblockquote:hover {\\r\\n\\t\\t\\tborder-radius: 0 15px 15px 0;\\r\\n\\t\\t\\tbackground-color: rgba(144, 164, 174, 0.25);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n`;\\r\\nexport default CustomMarkdown;\\r\\nexport { CustomMarkdown };\\r\\n\";","export default \"import { memo } from \\\"react\\\";\\r\\nimport { Header } from \\\"semantic-ui-react\\\";\\r\\nimport gfm from \\\"remark-gfm\\\";\\r\\nimport { CustomMarkdown } from \\\"./CustomMarkdown\\\";\\r\\nimport {\\r\\n\\tCustomParagraphRenderer,\\r\\n\\tCustomHeadingRenderer,\\r\\n\\tCustomLinkRenderer,\\r\\n\\tCustomTableRenderer,\\r\\n\\tCustomImageRenderer,\\r\\n} from \\\"./renderers\\\";\\r\\nimport { MarkdownTocUtils } from \\\"../../../../utils\\\";\\r\\n// import SyntaxHighlighter from \\\"react-syntax-highlighter\\\";\\r\\n// import { anOldHope } from \\\"react-syntax-highlighter/dist/esm/styles/hljs\\\";\\r\\n\\r\\n// const CustomCodeRenderer = ({ language, value }) => {\\r\\n// \\treturn (\\r\\n// \\t\\t<SyntaxHighlighter\\r\\n// \\t\\t\\tlanguage={language}\\r\\n// \\t\\t\\tstyle={anOldHope}\\r\\n// \\t\\t\\tshowLineNumbers={(value || \\\"\\\").includes(\\\"\\\\n\\\")}\\r\\n// \\t\\t\\tlineNumberStyle={{}}\\r\\n// \\t\\t>\\r\\n// \\t\\t\\t{value}\\r\\n// \\t\\t</SyntaxHighlighter>\\r\\n// \\t);\\r\\n// };\\r\\n\\r\\nfunction MarkdownContent(props) {\\r\\n\\tconst { markdown, fontSizeLevel } = props;\\r\\n\\r\\n\\tconst processedMarkdown = markdown\\r\\n\\t\\t? markdown.replace(/\\\\t/g, \\\"    \\\").replace(/^<!-- [\\\\w-]*prettier[\\\\w-]* -->$/gm, \\\"\\\")\\r\\n\\t\\t: null;\\r\\n\\r\\n\\tconst tocArray = markdown\\r\\n\\t\\t? MarkdownTocUtils.generateTocJsonFromMarkdown(processedMarkdown).map((toc) => ({\\r\\n\\t\\t\\t\\t...toc,\\r\\n\\t\\t\\t\\tcontent: toc.content.replace(/`/g, \\\"\\\"),\\r\\n\\t\\t  }))\\r\\n\\t\\t: [];\\r\\n\\r\\n\\tconst headingRenderer = ({ level, children }) => (\\r\\n\\t\\t<CustomHeadingRenderer tocArray={tocArray} level={level}>\\r\\n\\t\\t\\t{children}\\r\\n\\t\\t</CustomHeadingRenderer>\\r\\n\\t);\\r\\n\\r\\n\\treturn markdown ? (\\r\\n\\t\\t<div id=\\\"post-content\\\">\\r\\n\\t\\t\\t<CustomMarkdown\\r\\n\\t\\t\\t\\tchildren={processedMarkdown}\\r\\n\\t\\t\\t\\tremarkPlugins={[gfm]}\\r\\n\\t\\t\\t\\tfontSizeLevel={fontSizeLevel}\\r\\n\\t\\t\\t\\tcomponents={{\\r\\n\\t\\t\\t\\t\\tp: CustomParagraphRenderer,\\r\\n\\t\\t\\t\\t\\th1: headingRenderer,\\r\\n\\t\\t\\t\\t\\th2: headingRenderer,\\r\\n\\t\\t\\t\\t\\th3: headingRenderer,\\r\\n\\t\\t\\t\\t\\th4: headingRenderer,\\r\\n\\t\\t\\t\\t\\th5: headingRenderer,\\r\\n\\t\\t\\t\\t\\th6: headingRenderer,\\r\\n\\t\\t\\t\\t\\ta: CustomLinkRenderer,\\r\\n\\t\\t\\t\\t\\ttable: CustomTableRenderer,\\r\\n\\t\\t\\t\\t\\timg: CustomImageRenderer,\\r\\n\\t\\t\\t\\t\\t// code: CustomCodeRenderer,\\r\\n\\t\\t\\t\\t}}\\r\\n\\t\\t\\t/>\\r\\n\\t\\t</div>\\r\\n\\t) : (\\r\\n\\t\\t<Header as=\\\"h2\\\">Content not available.</Header>\\r\\n\\t);\\r\\n}\\r\\nconst memoComponent = memo(\\r\\n\\tMarkdownContent,\\r\\n\\t(prev, next) => prev.markdown === next.markdown && prev.fontSizeLevel === next.fontSizeLevel\\r\\n);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as MarkdownContent };\\r\\n\";","export default \"import styled from \\\"styled-components\\\";\\r\\n\\r\\nconst MarkdownLink = styled(({ hovered, ...props }) => <span {...props} />)`\\r\\n\\ta {\\r\\n\\t\\tcolor: ${({ hovered }) => (hovered ? \\\"#3f51b5\\\" : \\\"#0288d1\\\")} !important;\\r\\n\\t\\ttransition: 250ms;\\r\\n\\t\\tposition: relative;\\r\\n\\t\\tfont-weight: bold;\\r\\n\\r\\n\\t\\t&::after {\\r\\n\\t\\t\\tcontent: \\\"\\\";\\r\\n\\t\\t\\tposition: absolute;\\r\\n\\t\\t\\tbottom: 0;\\r\\n\\t\\t\\tleft: 0;\\r\\n\\t\\t\\twidth: ${({ hovered }) => (hovered ? 100 : 0)}%;\\r\\n\\t\\t\\theight: 1px;\\r\\n\\t\\t\\tbackground: #3f51b5;\\r\\n\\t\\t\\ttransition: 250ms;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nconst exports = { MarkdownLink };\\r\\nexport default exports;\\r\\nexport { MarkdownLink };\\r\\n\";","export default \"import { memo, useState } from \\\"react\\\";\\r\\nimport { Header } from \\\"semantic-ui-react\\\";\\r\\nimport { HashLink } from \\\"react-router-hash-link\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport toc from \\\"markdown-toc-unlazy\\\";\\r\\n\\r\\nconst CustomHeader = styled(({ hovered, ...props }) => <div {...props} />)`\\r\\n\\ta {\\r\\n\\t\\tdisplay: block !important;\\r\\n\\t\\tfont-size: 1.25em !important;\\r\\n\\t\\tcolor: ${({ hovered }) => (hovered ? \\\"#e91e63\\\" : \\\"#455a64\\\")} !important;\\r\\n\\t\\tbackground: ${({ hovered }) =>\\r\\n\\t\\t\\thovered\\r\\n\\t\\t\\t\\t? \\\"linear-gradient(to right, rgba(244, 143, 177, 0.25), rgba(176, 190, 197, 0.25), rgba(176, 190, 197, 0.25))\\\"\\r\\n\\t\\t\\t\\t: \\\"rgba(176, 190, 197, 0.25)\\\"} !important;\\r\\n\\t\\ttransition: 250ms;\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction HeaderWrapper(props) {\\r\\n\\tconst [isHovered, setHovered] = useState(false);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<CustomHeader\\r\\n\\t\\t\\thovered={isHovered}\\r\\n\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\tonClick={() => setHovered(false)}\\r\\n\\t\\t>\\r\\n\\t\\t\\t<Header {...props} />\\r\\n\\t\\t</CustomHeader>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nfunction TocMarkdown(props) {\\r\\n\\tconst { markdown } = props;\\r\\n\\r\\n\\tconst tableOfContents = markdown ? toc(markdown).json : null;\\r\\n\\tconst minLevel = markdown ? Math.min(...tableOfContents.map((toc) => toc.lvl)) : null;\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<>\\r\\n\\t\\t\\t{markdown && (\\r\\n\\t\\t\\t\\t<div style={{ paddingBottom: \\\"40px\\\" }}>\\r\\n\\t\\t\\t\\t\\t{tableOfContents.map((toc, i) => (\\r\\n\\t\\t\\t\\t\\t\\t<HeaderWrapper\\r\\n\\t\\t\\t\\t\\t\\t\\tkey={i}\\r\\n\\t\\t\\t\\t\\t\\t\\tas={HashLink}\\r\\n\\t\\t\\t\\t\\t\\t\\tto={\\\"#\\\" + toc.slug}\\r\\n\\t\\t\\t\\t\\t\\t\\tsmooth\\r\\n\\t\\t\\t\\t\\t\\t\\treplace\\r\\n\\t\\t\\t\\t\\t\\t\\tblock\\r\\n\\t\\t\\t\\t\\t\\t\\tattached={i === 0 ? \\\"top\\\" : i === tableOfContents.length - 1 ? \\\"bottom\\\" : true}\\r\\n\\t\\t\\t\\t\\t\\t\\tstyle={{ paddingLeft: (toc.lvl + 1 - minLevel) * 20 - 5 + \\\"px\\\" }}\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t{toc.content.replace(/`/g, \\\"\\\")}\\r\\n\\t\\t\\t\\t\\t\\t</HeaderWrapper>\\r\\n\\t\\t\\t\\t\\t))}\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t)}\\r\\n\\t\\t</>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(TocMarkdown, (prev, next) => prev.markdown === next.markdown);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as TocMarkdown };\\r\\n\";","export default \"import { useCallback } from \\\"react\\\";\\r\\nimport { useLocation } from \\\"react-router-dom\\\";\\r\\nimport { HashLink } from \\\"react-router-hash-link\\\";\\r\\nimport { Header, Icon, Responsive } from \\\"semantic-ui-react\\\";\\r\\nimport isEmpty from \\\"lodash/isEmpty\\\";\\r\\nimport filter from \\\"lodash/filter\\\";\\r\\nimport { ScrollUtils } from \\\"../../../../../utils\\\";\\r\\nimport { responsiveMinWidth } from \\\"../../../../../config\\\";\\r\\n\\r\\nfunction Heading(props) {\\r\\n\\tconst { anchorRef, level, children } = props;\\r\\n\\r\\n\\tconst location = useLocation();\\r\\n\\r\\n\\tconst ref = useCallback(\\r\\n\\t\\t(node) => {\\r\\n\\t\\t\\tif (node && location.hash && anchorRef === decodeURIComponent(location.hash.replace(/#/, \\\"\\\"))) {\\r\\n\\t\\t\\t\\tScrollUtils.scrollToElement(node, 500);\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\t\\t// eslint-disable-next-line react-hooks/exhaustive-deps\\r\\n\\t\\t[]\\r\\n\\t);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<Header as={\\\"h\\\" + level} className={`header-with-anchor header-with-anchor-${level}`}>\\r\\n\\t\\t\\t<HashLink ref={ref} id={anchorRef} to={\\\"#\\\" + anchorRef} smooth replace>\\r\\n\\t\\t\\t\\t<Responsive as={Icon} minWidth={responsiveMinWidth} name=\\\"linkify\\\" />\\r\\n\\t\\t\\t</HashLink>\\r\\n\\t\\t\\t{children}\\r\\n\\t\\t</Header>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nfunction CustomHeadingRenderer(props) {\\r\\n\\tconst { tocArray, level, children = [] } = props;\\r\\n\\r\\n\\tconst headingText = children.map((e) => (typeof e === \\\"string\\\" ? e : e.props.children.join(\\\"\\\"))).join(\\\"\\\");\\r\\n\\tconst anchorRef = isEmpty(tocArray) ? null : (filter(tocArray, { content: headingText })[0] || {}).slug;\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<Heading anchorRef={anchorRef} level={level}>\\r\\n\\t\\t\\t{children}\\r\\n\\t\\t</Heading>\\r\\n\\t);\\r\\n}\\r\\nexport default CustomHeadingRenderer;\\r\\nexport { CustomHeadingRenderer };\\r\\n\";","export default \"import { useState } from \\\"react\\\";\\r\\nimport { useDispatch } from \\\"react-redux\\\";\\r\\nimport Lazyload from \\\"react-lazyload\\\";\\r\\nimport { changeImagePopupSource } from \\\"../../../../../redux/action\\\";\\r\\n\\r\\nfunction CustomMarkdownImage(props) {\\r\\n\\tconst { src, style, ...rest } = props;\\r\\n\\r\\n\\tconst [isHovered, setHovered] = useState(false);\\r\\n\\tconst [queryString, setQueryString] = useState(\\\"\\\");\\r\\n\\r\\n\\tconst dispatch = useDispatch();\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<Lazyload once height=\\\"400px\\\" offset={400}>\\r\\n\\t\\t\\t<picture>\\r\\n\\t\\t\\t\\t<source type=\\\"image/webp\\\" srcSet={encodeURIComponent(src.replace(/\\\\.(jpg|png|gif)/, \\\".webp\\\"))} />\\r\\n\\t\\t\\t\\t<img\\r\\n\\t\\t\\t\\t\\t{...rest}\\r\\n\\t\\t\\t\\t\\tsrc={`${src}${queryString}`}\\r\\n\\t\\t\\t\\t\\talt={src.replace(/\\\\.(jpg|png|gif)/, \\\"\\\")}\\r\\n\\t\\t\\t\\t\\tdraggable=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\tonContextMenu={(e) => e.preventDefault()}\\r\\n\\t\\t\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\t\\t\\tonClick={() =>\\r\\n\\t\\t\\t\\t\\t\\tdispatch(\\r\\n\\t\\t\\t\\t\\t\\t\\tchangeImagePopupSource({\\r\\n\\t\\t\\t\\t\\t\\t\\t\\timages: [src],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tactiveIndex: 0,\\r\\n\\t\\t\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tonError={() => setTimeout(() => setQueryString(`?${Math.random()}`), 1000)}\\r\\n\\t\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\t\\t...style,\\r\\n\\t\\t\\t\\t\\t\\t...(isHovered && {\\r\\n\\t\\t\\t\\t\\t\\t\\ttransform: \\\"scale(1.2)\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\tboxShadow: \\\"0 0 30px rgba(0, 0, 0, 1)\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\tzIndex: 1,\\r\\n\\t\\t\\t\\t\\t\\t}),\\r\\n\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t/>\\r\\n\\t\\t\\t</picture>\\r\\n\\t\\t</Lazyload>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nfunction CustomImageRenderer(props) {\\r\\n\\treturn <CustomMarkdownImage {...props} />;\\r\\n}\\r\\nexport default CustomImageRenderer;\\r\\nexport { CustomImageRenderer };\\r\\n\";","export default \"import { useState } from \\\"react\\\";\\r\\nimport { Link } from \\\"react-router-dom\\\";\\r\\nimport { HashLink } from \\\"react-router-hash-link\\\";\\r\\nimport { MarkdownLink } from \\\"../Styles\\\";\\r\\nimport startsWith from \\\"lodash/startsWith\\\";\\r\\n\\r\\nfunction CustomMarkdownLink(props) {\\r\\n\\tconst { href, children } = props;\\r\\n\\r\\n\\tconst [isHovered, setHovered] = useState(false);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<MarkdownLink\\r\\n\\t\\t\\thovered={isHovered}\\r\\n\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\tonClick={() => setHovered(false)}\\r\\n\\t\\t>\\r\\n\\t\\t\\t{startsWith(href, \\\"#\\\") ? (\\r\\n\\t\\t\\t\\t<HashLink to={href} smooth replace className=\\\"allow-select\\\">\\r\\n\\t\\t\\t\\t\\t{children}\\r\\n\\t\\t\\t\\t</HashLink>\\r\\n\\t\\t\\t) : startsWith(href, \\\"http\\\") ? (\\r\\n\\t\\t\\t\\t<a href={href} target=\\\"_blank\\\" rel=\\\"external nofollow noopener noreferrer\\\" className=\\\"allow-select\\\">\\r\\n\\t\\t\\t\\t\\t{children}\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t) : (\\r\\n\\t\\t\\t\\t<Link to={href} className=\\\"allow-select\\\">\\r\\n\\t\\t\\t\\t\\t{children}\\r\\n\\t\\t\\t\\t</Link>\\r\\n\\t\\t\\t)}\\r\\n\\t\\t</MarkdownLink>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nfunction CustomLinkRenderer(props) {\\r\\n\\tconst { href, ...rest } = props;\\r\\n\\r\\n\\treturn <CustomMarkdownLink href={decodeURIComponent(href)} {...rest} />;\\r\\n}\\r\\nexport default CustomLinkRenderer;\\r\\nexport { CustomLinkRenderer };\\r\\n\";","export default \"function CustomParagraphRenderer(props) {\\r\\n\\treturn <div className=\\\"paragraph\\\" {...props} />;\\r\\n}\\r\\nexport default CustomParagraphRenderer;\\r\\nexport { CustomParagraphRenderer };\\r\\n\";","export default \"function CustomTableRenderer(props) {\\r\\n\\tconst { children } = props;\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<div style={{ overflowX: \\\"auto\\\", marginTop: \\\"20px\\\", marginBottom: \\\"20px\\\" }}>\\r\\n\\t\\t\\t<div style={{ display: \\\"inline-block\\\", margin: \\\"1px\\\" }}>\\r\\n\\t\\t\\t\\t<table>{children}</table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t);\\r\\n}\\r\\nexport default CustomTableRenderer;\\r\\nexport { CustomTableRenderer };\\r\\n\";","export default \"import { memo, useState } from \\\"react\\\";\\r\\nimport { useDispatch } from \\\"react-redux\\\";\\r\\nimport { changeImagePopupSource } from \\\"../../../../redux/action\\\";\\r\\n\\r\\nfunction Avatar(props) {\\r\\n\\tconst [queryString, setQueryString] = useState(\\\"\\\");\\r\\n\\r\\n\\tconst dispatch = useDispatch();\\r\\n\\r\\n\\tconst src = \\\"avatar.jpg\\\";\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<div style={{ paddingTop: \\\"3em\\\" }}>\\r\\n\\t\\t\\t<picture>\\r\\n\\t\\t\\t\\t<source type=\\\"image/webp\\\" srcSet={encodeURIComponent(src.replace(/\\\\.(jpg|png|gif)/, \\\".webp\\\"))} />\\r\\n\\t\\t\\t\\t<img\\r\\n\\t\\t\\t\\t\\tsrc={`${src}${queryString}`}\\r\\n\\t\\t\\t\\t\\talt=\\\"My profile pic\\\"\\r\\n\\t\\t\\t\\t\\tdraggable=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\tclassName=\\\"ui large circular centered spaced image\\\"\\r\\n\\t\\t\\t\\t\\tonContextMenu={(e) => e.preventDefault()}\\r\\n\\t\\t\\t\\t\\tonClick={() =>\\r\\n\\t\\t\\t\\t\\t\\tdispatch(\\r\\n\\t\\t\\t\\t\\t\\t\\tchangeImagePopupSource({\\r\\n\\t\\t\\t\\t\\t\\t\\t\\timages: [src],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tactiveIndex: 0,\\r\\n\\t\\t\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tonError={() => setTimeout(() => setQueryString(`?${Math.random()}`), 1000)}\\r\\n\\t\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\t\\tcursor: \\\"pointer\\\",\\r\\n\\t\\t\\t\\t\\t\\tpadding: \\\"8px\\\",\\r\\n\\t\\t\\t\\t\\t\\tbackground: `\\r\\n\\t\\t\\t\\t\\t\\tradial-gradient(\\r\\n\\t\\t\\t\\t\\t\\t\\tcircle at 50% 0,\\r\\n\\t\\t\\t\\t\\t\\t\\trgba(255, 0, 0, 0.375),\\r\\n\\t\\t\\t\\t\\t\\t\\trgba(255, 0, 0, 0) 70.71%\\r\\n\\t\\t\\t\\t\\t\\t),\\r\\n\\t\\t\\t\\t\\t\\tradial-gradient(\\r\\n\\t\\t\\t\\t\\t\\t\\tcircle at 6.7% 75%,\\r\\n\\t\\t\\t\\t\\t\\t\\trgba(0, 0, 255, 0.375),\\r\\n\\t\\t\\t\\t\\t\\t\\trgba(0, 0, 255, 0) 70.71%\\r\\n\\t\\t\\t\\t\\t\\t),\\r\\n\\t\\t\\t\\t\\t\\tradial-gradient(\\r\\n\\t\\t\\t\\t\\t\\t\\tcircle at 93.3% 75%,\\r\\n\\t\\t\\t\\t\\t\\t\\trgba(0, 255, 0, 0.375),\\r\\n\\t\\t\\t\\t\\t\\t\\trgba(0, 255, 0, 0) 70.71%\\r\\n\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t\\twhite\\r\\n\\t\\t\\t\\t\\t`,\\r\\n\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t/>\\r\\n\\t\\t\\t</picture>\\r\\n\\t\\t</div>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(Avatar, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as Avatar };\\r\\n\";","export default \"import { memo, useState } from \\\"react\\\";\\r\\nimport { Link } from \\\"react-router-dom\\\";\\r\\nimport { Segment, Header } from \\\"semantic-ui-react\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport { NoSelect } from \\\"../../../Styles\\\";\\r\\n\\r\\nconst CircleShortcutWrapper = styled(\\r\\n\\t({ themeColor, hovered, hoverBg, normalBg, hoverTextColor, normalTextColor, glowEffectBg, ...props }) => (\\r\\n\\t\\t<div {...props} />\\r\\n\\t)\\r\\n)`\\r\\n\\t.circle-shortcut {\\r\\n\\t\\twidth: 150px;\\r\\n\\t\\theight: 150px;\\r\\n\\t\\tmin-width: 150px;\\r\\n\\t\\tmin-height: 150px;\\r\\n\\t\\ttransition: 250ms;\\r\\n\\t\\tborder: none;\\r\\n\\t\\tbackground-color: ${({ hovered, hoverBg, normalBg }) => (hovered ? hoverBg : normalBg)} !important;\\r\\n\\t\\tbox-shadow: 0 0 30px ${({ glowEffectBg }) => glowEffectBg} !important;\\r\\n\\t\\t${({ hovered }) => (hovered ? \\\"transform: scale(0.95);\\\" : \\\"\\\")}\\r\\n\\t}\\r\\n\\r\\n\\t.circle-shortcut-macaron {\\r\\n\\t\\twidth: 150px;\\r\\n\\t\\theight: 165px;\\r\\n\\t\\tmin-width: 150px;\\r\\n\\t\\tmin-height: 165px;\\r\\n\\t\\ttransition: 250ms;\\r\\n\\t\\tborder: none;\\r\\n\\t\\tbox-shadow: none;\\r\\n\\t\\tbackground-color: transparent;\\r\\n\\t\\tbackground-image: url(\\\"macaron-${({ themeColor }) => themeColor}.png\\\");\\r\\n\\t\\tbackground-image: -webkit-image-set(\\r\\n\\t\\t\\turl(\\\"macaron-${({ themeColor }) => themeColor}.webp\\\") 1x,\\r\\n\\t\\t\\turl(\\\"macaron-${({ themeColor }) => themeColor}-2x.webp\\\") 2x\\r\\n\\t\\t);\\r\\n\\t\\tbackground-size: 98%;\\r\\n\\t\\tbackground-repeat: no-repeat;\\r\\n\\t\\tbackground-position: center;\\r\\n\\t\\t${({ hovered }) => (hovered ? \\\"transform: scale(1.15);\\\" : \\\"\\\")}\\r\\n\\t}\\r\\n\\r\\n\\t.circle-shortcut h3 {\\r\\n\\t\\ttransition: 250ms;\\r\\n\\t\\tcolor: ${({ hovered, normalTextColor, hoverTextColor }) =>\\r\\n\\t\\t\\thovered ? hoverTextColor : normalTextColor} !important;\\r\\n\\t}\\r\\n\\r\\n\\t.circle-shortcut-macaron h3 {\\r\\n\\t\\ttransition: 250ms;\\r\\n\\t\\tmargin-top: -1.5em !important;\\r\\n\\t\\tcolor: ${({ normalTextColor }) => normalTextColor} !important;\\r\\n\\t}\\r\\n\\r\\n\\t@media (hover: hover) {\\r\\n\\t\\t.circle-shortcut,\\r\\n\\t\\t.circle-shortcut-macaron {\\r\\n\\t\\t\\t-webkit-box-reflect: below 0em -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), to(rgba(255, 255, 255, 0.1)));\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t.circle-shortcut-macaron:hover {\\r\\n\\t\\t\\tfilter: drop-shadow(0 0 20px ${({ glowEffectBg }) => glowEffectBg});\\r\\n\\t\\t}\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction CircleShortcut(props) {\\r\\n\\tconst {\\r\\n\\t\\tlinkTo,\\r\\n\\t\\ttext,\\r\\n\\t\\tthemeColor,\\r\\n\\t\\tnormalColor: normalTextColor,\\r\\n\\t\\thoverColor: hoverTextColor,\\r\\n\\t\\tnormalBg,\\r\\n\\t\\thoverBg,\\r\\n\\t\\tglowEffectBg,\\r\\n\\t} = props;\\r\\n\\r\\n\\tconst [isHovered, setHovered] = useState(false);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<NoSelect style={{ display: \\\"inline-block\\\" }}>\\r\\n\\t\\t\\t<CircleShortcutWrapper\\r\\n\\t\\t\\t\\tthemeColor={themeColor}\\r\\n\\t\\t\\t\\thoverBg={hoverBg}\\r\\n\\t\\t\\t\\thoverTextColor={hoverTextColor}\\r\\n\\t\\t\\t\\tnormalBg={normalBg}\\r\\n\\t\\t\\t\\tnormalTextColor={normalTextColor}\\r\\n\\t\\t\\t\\tglowEffectBg={glowEffectBg}\\r\\n\\t\\t\\t\\thovered={isHovered}\\r\\n\\t\\t\\t>\\r\\n\\t\\t\\t\\t<Link to={linkTo} draggable={false}>\\r\\n\\t\\t\\t\\t\\t<Segment\\r\\n\\t\\t\\t\\t\\t\\tclassName=\\\"circle-shortcut-macaron\\\"\\r\\n\\t\\t\\t\\t\\t\\tcircular\\r\\n\\t\\t\\t\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\t\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\t\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\t\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\t\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\t\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t<Header as=\\\"h3\\\" style={{ textTransform: \\\"uppercase\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t{text || \\\"\\\"}\\r\\n\\t\\t\\t\\t\\t\\t</Header>\\r\\n\\t\\t\\t\\t\\t</Segment>\\r\\n\\t\\t\\t\\t</Link>\\r\\n\\t\\t\\t</CircleShortcutWrapper>\\r\\n\\t\\t</NoSelect>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(CircleShortcut, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as CircleShortcut };\\r\\n\";","export default \"import { memo, useState } from \\\"react\\\";\\r\\nimport { Responsive } from \\\"semantic-ui-react\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport Typewriter from \\\"typewriter-effect\\\";\\r\\nimport { responsiveMaxWidth, responsiveMinWidth } from \\\"../../../../config\\\";\\r\\n\\r\\nconst CONSOLE_LOG_PREFIX = \\\"console.log('\\\";\\r\\nconst CONSOLE_LOG_PREFIX_MOBILE = \\\"console.log<br />('\\\";\\r\\nconst CONSOLE_LOG_SUFFIX = \\\"')\\\";\\r\\n\\r\\nconst MacTerminal = styled.div`\\r\\n\\ttext-align: center;\\r\\n\\twidth: 100%;\\r\\n\\theight: 25px;\\r\\n\\tbackground-color: #dad9d9;\\r\\n\\tmargin: 0 auto;\\r\\n\\tfont-family: monospace;\\r\\n\\tpadding: auto;\\r\\n\\tfloat: none;\\r\\n\\tborder-radius: 5px 5px 0 0;\\r\\n\\tcursor: move;\\r\\n\\r\\n\\t.macos-terminal-button {\\r\\n\\t\\tdisplay: block;\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\tborder-radius: 100%;\\r\\n\\t\\twidth: 15px;\\r\\n\\t\\theight: 15px;\\r\\n\\t\\ttop: 19px;\\r\\n\\t\\tmargin: 0 auto;\\r\\n\\t\\tcursor: pointer;\\r\\n\\t\\ttransition: 100ms;\\r\\n\\r\\n\\t\\t&:active {\\r\\n\\t\\t\\tfilter: brightness(1.1);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-button.red {\\r\\n\\t\\tbackground-color: #ec6559;\\r\\n\\t\\tleft: 10px;\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-button.yellow {\\r\\n\\t\\tbackground-color: #e0c04c;\\r\\n\\t\\tleft: 32.5px;\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-button.green {\\r\\n\\t\\tbackground-color: #72bf47;\\r\\n\\t\\tleft: 55px;\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-button-red-icon {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\twidth: 68%;\\r\\n\\t\\theight: 8%;\\r\\n\\t\\tleft: 16%;\\r\\n\\t\\ttop: 46%;\\r\\n\\t\\tborder-radius: 25px;\\r\\n\\t\\tbackground-color: #975513;\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-button-red-icon-1 {\\r\\n\\t\\ttransform: rotate(45deg);\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-button-red-icon-2 {\\r\\n\\t\\ttransform: rotate(-45deg);\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-button-yellow-icon {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\twidth: 68%;\\r\\n\\t\\theight: 8%;\\r\\n\\t\\tleft: 16%;\\r\\n\\t\\ttop: 46%;\\r\\n\\t\\tborder-radius: 25px;\\r\\n\\t\\tbackground-color: #975513;\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-button-green-icon {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\tborder-top: solid 30px transparent;\\r\\n\\t\\tborder-right: solid 30px transparent;\\r\\n\\t\\tborder-bottom: solid 30px #0c7404;\\r\\n\\t\\tborder-left: solid 30px #0c7404;\\r\\n\\t\\tborder-bottom-left-radius: 15px;\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-button-green-icon-1 {\\r\\n\\t\\ttop: -143.5%;\\r\\n\\t\\tleft: -156.5%;\\r\\n\\t\\ttransform: scale(0.1);\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-button-green-icon-2 {\\r\\n\\t\\ttop: -156.5%;\\r\\n\\t\\tleft: -143.5%;\\r\\n\\t\\ttransform: scale(0.1) rotate(180deg);\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-corner-anchor {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\tborder-right: solid 30px transparent;\\r\\n\\t\\tborder-bottom: solid 30px transparent;\\r\\n\\t\\tborder-top: solid 30px transparent;\\r\\n\\r\\n\\t\\t::before,\\r\\n\\t\\t::after {\\r\\n\\t\\t\\tbox-sizing: border-box;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-corner-anchor-top-left {\\r\\n\\t\\tleft: -13px;\\r\\n\\t\\ttop: -14.5px;\\r\\n\\t\\tcursor: nwse-resize;\\r\\n\\t\\ttransform: scale(0.5) rotate(45deg);\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-corner-anchor-top-right {\\r\\n\\t\\tright: -13px;\\r\\n\\t\\ttop: -14.5px;\\r\\n\\t\\tcursor: nesw-resize;\\r\\n\\t\\ttransform: scale(0.5) rotate(135deg);\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-corner-anchor-bottom-left {\\r\\n\\t\\tleft: -13px;\\r\\n\\t\\tbottom: -14px;\\r\\n\\t\\tcursor: nesw-resize;\\r\\n\\t\\ttransform: scale(0.5) rotate(-45deg);\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-corner-anchor-bottom-right {\\r\\n\\t\\tright: -13px;\\r\\n\\t\\tbottom: -14px;\\r\\n\\t\\tcursor: nwse-resize;\\r\\n\\t\\ttransform: scale(0.5) rotate(-135deg);\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-side-anchor {\\r\\n\\t\\tposition: absolute;\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-side-anchor-top {\\r\\n\\t\\ttop: 11.5px;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 5px;\\r\\n\\t\\tcursor: n-resize;\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-side-anchor-left {\\r\\n\\t\\tbottom: 11.5px;\\r\\n\\t\\ttop: 13px;\\r\\n\\t\\tleft: -2.5px;\\r\\n\\t\\twidth: 5px;\\r\\n\\t\\theight: 78%;\\r\\n\\t\\tcursor: w-resize;\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-side-anchor-bottom {\\r\\n\\t\\tbottom: 11.5px;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 5px;\\r\\n\\t\\tcursor: s-resize;\\r\\n\\t}\\r\\n\\r\\n\\t.macos-terminal-side-anchor-right {\\r\\n\\t\\tbottom: 11.5px;\\r\\n\\t\\ttop: 13px;\\r\\n\\t\\tright: -3px;\\r\\n\\t\\twidth: 5px;\\r\\n\\t\\theight: 78%;\\r\\n\\t\\tcursor: e-resize;\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction MacTerminalButtons(props) {\\r\\n\\tconst [isHovered, setHovered] = useState(false);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<>\\r\\n\\t\\t\\t<div\\r\\n\\t\\t\\t\\tclassName=\\\"macos-terminal-button red\\\"\\r\\n\\t\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\t>\\r\\n\\t\\t\\t\\t{isHovered && (\\r\\n\\t\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t\\t<div className=\\\"macos-terminal-button-red-icon macos-terminal-button-red-icon-1\\\" />\\r\\n\\t\\t\\t\\t\\t\\t<div className=\\\"macos-terminal-button-red-icon macos-terminal-button-red-icon-2\\\" />\\r\\n\\t\\t\\t\\t\\t</>\\r\\n\\t\\t\\t\\t)}\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div\\r\\n\\t\\t\\t\\tclassName=\\\"macos-terminal-button yellow\\\"\\r\\n\\t\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\t>\\r\\n\\t\\t\\t\\t{isHovered && (\\r\\n\\t\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t\\t<div className=\\\"macos-terminal-button-yellow-icon\\\" />\\r\\n\\t\\t\\t\\t\\t</>\\r\\n\\t\\t\\t\\t)}\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div\\r\\n\\t\\t\\t\\tclassName=\\\"macos-terminal-button green\\\"\\r\\n\\t\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\t>\\r\\n\\t\\t\\t\\t{isHovered && (\\r\\n\\t\\t\\t\\t\\t<>\\r\\n\\t\\t\\t\\t\\t\\t<div className=\\\"macos-terminal-button-green-icon macos-terminal-button-green-icon-1\\\" />\\r\\n\\t\\t\\t\\t\\t\\t<div className=\\\"macos-terminal-button-green-icon macos-terminal-button-green-icon-2\\\" />\\r\\n\\t\\t\\t\\t\\t</>\\r\\n\\t\\t\\t\\t)}\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div className=\\\"macos-terminal-side-anchor macos-terminal-side-anchor-top\\\" />\\r\\n\\t\\t\\t<div className=\\\"macos-terminal-side-anchor macos-terminal-side-anchor-left\\\" />\\r\\n\\t\\t\\t<div className=\\\"macos-terminal-side-anchor macos-terminal-side-anchor-right\\\" />\\r\\n\\t\\t\\t<div className=\\\"macos-terminal-side-anchor macos-terminal-side-anchor-bottom\\\" />\\r\\n\\t\\t\\t<div className=\\\"macos-terminal-corner-anchor macos-terminal-corner-anchor-top-left\\\" />\\r\\n\\t\\t\\t<div className=\\\"macos-terminal-corner-anchor macos-terminal-corner-anchor-top-right\\\" />\\r\\n\\t\\t\\t<div className=\\\"macos-terminal-corner-anchor macos-terminal-corner-anchor-bottom-left\\\" />\\r\\n\\t\\t\\t<div className=\\\"macos-terminal-corner-anchor macos-terminal-corner-anchor-bottom-right\\\" />\\r\\n\\t\\t</>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst SelfTypingText = styled(({ isMobile, ...props }) => <code {...props} />)`\\r\\n\\tdisplay: inline;\\r\\n\\ttext-align: center;\\r\\n\\tfont-size: ${({ isMobile }) => (isMobile ? \\\"2.75vw\\\" : \\\"2vw\\\")};\\r\\n\\tcursor: type;\\r\\n\\tline-height: 1;\\r\\n\\tword-wrap: break-word;\\r\\n\\r\\n\\tspan {\\r\\n\\t\\tcolor: #76ff03 !important;\\r\\n\\t\\ttext-shadow: #76ff03 0 0 5px !important;\\r\\n\\t}\\r\\n\\r\\n\\tspan.Typewriter__wrapper::selection {\\r\\n\\t\\tcolor: #ffeb3b !important;\\r\\n\\t\\t-webkit-text-fill-color: #ffeb3b !important;\\r\\n\\t\\tbackground-color: #76ff03 !important;\\r\\n\\t}\\r\\n\\r\\n\\tspan.Typewriter__wrapper::-moz-selection {\\r\\n\\t\\tcolor: #ffeb3b !important;\\r\\n\\t\\t-webkit-text-fill-color: #ffeb3b !important;\\r\\n\\t\\tbackground-color: #76ff03 !important;\\r\\n\\t}\\r\\n\\r\\n\\tspan.Typewriter__cursor {\\r\\n\\t\\t-webkit-touch-callout: none !important;\\r\\n\\t\\t-webkit-user-select: none !important;\\r\\n\\t\\t-khtml-user-select: none !important;\\r\\n\\t\\t-moz-user-select: none !important;\\r\\n\\t\\t-ms-user-select: none !important;\\r\\n\\t\\tuser-select: none !important;\\r\\n\\t}\\r\\n\\r\\n\\t.Typewriter {\\r\\n\\t\\tdisplay: inline-block;\\r\\n\\t\\tborder-radius: ${({ isMobile }) => (isMobile ? \\\"1.8em\\\" : \\\"0.8em\\\")};\\r\\n\\t\\tpadding: 20px;\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction ConsoleLogText(props) {\\r\\n\\tconst typewriterOnInit =\\r\\n\\t\\t(isMobile, ...consoleLogLines) =>\\r\\n\\t\\t(typewriter) => {\\r\\n\\t\\t\\ttypewriter.pauseFor(1000);\\r\\n\\t\\t\\tconsoleLogLines.forEach((line, i, arr) => {\\r\\n\\t\\t\\t\\tif (i > 0) {\\r\\n\\t\\t\\t\\t\\ttypewriter.deleteChars(arr[i - 1].length + CONSOLE_LOG_SUFFIX.length);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\ttypewriter.pauseFor(250);\\r\\n\\t\\t\\t\\tif (i === 0) {\\r\\n\\t\\t\\t\\t\\ttypewriter.typeString(isMobile ? CONSOLE_LOG_PREFIX_MOBILE : CONSOLE_LOG_PREFIX);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\ttypewriter.typeString(line + CONSOLE_LOG_SUFFIX).callFunction(() => {\\r\\n\\t\\t\\t\\t\\tif (!document[`isPrintedConsoleLogLine${i + 1}`]) {\\r\\n\\t\\t\\t\\t\\t\\tconsole.log(line);\\r\\n\\t\\t\\t\\t\\t\\tdocument[`isPrintedConsoleLogLine${i + 1}`] = true;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t\\t\\tif (i < arr.length - 1) {\\r\\n\\t\\t\\t\\t\\ttypewriter.pauseFor(1500);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t});\\r\\n\\t\\t\\ttypewriter.pauseFor(3000);\\r\\n\\t\\t\\tfor (let i = 0; i < 5; i++) {\\r\\n\\t\\t\\t\\ttypewriter.deleteChars(1);\\r\\n\\t\\t\\t\\ttypewriter.pauseFor(50);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\ttypewriter.pauseFor(200);\\r\\n\\t\\t\\ttypewriter.start();\\r\\n\\t\\t};\\r\\n\\r\\n\\tconst typewriter = (\\r\\n\\t\\t<Typewriter\\r\\n\\t\\t\\toptions={{ delay: 50, deleteSpeed: 25, loop: true }}\\r\\n\\t\\t\\tonInit={typewriterOnInit(\\r\\n\\t\\t\\t\\tfalse,\\r\\n\\t\\t\\t\\t\\\"Welcome to my eportfolio\\\",\\r\\n\\t\\t\\t\\t\\\"Learn more about me here!\\\",\\r\\n\\t\\t\\t\\t\\\"And have a nice day~\\\"\\r\\n\\t\\t\\t)}\\r\\n\\t\\t/>\\r\\n\\t);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<div\\r\\n\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\tcursor: \\\"default\\\",\\r\\n\\t\\t\\t\\ttextAlign: \\\"center\\\",\\r\\n\\t\\t\\t\\tborderRadius: \\\"5px\\\",\\r\\n\\t\\t\\t\\tboxShadow: \\\"0 0 15px #455a64\\\",\\r\\n\\t\\t\\t\\tbackground: \\\"linear-gradient(to right, #4f355f, #493b52, #424242, #373737)\\\",\\r\\n\\t\\t\\t}}\\r\\n\\t\\t>\\r\\n\\t\\t\\t<MacTerminal>\\r\\n\\t\\t\\t\\t<MacTerminalButtons />\\r\\n\\t\\t\\t</MacTerminal>\\r\\n\\t\\t\\t<Responsive as={SelfTypingText} minWidth={responsiveMinWidth}>\\r\\n\\t\\t\\t\\t{typewriter}\\r\\n\\t\\t\\t</Responsive>\\r\\n\\t\\t\\t<Responsive as={SelfTypingText} maxWidth={responsiveMaxWidth} isMobile>\\r\\n\\t\\t\\t\\t{typewriter}\\r\\n\\t\\t\\t</Responsive>\\r\\n\\t\\t</div>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(ConsoleLogText, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as ConsoleLogText };\\r\\n\";","export default \"import { memo } from \\\"react\\\";\\r\\nimport { Navigate, useLocation } from \\\"react-router-dom\\\";\\r\\nimport { Helmet } from \\\"react-helmet\\\";\\r\\nimport { Grid, Segment } from \\\"semantic-ui-react\\\";\\r\\nimport { Avatar } from \\\"./Avatar\\\";\\r\\nimport { CircleShortcut } from \\\"./CircleShortcut\\\";\\r\\nimport { Body } from \\\"../../../Styles\\\";\\r\\nimport { GradientText } from \\\"../../../Styles\\\";\\r\\nimport { ConsoleLogText } from \\\"./ConsoleLogText\\\";\\r\\nimport moment from \\\"moment\\\";\\r\\n\\r\\nfunction Home(props) {\\r\\n\\tconst age = moment().diff(\\\"1994-11-06\\\", \\\"years\\\");\\r\\n\\r\\n\\tconst location = useLocation();\\r\\n\\r\\n\\treturn location.pathname !== \\\"/\\\" ? (\\r\\n\\t\\t<Navigate to=\\\"/\\\" replace />\\r\\n\\t) : (\\r\\n\\t\\t<Body>\\r\\n\\t\\t\\t<Helmet>\\r\\n\\t\\t\\t\\t<title>Home | {process.env.REACT_APP_TITLE}</title>\\r\\n\\t\\t\\t</Helmet>\\r\\n\\r\\n\\t\\t\\t<Grid stackable centered>\\r\\n\\t\\t\\t\\t<Grid.Column width={6} stretched>\\r\\n\\t\\t\\t\\t\\t<Avatar></Avatar>\\r\\n\\t\\t\\t\\t</Grid.Column>\\r\\n\\r\\n\\t\\t\\t\\t<Grid.Column width={10} stretched>\\r\\n\\t\\t\\t\\t\\t<Segment vertical basic>\\r\\n\\t\\t\\t\\t\\t\\t<ConsoleLogText />\\r\\n\\t\\t\\t\\t\\t</Segment>\\r\\n\\r\\n\\t\\t\\t\\t\\t<Segment vertical basic>\\r\\n\\t\\t\\t\\t\\t\\t<Grid stackable padded columns={3}>\\r\\n\\t\\t\\t\\t\\t\\t\\t<Grid.Column textAlign=\\\"center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<CircleShortcut\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlinkTo=\\\"/workExp\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttext=\\\"Work\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthemeColor=\\\"red\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormalColor=\\\"#f44336\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\thoverColor=\\\"#ffcdd2\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormalBg=\\\"#ffcdd2\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\thoverBg=\\\"#b71c1c\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tglowEffectBg=\\\"#f44336\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t</Grid.Column>\\r\\n\\t\\t\\t\\t\\t\\t\\t<Grid.Column textAlign=\\\"center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<CircleShortcut\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlinkTo=\\\"/hobbyProject\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttext=\\\"Hobby Projects\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthemeColor=\\\"blue\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormalColor=\\\"#2196f3\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\thoverColor=\\\"#bbdefb\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormalBg=\\\"#bbdefb\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\thoverBg=\\\"#0d47a1\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tglowEffectBg=\\\"#2196f3\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t</Grid.Column>\\r\\n\\t\\t\\t\\t\\t\\t\\t<Grid.Column textAlign=\\\"center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<CircleShortcut\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlinkTo=\\\"/blog\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttext=\\\"Blog\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthemeColor=\\\"green\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormalColor=\\\"#4caf50\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\thoverColor=\\\"#c8e6c9\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnormalBg=\\\"#c8e6c9\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\thoverBg=\\\"#1b5e20\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tglowEffectBg=\\\"#4caf50\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t</Grid.Column>\\r\\n\\t\\t\\t\\t\\t\\t</Grid>\\r\\n\\t\\t\\t\\t\\t</Segment>\\r\\n\\r\\n\\t\\t\\t\\t\\t<Segment vertical>\\r\\n\\t\\t\\t\\t\\t\\t<GradientText>\\r\\n\\t\\t\\t\\t\\t\\t\\tI am a {age}-year-old web developer who is enthusiastic about building software that\\r\\n\\t\\t\\t\\t\\t\\t\\trequires logical thinking, problem solving, creativity and design elements.\\r\\n\\t\\t\\t\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t\\t\\t\\tI find programming itself to be a great way to achieve things like automating repetitive\\r\\n\\t\\t\\t\\t\\t\\t\\twork. In this digital age, I am proud of being able to think digitally and do things\\r\\n\\t\\t\\t\\t\\t\\t\\tdigitally and keep up with the fashion.\\r\\n\\t\\t\\t\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t<br />I am seeking to work with a company where I can effectively utilize my versatile skill\\r\\n\\t\\t\\t\\t\\t\\t\\tset and innovative ideas to contribute towards the company's growth.\\r\\n\\t\\t\\t\\t\\t\\t</GradientText>\\r\\n\\t\\t\\t\\t\\t</Segment>\\r\\n\\t\\t\\t\\t</Grid.Column>\\r\\n\\t\\t\\t</Grid>\\r\\n\\t\\t</Body>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(Home, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as Home };\\r\\n\";","export default \"import { memo, useState } from \\\"react\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport { NoSelect } from \\\"../../../Styles\\\";\\r\\n\\r\\nconst HightlightedTextStyle = styled(NoSelect)`\\r\\n\\tdisplay: inline-block;\\r\\n\\tcolor: ${({ hovered }) => (hovered ? \\\"purple\\\" : \\\"gold\\\")};\\r\\n\\tbackground: ${({ hovered }) => (hovered ? \\\"gold\\\" : \\\"purple\\\")};\\r\\n\\t${({ hovered }) => (hovered ? \\\"cursor: pointer;\\\" : \\\"\\\")}\\r\\n\\tfont-size: 1.25em;\\r\\n\\tfont-weight: bold;\\r\\n\\tpadding: 2px 8px 2px 8px;\\r\\n\\tmargin: 0 3px 0 3px;\\r\\n\\tborder-radius: 5px;\\r\\n\\ttransition: 250ms;\\r\\n\\t-webkit-box-reflect: below 0em -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), to(rgba(255, 255, 255, 0.1)));\\r\\n`;\\r\\n\\r\\nconst openLink = (url) => window.open(url, \\\"_blank\\\", \\\"noopener\\\");\\r\\n\\r\\nfunction HightlightedText(props) {\\r\\n\\tconst { url } = props;\\r\\n\\r\\n\\tconst [isHovered, setHovered] = useState(false);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<HightlightedTextStyle\\r\\n\\t\\t\\t{...props}\\r\\n\\t\\t\\thovered={isHovered}\\r\\n\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\tonClick={() => {\\r\\n\\t\\t\\t\\tsetHovered(false);\\r\\n\\t\\t\\t\\topenLink(url);\\r\\n\\t\\t\\t}}\\r\\n\\t\\t/>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(HightlightedText, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as HightlightedText };\\r\\n\";","export default \"import { Fragment, memo, useState } from \\\"react\\\";\\r\\nimport { useDispatch } from \\\"react-redux\\\";\\r\\nimport { Helmet } from \\\"react-helmet\\\";\\r\\nimport { Header, Grid, Divider } from \\\"semantic-ui-react\\\";\\r\\nimport { HightlightedText } from \\\"./HightlightedText\\\";\\r\\nimport { Body, NormalText } from \\\"../../../Styles\\\";\\r\\nimport { changeImagePopupSource } from \\\"../../../../redux/action\\\";\\r\\n\\r\\nconst personalityConfigs = [\\r\\n\\t{\\r\\n\\t\\ttitle: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tMe Today (2021) <span style={{ fontWeight: \\\"normal\\\" }}>😎</span>\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tpersonalities: [\\\"I\\\", \\\"N\\\", \\\"T\\\", \\\"J\\\", \\\"-T\\\"],\\r\\n\\t\\tisActive: true,\\r\\n\\t},\\r\\n\\t{ title: \\\"Me Back in 2019\\\", personalities: [\\\"I\\\", \\\"S\\\", \\\"T\\\", \\\"J\\\", \\\"-A\\\"] },\\r\\n];\\r\\n\\r\\nconst personalityCombinationDescriptions = {\\r\\n\\t\\\"INTJ-T\\\": \\\"I question everything!\\\",\\r\\n\\t\\\"ISTJ-A\\\": \\\"Logic means a lot to me!\\\",\\r\\n};\\r\\n\\r\\nconst personalityNames = {\\r\\n\\tI: \\\"introverted\\\",\\r\\n\\tE: \\\"extraverted\\\",\\r\\n\\tN: \\\"intuitive\\\",\\r\\n\\tS: \\\"observant\\\",\\r\\n\\tT: \\\"thinking\\\",\\r\\n\\tF: \\\"feeling\\\",\\r\\n\\tJ: \\\"judging\\\",\\r\\n\\tP: \\\"prospecting\\\",\\r\\n\\t\\\"-A\\\": \\\"assertive\\\",\\r\\n\\t\\\"-T\\\": \\\"turbulent\\\",\\r\\n};\\r\\n\\r\\nconst personalityLinks = {\\r\\n\\tI: \\\"https://www.16personalities.com/articles/mind-introverted-vs-extraverted\\\",\\r\\n\\tE: \\\"https://www.16personalities.com/articles/mind-introverted-vs-extraverted\\\",\\r\\n\\tN: \\\"https://www.16personalities.com/articles/energy-intuitive-vs-observant\\\",\\r\\n\\tS: \\\"https://www.16personalities.com/articles/energy-intuitive-vs-observant\\\",\\r\\n\\tT: \\\"https://www.16personalities.com/articles/nature-thinking-vs-feeling\\\",\\r\\n\\tF: \\\"https://www.16personalities.com/articles/nature-thinking-vs-feeling\\\",\\r\\n\\tJ: \\\"https://www.16personalities.com/articles/tactics-judging-vs-prospecting\\\",\\r\\n\\tP: \\\"https://www.16personalities.com/articles/tactics-judging-vs-prospecting\\\",\\r\\n\\t\\\"-A\\\": \\\"https://www.16personalities.com/articles/identity-assertive-vs-turbulent\\\",\\r\\n\\t\\\"-T\\\": \\\"https://www.16personalities.com/articles/identity-assertive-vs-turbulent\\\",\\r\\n};\\r\\n\\r\\nconst personalityDescriptions = {\\r\\n\\tI: \\\"I feel energetic and comfortable when work independently. I am self-reflective and studious.\\\",\\r\\n\\tE: \\\"\\\",\\r\\n\\tN: \\\"I like thinking in different dimensions and exploring possibilities. I can provide new directions when necessary.\\\",\\r\\n\\tS: \\\"I am pragmatic so I see things by looking at how to make them in reality. I often focus on details just like every bit of this website: fonts, colours and backgrounds.\\\",\\r\\n\\tT: \\\"I make decision based on truths and principles and by analyzing the pros and cons. As a result, I enjoy technical fields where logic is important to finding the solution.\\\",\\r\\n\\tF: \\\"\\\",\\r\\n\\tJ: \\\"I am task-oriented and I like to have things well-organized and planned.\\\",\\r\\n\\tP: \\\"\\\",\\r\\n\\t\\\"-A\\\": \\\"I am confident and do not worry too much.\\\",\\r\\n\\t\\\"-T\\\": \\\"I am eager to improve my skills. I am also a perfectionist.\\\",\\r\\n};\\r\\n\\r\\nfunction Personality(props) {\\r\\n\\tconst [queryString, setQueryString] = useState(\\\"\\\");\\r\\n\\r\\n\\tconst dispatch = useDispatch();\\r\\n\\r\\n\\tconst constructPersonalitySection = (title, personalities, isActive) => {\\r\\n\\t\\tconst imageSrc = `personality-test-result-${personalities.join(\\\"\\\").replaceAll(\\\"-\\\", \\\"\\\").toLowerCase()}.png`;\\r\\n\\t\\tconst url = `https://www.16personalities.com/${personalities\\r\\n\\t\\t\\t.slice(0, 4)\\r\\n\\t\\t\\t.map((e) => e.toLowerCase())\\r\\n\\t\\t\\t.join(\\\"\\\")}-personality`;\\r\\n\\r\\n\\t\\treturn (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\t<Header size=\\\"large\\\" style={{ cursor: \\\"default\\\" }}>\\r\\n\\t\\t\\t\\t\\t{title}\\r\\n\\t\\t\\t\\t</Header>\\r\\n\\r\\n\\t\\t\\t\\t<div style={{ ...(!isActive && { opacity: 0.5 }) }}>\\r\\n\\t\\t\\t\\t\\t<Grid stackable>\\r\\n\\t\\t\\t\\t\\t\\t<Grid.Column width={6}>\\r\\n\\t\\t\\t\\t\\t\\t\\t<picture>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<source\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"image/webp\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsrcSet={encodeURIComponent(imageSrc.replace(/\\\\.(jpg|png|gif)/, \\\".webp\\\"))}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<img\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsrc={`${imageSrc}${queryString}`}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\talt=\\\"Personality test result\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdraggable=\\\"false\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclassName=\\\"ui bordered rounded image\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonContextMenu={(e) => e.preventDefault()}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonClick={() =>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdispatch(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tchangeImagePopupSource({\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\timages: [imageSrc],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tactiveIndex: 0,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonError={() => setTimeout(() => setQueryString(`?${Math.random()}`), 1000)}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tstyle={{ cursor: \\\"pointer\\\" }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t</picture>\\r\\n\\t\\t\\t\\t\\t\\t</Grid.Column>\\r\\n\\t\\t\\t\\t\\t\\t<Grid.Column width={10}>\\r\\n\\t\\t\\t\\t\\t\\t\\t<NormalText>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tI am <HightlightedText url={url}>{personalities.join(\\\"\\\")}</HightlightedText>.{\\\" \\\"}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{personalityCombinationDescriptions[personalities.join(\\\"\\\")]}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{personalities.map((personality, i) => (\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Fragment key={i}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br />I am a\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<HightlightedText url={personalityLinks[personality]}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{personalityNames[personality]} ({personality})\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</HightlightedText>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tperson - {personalityDescriptions[personality]}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Fragment>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t))}\\r\\n\\t\\t\\t\\t\\t\\t\\t</NormalText>\\r\\n\\t\\t\\t\\t\\t\\t</Grid.Column>\\r\\n\\t\\t\\t\\t\\t</Grid>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</>\\r\\n\\t\\t);\\r\\n\\t};\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<Body>\\r\\n\\t\\t\\t<Helmet>\\r\\n\\t\\t\\t\\t<title>Who I am | {process.env.REACT_APP_TITLE}</title>\\r\\n\\t\\t\\t</Helmet>\\r\\n\\r\\n\\t\\t\\t<Header size=\\\"huge\\\" style={{ cursor: \\\"default\\\" }}>\\r\\n\\t\\t\\t\\tWho I am\\r\\n\\t\\t\\t</Header>\\r\\n\\t\\t\\t<Divider section />\\r\\n\\r\\n\\t\\t\\t{personalityConfigs.map(({ title, personalities, isActive }, i) => (\\r\\n\\t\\t\\t\\t<Fragment key={i}>\\r\\n\\t\\t\\t\\t\\t{constructPersonalitySection(title, personalities, isActive)}\\r\\n\\t\\t\\t\\t\\t{i < personalityConfigs.length - 1 && <Divider section />}\\r\\n\\t\\t\\t\\t</Fragment>\\r\\n\\t\\t\\t))}\\r\\n\\t\\t</Body>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(Personality, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as Personality };\\r\\n\";","export default \"import { memo, useState } from \\\"react\\\";\\r\\nimport { Header, Icon } from \\\"semantic-ui-react\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\n\\r\\nconst ContactItemWrapper = styled(({ hovered, ...props }) => <div {...props} />)`\\r\\n\\t.contact-item {\\r\\n\\t\\ttransition: 250ms;\\r\\n\\t\\topacity: ${({ hovered }) => (hovered ? 1 : 0.75)};\\r\\n\\t\\t${({ hovered }) => (hovered ? \\\"transform: scale(1.05);\\\" : \\\"\\\")}\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction ContactItem(props) {\\r\\n\\tconst { href, icon, color, iconRotation, header, subHeader } = props;\\r\\n\\tconst isUrl = new RegExp(\\\"^https?://\\\", \\\"i\\\").test(href);\\r\\n\\r\\n\\tconst [isHovered, setHovered] = useState(false);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t// eslint-disable-next-line react/jsx-no-target-blank\\r\\n\\t\\t<a href={href} target={isUrl ? \\\"_blank\\\" : null} rel={isUrl ? \\\"external nofollow noopener noreferrer\\\" : null}>\\r\\n\\t\\t\\t<ContactItemWrapper hovered={isHovered}>\\r\\n\\t\\t\\t\\t<Header\\r\\n\\t\\t\\t\\t\\tclassName=\\\"contact-item\\\"\\r\\n\\t\\t\\t\\t\\tas=\\\"h4\\\"\\r\\n\\t\\t\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\t\\t\\tonClick={() => setHovered(false)}\\r\\n\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t<Icon name={icon} color={color} rotated={iconRotation} />\\r\\n\\t\\t\\t\\t\\t<Header.Content>\\r\\n\\t\\t\\t\\t\\t\\t{header}\\r\\n\\t\\t\\t\\t\\t\\t<Header.Subheader>{subHeader}</Header.Subheader>\\r\\n\\t\\t\\t\\t\\t</Header.Content>\\r\\n\\t\\t\\t\\t</Header>\\r\\n\\t\\t\\t</ContactItemWrapper>\\r\\n\\t\\t</a>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(ContactItem, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as ContactItem };\\r\\n\";","export default \"import { memo } from \\\"react\\\";\\r\\nimport { Grid, Icon, Header, Divider, Responsive } from \\\"semantic-ui-react\\\";\\r\\nimport { ContactItem } from \\\"./ContactItem\\\";\\r\\nimport { Body, NoSelect } from \\\"./../Styles\\\";\\r\\nimport { responsiveMaxWidth, responsiveMinWidth } from \\\"../../config\\\";\\r\\nimport preval from \\\"preval.macro\\\";\\r\\nimport GitInfo from \\\"react-git-info/macro\\\";\\r\\nimport moment from \\\"moment\\\";\\r\\n\\r\\nfunction SiteFooter(props) {\\r\\n\\tconst currentYear = new Date().getFullYear();\\r\\n\\tconst lastUpdatedTime = preval`module.exports = new Date().getTime();`;\\r\\n\\r\\n\\tconst gitInfo = GitInfo();\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<div className=\\\"site-footer\\\">\\r\\n\\t\\t\\t<Body>\\r\\n\\t\\t\\t\\t<Divider horizontal section>\\r\\n\\t\\t\\t\\t\\t<Header as=\\\"h5\\\" style={{ opacity: 0.5 }}>\\r\\n\\t\\t\\t\\t\\t\\t<Icon name=\\\"react\\\" />\\r\\n\\t\\t\\t\\t\\t\\tReach Me Now!\\r\\n\\t\\t\\t\\t\\t</Header>\\r\\n\\t\\t\\t\\t</Divider>\\r\\n\\t\\t\\t\\t<Grid stackable padded columns={3}>\\r\\n\\t\\t\\t\\t\\t<Grid.Column>\\r\\n\\t\\t\\t\\t\\t\\t<ContactItem\\r\\n\\t\\t\\t\\t\\t\\t\\thref=\\\"tel:+85263301333\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\ticon=\\\"phone\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\ticonRotation=\\\"clockwise\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tcolor=\\\"teal\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\theader=\\\"Mobile\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tsubHeader=\\\"6330 1333\\\"\\r\\n\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t</Grid.Column>\\r\\n\\t\\t\\t\\t\\t<Grid.Column>\\r\\n\\t\\t\\t\\t\\t\\t<ContactItem\\r\\n\\t\\t\\t\\t\\t\\t\\thref=\\\"mailto:michaelboyboy@gmail.com\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\ticon=\\\"mail\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tcolor=\\\"red\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\theader=\\\"Email\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tsubHeader=\\\"michaelboyboy@gmail.com\\\"\\r\\n\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t</Grid.Column>\\r\\n\\t\\t\\t\\t\\t<Grid.Column>\\r\\n\\t\\t\\t\\t\\t\\t<ContactItem\\r\\n\\t\\t\\t\\t\\t\\t\\thref=\\\"https://hk.linkedin.com/in/mickchung\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\ticon=\\\"linkedin\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tcolor=\\\"blue\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\theader=\\\"LinkedIn\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tsubHeader=\\\"hk.linkedin.com/in/mickchung\\\"\\r\\n\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t</Grid.Column>\\r\\n\\t\\t\\t\\t</Grid>\\r\\n\\r\\n\\t\\t\\t\\t<Divider />\\r\\n\\r\\n\\t\\t\\t\\t{[\\r\\n\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\tprops: {\\r\\n\\t\\t\\t\\t\\t\\t\\tmaxWidth: responsiveMaxWidth,\\r\\n\\t\\t\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t\\t\\tstyle: {\\r\\n\\t\\t\\t\\t\\t\\t\\tdiv: {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfontSize: \\\"2.75vw\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\tprops: {\\r\\n\\t\\t\\t\\t\\t\\t\\tminWidth: responsiveMinWidth,\\r\\n\\t\\t\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t\\t\\tstyle: {\\r\\n\\t\\t\\t\\t\\t\\t\\tlastUpdatedOn: {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfloat: \\\"right\\\",\\r\\n\\t\\t\\t\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t].map(({ props = {}, style = {} }, i) => (\\r\\n\\t\\t\\t\\t\\t<Responsive key={i} {...props}>\\r\\n\\t\\t\\t\\t\\t\\t<div style={{ color: \\\"#4ba3c7\\\", ...(style.div || {}) }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t<NoSelect style={{ display: \\\"inline-block\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tCopyright © {currentYear} Chung Cheuk Hang Michael. All rights reserved.\\r\\n\\t\\t\\t\\t\\t\\t\\t</NoSelect>\\r\\n\\t\\t\\t\\t\\t\\t\\t<NoSelect style={{ display: \\\"inline-block\\\", ...(style.lastUpdatedOn || {}) }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tLast Updated On:{\\\" \\\"}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttitle={moment(lastUpdatedTime).format(\\\"D MMM YYYY HH:mm:ss\\\")}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tstyle={{ cursor: \\\"help\\\" }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{moment(lastUpdatedTime).format(\\\"D MMM YYYY\\\")}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>{\\\" \\\"}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/{\\\" \\\"}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span title={gitInfo.commit.hash} style={{ cursor: \\\"help\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{gitInfo.commit.shortHash}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</NoSelect>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</Responsive>\\r\\n\\t\\t\\t\\t))}\\r\\n\\r\\n\\t\\t\\t\\t<Divider hidden />\\r\\n\\t\\t\\t</Body>\\r\\n\\t\\t</div>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(SiteFooter, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as SiteFooter };\\r\\n\";","export default \"import { memo, useState } from \\\"react\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport { NoSelect } from \\\"../Styles\\\";\\r\\nimport { LocalStorageService } from \\\"../../service\\\";\\r\\n\\r\\nconst CookiesConsentWrapper = styled(({ consent, ...props }) => <div {...props} />)`\\r\\n\\tdisplay: flex;\\r\\n\\tjustify-content: center;\\r\\n\\talign-items: center;\\r\\n\\r\\n\\tposition: fixed;\\r\\n\\tbottom: ${({ consent }) => (consent === 2 ? 0 : \\\"-100%\\\")};\\r\\n\\twidth: 100%;\\r\\n\\tpadding: 0.75em 1em;\\r\\n\\tfont-size: 16px;\\r\\n\\tcolor: #c1d5e0;\\r\\n\\tbackground-color: rgba(38, 50, 56, 0.95);\\r\\n\\tbox-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\r\\n\\tz-index: 2000;\\r\\n\\tcursor: default;\\r\\n\\r\\n\\tanimation: ${({ consent }) => (consent === 2 ? \\\"close\\\" : \\\"expand\\\")} 1.5s forwards;\\r\\n\\t${({ consent }) => (consent === 2 ? \\\"\\\" : \\\"animation-delay: 1s;\\\")}\\r\\n\\r\\n\\t@keyframes expand {\\r\\n\\t\\t100% {\\r\\n\\t\\t\\tbottom: 0;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t@keyframes close {\\r\\n\\t\\t100% {\\r\\n\\t\\t\\tbottom: -100%;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nconst CookiesConsentButton = styled.div`\\r\\n\\tdisplay: flex;\\r\\n\\tjustify-content: center;\\r\\n\\talign-items: center;\\r\\n\\r\\n\\tpadding: 10px 15px;\\r\\n\\tmargin-left: 1em;\\r\\n\\tz-index: 2001;\\r\\n\\tborder-radius: 5px;\\r\\n\\tcursor: pointer;\\r\\n\\tfont-size: 15px;\\r\\n\\tfont-weight: bold;\\r\\n\\tcolor: #f57f17;\\r\\n\\tbackground-color: #fdd835;\\r\\n\\twhite-space: nowrap;\\r\\n\\ttransition: 250ms !important;\\r\\n\\r\\n\\t&:hover {\\r\\n\\t\\tfilter: brightness(0.85);\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction CookiesConsent(props) {\\r\\n\\t// 1 means already accepted before\\r\\n\\t// 2 means just accepted\\r\\n\\t// else means not accepted yet\\r\\n\\tconst [consent, setConsent] = useState(LocalStorageService.getCookiesConsent());\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<>\\r\\n\\t\\t\\t{consent !== 1 && (\\r\\n\\t\\t\\t\\t<NoSelect>\\r\\n\\t\\t\\t\\t\\t<CookiesConsentWrapper consent={consent}>\\r\\n\\t\\t\\t\\t\\t\\tThis website uses cookies, local storage and/or similar technologies to store user settings so\\r\\n\\t\\t\\t\\t\\t\\tas to improve user experience.\\r\\n\\t\\t\\t\\t\\t\\t<CookiesConsentButton\\r\\n\\t\\t\\t\\t\\t\\t\\tonClick={() => {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tsetConsent(2);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tLocalStorageService.setCookiesConsent(true);\\r\\n\\t\\t\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\tAccept\\r\\n\\t\\t\\t\\t\\t\\t</CookiesConsentButton>\\r\\n\\t\\t\\t\\t\\t</CookiesConsentWrapper>\\r\\n\\t\\t\\t\\t</NoSelect>\\r\\n\\t\\t\\t)}\\r\\n\\t\\t</>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(CookiesConsent, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as CookiesConsent };\\r\\n\";","export default \"import { memo } from \\\"react\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport { MenuItem } from \\\"./MenuItem\\\";\\r\\n\\r\\nconst PATHS = [\\r\\n\\t{\\r\\n\\t\\tpath: \\\"/\\\",\\r\\n\\t\\ttitle: \\\"Home\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpath: \\\"/workExp\\\",\\r\\n\\t\\ttitle: \\\"Work Experiences\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpath: \\\"/hobbyProject\\\",\\r\\n\\t\\ttitle: \\\"Hobby Projects\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpath: \\\"/personality\\\",\\r\\n\\t\\ttitle: \\\"Personality\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpath: \\\"/blog\\\",\\r\\n\\t\\ttitle: \\\"Blog\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpath: \\\"/contact\\\",\\r\\n\\t\\ttitle: \\\"Contact\\\",\\r\\n\\t},\\r\\n];\\r\\n\\r\\nconst Overlay = styled(({ navMenuOpen, ...props }) => <div {...props} />)`\\r\\n\\tposition: fixed;\\r\\n\\ttop: 0;\\r\\n\\tleft: 0;\\r\\n\\twidth: 100%;\\r\\n\\theight: 100%;\\r\\n\\ttransition: 250ms;\\r\\n\\toverflow: hidden;\\r\\n\\tz-index: 1000;\\r\\n\\r\\n\\topacity: ${({ navMenuOpen }) => (navMenuOpen ? 1 : 0)};\\r\\n\\tvisibility: ${({ navMenuOpen }) => (navMenuOpen ? \\\"visible\\\" : \\\"hidden\\\")};\\r\\n\\r\\n\\tli {\\r\\n\\t\\tanimation: ${({ navMenuOpen }) => (navMenuOpen ? \\\"fadeInRight 0.5s ease forwards\\\" : \\\"\\\")};\\r\\n\\t\\tanimation-delay: ${({ navMenuOpen }) => (navMenuOpen ? \\\"0.1s\\\" : \\\"\\\")};\\r\\n\\r\\n\\t\\t&:nth-of-type(2) {\\r\\n\\t\\t\\tanimation-delay: ${({ navMenuOpen }) => (navMenuOpen ? \\\"0.2s\\\" : \\\"\\\")};\\r\\n\\t\\t}\\r\\n\\t\\t&:nth-of-type(3) {\\r\\n\\t\\t\\tanimation-delay: ${({ navMenuOpen }) => (navMenuOpen ? \\\"0.3s\\\" : \\\"\\\")};\\r\\n\\t\\t}\\r\\n\\t\\t&:nth-of-type(4) {\\r\\n\\t\\t\\tanimation-delay: ${({ navMenuOpen }) => (navMenuOpen ? \\\"0.4s\\\" : \\\"\\\")};\\r\\n\\t\\t}\\r\\n\\t\\t&:nth-of-type(5) {\\r\\n\\t\\t\\tanimation-delay: ${({ navMenuOpen }) => (navMenuOpen ? \\\"0.5s\\\" : \\\"\\\")};\\r\\n\\t\\t}\\r\\n\\t\\t&:nth-of-type(6) {\\r\\n\\t\\t\\tanimation-delay: ${({ navMenuOpen }) => (navMenuOpen ? \\\"0.6s\\\" : \\\"\\\")};\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tnav {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\theight: 70%;\\r\\n\\t\\ttop: 50%;\\r\\n\\t\\ttransform: translateY(-50%);\\r\\n\\t\\tfont-size: 30px;\\r\\n\\t\\tfont-weight: bold;\\r\\n\\t\\ttext-align: center;\\r\\n\\t}\\r\\n\\r\\n\\tul {\\r\\n\\t\\tlist-style: none;\\r\\n\\t\\tpadding: 0;\\r\\n\\t\\tmargin: 0 auto;\\r\\n\\t\\tdisplay: inline-block;\\r\\n\\t\\tposition: relative;\\r\\n\\t\\theight: 100%;\\r\\n\\r\\n\\t\\tli {\\r\\n\\t\\t\\tdisplay: block;\\r\\n\\t\\t\\theight: 25%;\\r\\n\\t\\t\\theight: calc(100% / ${PATHS.length});\\r\\n\\t\\t\\tmin-height: 50px;\\r\\n\\t\\t\\tposition: relative;\\r\\n\\t\\t\\topacity: 0;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction FullScreenMenu(props) {\\r\\n\\tconst { navMenuOpen, menuItemCallback } = props;\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<Overlay navMenuOpen={navMenuOpen}>\\r\\n\\t\\t\\t<nav>\\r\\n\\t\\t\\t\\t<ul>\\r\\n\\t\\t\\t\\t\\t{PATHS.map((path, i) => (\\r\\n\\t\\t\\t\\t\\t\\t<li key={i}>\\r\\n\\t\\t\\t\\t\\t\\t\\t<MenuItem\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttitle={path.title}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tpath={path.path}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tmenuItemCallback={menuItemCallback}\\r\\n\\t\\t\\t\\t\\t\\t\\t></MenuItem>\\r\\n\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t))}\\r\\n\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t</nav>\\r\\n\\t\\t</Overlay>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(FullScreenMenu, (prev, next) => prev.navMenuOpen === next.navMenuOpen);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as FullScreenMenu };\\r\\n\";","export default \"import { memo, useState } from \\\"react\\\";\\r\\nimport { Link, useLocation } from \\\"react-router-dom\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\n\\r\\nconst MenuItemWrapper = styled(({ hovered, ...props }) => <span {...props} />)`\\r\\n\\ta {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\tcolor: #e91e63;\\r\\n\\t\\ttext-decoration: none;\\r\\n\\t\\toverflow: hidden;\\r\\n\\r\\n\\t\\t-webkit-touch-callout: none;\\r\\n\\t\\t-webkit-user-select: none;\\r\\n\\t\\t-khtml-user-select: none;\\r\\n\\t\\t-moz-user-select: none;\\r\\n\\t\\t-ms-user-select: none;\\r\\n\\t\\tuser-select: none;\\r\\n\\t\\t-webkit-user-drag: none;\\r\\n\\t\\t-khtml-user-drag: none;\\r\\n\\t\\t-moz-user-drag: none;\\r\\n\\t\\t-ms-user-drag: none;\\r\\n\\t\\tuser-drag: none;\\r\\n\\r\\n\\t\\t&::after {\\r\\n\\t\\t\\tcontent: \\\"\\\";\\r\\n\\t\\t\\tposition: absolute;\\r\\n\\t\\t\\tbottom: 0;\\r\\n\\t\\t\\tleft: 50%;\\r\\n\\t\\t\\twidth: ${({ hovered }) => (hovered ? 100 : 0)}%;\\r\\n\\t\\t\\ttransform: translateX(-50%);\\r\\n\\t\\t\\theight: 3px;\\r\\n\\t\\t\\tbackground: #e91e63;\\r\\n\\t\\t\\ttransition: 250ms;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction MenuItem(props) {\\r\\n\\tconst { title, path, menuItemCallback } = props;\\r\\n\\r\\n\\tconst [isHovered, setHovered] = useState(false);\\r\\n\\r\\n\\tconst { pathname } = useLocation();\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<MenuItemWrapper hovered={isHovered}>\\r\\n\\t\\t\\t<Link\\r\\n\\t\\t\\t\\tclassName=\\\"code\\\"\\r\\n\\t\\t\\t\\tto={path}\\r\\n\\t\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonClick={() => {\\r\\n\\t\\t\\t\\t\\tsetHovered(false);\\r\\n\\t\\t\\t\\t\\tif (pathname !== path && menuItemCallback) {\\r\\n\\t\\t\\t\\t\\t\\tmenuItemCallback();\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\t\\t...(pathname === path && {\\r\\n\\t\\t\\t\\t\\t\\topacity: 0.25,\\r\\n\\t\\t\\t\\t\\t\\tpointerEvents: \\\"none\\\",\\r\\n\\t\\t\\t\\t\\t}),\\r\\n\\t\\t\\t\\t}}\\r\\n\\t\\t\\t>\\r\\n\\t\\t\\t\\t{title}\\r\\n\\t\\t\\t</Link>\\r\\n\\t\\t</MenuItemWrapper>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(\\r\\n\\tMenuItem,\\r\\n\\t(prev, next) =>\\r\\n\\t\\tprev.title === next.title && prev.path === next.path && prev.menuItemCallback === next.menuItemCallback\\r\\n);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as MenuItem };\\r\\n\";","export default \"import styled from \\\"styled-components\\\";\\r\\nimport { Button } from \\\"semantic-ui-react\\\";\\r\\n\\r\\nconst ScrollToTopButton = styled(({ navMenuOpen, ...props }) => <Button {...props} />)`\\r\\n\\tbottom: 75px;\\r\\n\\tright: 20px;\\r\\n\\tposition: fixed;\\r\\n\\tz-index: 1001;\\r\\n\\ttransition: all 250ms, right 0ms !important;\\r\\n\\tbox-shadow: 0 0 10px rgba(0, 0, 0, 0.5) !important;\\r\\n\\r\\n\\t@media (hover: hover) {\\r\\n\\t\\tright: ${({ navMenuOpen }) => (navMenuOpen ? \\\"32px\\\" : \\\"20px\\\")};\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nconst NavMenuButtonShadow = styled(({ navMenuOpen, ...props }) => <div {...props} />)`\\r\\n\\twidth: 40px;\\r\\n\\theight: 40px;\\r\\n\\tbottom: 20px;\\r\\n\\tright: 20px;\\r\\n\\tposition: fixed;\\r\\n\\tmargin-right: 4.5px;\\r\\n\\tz-index: 1001;\\r\\n\\tborder-radius: 10px;\\r\\n\\ttransition: all 250ms, right 0ms !important;\\r\\n\\tbackground: linear-gradient(-45deg, #ffa63d, #ff3d77, #338aff, #3cf0c5);\\r\\n\\tbackground-size: 600%;\\r\\n\\tanimation: animated-button 16s linear infinite !important;\\r\\n\\tfilter: blur(15px);\\r\\n\\tpointer-events: none;\\r\\n\\r\\n\\t@media (hover: hover) {\\r\\n\\t\\tright: ${({ navMenuOpen }) => (navMenuOpen ? \\\"32px\\\" : \\\"20px\\\")};\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nconst ButtonsBackground = styled(({ show, navMenuOpen, ...props }) => <div {...props} />)`\\r\\n\\tposition: fixed;\\r\\n\\tdisplay: block;\\r\\n\\tbottom: 0;\\r\\n\\tright: 0;\\r\\n\\twidth: 200px;\\r\\n\\theight: 275px;\\r\\n\\tz-index: 1000;\\r\\n\\tpointer-events: none;\\r\\n\\ttransition: 0ms !important;\\r\\n\\tbackground: linear-gradient(\\r\\n\\t\\tto bottom right,\\r\\n\\t\\ttransparent,\\r\\n\\t\\ttransparent,\\r\\n\\t\\ttransparent,\\r\\n\\t\\trgba(0, 0, 0, 0.25),\\r\\n\\t\\trgba(0, 0, 0, 0.7)\\r\\n\\t);\\r\\n\\t${({ show }) => (show ? \\\"\\\" : \\\"opacity: 0;\\\")}\\r\\n\\r\\n\\t@media (hover: hover) {\\r\\n\\t\\tright: ${({ navMenuOpen }) => (navMenuOpen ? \\\"0px\\\" : \\\"-12px\\\")};\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nconst exports = { ScrollToTopButton, NavMenuButtonShadow, ButtonsBackground };\\r\\nexport default exports;\\r\\nexport { ScrollToTopButton, NavMenuButtonShadow, ButtonsBackground };\\r\\n\";","export default \"import { memo, useState, useEffect } from \\\"react\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\n\\r\\nconst NavMenuButtonWrapper = styled(({ hovered, navMenuOpen, ...props }) => <div {...props} />)`\\r\\n\\twidth: 40px;\\r\\n\\theight: 40px;\\r\\n\\tbottom: 20px;\\r\\n\\tright: 20px;\\r\\n\\tposition: fixed;\\r\\n\\tmargin-right: 4.5px;\\r\\n\\tz-index: 1002;\\r\\n\\tborder-radius: 10px;\\r\\n\\tcursor: pointer;\\r\\n\\ttransition: all 250ms, right 0ms !important;\\r\\n\\tbackground: linear-gradient(-45deg, #ffa63d, #ff3d77, #338aff, #3cf0c5);\\r\\n\\tbackground-size: 600%;\\r\\n\\tanimation: animated-button 16s linear infinite !important;\\r\\n\\tbox-shadow: 0 0 10px rgba(0, 0, 0, 0.5) !important;\\r\\n\\r\\n\\t${({ hovered }) =>\\r\\n\\t\\thovered\\r\\n\\t\\t\\t? `\\r\\n\\tfilter: brightness(0.8);\\r\\n\\r\\n\\tspan.middle {\\r\\n\\t\\topacity: ${({ navMenuOpen }) => (navMenuOpen ? 0 : 1)};\\r\\n\\t}\\r\\n`\\r\\n\\t\\t\\t: \\\"\\\"}\\r\\n\\r\\n\\t@keyframes animated-button {\\r\\n\\t\\t0% {\\r\\n\\t\\t\\tbackground-position: 0% 50%;\\r\\n\\t\\t}\\r\\n\\t\\t50% {\\r\\n\\t\\t\\tbackground-position: 100% 50%;\\r\\n\\t\\t}\\r\\n\\t\\t100% {\\r\\n\\t\\t\\tbackground-position: 0% 50%;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t@media (hover: hover) {\\r\\n\\t\\tright: ${({ navMenuOpen }) => (navMenuOpen ? \\\"32px\\\" : \\\"20px\\\")};\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nconst NavMenuButtonLine = styled(({ navMenuOpen, ...props }) => <span {...props} />)`\\r\\n\\tbackground: white;\\r\\n\\twidth: 24px;\\r\\n\\theight: 4px;\\r\\n\\tposition: absolute;\\r\\n\\ttop: 9px;\\r\\n\\tleft: 8px;\\r\\n\\ttransition: 0.35s ease;\\r\\n\\r\\n\\t&:nth-of-type(1) {\\r\\n\\t\\ttransform: ${({ navMenuOpen }) => (navMenuOpen ? \\\"translateY(9px) translateX(0) rotate(45deg)\\\" : \\\"\\\")};\\r\\n\\t}\\r\\n\\r\\n\\t&:nth-of-type(2) {\\r\\n\\t\\ttop: 18px;\\r\\n\\t\\t${({ navMenuOpen }) => (navMenuOpen ? \\\"opacity: 0;\\\" : \\\"\\\")}\\r\\n\\t}\\r\\n\\r\\n\\t&:nth-of-type(3) {\\r\\n\\t\\ttop: 27px;\\r\\n\\t\\ttransform: ${({ navMenuOpen }) => (navMenuOpen ? \\\"translateY(-9px) translateX(0) rotate(-45deg)\\\" : \\\"\\\")};\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction NavMenuButton(props) {\\r\\n\\tconst { navMenuOpen, show, action } = props;\\r\\n\\r\\n\\tconst [isHovered, setHovered] = useState(false);\\r\\n\\r\\n\\tuseEffect(() => {\\r\\n\\t\\tdocument.body.style.overflow = navMenuOpen ? \\\"hidden\\\" : null;\\r\\n\\t}, [navMenuOpen]);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<NavMenuButtonWrapper\\r\\n\\t\\t\\thovered={isHovered}\\r\\n\\t\\t\\tnavMenuOpen={navMenuOpen}\\r\\n\\t\\t\\tstyle={{\\r\\n\\t\\t\\t\\topacity: show ? 1 : 0,\\r\\n\\t\\t\\t\\t...(!show && { pointerEvents: \\\"none\\\" }),\\r\\n\\t\\t\\t}}\\r\\n\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\tonClick={() => {\\r\\n\\t\\t\\t\\tsetHovered(false);\\r\\n\\t\\t\\t\\tif (typeof action === \\\"function\\\") {\\r\\n\\t\\t\\t\\t\\taction();\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}}\\r\\n\\t\\t>\\r\\n\\t\\t\\t<NavMenuButtonLine className=\\\"top\\\" navMenuOpen={navMenuOpen} />\\r\\n\\t\\t\\t<NavMenuButtonLine className=\\\"middle\\\" navMenuOpen={navMenuOpen} />\\r\\n\\t\\t\\t<NavMenuButtonLine className=\\\"bottom\\\" navMenuOpen={navMenuOpen} />\\r\\n\\t\\t</NavMenuButtonWrapper>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(\\r\\n\\tNavMenuButton,\\r\\n\\t(prev, next) => prev.navMenuOpen === next.navMenuOpen && prev.show === next.show && prev.action === next.action\\r\\n);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as NavMenuButton };\\r\\n\";","export default \"import { memo, useState } from \\\"react\\\";\\r\\nimport { Link, useLocation } from \\\"react-router-dom\\\";\\r\\nimport { Container, Menu, Dropdown, Responsive } from \\\"semantic-ui-react\\\";\\r\\nimport { NameAndRole, Name, Role } from \\\"./Styles\\\";\\r\\nimport { Body } from \\\"./../Styles\\\";\\r\\nimport { responsiveMinWidth } from \\\"../../config\\\";\\r\\n\\r\\nfunction SiteHeader(props) {\\r\\n\\tconst [openExp, setOpenExp] = useState(false);\\r\\n\\r\\n\\tconst location = useLocation();\\r\\n\\tconst currentPath = location.pathname;\\r\\n\\r\\n\\tconst linkPath = (to) => ({\\r\\n\\t\\t...(currentPath === to ? {} : { as: Link, to }),\\r\\n\\t\\tactive: currentPath === to,\\r\\n\\t\\tstyle: {\\r\\n\\t\\t\\ttextAlign: \\\"center\\\",\\r\\n\\t\\t\\tpointerEvents: currentPath === to && \\\"none\\\",\\r\\n\\t\\t},\\r\\n\\t});\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<div className=\\\"site-header\\\">\\r\\n\\t\\t\\t<NameAndRole>\\r\\n\\t\\t\\t\\t<Name>Chung Cheuk Hang Michael</Name>\\r\\n\\t\\t\\t\\t<Role>Web Developer</Role>\\r\\n\\t\\t\\t</NameAndRole>\\r\\n\\r\\n\\t\\t\\t<Responsive as={Body} minWidth={responsiveMinWidth} style={{ paddingBottom: \\\"1em\\\" }}>\\r\\n\\t\\t\\t\\t<Container text textAlign=\\\"center\\\">\\r\\n\\t\\t\\t\\t\\t<Menu stackable borderless compact widths={5} size=\\\"tiny\\\" inverted>\\r\\n\\t\\t\\t\\t\\t\\t<Menu.Item name=\\\"Home\\\" color=\\\"blue\\\" {...linkPath(\\\"/\\\")} draggable={false} />\\r\\n\\t\\t\\t\\t\\t\\t<Dropdown\\r\\n\\t\\t\\t\\t\\t\\t\\titem\\r\\n\\t\\t\\t\\t\\t\\t\\tsimple\\r\\n\\t\\t\\t\\t\\t\\t\\ttext=\\\"My Experiences\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\topen={openExp}\\r\\n\\t\\t\\t\\t\\t\\t\\tonMouseEnter={() => setOpenExp(true)}\\r\\n\\t\\t\\t\\t\\t\\t\\tonMouseLeave={() => setOpenExp(false)}\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t<Dropdown.Menu>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Dropdown.Item {...linkPath(\\\"/workExp\\\")} draggable={false}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tWork\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</Dropdown.Item>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Dropdown.Item {...linkPath(\\\"/hobbyProject\\\")} draggable={false}>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tHobby Projects\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</Dropdown.Item>\\r\\n\\t\\t\\t\\t\\t\\t\\t</Dropdown.Menu>\\r\\n\\t\\t\\t\\t\\t\\t</Dropdown>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<Menu.Item name=\\\"Personality\\\" color=\\\"purple\\\" {...linkPath(\\\"/personality\\\")} draggable={false} />\\r\\n\\t\\t\\t\\t\\t\\t<Menu.Item name=\\\"Blog\\\" color=\\\"teal\\\" {...linkPath(\\\"/blog\\\")} draggable={false} />\\r\\n\\t\\t\\t\\t\\t\\t<Menu.Item name=\\\"Contact\\\" color=\\\"yellow\\\" {...linkPath(\\\"/contact\\\")} draggable={false} />\\r\\n\\t\\t\\t\\t\\t</Menu>\\r\\n\\t\\t\\t\\t</Container>\\r\\n\\t\\t\\t</Responsive>\\r\\n\\t\\t</div>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(SiteHeader, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as SiteHeader };\\r\\n\";","export default \"import styled from \\\"styled-components\\\";\\r\\n\\r\\nconst NameAndRole = styled.div`\\r\\n\\tpadding: 2vw 0vw 1vw 6vw;\\r\\n\\tline-height: 1;\\r\\n`;\\r\\n\\r\\nconst Name = styled.code`\\r\\n\\tdisplay: block;\\r\\n\\tcolor: #e91e63;\\r\\n\\tfont-size: 3em;\\r\\n\\tcursor: default;\\r\\n\\t-webkit-box-reflect: below 0em -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), to(rgba(255, 255, 255, 0.1)));\\r\\n`;\\r\\n\\r\\nconst Role = styled.code`\\r\\n\\tdisplay: block;\\r\\n\\tcolor: #0277bd;\\r\\n\\tfont-size: 1.75em;\\r\\n\\tcursor: default;\\r\\n\\tpadding-top: 1em;\\r\\n\\t-webkit-box-reflect: below 0em -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), to(rgba(255, 255, 255, 0.1)));\\r\\n`;\\r\\n\\r\\nconst exports = { NameAndRole, Name, Role };\\r\\nexport default exports;\\r\\nexport { NameAndRole, Name, Role };\\r\\n\";","export default \"import { memo, useState, useEffect } from \\\"react\\\";\\r\\nimport { useSelector, useDispatch } from \\\"react-redux\\\";\\r\\nimport { useSwipeable } from \\\"react-swipeable\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport { LoadingIndicator } from \\\"./LoadingIndicator\\\";\\r\\nimport { NoSelect } from \\\"../Styles\\\";\\r\\nimport { changeImagePopupSource } from \\\"../../redux/action\\\";\\r\\n\\r\\nconst FullScreenGalleryWrapper = styled.div`\\r\\n\\tdisplay: flex;\\r\\n\\ttext-align: center;\\r\\n\\tjustify-content: center;\\r\\n\\talign-items: center;\\r\\n\\r\\n\\tposition: fixed;\\r\\n\\ttop: 0;\\r\\n\\tleft: 0;\\r\\n\\twidth: 100vw;\\r\\n\\theight: 100vh;\\r\\n\\tz-index: 1000;\\r\\n\\tcursor: zoom-out;\\r\\n\\ttransition: 500ms;\\r\\n\\tbackground-color: rgba(0, 0, 0, 0.9);\\r\\n\\topacity: ${({ show }) => (show ? 1 : 0)};\\r\\n\\t${({ show }) => (show ? \\\"\\\" : \\\"pointer-events: none;\\\")};\\r\\n\\r\\n\\timg {\\r\\n\\t\\twidth: 95vw;\\r\\n\\t\\theight: 95vh;\\r\\n\\t\\tobject-fit: contain;\\r\\n\\t\\ttransition: 500ms;\\r\\n\\t\\t${({ loaded }) => (loaded ? \\\"\\\" : \\\"filter: brightness(0.5);\\\")};\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nconst GalleryButtons = styled.div`\\r\\n\\t.image-button {\\r\\n\\t\\tposition: fixed;\\r\\n\\t\\ttop: 0;\\r\\n\\t\\twidth: 33%;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\tborder: none;\\r\\n\\t\\ttransition: 250ms;\\r\\n\\t\\tcursor: ${({ loaded }) => (loaded ? \\\"pointer\\\" : \\\"wait\\\")};\\r\\n\\t\\tbackground-color: transparent;\\r\\n\\t}\\r\\n\\r\\n\\t.previous-image-button {\\r\\n\\t\\tleft: 0;\\r\\n\\t}\\r\\n\\r\\n\\t.next-image-button {\\r\\n\\t\\tright: 0;\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nconst IndexAndCount = styled.span`\\r\\n\\tposition: fixed;\\r\\n\\ttop: 20px;\\r\\n\\tright: 20px;\\r\\n\\tpadding: 8px 15px 8px 15px;\\r\\n\\tcolor: white;\\r\\n\\tbackground-color: #455a64;\\r\\n\\tborder-radius: 15px;\\r\\n\\ttext-align: center;\\r\\n\\tfont-size: 18px;\\r\\n\\tbox-shadow: 0 0 10px 3px rgba(0, 0, 0, 0.5);\\r\\n`;\\r\\n\\r\\nfunction FullScreenGallery(props) {\\r\\n\\tconst { images, activeIndex, show, key } = useSelector((state) => state.imagePopupReducer);\\r\\n\\tconst dispatch = useDispatch();\\r\\n\\r\\n\\tconst [isLoaded, setLoaded] = useState(false);\\r\\n\\tconst [queryString, setQueryString] = useState(\\\"\\\");\\r\\n\\r\\n\\tuseEffect(() => {\\r\\n\\t\\tif (!show) {\\r\\n\\t\\t\\tsetLoaded(false);\\r\\n\\t\\t}\\r\\n\\t\\t// eslint-disable-next-line react-hooks/exhaustive-deps\\r\\n\\t}, [show]);\\r\\n\\r\\n\\tconst hasImage = images && images.length > 0;\\r\\n\\tconst hidden = !hasImage || !show;\\r\\n\\r\\n\\tconst swipeConfig = {\\r\\n\\t\\tonSwipedLeft: () => {\\r\\n\\t\\t\\tif (!images || images.length < 2 || !isLoaded) {\\r\\n\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tsetLoaded(false);\\r\\n\\t\\t\\tsetQueryString(\\\"\\\");\\r\\n\\t\\t\\tdispatch(\\r\\n\\t\\t\\t\\tchangeImagePopupSource({\\r\\n\\t\\t\\t\\t\\tactiveIndex: (activeIndex + 1) % images.length,\\r\\n\\t\\t\\t\\t})\\r\\n\\t\\t\\t);\\r\\n\\t\\t},\\r\\n\\t\\tonSwipedRight: () => {\\r\\n\\t\\t\\tif (!images || images.length < 2 || !isLoaded) {\\r\\n\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tsetLoaded(false);\\r\\n\\t\\t\\tsetQueryString(\\\"\\\");\\r\\n\\t\\t\\tdispatch(\\r\\n\\t\\t\\t\\tchangeImagePopupSource({\\r\\n\\t\\t\\t\\t\\tactiveIndex: (activeIndex + images.length - 1) % images.length,\\r\\n\\t\\t\\t\\t})\\r\\n\\t\\t\\t);\\r\\n\\t\\t},\\r\\n\\t\\tonSwipedUp: () => {},\\r\\n\\t\\tonSwipedDown: () => {},\\r\\n\\t\\tpreventDefaultTouchmoveEvent: true,\\r\\n\\t};\\r\\n\\tconst imageCenterSwipeHandlers = useSwipeable(swipeConfig);\\r\\n\\tconst buttonsSwipeHandlers = useSwipeable(swipeConfig);\\r\\n\\r\\n\\tconst GalleryButton = (props) => {\\r\\n\\t\\tconst { className, clickToIndex } = props;\\r\\n\\r\\n\\t\\tconst [isHovered, setHovered] = useState(false);\\r\\n\\r\\n\\t\\treturn (\\r\\n\\t\\t\\t<button\\r\\n\\t\\t\\t\\tclassName={`image-button ${className}`}\\r\\n\\t\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonClick={(e) => {\\r\\n\\t\\t\\t\\t\\te.preventDefault();\\r\\n\\t\\t\\t\\t\\te.stopPropagation();\\r\\n\\r\\n\\t\\t\\t\\t\\tsetHovered(false);\\r\\n\\r\\n\\t\\t\\t\\t\\tif (!isLoaded) {\\r\\n\\t\\t\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tsetLoaded(false);\\r\\n\\t\\t\\t\\t\\tsetQueryString(\\\"\\\");\\r\\n\\t\\t\\t\\t\\tdispatch(changeImagePopupSource({ activeIndex: clickToIndex }));\\r\\n\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\tstyle={{ ...(isHovered && isLoaded && { backgroundColor: \\\"rgba(3, 169, 244, 0.25)\\\" }) }}\\r\\n\\t\\t\\t/>\\r\\n\\t\\t);\\r\\n\\t};\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<>\\r\\n\\t\\t\\t{show && (\\r\\n\\t\\t\\t\\t<FullScreenGalleryWrapper\\r\\n\\t\\t\\t\\t\\tshow={!hidden}\\r\\n\\t\\t\\t\\t\\tloaded={isLoaded}\\r\\n\\t\\t\\t\\t\\tonClick={() => dispatch(changeImagePopupSource({ show: false }))}\\r\\n\\t\\t\\t\\t\\t{...imageCenterSwipeHandlers}\\r\\n\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t<picture>\\r\\n\\t\\t\\t\\t\\t\\t<source\\r\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"image/webp\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tsrcSet={\\r\\n\\t\\t\\t\\t\\t\\t\\t\\thasImage\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t? encodeURIComponent(images[activeIndex].replace(/\\\\.(jpg|png|gif)/, \\\".webp\\\"))\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t: null\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t<img\\r\\n\\t\\t\\t\\t\\t\\t\\tkey={key}\\r\\n\\t\\t\\t\\t\\t\\t\\tsrc={hasImage ? `${images[activeIndex]}${queryString}` : null}\\r\\n\\t\\t\\t\\t\\t\\t\\talt={hasImage ? images[activeIndex].replace(/\\\\.(jpg|png|gif)/, \\\"\\\") : null}\\r\\n\\t\\t\\t\\t\\t\\t\\tdraggable={false}\\r\\n\\t\\t\\t\\t\\t\\t\\tonContextMenu={(e) => e.preventDefault()}\\r\\n\\t\\t\\t\\t\\t\\t\\tonLoad={() => setLoaded(true)}\\r\\n\\t\\t\\t\\t\\t\\t\\tonError={() => setTimeout(() => setQueryString(`?${Math.random()}`), 1000)}\\r\\n\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t</picture>\\r\\n\\r\\n\\t\\t\\t\\t\\t{hasImage && images.length >= 2 && (\\r\\n\\t\\t\\t\\t\\t\\t<GalleryButtons loaded={isLoaded} {...buttonsSwipeHandlers}>\\r\\n\\t\\t\\t\\t\\t\\t\\t<GalleryButton\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclassName=\\\"previous-image-button\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclickToIndex={(activeIndex + images.length - 1) % images.length}\\r\\n\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t<GalleryButton\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclassName=\\\"next-image-button\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclickToIndex={(activeIndex + 1) % images.length}\\r\\n\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t</GalleryButtons>\\r\\n\\t\\t\\t\\t\\t)}\\r\\n\\r\\n\\t\\t\\t\\t\\t{hasImage && images.length > 1 && (\\r\\n\\t\\t\\t\\t\\t\\t<NoSelect style={{ pointerEvents: \\\"none\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t<IndexAndCount>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{activeIndex + 1}/{images.length}\\r\\n\\t\\t\\t\\t\\t\\t\\t</IndexAndCount>\\r\\n\\t\\t\\t\\t\\t\\t</NoSelect>\\r\\n\\t\\t\\t\\t\\t)}\\r\\n\\r\\n\\t\\t\\t\\t\\t{!isLoaded && <LoadingIndicator />}\\r\\n\\t\\t\\t\\t</FullScreenGalleryWrapper>\\r\\n\\t\\t\\t)}\\r\\n\\t\\t</>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(FullScreenGallery, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as FullScreenGallery };\\r\\n\";","export default \"import { memo, useState } from \\\"react\\\";\\r\\nimport { useDispatch } from \\\"react-redux\\\";\\r\\nimport Lazyload from \\\"react-lazyload\\\";\\r\\nimport { useSwipeable } from \\\"react-swipeable\\\";\\r\\nimport styled, { keyframes } from \\\"styled-components\\\";\\r\\nimport { NoSelect } from \\\"../Styles\\\";\\r\\nimport { LoadingIndicator } from \\\"./LoadingIndicator\\\";\\r\\nimport { changeImagePopupSource } from \\\"../../redux/action\\\";\\r\\n\\r\\nconst scrollImageHorizontally = (hiddenWidth) => keyframes`\\r\\n\\t98% {\\r\\n\\t\\ttransform: translateX(-${hiddenWidth}px);\\r\\n\\t}\\r\\n\\t100% {\\r\\n\\t\\ttransform: translateX(0px);\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nconst scrollImageVertically = (hiddenHeight) => keyframes`\\r\\n\\t 98% {\\r\\n\\t \\ttransform: translateY(-${hiddenHeight}px);\\r\\n\\t }\\r\\n\\t 100% {\\r\\n\\t \\ttransform: translateY(0px);\\r\\n\\t }\\r\\n`;\\r\\n\\r\\nconst GalleryWrapper = styled.div`\\r\\n\\tdisplay: inline-block;\\r\\n\\tposition: relative;\\r\\n\\tmax-width: ${({ maxWidth }) => maxWidth};\\r\\n\\tmax-height: ${({ maxHeight }) => maxHeight};\\r\\n\\tmargin: 15px;\\r\\n\\tborder-radius: 20px;\\r\\n\\toverflow: hidden;\\r\\n\\ttransition: 250ms;\\r\\n\\tcursor: zoom-in;\\r\\n\\r\\n\\t* {\\r\\n\\t\\ttransition: 250ms;\\r\\n\\t}\\r\\n\\r\\n\\timg {\\r\\n\\t\\tobject-fit: cover;\\r\\n\\t\\tanimation: ${({ hiddenWidth, hiddenHeight }) =>\\r\\n\\t\\t\\t\\thiddenWidth\\r\\n\\t\\t\\t\\t\\t? scrollImageHorizontally(hiddenWidth)\\r\\n\\t\\t\\t\\t\\t: hiddenHeight\\r\\n\\t\\t\\t\\t\\t? scrollImageVertically(hiddenHeight)\\r\\n\\t\\t\\t\\t\\t: \\\"none\\\"}\\r\\n\\t\\t\\t15s linear infinite;\\r\\n\\t\\t${({ loaded }) => (loaded ? \\\"\\\" : \\\"animation: loading-image 2.5s linear infinite;\\\")};\\r\\n\\t}\\r\\n\\r\\n\\t@keyframes loading-image {\\r\\n\\t\\t50% {\\r\\n\\t\\t\\topacity: 0.5;\\r\\n\\t\\t\\tfilter: brightness(200%);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nconst GalleryButtons = styled.div`\\r\\n\\t.image-button {\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\ttop: 0;\\r\\n\\t\\twidth: 33%;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\tborder: none;\\r\\n\\t\\ttransition: 500ms;\\r\\n\\t\\tbackground-color: transparent;\\r\\n\\t\\tcursor: ${({ loaded }) => (loaded ? \\\"pointer\\\" : \\\"wait\\\")};\\r\\n\\t\\topacity: ${({ loaded }) => (loaded ? 0.75 : 0.25)};\\r\\n\\t}\\r\\n\\r\\n\\t.previous-image-button {\\r\\n\\t\\tleft: 0;\\r\\n\\t\\tborder-radius: 20px 0 0 20px;\\r\\n\\t}\\r\\n\\r\\n\\t.next-image-button {\\r\\n\\t\\tright: 0;\\r\\n\\t\\tborder-radius: 0 20px 20px 0;\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nconst IndexAndCount = styled.span`\\r\\n\\tposition: absolute;\\r\\n\\ttop: 10px;\\r\\n\\tright: 10px;\\r\\n\\tpadding: 3px 10px 3px 10px;\\r\\n\\tcolor: white;\\r\\n\\tbackground-color: rgba(0, 0, 0, 0.8);\\r\\n\\tborder-radius: 15px;\\r\\n\\ttext-align: center;\\r\\n`;\\r\\n\\r\\nfunction Gallery(props) {\\r\\n\\tconst { images } = props;\\r\\n\\tlet { width, height } = props;\\r\\n\\tif (!width && !height) {\\r\\n\\t\\twidth = \\\"300px\\\";\\r\\n\\t\\theight = \\\"300px\\\";\\r\\n\\t}\\r\\n\\twidth = (width || \\\"auto\\\") + \\\"\\\";\\r\\n\\theight = (height || \\\"auto\\\") + \\\"\\\";\\r\\n\\r\\n\\tconst [displayIndex, setDisplayIndex] = useState(null);\\r\\n\\tconst [activeIndex, setActiveIndex] = useState(0);\\r\\n\\tconst [isLoaded, setLoaded] = useState(false);\\r\\n\\tconst [queryString, setQueryString] = useState(\\\"\\\");\\r\\n\\tconst [preferredWidth, setPreferredWidth] = useState(width);\\r\\n\\tconst [hiddenWidth, setHiddenWidth] = useState(0);\\r\\n\\tconst [hiddenHeight, setHiddenHeight] = useState(0);\\r\\n\\tconst [originalWidth, setOriginalWidth] = useState(undefined);\\r\\n\\r\\n\\tconst dispatch = useDispatch();\\r\\n\\r\\n\\tconst swipeConfig = {\\r\\n\\t\\tonSwipedLeft: () => {\\r\\n\\t\\t\\tif (!images || images.length < 2 || !isLoaded) {\\r\\n\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tsetLoaded(false);\\r\\n\\t\\t\\tsetQueryString(\\\"\\\");\\r\\n\\t\\t\\tsetActiveIndex((activeIndex + 1) % images.length);\\r\\n\\t\\t},\\r\\n\\t\\tonSwipedRight: () => {\\r\\n\\t\\t\\tif (!images || images.length < 2 || !isLoaded) {\\r\\n\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tsetLoaded(false);\\r\\n\\t\\t\\tsetQueryString(\\\"\\\");\\r\\n\\t\\t\\tsetActiveIndex((activeIndex + images.length - 1) % images.length);\\r\\n\\t\\t},\\r\\n\\t\\tpreventDefaultTouchmoveEvent: true,\\r\\n\\t};\\r\\n\\tconst imageCenterSwipeHandlers = useSwipeable(swipeConfig);\\r\\n\\tconst buttonsSwipeHandlers = useSwipeable(swipeConfig);\\r\\n\\r\\n\\tconst GalleryButton = (props) => {\\r\\n\\t\\tconst { className, clickToIndex } = props;\\r\\n\\r\\n\\t\\tconst [isHovered, setHovered] = useState(false);\\r\\n\\r\\n\\t\\treturn (\\r\\n\\t\\t\\t<button\\r\\n\\t\\t\\t\\tclassName={className}\\r\\n\\t\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonClick={(e) => {\\r\\n\\t\\t\\t\\t\\te.preventDefault();\\r\\n\\t\\t\\t\\t\\te.stopPropagation();\\r\\n\\r\\n\\t\\t\\t\\t\\tsetHovered(false);\\r\\n\\r\\n\\t\\t\\t\\t\\tif (!isLoaded) {\\r\\n\\t\\t\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tsetLoaded(false);\\r\\n\\t\\t\\t\\t\\tsetQueryString(\\\"\\\");\\r\\n\\t\\t\\t\\t\\tsetActiveIndex(clickToIndex);\\r\\n\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\tstyle={{ ...(isHovered && { backgroundColor: \\\"rgba(3, 169, 244, 0.25)\\\" }) }}\\r\\n\\t\\t\\t/>\\r\\n\\t\\t);\\r\\n\\t};\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<>\\r\\n\\t\\t\\t{images && images.length > 0 && (\\r\\n\\t\\t\\t\\t<Lazyload once height={height} offset={400}>\\r\\n\\t\\t\\t\\t\\t<GalleryWrapper\\r\\n\\t\\t\\t\\t\\t\\tloaded={isLoaded}\\r\\n\\t\\t\\t\\t\\t\\tmaxWidth={width}\\r\\n\\t\\t\\t\\t\\t\\tmaxHeight={height}\\r\\n\\t\\t\\t\\t\\t\\thiddenWidth={hiddenWidth}\\r\\n\\t\\t\\t\\t\\t\\thiddenHeight={hiddenHeight}\\r\\n\\t\\t\\t\\t\\t\\tonClick={() =>\\r\\n\\t\\t\\t\\t\\t\\t\\tdispatch(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tchangeImagePopupSource({\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\timages,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tactiveIndex: activeIndex,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t{...imageCenterSwipeHandlers}\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t<picture>\\r\\n\\t\\t\\t\\t\\t\\t\\t<source\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"image/webp\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tsrcSet={encodeURIComponent(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\timages[activeIndex].replace(/\\\\.(jpg|png|gif)/, \\\"-crop.webp\\\")\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t)}\\r\\n\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t<img\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tsrc={`${images[activeIndex]}${queryString}`}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\talt={images[activeIndex].replace(/\\\\.(jpg|png|gif)/, \\\"\\\")}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdraggable={false}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twidth={preferredWidth}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tonContextMenu={(e) => e.preventDefault()}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tonLoad={({ target }) => {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsetLoaded(true);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsetDisplayIndex(activeIndex);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlet windowWidth = originalWidth;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tconst windowHeight = Number(height.replace(/px/, \\\"\\\"));\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tconst imgWidth = target.width;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tconst imgHeight = target.height;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlet hiddenWidth = 0;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlet hiddenHeight = 0;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (!windowWidth) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetOriginalWidth(imgWidth);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\twindowWidth = imgWidth;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (imgWidth / imgHeight > windowWidth / windowHeight) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tconst newScaleWidth = (windowHeight * imgWidth) / imgHeight / windowWidth;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetPreferredWidth(newScaleWidth * 100 + \\\"%\\\");\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\thiddenWidth = (windowHeight * imgWidth) / imgHeight - windowWidth;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (imgHeight / imgWidth > windowHeight / windowWidth) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetPreferredWidth(\\\"100%\\\");\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\thiddenHeight = (windowWidth * imgHeight) / imgWidth - windowHeight;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tsetHiddenWidth(hiddenWidth);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (imgWidth < windowWidth) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// const newImg = new Image();\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// newImg.onload = ({ target }) => {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// \\tsetHiddenHeight(target.height - windowHeight);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// };\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// newImg.src = target.src;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetHiddenHeight(0);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsetHiddenHeight(hiddenHeight);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tonError={() => setTimeout(() => setQueryString(`?${Math.random()}`), 1000)}\\r\\n\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t</picture>\\r\\n\\t\\t\\t\\t\\t</GalleryWrapper>\\r\\n\\r\\n\\t\\t\\t\\t\\t{images.length >= 2 && (\\r\\n\\t\\t\\t\\t\\t\\t<GalleryButtons loaded={isLoaded} {...buttonsSwipeHandlers}>\\r\\n\\t\\t\\t\\t\\t\\t\\t<GalleryButton\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclassName=\\\"image-button previous-image-button\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclickToIndex={(activeIndex + images.length - 1) % images.length}\\r\\n\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t<GalleryButton\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclassName=\\\"image-button next-image-button\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclickToIndex={(activeIndex + 1) % images.length}\\r\\n\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t</GalleryButtons>\\r\\n\\t\\t\\t\\t\\t)}\\r\\n\\r\\n\\t\\t\\t\\t\\t{images.length > 1 && (\\r\\n\\t\\t\\t\\t\\t\\t<NoSelect style={{ pointerEvents: \\\"none\\\" }}>\\r\\n\\t\\t\\t\\t\\t\\t\\t<IndexAndCount>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{displayIndex + 1}/{images.length}\\r\\n\\t\\t\\t\\t\\t\\t\\t</IndexAndCount>\\r\\n\\t\\t\\t\\t\\t\\t</NoSelect>\\r\\n\\t\\t\\t\\t\\t)}\\r\\n\\r\\n\\t\\t\\t\\t\\t{!isLoaded && <LoadingIndicator />}\\r\\n\\t\\t\\t\\t</Lazyload>\\r\\n\\t\\t\\t)}\\r\\n\\t\\t</>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(Gallery, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as Gallery };\\r\\n\";","export default \"import { memo, useState } from \\\"react\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\n\\r\\nconst ButtonWrapper = styled(({ hovered, capitalize, ...props }) => <div {...props} />)`\\r\\n\\tbutton {\\r\\n\\t\\tdisplay: flex !important;\\r\\n\\t\\talign-items: center !important;\\r\\n\\t\\tjustify-content: center !important;\\r\\n\\r\\n\\t\\tpadding: 0.6em 1.25em !important;\\r\\n\\t\\tfont-size: 0.95em !important;\\r\\n\\t\\tfont-weight: bold !important;\\r\\n\\t\\t${({ capitalize }) => (capitalize ? \\\"text-transform: uppercase !important;\\\" : \\\"\\\")}\\r\\n\\t\\tcolor: white !important;\\r\\n\\t\\tcursor: pointer !important;\\r\\n\\t\\ttransition: 250ms ease-in-out !important;\\r\\n\\t\\tborder: none !important;\\r\\n\\t\\tborder-radius: 2em !important;\\r\\n\\t\\tbox-shadow: 0 0 1.5em ${({ hovered }) => (hovered ? \\\"#244ab6\\\" : \\\"#b63c18\\\")} !important;\\r\\n\\t\\tbackground-size: 300% 100% !important;\\r\\n\\t\\tbackground-image: linear-gradient(to right, #ff1744, #ff9100, #651fff, #00b0ff) !important;\\r\\n\\t\\t${({ hovered }) => (hovered ? \\\"background-position: 100% 0; !important\\\" : \\\"\\\")}\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction GradientButton(props) {\\r\\n\\tconst { children = \\\"\\\", capitalize, action, ...rest } = props;\\r\\n\\r\\n\\tconst [isHovered, setHovered] = useState(false);\\r\\n\\r\\n\\treturn (\\r\\n\\t\\t<ButtonWrapper capitalize={capitalize} hovered={isHovered}>\\r\\n\\t\\t\\t<button\\r\\n\\t\\t\\t\\t{...rest}\\r\\n\\t\\t\\t\\tonMouseEnter={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseOver={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonMouseLeave={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchStart={() => setHovered(true)}\\r\\n\\t\\t\\t\\tonTouchEnd={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonTouchCancel={() => setHovered(false)}\\r\\n\\t\\t\\t\\tonClick={() => {\\r\\n\\t\\t\\t\\t\\tsetHovered(false);\\r\\n\\t\\t\\t\\t\\tif (typeof action === \\\"function\\\") {\\r\\n\\t\\t\\t\\t\\t\\taction();\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}}\\r\\n\\t\\t\\t>\\r\\n\\t\\t\\t\\t{children}\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</ButtonWrapper>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(GradientButton, (prev, next) => prev.action === next.action);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as GradientButton };\\r\\n\";","export default \"import { memo } from \\\"react\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\n\\r\\nfunction getCubeStyle(index, itemCountPerRow) {\\r\\n\\treturn `\\r\\n\\t\\t.sk-cube${index + 1} {\\r\\n\\t\\t\\tanimation-delay: ${Number(0.1 * (Math.floor(index / 3) + (index % itemCountPerRow))).toFixed(1)}s;\\r\\n\\t\\t}\\r\\n\\t`;\\r\\n}\\r\\n\\r\\nconst LoadingIndicatorWrapper = styled.div`\\r\\n\\tdisplay: flex;\\r\\n\\tjustify-content: center;\\r\\n\\talign-items: center;\\r\\n\\r\\n\\tposition: absolute;\\r\\n\\ttop: 0;\\r\\n\\tleft: 0;\\r\\n\\twidth: 100%;\\r\\n\\theight: 100%;\\r\\n\\tpointer-events: none;\\r\\n`;\\r\\n\\r\\nconst LoadingIndicatorContainer = styled.div`\\r\\n\\tposition: absolute;\\r\\n\\twidth: 40px;\\r\\n\\theight: 40px;\\r\\n\\r\\n\\t.sk-cube {\\r\\n\\t\\twidth: 33%;\\r\\n\\t\\theight: 33%;\\r\\n\\t\\tbackground-color: rgba(255, 87, 34, 0.75);\\r\\n\\t\\tfloat: left;\\r\\n\\t\\ttransform: scale3d(0, 0, 1);\\r\\n\\t\\tanimation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out;\\r\\n\\t}\\r\\n\\r\\n\\t${Array(9)\\r\\n\\t\\t.fill(null)\\r\\n\\t\\t.map((v, i) => getCubeStyle(i, 3))\\r\\n\\t\\t.join(\\\"\\\")}\\r\\n\\r\\n\\t@keyframes sk-cubeGridScaleDelay {\\r\\n\\t\\t0%,\\r\\n\\t\\t100% {\\r\\n\\t\\t\\ttransform: scale3d(0, 0, 1);\\r\\n\\t\\t}\\r\\n\\t\\t35%,\\r\\n\\t\\t70% {\\r\\n\\t\\t\\ttransform: scale3d(1, 1, 1);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n`;\\r\\n\\r\\nfunction LoadingIndicator(props) {\\r\\n\\treturn (\\r\\n\\t\\t<LoadingIndicatorWrapper>\\r\\n\\t\\t\\t<LoadingIndicatorContainer>\\r\\n\\t\\t\\t\\t<div className=\\\"sk-cube sk-cube1\\\"></div>\\r\\n\\t\\t\\t\\t<div className=\\\"sk-cube sk-cube2\\\"></div>\\r\\n\\t\\t\\t\\t<div className=\\\"sk-cube sk-cube3\\\"></div>\\r\\n\\t\\t\\t\\t<div className=\\\"sk-cube sk-cube4\\\"></div>\\r\\n\\t\\t\\t\\t<div className=\\\"sk-cube sk-cube5\\\"></div>\\r\\n\\t\\t\\t\\t<div className=\\\"sk-cube sk-cube6\\\"></div>\\r\\n\\t\\t\\t\\t<div className=\\\"sk-cube sk-cube7\\\"></div>\\r\\n\\t\\t\\t\\t<div className=\\\"sk-cube sk-cube8\\\"></div>\\r\\n\\t\\t\\t\\t<div className=\\\"sk-cube sk-cube9\\\"></div>\\r\\n\\t\\t\\t</LoadingIndicatorContainer>\\r\\n\\t\\t</LoadingIndicatorWrapper>\\r\\n\\t);\\r\\n}\\r\\n\\r\\nconst memoComponent = memo(LoadingIndicator, (prev, next) => true);\\r\\nexport default memoComponent;\\r\\nexport { memoComponent as LoadingIndicator };\\r\\n\";","export default \"const blogPostTags = [\\r\\n\\t{\\r\\n\\t\\tname: \\\"Java\\\",\\r\\n\\t\\ticon: \\\"code\\\",\\r\\n\\t\\tcolor: \\\"blue\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tname: \\\"Spring\\\",\\r\\n\\t\\ticon: \\\"leaf\\\",\\r\\n\\t\\tcolor: \\\"green\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tname: \\\"Maven\\\",\\r\\n\\t\\ticon: \\\"setting\\\",\\r\\n\\t\\tcolor: \\\"red\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tname: \\\"Web\\\",\\r\\n\\t\\ticon: \\\"internet explorer\\\",\\r\\n\\t\\tcolor: \\\"purple\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tname: \\\"HTML\\\",\\r\\n\\t\\ticon: \\\"html5\\\",\\r\\n\\t\\tcolor: \\\"orange\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tname: \\\"JavaScript\\\",\\r\\n\\t\\ticon: \\\"js\\\",\\r\\n\\t\\tcolor: \\\"yellow\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tname: \\\"React\\\",\\r\\n\\t\\ticon: \\\"react\\\",\\r\\n\\t\\tcolor: \\\"teal\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tname: \\\"SQL\\\",\\r\\n\\t\\ticon: \\\"database\\\",\\r\\n\\t\\tcolor: \\\"pink\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tname: \\\"Git\\\",\\r\\n\\t\\ticon: \\\"github\\\",\\r\\n\\t\\tcolor: \\\"orange\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tname: \\\"Testing\\\",\\r\\n\\t\\ticon: \\\"repeat\\\",\\r\\n\\t\\tcolor: \\\"violet\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tname: \\\"Tools\\\",\\r\\n\\t\\ticon: \\\"wrench\\\",\\r\\n\\t\\tcolor: \\\"black\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tname: \\\"Cloud\\\",\\r\\n\\t\\tcolor: \\\"grey\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tname: \\\"Problem solving\\\",\\r\\n\\t\\tcolor: \\\"brown\\\",\\r\\n\\t},\\r\\n];\\r\\n\\r\\nexport default blogPostTags;\\r\\nexport { blogPostTags };\\r\\n\";","export default \"const blogPosts = [\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"coding-java-1\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2020-09/coding-java-1.md\\\",\\r\\n\\t\\ttitle: \\\"Java 開發筆記（一）\\\",\\r\\n\\t\\tdescription: \\\"Java 開發筆記 - 安裝所需程式\\\",\\r\\n\\t\\tdate: 1600158060000,\\r\\n\\t\\tthumbnail: \\\"blog/2020-09/coding-java-1/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Tools\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"coding-java-2\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2020-09/coding-java-2.md\\\",\\r\\n\\t\\ttitle: \\\"Java 開發筆記（二）\\\",\\r\\n\\t\\tdescription: \\\"Java 開發筆記 - 建立 project\\\",\\r\\n\\t\\tdate: 1600158060000,\\r\\n\\t\\tthumbnail: \\\"blog/2020-09/coding-java-2/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Maven\\\", \\\"Tools\\\"],\\r\\n\\t\\tpreviousPostId: \\\"coding-java-1\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"coding-java-3\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2020-09/coding-java-3.md\\\",\\r\\n\\t\\ttitle: \\\"Java 開發筆記（三）\\\",\\r\\n\\t\\tdescription: \\\"Java 開發筆記 - Java 基礎知識\\\",\\r\\n\\t\\tdate: 1600158060000,\\r\\n\\t\\tthumbnail: \\\"blog/2020-09/coding-java-3/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\"],\\r\\n\\t\\tpreviousPostId: \\\"coding-java-2\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"coding-java-4\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2020-09/coding-java-4.md\\\",\\r\\n\\t\\ttitle: \\\"Java 開發筆記（四）\\\",\\r\\n\\t\\tdescription: \\\"Java 開發筆記 - Spring 基礎知識\\\",\\r\\n\\t\\tdate: 1600158060000,\\r\\n\\t\\tthumbnail: \\\"blog/2020-09/coding-java-4/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Spring\\\"],\\r\\n\\t\\tpreviousPostId: \\\"coding-java-3\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"coding-java-5\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2020-09/coding-java-5.md\\\",\\r\\n\\t\\ttitle: \\\"Java 開發筆記（五）\\\",\\r\\n\\t\\tdescription: \\\"Java 開發筆記 - 幾款超有用必學 3rd party libraries\\\",\\r\\n\\t\\tdate: 1600158060000,\\r\\n\\t\\tthumbnail: \\\"blog/2020-09/coding-java-5/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\"],\\r\\n\\t\\tpreviousPostId: \\\"coding-java-4\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"coding-java-6\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2020-09/coding-java-6.md\\\",\\r\\n\\t\\ttitle: \\\"Java 開發筆記（六）\\\",\\r\\n\\t\\tdescription: \\\"Java 開發筆記 - Dependency Management\\\",\\r\\n\\t\\tdate: 1600158060000,\\r\\n\\t\\tthumbnail: \\\"blog/2020-09/coding-java-6/thumbnail.png\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Maven\\\", \\\"Tools\\\"],\\r\\n\\t\\tpreviousPostId: \\\"coding-java-5\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"spring-mapstruct\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2020-09/spring-mapstruct.md\\\",\\r\\n\\t\\ttitle: \\\"在 Spring Boot + JPA 項目中使用 MapStruct\\\",\\r\\n\\t\\tdescription:\\r\\n\\t\\t\\t\\\"如何在 Spring Boot + JPA 項目中針對 1-to-M relationship 既 entities 使用 MapStruct，同時學習 JPA／Hibernate 既 best practices\\\",\\r\\n\\t\\tdate: 1600844400000,\\r\\n\\t\\tthumbnail: \\\"blog/2020-09/spring-mapstruct/thumbnail.png\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Spring\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"web-scraping-with-jsoup\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2020-09/web-scraping-with-jsoup.md\\\",\\r\\n\\t\\ttitle: \\\"網頁抓取（一） - jsoup\\\",\\r\\n\\t\\tdescription: \\\"如何使用 jsoup 抓取網頁，喺網頁獲取有用資訊\\\",\\r\\n\\t\\tdate: 1601106158420,\\r\\n\\t\\tthumbnail: \\\"blog/2020-09/web-scraping-with-jsoup/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"HTML\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"git-basics\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2020-09/git-basics.md\\\",\\r\\n\\t\\ttitle: \\\"Git 基本操作\\\",\\r\\n\\t\\tdescription: \\\"如何使用 Git 既基本 commands 進行版本控制\\\",\\r\\n\\t\\tdate: 1601209992512,\\r\\n\\t\\tthumbnail: \\\"blog/2020-09/git-basics/thumbnail.png\\\",\\r\\n\\t\\ttags: [\\\"Git\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"web-scraping-with-selenide\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2020-10/web-scraping-with-selenide.md\\\",\\r\\n\\t\\ttitle: \\\"網頁抓取（二） - Selenium/Selenide\\\",\\r\\n\\t\\tdescription: \\\"如何使用 Selenium/Selenide 抓取網頁，喺網頁獲取有用資訊\\\",\\r\\n\\t\\tdate: 1602282648516,\\r\\n\\t\\tthumbnail: \\\"blog/2020-10/web-scraping-with-selenide/thumbnail.png\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"HTML\\\"],\\r\\n\\t\\tpreviousPostId: \\\"web-scraping-with-jsoup\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"writing-chrome-extensions\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2020-10/writing-chrome-extensions.md\\\",\\r\\n\\t\\ttitle: \\\"寫第一個 Chrome Extension\\\",\\r\\n\\t\\tdescription: \\\"教你寫 Chrome extensions 方便自己瀏覽某啲網站\\\",\\r\\n\\t\\tdate: 1602321277331,\\r\\n\\t\\tthumbnail: \\\"blog/2020-10/writing-chrome-extensions/thumbnail.png\\\",\\r\\n\\t\\ttags: [\\\"HTML\\\", \\\"JavaScript\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"using-lombok\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2020-10/using-lombok.md\\\",\\r\\n\\t\\ttitle: \\\"在 Java 項目中使用 Lombok\\\",\\r\\n\\t\\tdescription: \\\"如何利用 Lombok annotations 簡化部分 Java class 代碼\\\",\\r\\n\\t\\tdate: 1602606188503,\\r\\n\\t\\tthumbnail: \\\"blog/2020-10/using-lombok/thumbnail.png\\\",\\r\\n\\t\\ttags: [\\\"Java\\\"],\\r\\n\\t\\tpreviousPostId: \\\"coding-java-5\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"new-jdk-features-since-8\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2020-10/new-jdk-features-since-8.md\\\",\\r\\n\\t\\ttitle: \\\"Java 8 之後既新功能\\\",\\r\\n\\t\\tdescription: \\\"介紹 JDK 8 之後——JDK 9 至 17 既重要新功能\\\",\\r\\n\\t\\tdate: 1602745960926,\\r\\n\\t\\tthumbnail: \\\"blog/2020-10/new-jdk-features-since-8/thumbnail.png\\\",\\r\\n\\t\\ttags: [\\\"Java\\\"],\\r\\n\\t\\tpreviousPostId: \\\"coding-java-3\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"react-web-1\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2020-10/react-web-1.md\\\",\\r\\n\\t\\ttitle: \\\"React JS 網頁開發筆記（一）\\\",\\r\\n\\t\\tdescription: \\\"React JS 網頁開發筆記 - 安裝所需程式\\\",\\r\\n\\t\\tdate: 1603721666940,\\r\\n\\t\\tthumbnail: \\\"blog/2020-10/react-web-1/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"HTML\\\", \\\"JavaScript\\\", \\\"React\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"pull-data-with-retrofit\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-04/pull-data-with-retrofit.md\\\",\\r\\n\\t\\ttitle: \\\"Retrofit HTTP Client\\\",\\r\\n\\t\\tdescription: \\\"使用 Retrofit 發起 HTTP 請求，下載 Jumbo Computer 硬件報價資訊\\\",\\r\\n\\t\\tdate: 1618335185389,\\r\\n\\t\\tthumbnail: \\\"blog/2021-04/pull-data-with-retrofit/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"web-security\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-05/web-security.md\\\",\\r\\n\\t\\ttitle: \\\"網頁安全\\\",\\r\\n\\t\\tdescription: \\\"Microlearning：網頁安全學習筆記 - 比較 cookie 同 local storage、session ID 同 access token\\\",\\r\\n\\t\\tdate: 1620943103004,\\r\\n\\t\\tthumbnail: \\\"blog/2021-05/web-security/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Web\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"react-calculator\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-05/react-calculator.md\\\",\\r\\n\\t\\ttitle: \\\"用 React 寫 Calculator\\\",\\r\\n\\t\\tdescription: \\\"React JS 網頁開發筆記 - 寫 calculator\\\",\\r\\n\\t\\tdate: 1621208270609,\\r\\n\\t\\tthumbnail: \\\"blog/2021-05/react-calculator/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"HTML\\\", \\\"JavaScript\\\", \\\"React\\\"],\\r\\n\\t\\tpreviousPostId: \\\"react-web-1\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"ffmpeg-basics\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-05/ffmpeg-basics.md\\\",\\r\\n\\t\\ttitle: \\\"FFmpeg 基本功能\\\",\\r\\n\\t\\tdescription: \\\"用 FFmpeg 處理 MKV、MP4 影片\\\",\\r\\n\\t\\tdate: 1621680521007,\\r\\n\\t\\tthumbnail: \\\"blog/2021-05/ffmpeg-basics/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Tools\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"js-advanced-syntax\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-05/js-advanced-syntax.md\\\",\\r\\n\\t\\ttitle: \\\"進階 JavaScript\\\",\\r\\n\\t\\tdescription: \\\"JavaScript 進階語法、功能一覽\\\",\\r\\n\\t\\tdate: 1622097654576,\\r\\n\\t\\tthumbnail: \\\"blog/2021-05/js-advanced-syntax/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"JavaScript\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"task-scheduling-issue\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-06/task-scheduling-issue.md\\\",\\r\\n\\t\\ttitle: \\\"低級 task scheduling 錯誤\\\",\\r\\n\\t\\tdescription: \\\"從錯誤中學習 - Production 場上面遇到既低級 task scheduling 錯誤\\\",\\r\\n\\t\\tdate: 1622834317140,\\r\\n\\t\\tthumbnail: \\\"blog/2021-06/task-scheduling-issue/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Problem solving\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"java-collections-generic-type-covariance\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-06/java-collections-generic-type-covariance.md\\\",\\r\\n\\t\\ttitle: \\\"Java collections 進階 - generic type 同 covariance\\\",\\r\\n\\t\\tdescription:\\r\\n\\t\\t\\t\\\"Java 支持繼承（extends/implements），但如果作為 collections（例如 List）既 generic type，用法又係咪一樣？\\\",\\r\\n\\t\\tdate: 1623238901298,\\r\\n\\t\\tthumbnail: \\\"blog/2021-06/java-collections-generic-type-covariance/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"sql-basics-sql-server\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-08/sql-basics-sql-server.md\\\",\\r\\n\\t\\ttitle: \\\"SQL 基礎 - SQL Server\\\",\\r\\n\\t\\tdescription: \\\"SQL Server 既基本 SQL 語法\\\",\\r\\n\\t\\tdate: 1628525244290,\\r\\n\\t\\tthumbnail: \\\"blog/2021-08/sql-basics-sql-server/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"SQL\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"charles-proxy\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-08/charles-proxy.md\\\",\\r\\n\\t\\ttitle: \\\"Charles 代理伺服器\\\",\\r\\n\\t\\tdescription: \\\"如何使用 Charles 代理伺服器截取 HTTP／HTTPS（SSL）通訊內容\\\",\\r\\n\\t\\tdate: 1629015445943,\\r\\n\\t\\tthumbnail: \\\"blog/2021-08/charles-proxy/thumbnail.png\\\",\\r\\n\\t\\ttags: [\\\"Web\\\", \\\"Tools\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"java-8-group-list-items\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-09/java-8-group-list-items.md\\\",\\r\\n\\t\\ttitle: \\\"Java 8：Group 起一個 List<Item>\\\",\\r\\n\\t\\tdescription: \\\"應該用咩方法去 group 起一個 List<Item> 變成 Map<String, List<Item>>？小心因為 null key 而出錯！\\\",\\r\\n\\t\\tdate: 1630571718451,\\r\\n\\t\\tthumbnail: \\\"blog/2021-09/java-8-group-list-items/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"spring-aop\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-09/spring-aop.md\\\",\\r\\n\\t\\ttitle: \\\"Spring 基礎功能：AOP\\\",\\r\\n\\t\\tdescription: \\\"利用 Spring 底層 AOP 技術截取 method call 資訊或者取締原有返回結果\\\",\\r\\n\\t\\tdate: 1631169562982,\\r\\n\\t\\tthumbnail: \\\"blog/2021-09/spring-aop/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Spring\\\"],\\r\\n\\t\\tpreviousPostId: \\\"coding-java-4\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"java-test-overview\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-09/java-test-overview.md\\\",\\r\\n\\t\\ttitle: \\\"Java 測試（一）：簡介\\\",\\r\\n\\t\\tdescription: \\\"簡單介紹一下 Java 既 testing 種類同埋 libraries\\\",\\r\\n\\t\\tdate: 1631246726719,\\r\\n\\t\\tthumbnail: \\\"blog/2021-09/java-test-overview/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Testing\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"java-test-junit\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-09/java-test-junit.md\\\",\\r\\n\\t\\ttitle: \\\"Java 測試（二）：JUnit\\\",\\r\\n\\t\\tdescription: \\\"動手用 JUnit 寫 unit test cases\\\",\\r\\n\\t\\tdate: 1631246726719,\\r\\n\\t\\tthumbnail: \\\"blog/2021-09/java-test-junit/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Testing\\\"],\\r\\n\\t\\tpreviousPostId: \\\"java-test-overview\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"java-test-mockito\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-09/java-test-mockito.md\\\",\\r\\n\\t\\ttitle: \\\"Java 測試（三）：Mockito\\\",\\r\\n\\t\\tdescription: \\\"動手用 Mockito 寫 unit test cases\\\",\\r\\n\\t\\tdate: 1631246726719,\\r\\n\\t\\tthumbnail: \\\"blog/2021-09/java-test-mockito/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Testing\\\"],\\r\\n\\t\\tpreviousPostId: \\\"java-test-overview\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"java-logging\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-09/java-logging.md\\\",\\r\\n\\t\\ttitle: \\\"Java Logging\\\",\\r\\n\\t\\tdescription: \\\"如何用 Slf4j 以及 Logback 為普通 Java 程式以及 Spring Boot 項目做 logging\\\",\\r\\n\\t\\tdate: 1631501446037,\\r\\n\\t\\tthumbnail: \\\"blog/2021-09/java-logging/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"markdown-basics\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-09/markdown-basics.md\\\",\\r\\n\\t\\ttitle: \\\"用 Markdown 寫 doc\\\",\\r\\n\\t\\tdescription: \\\"Markdown 係一種純文字既檔案，可以用簡單符號表達文字格式，用黎寫 doc 就岩曬！\\\",\\r\\n\\t\\tdate: 1631526176065,\\r\\n\\t\\tthumbnail: \\\"blog/2021-09/markdown-basics/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Tools\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"nodejs-cryptojs\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-09/nodejs-cryptojs.md\\\",\\r\\n\\t\\ttitle: \\\"NodeJS + CryptoJS 加密解密\\\",\\r\\n\\t\\tdescription: \\\"寫一個簡單既 NodeJS 加密解密小工具\\\",\\r\\n\\t\\tdate: 1631601768706,\\r\\n\\t\\tthumbnail: \\\"blog/2021-09/nodejs-cryptojs/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"JavaScript\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"html-webp\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-09/html-webp.md\\\",\\r\\n\\t\\ttitle: \\\"HTML 網頁顯示 WebP 圖片\\\",\\r\\n\\t\\tdescription:\\r\\n\\t\\t\\t\\\"Google 既 WebP 圖片格式比起最廣泛使用既圖片格式，可以大大縮減檔案大小而又唔太影響質素，亦適合用喺 HTML 網頁上面\\\",\\r\\n\\t\\tdate: 1631635463271,\\r\\n\\t\\tthumbnail: \\\"blog/2021-09/html-webp/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"HTML\\\", \\\"Tools\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"kafka-cli\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-09/kafka-cli.md\\\",\\r\\n\\t\\ttitle: \\\"透過 CLI 學習 Kafka\\\",\\r\\n\\t\\tdescription: \\\"用 Kafka CLI 學習同埋測試 Kafka 既基本 publish-subscribe、MQ 功能\\\",\\r\\n\\t\\tdate: 1631736004796,\\r\\n\\t\\tthumbnail: \\\"blog/2021-09/kafka-cli/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Tools\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"jpa-usage\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-09/jpa-usage.md\\\",\\r\\n\\t\\ttitle: \\\"JPA／Hibernate 使用方式\\\",\\r\\n\\t\\tdescription: \\\"一篇文章展示喺 Spring Boot 項目裡面 JPA／Hibernate 既各種使用方式\\\",\\r\\n\\t\\tdate: 1631784392508,\\r\\n\\t\\tthumbnail: \\\"blog/2021-09/jpa-usage/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Spring\\\"],\\r\\n\\t\\tpreviousPostId: \\\"coding-java-4\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"spring-caching-redis\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-09/spring-caching-redis.md\\\",\\r\\n\\t\\ttitle: \\\"Spring 項目使用 Redis 做 caching\\\",\\r\\n\\t\\tdescription: \\\"如何喺 Spring Boot + JPA 項目裡面使用 Redis 做 caching，減少訪問 RDMS database\\\",\\r\\n\\t\\tdate: 1631910922979,\\r\\n\\t\\tthumbnail: \\\"blog/2021-09/spring-caching-redis/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Spring\\\", \\\"Tools\\\"],\\r\\n\\t\\tpreviousPostId: \\\"jpa-usage\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"spring-graphql-api\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-09/spring-graphql-api.md\\\",\\r\\n\\t\\ttitle: \\\"Spring 項目暴露 GraphQL API\\\",\\r\\n\\t\\tdescription: \\\"如何喺 Spring Boot + JPA 項目暴露 GraphQL API，允許將多個 API calls 包裝成 1 個\\\",\\r\\n\\t\\tdate: 1632203409896,\\r\\n\\t\\tthumbnail: \\\"blog/2021-09/spring-graphql-api/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Spring\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"java-8-hashmap\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-09/java-8-hashmap.md\\\",\\r\\n\\t\\ttitle: \\\"Java 8 HashMap 原理\\\",\\r\\n\\t\\tdescription: \\\"拆解 Java 8 既 HashMap 點運作，同時了解 Object class 既 hashCode、equals methods\\\",\\r\\n\\t\\tdate: 1632633327505,\\r\\n\\t\\tthumbnail: \\\"blog/2021-09/java-8-hashmap/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\"],\\r\\n\\t\\tpreviousPostId: \\\"coding-java-3\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"spring-boot-elk-logging\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-10/spring-boot-elk-logging.md\\\",\\r\\n\\t\\ttitle: \\\"Spring 項目使用 ELK 做 logging\\\",\\r\\n\\t\\tdescription:\\r\\n\\t\\t\\t\\\"如何喺 Spring Boot 項目連接 ELK stack（即 Elasticsearch、Logstash、Kibana），方便我地睇 log 同搵 log\\\",\\r\\n\\t\\tdate: 1635678086168,\\r\\n\\t\\tthumbnail: \\\"blog/2021-10/spring-boot-elk-logging/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Spring\\\", \\\"Tools\\\"],\\r\\n\\t\\tpreviousPostId: \\\"java-logging\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"spring-resttemplate-trap\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-10/spring-resttemplate-trap.md\\\",\\r\\n\\t\\ttitle: \\\"Spring JSON 變 XML response 問題\\\",\\r\\n\\t\\tdescription: \\\"經一事長一智 - Spring Boot 項目使用 RestTemplate 令 HTTP response 變左 XML 格式\\\",\\r\\n\\t\\tdate: 1635967874570,\\r\\n\\t\\tthumbnail: \\\"blog/2021-10/spring-resttemplate-trap/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Spring\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"java-remote-debug\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2021-11/java-remote-debug.md\\\",\\r\\n\\t\\ttitle: \\\"Remote debug Java 程式\\\",\\r\\n\\t\\tdescription: \\\"如何 debug 遠端既 Java 程式\\\",\\r\\n\\t\\tdate: 1637509836764,\\r\\n\\t\\tthumbnail: \\\"blog/2021-11/java-remote-debug/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"spring-cloud-config-git\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2022-06/spring-cloud-config-git.md\\\",\\r\\n\\t\\ttitle: \\\"Spring Cloud Config——使用獨立既 Git 配置 repo\\\",\\r\\n\\t\\tdescription:\\r\\n\\t\\t\\t\\\"如何利用 Spring Cloud Config Server、Spring Cloud Config Client 架構，將 Spring 配置放到另一個獨立既 Git repo，集中配置\\\",\\r\\n\\t\\tdate: 1654429047701,\\r\\n\\t\\tthumbnail: \\\"blog/2022-06/spring-cloud-config-git/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Spring\\\", \\\"Git\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"curl-basics\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2022-07/curl-basics.md\\\",\\r\\n\\t\\ttitle: \\\"cURL 基本操作\\\",\\r\\n\\t\\tdescription: \\\"如何使用 cURL 既基本 commands 黎發出 HTTP 請求\\\",\\r\\n\\t\\tdate: 1656662996874,\\r\\n\\t\\tthumbnail: \\\"blog/2022-07/curl-basics/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Web\\\", \\\"Tools\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"redis-basics\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2022-07/redis-basics.md\\\",\\r\\n\\t\\ttitle: \\\"透過 Redis CLI 學習 Redis\\\",\\r\\n\\t\\tdescription: \\\"用 Redis CLI 學習 Redis 既基本 CRUD 讀寫功能\\\",\\r\\n\\t\\tdate: 1657410017667,\\r\\n\\t\\tthumbnail: \\\"blog/2022-07/redis-basics/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Tools\\\"],\\r\\n\\t\\tpreviousPostId: \\\"spring-caching-redis\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"java-test-powermock\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2022-07/java-test-powermock.md\\\",\\r\\n\\t\\ttitle: \\\"Java 測試（四）：PowerMock\\\",\\r\\n\\t\\tdescription: \\\"動手用 PowerMock 寫 unit test cases\\\",\\r\\n\\t\\tdate: 1657656508560,\\r\\n\\t\\tthumbnail: \\\"blog/2022-07/java-test-powermock/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Testing\\\"],\\r\\n\\t\\tpreviousPostId: \\\"java-test-overview\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"java-test-wiremock\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2022-07/java-test-wiremock.md\\\",\\r\\n\\t\\ttitle: \\\"Java 測試（五）：WireMock\\\",\\r\\n\\t\\tdescription: \\\"動手用 WireMock 寫 integration test cases\\\",\\r\\n\\t\\tdate: 1657984014406,\\r\\n\\t\\tthumbnail: \\\"blog/2022-07/java-test-powermock/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Testing\\\"],\\r\\n\\t\\tpreviousPostId: \\\"java-test-overview\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"docker-basics\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2022-07/docker-basics.md\\\",\\r\\n\\t\\ttitle: \\\"Docker 基本操作\\\",\\r\\n\\t\\tdescription: \\\"如何使用 Docker 既基本 commands 喺本地部署 infrastructure 工具，方便開發\\\",\\r\\n\\t\\tdate: 1658562960514,\\r\\n\\t\\tthumbnail: \\\"blog/2022-07/docker-basics/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Tools\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"spring-webflux-1\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2022-07/spring-webflux-1.md\\\",\\r\\n\\t\\ttitle: \\\"Spring Webflux（一）\\\",\\r\\n\\t\\tdescription: \\\"開始嘗試用 Spring Webflux 實現 reactive programming\\\",\\r\\n\\t\\tdate: 1658781595516,\\r\\n\\t\\tthumbnail: \\\"blog/2022-07/spring-webflux-1/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Spring\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"batch-download-files\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2022-08/batch-download-files.md\\\",\\r\\n\\t\\ttitle: \\\"批量下載檔案\\\",\\r\\n\\t\\tdescription: \\\"用 Java 實現 jsoup + ProcessBuilder + cURL 下載多個檔案\\\",\\r\\n\\t\\tdate: 1661884151313,\\r\\n\\t\\tthumbnail: \\\"blog/2022-08/batch-download-files/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"HTML\\\", \\\"Tools\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"spring-cloud-config-jdbc\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2023-01/spring-cloud-config-jdbc.md\\\",\\r\\n\\t\\ttitle: \\\"Spring Cloud Config——使用 RDBMS（JDBC）存放配置\\\",\\r\\n\\t\\tdescription:\\r\\n\\t\\t\\t\\\"如何利用 Spring Cloud Config Server、Spring Cloud Config Client 架構，將 Spring 配置放到 RDBMS（JDBC），集中配置。另外仲有 Spring Cloud Config Server 既 bug 發現！\\\",\\r\\n\\t\\tdate: 1673810149233,\\r\\n\\t\\tthumbnail: \\\"blog/2023-01/spring-cloud-config-jdbc/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Spring\\\", \\\"Problem solving\\\"],\\r\\n\\t\\tpreviousPostId: \\\"spring-cloud-config-git\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"spring-azure-service-bus\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2023-04/spring-azure-service-bus.md\\\",\\r\\n\\t\\ttitle: \\\"Spring 項目中訂閱 Azure Service Bus\\\",\\r\\n\\t\\tdescription:\\r\\n\\t\\t\\t\\\"如何喺 Spring Boot 項目利用 Microsoft 既 Azure Service Bus 發送、接收訊息。另外仲有 Spring Cloud Stream 既 bug 發現！\\\",\\r\\n\\t\\tdate: 1681141701231,\\r\\n\\t\\tthumbnail: \\\"blog/2023-04/spring-azure-service-bus/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Java\\\", \\\"Spring\\\", \\\"Tools\\\", \\\"Cloud\\\"],\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tpostId: \\\"kubectl-basics\\\",\\r\\n\\t\\tsrc: \\\"config/blog/2023-04/kubectl-basics.md\\\",\\r\\n\\t\\ttitle: \\\"kubectl 基本操作\\\",\\r\\n\\t\\tdescription: \\\"如何使用 kubectl 既基本 commands 管理 K8s 資源\\\",\\r\\n\\t\\tdate: 1682658340478,\\r\\n\\t\\tthumbnail: \\\"blog/2023-04/kubectl-basics/thumbnail.svg\\\",\\r\\n\\t\\ttags: [\\\"Tools\\\", \\\"Cloud\\\"],\\r\\n\\t},\\r\\n].map((e) => ({\\r\\n\\t...e,\\r\\n\\tpath: \\\"/blog/\\\" + e.postId,\\r\\n}));\\r\\n\\r\\nexport default blogPosts;\\r\\nexport { blogPosts };\\r\\n\";","export default \"const firebaseHost =\\r\\n\\tprocess.env.NODE_ENV === \\\"production\\\"\\r\\n\\t\\t? \\\"https://michael-chung-eportfolio.firebaseio.com\\\"\\r\\n\\t\\t: \\\"https://michael-chung-eportfolio-dev.firebaseio.com\\\";\\r\\n\\r\\nconst exports = { firebaseHost };\\r\\nexport default exports;\\r\\nexport { firebaseHost };\\r\\n\";","export default \"import React from \\\"react\\\";\\r\\n\\r\\nconst hobbyProjects = [\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"dse-maths-question-generator\\\",\\r\\n\\t\\tprojectName: \\\"DSE Maths Question Generator\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2021,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/dse-maths-question-generator-mobile/selecting-answers.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/dse-maths-question-generator-mobile/submitted-and-displaying-answer.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/dse-maths-question-generator-pc/selecting-answers.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/dse-maths-question-generator-pc/submitted-and-displaying-answer.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescription: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tA React web app that displays a list of DSE Maths exam questions where the Q&amp;A generators are ported\\r\\n\\t\\t\\t\\tfrom the Puzzle &amp; DSE Maths game (my final year project).\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tNPM libraries used in this project: Bootstrap, React Bootstrap, KaTeX, Lodash.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tWeb app URLs:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tTC:{\\\" \\\"}\\r\\n\\t\\t\\t\\t<a\\r\\n\\t\\t\\t\\t\\tclassName=\\\"allow-select\\\"\\r\\n\\t\\t\\t\\t\\ttarget=\\\"_blank\\\"\\r\\n\\t\\t\\t\\t\\trel=\\\"external nofollow noopener noreferrer\\\"\\r\\n\\t\\t\\t\\t\\thref=\\\"https://blackr1234.github.io/dse-maths-question-generator-web/#/tc\\\"\\r\\n\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\thttps://blackr1234.github.io/dse-maths-question-generator-web/#/tc\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tEN:{\\\" \\\"}\\r\\n\\t\\t\\t\\t<a\\r\\n\\t\\t\\t\\t\\tclassName=\\\"allow-select\\\"\\r\\n\\t\\t\\t\\t\\ttarget=\\\"_blank\\\"\\r\\n\\t\\t\\t\\t\\trel=\\\"external nofollow noopener noreferrer\\\"\\r\\n\\t\\t\\t\\t\\thref=\\\"https://blackr1234.github.io/dse-maths-question-generator-web/#/en\\\"\\r\\n\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\thttps://blackr1234.github.io/dse-maths-question-generator-web/#/en\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"react-sudoku-solver\\\",\\r\\n\\t\\tprojectName: \\\"React Sudoku Solver\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2021,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/react-sudoku-solver/sudoku-solver-video.gif\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/react-sudoku-solver/solved.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/react-sudoku-solver/solved-2.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/react-sudoku-solver/unsolved.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescription: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tA React web app that allows manual entry of Sudoku puzzles and is capable of solving some of the Expert\\r\\n\\t\\t\\t\\tlevel puzzles.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tNPM libraries used in this project: Material UI, Lodash.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tWeb app URL:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<a\\r\\n\\t\\t\\t\\t\\tclassName=\\\"allow-select\\\"\\r\\n\\t\\t\\t\\t\\ttarget=\\\"_blank\\\"\\r\\n\\t\\t\\t\\t\\trel=\\\"external nofollow noopener noreferrer\\\"\\r\\n\\t\\t\\t\\t\\thref=\\\"https://blackr1234.github.io/sudoku-web/\\\"\\r\\n\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\thttps://blackr1234.github.io/sudoku-web/\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"srt-subtitle-fixer\\\",\\r\\n\\t\\tprojectName: \\\"SRT Subtitle Fixer\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2021,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/srt-subtitle-fixer/initial-screen.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/srt-subtitle-fixer/all-good.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/srt-subtitle-fixer/result-screen.webp\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/srt-subtitle-fixer/warnings-and-errors.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/srt-subtitle-fixer/text-diff-section.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/srt-subtitle-fixer/ass-to-srt.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tA React and Spring Boot web app deployed on the Heroku cloud for correcting ASS and SRT subtitles.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tWeb app URL:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<a\\r\\n\\t\\t\\t\\t\\tclassName=\\\"allow-select\\\"\\r\\n\\t\\t\\t\\t\\ttarget=\\\"_blank\\\"\\r\\n\\t\\t\\t\\t\\trel=\\\"external nofollow noopener noreferrer\\\"\\r\\n\\t\\t\\t\\t\\thref=\\\"https://blackr1234.github.io/srt-subtitle-fixer-web/\\\"\\r\\n\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\thttps://blackr1234.github.io/srt-subtitle-fixer-web/\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tThis is a full-stack web project that I did for entertainment purpose (movie watching). Sometimes the\\r\\n\\t\\t\\t\\tASS or SRT files I download from the Internet have file format issues or multiple subtitle lines that\\r\\n\\t\\t\\t\\tsome TV players do not fully support. So I decided to write myself a program that helps correcting ASS\\r\\n\\t\\t\\t\\tand SRT files.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tFront-end webpage is deployed on GitHub Pages. It uses React and React Bootstrap.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tBack-end web app is deployed on Heroku. It uses Spring Boot Starter Web.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tThe whole project took around 24 ~ 30 hours (excluding layout tweaks).\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tFunctionalities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Automatically convert ASS subtitle format into SRT subtitle format (even if file extension\\r\\n\\t\\t\\t\\tis wrong, it can automatically detect the correct format)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Show warning and error logs in the webpage's result section if the SRT file has file format\\r\\n\\t\\t\\t\\tissues\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Sort subtitles by start time\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Remove text formatting\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Correct sequence numbers (start from 1 and increase by 1)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Combine multiple-line subtitles into single line\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Translate between Simplified Chinese and Traditional Chinese\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Adjust start time and end time (e.g. +500ms for all subtitles, or expand/shrink the whole\\r\\n\\t\\t\\t\\tduration)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Show before-and-after text diff (using the text-diff JavaScript library)\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"spring-jpa-mapstruct\\\",\\r\\n\\t\\tprojectName: \\\"Back-end web app with Spring, JPA/Hibernate & MapStruct\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (learning)\\\",\\r\\n\\t\\tyear: 2020,\\r\\n\\t\\timages: [],\\r\\n\\t\\tdescription: (\\r\\n\\t\\t\\t<>A simple back-end web application for learning MapStruct, a compile-time library that maps Java beans.</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"eyval-downloader\\\",\\r\\n\\t\\tprojectName: \\\"Eyval.net Magazine Downloader\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2020,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/eyval-downloader/1.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/eyval-downloader/2.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/eyval-downloader/3.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/eyval-downloader/4.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescription: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tA simple Java program using Jsoup to grab URLs and download magazine images of a given search keyword\\r\\n\\t\\t\\t\\tfrom Eyval.net.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"eportfolio\\\",\\r\\n\\t\\tprojectName: \\\"E-Portfolio\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2019,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/eportfolio/Console Log.jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/eportfolio/Home Page (Mobile).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/eportfolio/Project (Mobile).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/eportfolio/Blog Page (Mobile).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/eportfolio/Blog Post (Mobile).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/eportfolio/Menu (Mobile).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/eportfolio/Home Page (Desktop).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/eportfolio/Blog Page (Desktop).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/eportfolio/WebP Files.jpg\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tA React/Node.js web app written from scratch for job application purposes. It is a complete rewrite of a\\r\\n\\t\\t\\t\\tWix e-portfolio website with a similar layout design.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tResponsive web design (or mobile friendliness) is one of the primary goals when designing this website.\\r\\n\\t\\t\\t\\tThis project also supports lazy loading and Google WebP format of images on the Work Experiences and\\r\\n\\t\\t\\t\\tHobby Projects pages, so even these pages have tons of images, it is still blazing fast to load them and\\r\\n\\t\\t\\t\\tthe result is on-demand and low network data consumption and a good user experience.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tThe gallery component and the fullscreen gallery component on these pages are tailor-made from scratch,\\r\\n\\t\\t\\t\\treplacing 3rd party libraries namely React Awesome Slider, React Slick and React Image Lightbox used in\\r\\n\\t\\t\\t\\tthe past, to fulfil the needs for online manga style of navigation between images by clicking left and\\r\\n\\t\\t\\t\\tright areas, indicating that the image is still loading by applying a blinking effect and displaying\\r\\n\\t\\t\\t\\tthumbnail images with autoscroll animation since most of these images cannot be fully displayed when\\r\\n\\t\\t\\t\\tremaining static because of their aspect ratios.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tNPM packages used:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;JS library: React (with Hooks)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Routing: React Router DOM, React Router Hash Link\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;State management: Redux\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;UI layout: Semantic UI React, Styled Components\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Content: React Markdown (with Remark GFM plugin), Markdown TOC\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Animation &amp; effects: React Particles JS, Typewriter Effect, React Lazyload\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Data persistence: Firebase, localStorage\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tPrevious Wix website:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\thttps://blackr1234.wix.com/eport\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"hardware-picker-web\\\",\\r\\n\\t\\tprojectName: \\\"Hardware Picker Web\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2019,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-mobile/Add Product to Cart (Android).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-mobile/Dark Mode - Off (Android).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-mobile/Dark Mode - On (Android).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-mobile/Decrement Shopping Cart Product Quantity (Android).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-mobile/First Visit (Android).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-mobile/Increment Shopping Cart Product Quantity (Android).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-mobile/Product Added to Cart (Android).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-mobile/Product Removed from Cart (Android).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-mobile/Product Search (Android).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-mobile/Remove Product from Cart (Android).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-mobile/Shopping Cart (Android).jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-pc/Add Product to Cart (Desktop).png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-pc/Dark Mode - Off (Desktop).png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-pc/Dark Mode - On (Desktop).png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-pc/First Visit (Desktop).png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-pc/Product Added to Cart (Desktop).png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-pc/Product Removed from Cart (Desktop).png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-pc/Product Search (Desktop).png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-pc/Remove Product from Cart (Desktop).png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/hardware-picker-web-pc/Shopping Cart (Desktop).png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tA project that consists of a backend Spring Boot project and a front-end project. These applications run\\r\\n\\t\\t\\t\\tin different ports.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tThe backend application has scheduling enabled to fetch PC hardware data from Jumbo and Centralfield\\r\\n\\t\\t\\t\\tevery 5 minutes and has caching enabled. Redis is used for caching product data.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tThe frontend application is written in simple HTML, CSS and JavaScript. JavaScript library Vue is used\\r\\n\\t\\t\\t\\tfor faster development. Framework7 is used for responsive layout design.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"jira-backup-automator\\\",\\r\\n\\t\\tprojectName: \\\"JIRA Backup Automator\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2019,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/jira-backup-automator/JIRA Backup Automator - All - Hovered.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jira-backup-automator/JIRA Backup Automator - All.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jira-backup-automator/JIRA Backup Automator - Issue.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jira-backup-automator/JIRA Backup Automator - Project.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tA Spring Boot project that can be used as a scheduled job for automatically downloading HTML files of\\r\\n\\t\\t\\t\\tJIRA issues of multiple projects from a corporate JIRA website.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tIt uses SeleniumHQ-based library to grab HTML files and Jsoup to process the HTML files and collect\\r\\n\\t\\t\\t\\tstatistics. These statistics, including data for chart display, are populated in index HTML files with\\r\\n\\t\\t\\t\\tthe help of Apache FreeMarker template engine. jQuery, Chart.js and ApexChart.js are used.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tThe index HTML files and JIRA HTML files altogether form an offline website for viewing JIRA issues.\\r\\n\\t\\t\\t\\tJSON files, attachments and images are also downloaded as well. These files are downloaded, generated\\r\\n\\t\\t\\t\\tand finally form a website with dashboards with a single click.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"docker-manager\\\",\\r\\n\\t\\tprojectName: \\\"Docker Manager (macOS/Windows)\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2018,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - About.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - Build Image.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - Container Diff.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - Container File Structure.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - Container Info and Log.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - Container List.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - Create Network.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - Dock Badge Indicating the Number of Running Containers.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - Explore.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - Image List with Updatable Image Highlighted.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - Image List.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - Load Image.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - macOS Applications.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - Network List.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - Pull Image - Tag List.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - Pulling Image.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/docker-manager/Docker Manager - Run Container with Configurations.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tA simple JavaFX tool for managing docker images, containers and networks on a local environment. It uses\\r\\n\\t\\t\\t\\tthe docker-java library to establish connection with Docker. Works equally great on macOS and Windows\\r\\n\\t\\t\\t\\tplatforms.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tFunctionalities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Explore popular images on Docker Hub\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Build, pull, save, load, tag and remove images\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Indicate updatable images\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Run container from image with name, ports, environment variables, volumes and network\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Check container info, log and file structure\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Diff, rename, start, pause, resume, stop, kill and remove containers\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Creating and removing networks\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tAdditional non-functional features:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;UI design and colour scheme\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Keyboard shortcuts for fast navigation\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Ability to install as an app on macOS (.DMG)\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"mp3-player\\\",\\r\\n\\t\\tprojectName: \\\"MP3 Player\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2017,\\r\\n\\t\\timages: [\\\"hobby-projects/mp3-player/MP3 Player.jpg\\\"],\\r\\n\\t\\tdescription: <>An MP3 player desktop application written in JavaFX and 3rd-party libraries.</>,\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"pdf-editor\\\",\\r\\n\\t\\tprojectName: \\\"PDF Editor\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (part of work)\\\",\\r\\n\\t\\tyear: 2017,\\r\\n\\t\\timages: [\\\"hobby-projects/pdf-editor/PDF Editor.png\\\"],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tA JavaFX program that is capable of merging, rearranging and organizing PDF pages from different PDF\\r\\n\\t\\t\\t\\tfiles.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: <>Users can save all pages on the workbench as a new PDF file.</>,\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"sqlite-dbms-fx\\\",\\r\\n\\t\\tprojectName: \\\"SQLite DBMS FX\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2017,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/sqlite-dbms-fx/SQLite DBMS FX - Add Column.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/sqlite-dbms-fx/SQLite DBMS FX - Add Record.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/sqlite-dbms-fx/SQLite DBMS FX - Add Table.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/sqlite-dbms-fx/SQLite DBMS FX - Manipulating Records.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/sqlite-dbms-fx/SQLite DBMS FX - Operation Failure.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/sqlite-dbms-fx/SQLite DBMS FX - User SQL Execution.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/sqlite-dbms-fx/SQLite DBMS FX - Viewing Database.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: <>A previous Swing database manager project rewritten in JavaFX.</>,\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\t* There is also another version that utilizes a third-party library to generate POJO classes for JavaFX\\r\\n\\t\\t\\t\\tTableView's PropertyValueFactory reflection purposes.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />* This tool can be installed on jPlatform.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"software-version-checker\\\",\\r\\n\\t\\tprojectName: \\\"Software Version Checker\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2017,\\r\\n\\t\\timages: [\\\"hobby-projects/software-version-checker/Software Version Checker.png\\\"],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tA JavaFX program coded with third-party API that simplifies the process of checking software versions on\\r\\n\\t\\t\\t\\tofficial websites of the software that I use.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tWhen there is a newer version released, the software is highlighted.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tClicking on an item will open up the equivalent URL in the browser.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />* This tool can be installed on jPlatform.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"jplatform\\\",\\r\\n\\t\\tprojectName: \\\"jPlatform\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2017,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - About.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - App Corrupted.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - App Info Properties File.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Clock Styles.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Console in Developer Mode.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Install App.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Keep or Remove Data.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Log File.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Main Screen.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Multiple App Windows.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Overwrite or Reinstall App.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Platform Settings Properties File.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Rearrange App Icons.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Restart and Shut Down Actions Close Apps First.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Restart or Shut Down Failure.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Show All Apps in Taskbar.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Show Platform Only in Taskbar.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Transparent Windows.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Uninstall Apps.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/jplatform/jPlatform - Update App.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tA JavaFX program that acts as a simple application platform (similar to most mobile operating systems,\\r\\n\\t\\t\\t\\te.g. iOS), allowing users to install independent JavaFX GUI applications.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tIt has the ability to run pre-compiled JavaFX GUI bytecode \\\"on-the-fly\\\" without re-deploying the core\\r\\n\\t\\t\\t\\tprogram.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tOther key features:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;1.&ensp;Source code integrity verification\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;2.&ensp;Drag-and-drop app icon arrangement\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;3.&ensp;Transparent windows\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;4.&ensp;Console window (developer mode)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;5.&ensp;Logging to log file\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"substitute-cli-tool\\\",\\r\\n\\t\\tprojectName: \\\"Substitute CLI Tool\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (for work purposes)\\\",\\r\\n\\t\\tyear: 2016,\\r\\n\\t\\timages: [\\\"hobby-projects/substitute-cli/Substitute CLI.png\\\"],\\r\\n\\t\\tdescription: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tA Java program that is able to find and replace strings or regular expressions in specified lines and\\r\\n\\t\\t\\t\\tpositions in specified files and directories.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"create-table-viewer\\\",\\r\\n\\t\\tprojectName: \\\"Create Table Viewer\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (for work purposes)\\\",\\r\\n\\t\\tyear: 2016,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/create-table-viewer/Create Table Viewer - Create CSV.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/create-table-viewer/Create Table Viewer - Home.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/create-table-viewer/Create Table Viewer - Read Create Table SQL.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tA Java program written in JavaFX framework that made my development work easy when I was in the IBM BEA\\r\\n\\t\\t\\t\\tproject.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tFunctionalities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;1.&ensp;Read SQL files, display schema information\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;2.&ensp;Generate EJB entity classes with getters and setters (member variables in lowerCamelCase)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;3.&ensp;Generate processor classes with setter methods from the entity classes\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;4.&ensp;Read values from specific CSV file with column header\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;5.&ensp;Generate CREATE TABLE SQL statement from lists of column specifications stored in text\\r\\n\\t\\t\\t\\tfiles\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;6.&ensp;Generate CSV files with random values (in maximum length of their defined formats)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;7.&ensp;Search column names with partial text\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;8.&ensp;Format SQL files with alignment\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />* This tool can be installed on jPlatform.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"self-built-pc-hardware-picker\\\",\\r\\n\\t\\tprojectName: \\\"Self-built PC Hardware Picker\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2016,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/self-built-hardware-pickers/Centralfield & Jumbo Hardware Pickers.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/self-built-hardware-pickers/Centralfield Hardware Picker - Menu.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/self-built-hardware-pickers/Centralfield Hardware Picker.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/self-built-hardware-pickers/Jumbo Computer Hardware Picker - Menu.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/self-built-hardware-pickers/Jumbo Computer Hardware Picker.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/self-built-hardware-pickers/Product not found alert.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/self-built-hardware-pickers/Self-built PC Hardware Picker.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/self-built-hardware-pickers/Total price fluctuation alert.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tWritten in JavaFX. All catgory data and product information are retrieved from a self-built database\\r\\n\\t\\t\\t\\twith dynamic product categories.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tThe two latest versions can directly retrieve hardware product information from the Jumbo Computer\\r\\n\\t\\t\\t\\twebsite and the Centralfield website and provide handy functionalities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;1.&ensp;Save and open hardware lists\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;2.&ensp;Alert when product(s) are not found from the server\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;3.&ensp;Alert when the total price has fluctuated since last save\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />* These tools can be installed on jPlatform.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"graph-adt\\\",\\r\\n\\t\\tprojectName: \\\"Graph ADT\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2016,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/graph-adt/Graph.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/graph-adt/UML - Factory (Java).png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/graph-adt/UML - Graph (Java).png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/graph-adt/UML (C sharp).png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tThe graph abstract data type abstract class written in two languages, Java and C#, with inheritances of\\r\\n\\t\\t\\t\\tdirected graph and undirected graph. DFS and BFS are applied to find the path from one vertex to\\r\\n\\t\\t\\t\\tanother. Weighted graphs with Dijkstra's algorithm are included as well. All methods are tested with\\r\\n\\t\\t\\t\\tJUnit test cases.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tThe Java version can be used as an API and it is documented in Javadoc. The C# version has XML\\r\\n\\t\\t\\t\\tdocumentation comments within the solution.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"notes\\\",\\r\\n\\t\\tprojectName: \\\"Notes\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2016,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/notes/About.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/notes/Account Login.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/notes/Account Sign Up.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/notes/Context Menu.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/notes/Note-taking.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/notes/Save Alert.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/notes/Search.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tA note-editing Java program written in JavaFX framework that connects to a RethinkDB database (NoSQL,\\r\\n\\t\\t\\t\\tDocument-oriented).\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tFunctionalities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;1.&ensp;Note editing\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;2.&ensp;Account registration\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;3.&ensp;Online storage and document synchronization\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;4.&ensp;Note search\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tThere is also another version that connects to a MySQL database.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />* This tool can be installed on jPlatform.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"file-transfer-manager\\\",\\r\\n\\t\\tprojectName: \\\"File Transfer Manager\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2015,\\r\\n\\t\\timages: [\\\"hobby-projects/file-transfer-manager/Sending & Receiving Files.png\\\"],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>A Java program that handles sending and receiving files and folders over Internet connection.</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: <>* Recipient's router must be configured to forward the target port for file transfer</>,\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"postgresql-database-manager\\\",\\r\\n\\t\\tprojectName: \\\"PostgreSQL Database Manager\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2015,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/postgresql-dbms/Connect Database.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/postgresql-dbms/Create Table.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/postgresql-dbms/View Schema.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/postgresql-dbms/View Data.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/postgresql-dbms/Export SQL.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: <>A PostgreSQL database management system written in Java.</>,\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tFunctionalities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;1.&ensp;Connecting to an PostgreSQL database\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;2.&ensp;Displaying table structure\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;3.&ensp;Updating data\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;4.&ensp;Renaming column names\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;5.&ensp;Adding and deleting columns\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;6.&ensp;Adding and deleting data records\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;7.&ensp;Adding and deleting tables\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;8.&ensp;Filtering data without inputting SQL\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;9.&ensp;Executing custom SQL statements and displaying query results (also supports CREATE TABLE,\\r\\n\\t\\t\\t\\tALTER TABLE, DROP TABLE, DELETE, INSERT, etc)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;10.&ensp;Importing and exporting .sql files in UTF-8\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;11.&ensp;Chinese language support\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"oracle-database-manager\\\",\\r\\n\\t\\tprojectName: \\\"Oracle Database Manager\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2015,\\r\\n\\t\\timages: [\\\"hobby-projects/oracle-dbms/Connect Database.png\\\"],\\r\\n\\t\\tdescriptionOverview: <>An Oracle database management system written in Java.</>,\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tFunctionalities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;1.&ensp;Connecting to an Oracle database\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;2.&ensp;Displaying table structure\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;3.&ensp;Updating data\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;4.&ensp;Renaming column names\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;5.&ensp;Adding and deleting columns\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;6.&ensp;Adding and deleting data records\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;7.&ensp;Adding and deleting tables\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;8.&ensp;Filtering data without inputting SQL\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;9.&ensp;Executing custom SQL statements and displaying query results (also supports CREATE TABLE,\\r\\n\\t\\t\\t\\tALTER TABLE, DROP TABLE, DELETE, INSERT, etc)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;10.&ensp;Importing and exporting .sql files in UTF-8\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;11.&ensp;Chinese language support\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"photo-viewer\\\",\\r\\n\\t\\tprojectName: \\\"Photo Viewer & Photo Viewer FX\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2015,\\r\\n\\t\\timages: [\\\"hobby-projects/photo-viewer/Photo Viewer.png\\\"],\\r\\n\\t\\tdescriptionOverview: <>Two photo viewers: one written in Java whereas the other one written in JavaFX.</>,\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tFunctionalities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;1.&ensp;Opening JPG, PNG and BMP image files with drag and drop gesture\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;2.&ensp;Moving the image with left mouse drags or the WASD keys\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;3.&ensp;Zooming in/out with right mouse drags or the up/down arrow keys\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;4.&ensp;Navigating to the file directory of the image and highlighting the image file with middle\\r\\n\\t\\t\\t\\tmouse clicks or the Enter key\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;5.&ensp;Jumping to previous/next image with mouse wheel scrolls or the left/right arrow keys\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;6.&ensp;Deleting the image to the Recycle Bin with the Delete key\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t* Bilinear sampling is used when opening and resizing the image\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t** For the JavaFX version, drag and drop gesture is disabled after an image is opened\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"search-gui-cli\\\",\\r\\n\\t\\tprojectName: \\\"Search (GUI & CLI)\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2015,\\r\\n\\t\\timages: [\\\"hobby-projects/search-gui/Search (GUI).png\\\"],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tTwo programs: one constructed with JTable and other JComponents whereas the other one in command line\\r\\n\\t\\t\\t\\tinterface.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tFunctionalities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tGUI version:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;1.&ensp;Displaying all records\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;2.&ensp;Adding and deleting records\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;3.&ensp;Changing row height\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;4.&ensp;Incremental search (a.k.a. search as you type) with all matching texts highlighted\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;5.&ensp;Search with predefined regular expressions (only comma (,) for separating filter text\\r\\n\\t\\t\\t\\tkeywords and/or key phrases and \\\"NOT \\\" word are supported)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tCLI version:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;1.&ensp;Displaying all records\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;2.&ensp;Adding and deleting records\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;3.&ensp;Search with predefined regular expressions (only comma (,) for separating filter text\\r\\n\\t\\t\\t\\tkeywords and/or key phrases and \\\"NOT \\\" word are supported)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />* Commas are treated as the AND operator when the All radio button is selected and they are\\r\\n\\t\\t\\t\\tregarded as the OR operator when the Any radio button is selected\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"mysql-database-manager\\\",\\r\\n\\t\\tprojectName: \\\"MySQL Database Manager\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2015,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/mysql-dbms/Add Table.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/mysql-dbms/Connect Database (Chinese).png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/mysql-dbms/Connect Database.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/mysql-dbms/Execute SQL.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/mysql-dbms/Filter Data.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/mysql-dbms/Insert Record (column with an Auto Increment property).png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: <>A MySQL database management system written in Java.</>,\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tFunctionalities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;1.&ensp;Connecting to a MySQL database\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;2.&ensp;Displaying table structure\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;3.&ensp;Updating data\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;4.&ensp;Renaming column names\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;5.&ensp;Adding and deleting columns\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;6.&ensp;Adding and deleting data records\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;7.&ensp;Adding and deleting tables\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;8.&ensp;Filtering data without inputting SQL\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;9.&ensp;Executing custom SQL statements and displaying query results (also supports CREATE TABLE,\\r\\n\\t\\t\\t\\tALTER TABLE, DROP TABLE, DELETE, INSERT, etc)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;10.&ensp;Importing and exporting .sql files in UTF-8\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;11.&ensp;Supporting table creation with Auto Increment primary key\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;12.&ensp;Allowing the use of \\\"last insert id\\\" expression to represent \\\"LAST_INSERT_ID()\\\"\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;13.&ensp;Chinese language support\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"sqlite-database-manager\\\",\\r\\n\\t\\tprojectName: \\\"SQLite Database Manager\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2015,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/sqlite-dbms/Add column.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/sqlite-dbms/Add record.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/sqlite-dbms/Add table.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/sqlite-dbms/Execute SQL.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/sqlite-dbms/Export SQL.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/sqlite-dbms/Filter Data.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/sqlite-dbms/Home page.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: <>A SQLite database management system written in Java.</>,\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tFunctionalities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;1.&ensp;Creating new .db files\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;2.&ensp;Reading .db files with drag &amp; drop gesture\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;3.&ensp;Displaying table structure\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;4.&ensp;Updating data\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;5.&ensp;Renaming column names\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;6.&ensp;Adding and deleting columns\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;7.&ensp;Adding and deleting data records\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;8.&ensp;Adding and deleting tables\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;9.&ensp;Filtering data without inputting SQL\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;10.&ensp;Executing custom SQL statements and displaying query results (also supports CREATE TABLE,\\r\\n\\t\\t\\t\\tALTER TABLE, DROP TABLE, DELETE, INSERT, PRAGMA, etc)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;11.&ensp;Importing and exporting .sql files in UTF-8\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;12.&ensp;Filtering corrupt database files in the drag &amp; drop gesture and the Open dialog\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;13.&ensp;Chinese language support\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"xiangqi-banqi\\\",\\r\\n\\t\\tprojectName: \\\"Xiangqi & Banqi\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\tyear: 2015,\\r\\n\\t\\timages: [\\\"hobby-projects/xiangqi-banqi/Banqi.png\\\", \\\"hobby-projects/xiangqi-banqi/Xiangqi.png\\\"],\\r\\n\\t\\tdescription: (\\r\\n\\t\\t\\t<>Two Chinese chess games written in Java with 2P on local machine and over Internet connection.</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"puzzle-and-dse-maths\\\",\\r\\n\\t\\tprojectName: \\\"Puzzle & DSE Maths\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (Final Year Project)\\\",\\r\\n\\t\\tyear: 2015,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/puzzle-and-dse-maths/Battle page.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/puzzle-and-dse-maths/Card page.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/puzzle-and-dse-maths/Home Page.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/puzzle-and-dse-maths/Question page.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tAn object-oriented Java desktop application that utilizes databases (MySQL and SQLite) to store data,\\r\\n\\t\\t\\t\\thaving entertainment functions similar to the popular game, Puzzle &amp; Dragons, and a hundred of\\r\\n\\t\\t\\t\\tusers.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tMy tasks:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Product implementation\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Data validation and error testing\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Promoting and updating official website and Facebook app page\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Collecting feedbacks from users\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Product presentation\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Documentation\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Maintenance of front-end and back-end of the software\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tOfficial website:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\thttp://pndm.weebly.com\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tFacebook app page:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\thttps://www.facebook.com/pndmaths\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"hr-lightswitch\\\",\\r\\n\\t\\tprojectName: \\\"Human Resources Department LightSwitch application\\\",\\r\\n\\t\\tprojectNature: \\\"Group project (5 members)\\\",\\r\\n\\t\\tyear: 2015,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/human-resources-department-lightswitch/LightSwitch UI.jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/human-resources-department-lightswitch/LightSwitch ERD.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tAn ASP.NET LightSwitch HTML5 application with basic personnel management functions developed under the\\r\\n\\t\\t\\t\\tfeature-driven development (FDD) model.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tMy responsibilities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Designing Microsoft SQL Server database model\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Designing user interfaces and screens\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Application testing and debugging\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Product presentation\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;User manual and report writing\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"online-shopping-website\\\",\\r\\n\\t\\tprojectName: \\\"Online shopping website\\\",\\r\\n\\t\\tprojectNature: \\\"Group project (5 members)\\\",\\r\\n\\t\\tyear: 2014,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/online-shopping-website/Cart With Item.jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/online-shopping-website/Main Page.jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/online-shopping-website/PayPal Confirm.jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/online-shopping-website/Product Brand Only Omega.jpg\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tAn ASP.NET (object-oriented C#) e-commerce website with shopping cart function, Google account login and\\r\\n\\t\\t\\t\\tPayPal payment gateway integration.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tMy responsibilities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Reviewing and researching online tutorials and past works\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Full project implementation\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Website testing and debugging\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Product presentation and demonstration\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;User manual, weekly project log and management report writing\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"chinese-medical-system\\\",\\r\\n\\t\\tprojectName: \\\"Traditional Chinese Medicine Medical Record System\\\",\\r\\n\\t\\tprojectNature: \\\"Group project (5 members)\\\",\\r\\n\\t\\tyear: 2013,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/traditional-chinese-medicine-medical-record-system/Medical Record System.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/traditional-chinese-medicine-medical-record-system/Medical Record System 2.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tAn object-oriented Java desktop application that allows doctors to record and view daily medical\\r\\n\\t\\t\\t\\tmeetings with their patients.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tMy responsibilities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Designing and defining Java classes\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Partial project implementation\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Data validation and error testing\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Product presentation\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Documentation\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"kowloon-motor-bus-routes-db-design\\\",\\r\\n\\t\\tprojectName: \\\"A database design with SQLs for customers to find out Kowloon Motor Bus routes\\\",\\r\\n\\t\\tprojectNature: \\\"Group project (5 members)\\\",\\r\\n\\t\\tyear: 2013,\\r\\n\\t\\timages: [],\\r\\n\\t\\tdescriptionOverview: <>A database design with SQLs for customers to find out Kowloon Motor Bus routes.</>,\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tMy responsibilities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Finding bus information\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Designing database tables and fields\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Product presentation\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Documentation\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"pgm-photo-editor\\\",\\r\\n\\t\\tprojectName: \\\"Portable Grey Map Photo Editor\\\",\\r\\n\\t\\tprojectNature: \\\"Group project (6 members)\\\",\\r\\n\\t\\tyear: 2012,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/pgm-photo-editor/Ultimate PGM Editor.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/pgm-photo-editor/Ultimate PGM Editor - View PGM.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/pgm-photo-editor/Team Photo.jpg\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/pgm-photo-editor/Project Requirements 1.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/pgm-photo-editor/Project Requirements 2.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tA photo editing Windows console application written in C that handles Portable Grey Map photos by\\r\\n\\t\\t\\t\\tshowing in ASCII characters and applying photo effects.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tMy responsibilities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Leading the whole project group\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Complete project implementation\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Input validation and error-testing\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Product presentation and demonstration\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"vocab-game\\\",\\r\\n\\t\\tprojectName: \\\"English Vocabulary Game\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (School-based Assessment)\\\",\\r\\n\\t\\tyear: 2011,\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Loading Screen.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Message from Author.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Main Screen.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Vocab Guessing Screen.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Success and Rating Screen.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Vocab Guessing Screen - Challenging - 1.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Vocab Guessing Screen - Challenging - 2.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Success and Rating Screen - Challenging.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Menu.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Mini Game Hangman.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Mini Game Hangman - Good Job.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Create Account.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Account Status.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Account Achievements.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Instructions.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Instructions - How to save your game.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Instructions - My Account.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/Unlock with Key.png\\\",\\r\\n\\t\\t\\t\\\"hobby-projects/vocabulary-game/About Screen.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tAA vocabulary guessing game running inside Windows console and written in Pascal that aims at improving\\r\\n\\t\\t\\t\\tchildren's English.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tMy tasks:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Project implementation\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Input validation and error-testing\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Documentation\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"snake-tetris\\\",\\r\\n\\t\\tprojectName: \\\"Snake, Tetris\\\",\\r\\n\\t\\tprojectNature: \\\"Individual (hobby project)\\\",\\r\\n\\t\\timages: [\\\"hobby-projects/snake-tetris/Snake.png\\\", \\\"hobby-projects/snake-tetris/Tetris.png\\\"],\\r\\n\\t\\tdescription: <>Two epic game projects written in C that run in Windows console.</>,\\r\\n\\t},\\r\\n];\\r\\n\\r\\nexport default hobbyProjects;\\r\\nexport { hobbyProjects };\\r\\n\";","export default \"const responsiveMaxWidth = window.devicePixelRatio === 2 ? 766 : 767;\\r\\nconst responsiveMinWidth = responsiveMaxWidth + 1;\\r\\n\\r\\nconst exports = { responsiveMaxWidth, responsiveMinWidth };\\r\\nexport default exports;\\r\\nexport { responsiveMaxWidth, responsiveMinWidth };\\r\\n\";","export default \"import React from \\\"react\\\";\\r\\n\\r\\nconst workProjects = [\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"bea-dio-bifd\\\",\\r\\n\\t\\tprojectName: \\\"Bank of East Asia (Contracted by Hudson Global Resources)\\\",\\r\\n\\t\\tprojectNature: \\\"6th Work Experience\\\",\\r\\n\\t\\tyear: \\\"Jul 2021 ~ Oct 2021\\\",\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"work-projects/bea-dio-bifd/26f.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/bea-dio-bifd/department.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/bea-dio-bifd/office-1.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/bea-dio-bifd/office-2.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/bea-dio-bifd/seat-1.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/bea-dio-bifd/seat-2.jpg\\\",\\r\\n\\t\\t],\\r\\n\\t\\tposition: \\\"Java Developer\\\",\\r\\n\\t\\tcontractPeriod: \\\"2021-7-6 ~ 2021-10-8\\\",\\r\\n\\t\\tworkLocation: \\\"BEA Tower, Millennium City 5\\\",\\r\\n\\t\\tteamSize: \\\"4\\\",\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tI am a web developer in the Business Innovation and Fintech Department of the Digital &amp; Innovation\\r\\n\\t\\t\\t\\tOffice who is responsible for implementing features for the recently launched BEA Mall mobile app that\\r\\n\\t\\t\\t\\tinvolve development in several Spring back-end microservice projects and a front-end JavaScript project.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tWorking in a small team, I am given the flexibility in implementing new changes and the opportunity to\\r\\n\\t\\t\\t\\tcontribute ideas including code refactoring and smarter ways of doing things like creating environments\\r\\n\\t\\t\\t\\tfor multiple developers to work and test at the same time and Git branching strategy.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tResponsibilities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Implement new features for the BEA Mall mobile app\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;&ensp;&ensp;&ensp;•&ensp;Add new APIs in its back-end microservices and work with front-end\\r\\n\\t\\t\\t\\tcolleague to meet new requirements in user journey\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;&ensp;&ensp;&ensp;•&ensp;Add new functions to its CMS web application (front-end and back-end)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Contribute to code refactoring and DevOps practices, including Git branching and creating\\r\\n\\t\\t\\t\\tseparate environments for testing\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Back-end tech: Java 8, Spring Boot, JPA/Hibernate and SQL Server\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Front-end tech: React.js, Vue.js\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;DevOps tech: GitLab, JIRA, Jenkins\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"ant-financial-world-first\\\",\\r\\n\\t\\tprojectName: \\\"World First Asia Ltd. (acquired by Ant Financial, Alibaba)\\\",\\r\\n\\t\\tprojectNature: \\\"5th Work Experience\\\",\\r\\n\\t\\tyear: \\\"Dec 2019 ~ Jun 2021\\\",\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"work-projects/worldfirst/Double Eleven 2020 - Alibaba Office - 1.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/worldfirst/Double Eleven 2020 - Alibaba Office - 2.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/worldfirst/Double Eleven 2020 - Alibaba Office - 3.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/worldfirst/team.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/worldfirst/ali-day.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/worldfirst/performance-evaluation.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tposition: \\\"Software Engineer\\\",\\r\\n\\t\\tcontractPeriod: \\\"2019-12-16 ~ present\\\",\\r\\n\\t\\tworkLocation: \\\"Chubby Tower\\\",\\r\\n\\t\\tteamSize: \\\"~12 (HK, excluding UK and China)\\\",\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tI was a back-end developer who engaged in different areas of development from analyzing business\\r\\n\\t\\t\\t\\trequirements and estimating changes in systems, implementing the required code changes, testing and\\r\\n\\t\\t\\t\\tcollaborating with the QA team and UAT with project owners, all the way to deployment and production\\r\\n\\t\\t\\t\\tmonitoring.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tWe worked very closely with the Ant Financial development team from Mainland China on the Replatforming\\r\\n\\t\\t\\t\\tproject to revamp legacy back-end money transferring systems after the company was acquired by Ant.\\r\\n\\t\\t\\t\\tBesides, our team used the agile development methodology.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tResponsibilities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Perform system analysis and prepare SA documentations\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Coordinate with other teams that are located in HK (local), UK (foreign) and CN (Ant\\r\\n\\t\\t\\t\\tFinancial colleagues) to implement new features within tight deadlines\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Work with Amazon US developers and implement API calls according to their tech specs and\\r\\n\\t\\t\\t\\tcontract\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Integrate eBay's OAuth and APIs with back-end systems\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Enhance features and improve user experiences of legacy systems\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Proactively contribute technical ideas and R&amp;D to improve code base of Spring Boot\\r\\n\\t\\t\\t\\tprojects\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;&ensp;&ensp;&ensp;•&ensp;Rewrite and refactor code written by UK colleagues\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;&ensp;&ensp;&ensp;•&ensp;Integrate latest Spring Cloud tech\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;TDD and BDD with JUnit, Mockito and Cucumber, and aim at &gt;90% change and branch\\r\\n\\t\\t\\t\\tcoverages\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Pair programming, a lot of code reviews and QA (very transparent and collaborative team\\r\\n\\t\\t\\t\\twork)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Agile development: constantly participate in standup, sprint grooming &amp; planning, UAT,\\r\\n\\t\\t\\t\\trelease, retrospective, etc.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;&ensp;&ensp;&ensp;•&ensp;Work closely with product team, development team and business team to\\r\\n\\t\\t\\t\\tdeliver products\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;&ensp;&ensp;&ensp;•&ensp;Always work on proof of concept and minimal viable product\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Back-end tech: Java 8, Spring Boot/Cloud, Ant Financial tech stack\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Front-end tech: HTML, JavaScript\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;DevOps tech: Docker Compose, Git, GitLab, Bitbucket, JIRA, Confluence, Jenkins (CI/CD),\\r\\n\\t\\t\\t\\tBamboo (CI/CD), SonarQube (code analysis tool), Sumo Logic (log management), Visual Paradigm (sequence\\r\\n\\t\\t\\t\\tdiagram tool), Postman, Swagger, Mockoon\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"hksarg-wfao\\\",\\r\\n\\t\\tprojectName: \\\"HKSARG Working Family Allowance Office (Contracted by Chandler Macleod)\\\",\\r\\n\\t\\tprojectNature: \\\"4th Work Experience\\\",\\r\\n\\t\\tyear: \\\"Jun 2019 ~ Nov 2019\\\",\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"work-projects/wfao-eform/team.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/wfao-eform/attachment.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/wfao-eform/date-picker.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/wfao-eform/debug.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/wfao-eform/dynamic-list.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/wfao-eform/mobile-validation.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/wfao-eform/mobile.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/wfao-eform/overview.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/wfao-eform/password-strength-indicator.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/wfao-eform/preview.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/wfao-eform/step.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/wfao-eform/switch-language.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tposition: \\\"Contract Analyst Programmer\\\",\\r\\n\\t\\tcontractPeriod: \\\"2019-6-24 ~ 2019-11-30\\\",\\r\\n\\t\\tworkLocation: \\\"One Harbor Square\\\",\\r\\n\\t\\tteamSize: \\\"~15 (SA + AP)\\\",\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tI worked as a T-25 contractor in Working Family Allowance Office (WFAO) for a short term contract of 5\\r\\n\\t\\t\\t\\tmonths. I was responsible for R&amp;D in web development with React JS.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tResponsibilities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Fully implement a e-form web app in React + Redux + Spring Boot\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Enhance Spring MVC + JPA/Hibernate + ZK web applications\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Analyze existing applications, propose solutions, work on proof of concept and\\r\\n\\t\\t\\t\\timplementation\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tAcquired new technologies:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;React (JS library)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Redux (state management)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Semantic UI (layout)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Some other NPM open source libraries\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"lkk-infinitus\\\",\\r\\n\\t\\tprojectName: \\\"LKK Health Products Group Limited / Infinitus Horizon Global Ltd.\\\",\\r\\n\\t\\tprojectNature: \\\"3rd Work Experience\\\",\\r\\n\\t\\tyear: \\\"Mar 2018 ~ Jun 2019\\\",\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"work-projects/infinitus-dsis/2018.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/infinitus-dsis/2019.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/infinitus-dsis/henry-chan-comments-on-work.jpg\\\",\\r\\n\\t\\t],\\r\\n\\t\\tposition: \\\"Software Engineer\\\",\\r\\n\\t\\tcontractPeriod: \\\"2018-3-23 ~ 2018-9-16 (Contracted by Kelly Services), 2018-9-17 ~ 2019-6-7 (permanent)\\\",\\r\\n\\t\\tworkLocation: \\\"Infinitus Plaza and Lee Gardens 2\\\",\\r\\n\\t\\tteamSize: \\\"5~6\\\",\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tI was a full-stack back-end software developer in LKK Infinitus, the largest direct selling dietary\\r\\n\\t\\t\\t\\tsupplement manufacturer in Mainland China. I was responsible for maintaining a web platform and the\\r\\n\\t\\t\\t\\tback-end system of a direct-selling integrated system and implementing changes to achieve business\\r\\n\\t\\t\\t\\tobjectives and goals. Besides, our team used the agile development methodology.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />I was first a contractor in the company but then my supervisor gave me a permanet role and I\\r\\n\\t\\t\\t\\tbecame a member of the LKK Infinitus family.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tProject: Direct-Selling Integrated System\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;A multilingual web platform built by vendor for internal users all around the world to\\r\\n\\t\\t\\t\\tplace sales orders, create members, manage inventories, view business reports, etc\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tResponsibilities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Bug fixing and enhancements to support changing business requirements\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Participate in requirement gathering and meetings to understand business requirements\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tAround 8 supporting Spring Boot microservice applications\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Web automation on DSIS and HTML version of reports\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Generating and testing MyBatis mappers\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Report templating with HTML + CSS + FreeMarker + Java + iText\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Responsible for full implementation from scratch\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tBack-end technologies: Java 8, Spring MVC, Spring Boot, Spring Cloud, MyBatis, FreeMarker, OpenFeign,\\r\\n\\t\\t\\t\\tSwaggerUI, iText PDF\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tFront-end technologies: JavaScript, jQuery\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tTesting technologies: Postman, JMeter, JUnit, Mockito, SeleniumHQ\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tDevOps technologies: Docker, Jenkins, Git, JIRA, Confluence, BitBucket\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tOverall responsibilities: Back-end (30%), front-end (25%), automated testing (30%), DevOps (10%),\\r\\n\\t\\t\\t\\tdocumentation (5%)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tNote: Changed to permanent contract since 17 Sep 2019.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"dbs-bank\\\",\\r\\n\\t\\tprojectName: \\\"DBS Bank (HK) (Contracted by Kelly Services)\\\",\\r\\n\\t\\tprojectNature: \\\"2nd Work Experience\\\",\\r\\n\\t\\tyear: \\\"Mar 2017 ~ Mar 2018\\\",\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"work-projects/dbs-ifile/1_dashboard.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-ifile/2_1_add_user.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-ifile/2_2_update_user.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-ifile/2_users.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-ifile/3_user_groups.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-ifile/4_doc_types.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-ifile/5_recent_events.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-eforms/sc0.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-eforms/sc1.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-eforms/sc2.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-eforms/sc3.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-eforms/sc4.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-eforms/sc5.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-eforms/sc6.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-eforms/sc7.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-other-projects/bizcare.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-other-projects/bizcare-about.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-other-projects/bizcare-consolidation.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-other-projects/bizcare-consolidation-result.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-other-projects/bizcare-consolidation-about.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-other-projects/customer-total-portfolio-rtpo.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-other-projects/customer-total-portfolio-rtpo-2.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-other-projects/customer-total-portfolio-rtpo-3.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-other-projects/customer-total-portfolio-rtpo-about.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-other-projects/demand-letter-generator.png\\\",\\r\\n\\t\\t\\t\\\"work-projects/dbs-other-projects/demand-letter-generator-about.png\\\",\\r\\n\\t\\t],\\r\\n\\t\\tposition: \\\"Software Engineer\\\",\\r\\n\\t\\tcontractPeriod: \\\"2017-3-20 ~ 2018-3-19\\\",\\r\\n\\t\\tworkLocation: \\\"One Island East, sometimes Millennium City 6 and The Center\\\",\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tI was a contract software developer in DBS and I was responsible for R&amp;D on their new projects. The\\r\\n\\t\\t\\t\\tcompany had 2 large web projects, one that allowed internal business users to search and view scanned\\r\\n\\t\\t\\t\\tand indexed PDF documents and one that streamlined the form filling and endorsement workflow of its\\r\\n\\t\\t\\t\\tcustomer relationship managers, as well as many small robotic process automation projects for\\r\\n\\t\\t\\t\\tfacilitating different groups of business users.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tProject 1: Paper Digitization / iFile\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;A web platform for business users to manage and view OCR'ed PDF documents\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tTechnologies: Java 8, Spring Boot, Hibernate/JPA, Apache Camel, ElasticSearch, AngularJS, JavaScript,\\r\\n\\t\\t\\t\\tSQL Server, MySQL\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tResponsibilities: Mainly back-end (web services and database design, documentation, etc) and a small\\r\\n\\t\\t\\t\\tproportion of front-end\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tDevelopment period: Mar 2017 ~ Sep 2017\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tTeam size: 3 (1 back-end, 1 front-end, 1 lead)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t~\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tProject 2: e-Forms\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;A web platform for relationship managers to work on credit application forms with approval\\r\\n\\t\\t\\t\\tworkflow\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tTechnologies: Java 8, Spring Boot, Hibernate/JPA, Angular2, SQL Server, MySQL\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tResponsibilities: Mainly back-end (web services and database design, etc) and a small proportion of\\r\\n\\t\\t\\t\\tfront-end\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tDevelopment period: Oct 2017 ~ Mar 2018\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tTeam size: 5 (1 back-end, 1 front-end, 1 UI/UX designer, 1 BA, 1 lead)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t~\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tOther small adhoc projects\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tFunctions &amp; use cases:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Web automation - grab data / batch update records in banking systems since there is no API\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Generate demand letter Microsoft Word documents for soft collectors to print out and send\\r\\n\\t\\t\\t\\tto obligors\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Loading data from delimited flat files and files of other layouts to RDBMS for audit\\r\\n\\t\\t\\t\\tpurposes\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Generate PDF files from HTML created from WYSIWYG editor\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tTechnologies: Java 8, Selenium, JavaFX, Spring Boot, Hibernate/JPA, iText, Apache POI, JasperReports\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tResponsibilities: Full implementation\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tDevelopment period: 1 week ~ 1 month\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tTeam size: 2 (1 developer and 1 lead)\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tprojectId: \\\"ibm\\\",\\r\\n\\t\\tprojectName: \\\"IBM (Contracted by Kelly Services)\\\",\\r\\n\\t\\tprojectNature: \\\"1st Work Experience\\\",\\r\\n\\t\\tyear: \\\"Mar 2016 ~ Feb 2017\\\",\\r\\n\\t\\timages: [\\r\\n\\t\\t\\t\\\"work-projects/ibm-bea-cso/20160517 - IBM - Interface Team.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/ibm-bea-cso/20161110 - IBM - Farewell Lunch.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/ibm-bea-cso/20161201 - IBM - Work.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/ibm-bea-cso/20161213 - IBM - Overtime.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/ibm-bea-cso/20161223 - IBM - Group Photo.jpg\\\",\\r\\n\\t\\t\\t\\\"work-projects/ibm-bea-cso/20161230 - IBM - Karaoke with BEA Users.jpg\\\",\\r\\n\\t\\t],\\r\\n\\t\\tposition: \\\"IT Specialist\\\",\\r\\n\\t\\tcontractPeriod: \\\"2016-3-7 ~ 2017-3-6\\\",\\r\\n\\t\\tworkLocation: \\\"On-site at BEA Tower, Millennium City 5\\\",\\r\\n\\t\\tteamSize: \\\"~10 (Interface team), ~50 (whole project team)\\\",\\r\\n\\t\\tdescriptionOverview: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tIt was my honour to join the IBM Global Business Services division as a contractor and participated in\\r\\n\\t\\t\\t\\ttheir large banking project. I was responsible for development, writing unit test cases, working with\\r\\n\\t\\t\\t\\tend users on-site, collaborating with the SIT and QA teams to complete end-to-end testing.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />I really appreciated all of my colleagues in IBM, especially my team lead who was extremely\\r\\n\\t\\t\\t\\ttechnical and hard-working, during my contract period since they taught me a lot of hard skills. Without\\r\\n\\t\\t\\t\\tthem, I could hardly equip the soft skills that brought me further in my career.\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t\\tdescriptionContinued: (\\r\\n\\t\\t\\t<>\\r\\n\\t\\t\\t\\tThe Bank of East Asia - Consolidated Settlement Operation System (CSO)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tAn SI project that aims at integrating a banking system, Calypso, and migrating the deprecated back\\r\\n\\t\\t\\t\\toffice solution, KTP, to a new solution namely CSO. Many interface reports have been redesigned to meet\\r\\n\\t\\t\\t\\trequirements of the other parties of our client.\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tContract period: 7 Mar 2016 ~ 6 Mar 2017\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tWork location: on-site at BEA Tower, Millennium City 5\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\tMy Responsibilities:\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Clarification on business requirements with users from the Settlement Operations Department\\r\\n\\t\\t\\t\\t(SOD)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Development\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;&ensp;&ensp;&ensp;•&ensp;Upstream integration and migration (30% of time)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;•&ensp;Manipulating XMLs from two banking systems (TCL and\\r\\n\\t\\t\\t\\tKPS) and using Calypso's API\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;&ensp;&ensp;&ensp;•&ensp;Downstream reporting (70% of time)\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;•&ensp;Full implementation of interface reports (HKTR for\\r\\n\\t\\t\\t\\tHKMA) by strictly following Functional and Interface Specifications\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;•&ensp;Defect fixing and maintenance of other interface\\r\\n\\t\\t\\t\\treports (i.e. BRT, BSL, CSA, CRM, EAL and IFP) during the SIT, UAT and PIS periods\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;•&ensp;Database schema migration\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Unit testing and end-to-end testing with JUnit and Mockito\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Application deployment with Jenkins and automated deployment scripts\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Continuous integration and delivery with SVN and RTC version control\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Training the IT Department to maintain the solution\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t&ensp;•&ensp;Documentation with Javadoc\\r\\n\\t\\t\\t</>\\r\\n\\t\\t),\\r\\n\\t},\\r\\n];\\r\\n\\r\\nexport default workProjects;\\r\\nexport { workProjects };\\r\\n\";","export default \"const CHANGE_IMAGE_POPUP_SOURCE = \\\"CHANGE_IMAGE_POPUP_SOURCE\\\";\\r\\n\\r\\nconst exports = { CHANGE_IMAGE_POPUP_SOURCE };\\r\\nexport default exports;\\r\\nexport { CHANGE_IMAGE_POPUP_SOURCE };\\r\\n\";","export default \"import { CHANGE_IMAGE_POPUP_SOURCE } from \\\"../action/actionTypes\\\";\\r\\n\\r\\nconst imagePopupReducer = (\\r\\n\\tstate = {\\r\\n\\t\\timages: [],\\r\\n\\t\\tactiveIndex: null,\\r\\n\\t\\tshow: false,\\r\\n\\t\\tkey: null,\\r\\n\\t},\\r\\n\\t{ type, data }\\r\\n) => {\\r\\n\\tswitch (type) {\\r\\n\\t\\tcase CHANGE_IMAGE_POPUP_SOURCE:\\r\\n\\t\\t\\tconst hasImages = data.images && data.images.length > 0;\\r\\n\\t\\t\\treturn {\\r\\n\\t\\t\\t\\t...state,\\r\\n\\t\\t\\t\\t...data,\\r\\n\\t\\t\\t\\tshow: (data.show === undefined && (data.activeIndex >= 0 || hasImages)) || data.show,\\r\\n\\t\\t\\t\\tkey:\\r\\n\\t\\t\\t\\t\\thasImages || (typeof data.show === \\\"boolean\\\" && state.show !== data.show)\\r\\n\\t\\t\\t\\t\\t\\t? Math.random()\\r\\n\\t\\t\\t\\t\\t\\t: state.key,\\r\\n\\t\\t\\t};\\r\\n\\t\\tdefault:\\r\\n\\t\\t\\treturn state;\\r\\n\\t}\\r\\n};\\r\\n\\r\\nexport default imagePopupReducer;\\r\\nexport { imagePopupReducer };\\r\\n\";","export default \"import { createStore, applyMiddleware } from \\\"redux\\\";\\r\\nimport logger from \\\"redux-logger\\\";\\r\\nimport { allReducers } from \\\"./reducer\\\";\\r\\nimport { composeWithDevTools } from \\\"redux-devtools-extension\\\";\\r\\n\\r\\nconst store =\\r\\n\\tprocess.env.NODE_ENV === \\\"production\\\"\\r\\n\\t\\t? createStore(allReducers)\\r\\n\\t\\t: createStore(allReducers, composeWithDevTools(applyMiddleware(logger)));\\r\\n\\r\\nexport default store;\\r\\nexport { store };\\r\\n\";","export default \"import axios from \\\"axios\\\";\\r\\nimport { firebaseHost } from \\\"../config\\\";\\r\\n\\r\\nconst postComment = ({ firstName, lastName, phone, email, message, clientIp }) => {\\r\\n\\tconst date = new Date();\\r\\n\\r\\n\\treturn axios.post(`${firebaseHost}/comments.json`, {\\r\\n\\t\\t...(firstName && { firstName }),\\r\\n\\t\\t...(lastName && { lastName }),\\r\\n\\t\\t...(phone && { phone }),\\r\\n\\t\\t...(email && { email }),\\r\\n\\t\\t...(message && { message }),\\r\\n\\t\\t...(clientIp && { clientIp }),\\r\\n\\t\\tdate: date.getTime(),\\r\\n\\t\\tdateISO: date.toISOString(),\\r\\n\\t});\\r\\n};\\r\\n\\r\\nconst exports = { postComment };\\r\\nexport default exports;\\r\\nexport { postComment };\\r\\n\";","export default \"const getCookiesConsent = () => Number(localStorage.getItem(\\\"cookiesConsent\\\")) || \\\"0\\\";\\r\\n\\r\\nconst setCookiesConsent = (accepted) => localStorage.setItem(\\\"cookiesConsent\\\", accepted ? \\\"1\\\" : \\\"0\\\");\\r\\n\\r\\nconst getReadBlogPostIds = () => (localStorage.getItem(\\\"readBlogPostIds\\\") || \\\"\\\").split(\\\",\\\").filter((e) => e) || [];\\r\\n\\r\\nconst addReadBlogPostId = (postId) => {\\r\\n\\tconst readBlogPostIds = getReadBlogPostIds();\\r\\n\\tlocalStorage.setItem(\\\"readBlogPostIds\\\", Array.from(new Set([...readBlogPostIds, postId])).join(\\\",\\\"));\\r\\n};\\r\\n\\r\\nconst getBlogPostFontSizeLevel = () => Number(localStorage.getItem(\\\"fontSizeLevel\\\")) || 1;\\r\\n\\r\\nconst setBlogPostFontSizeLevel = (fontSizeLevel) => localStorage.setItem(\\\"fontSizeLevel\\\", fontSizeLevel);\\r\\n\\r\\nconst LocalStorageService = {\\r\\n\\tgetCookiesConsent,\\r\\n\\tsetCookiesConsent,\\r\\n\\tgetReadBlogPostIds,\\r\\n\\taddReadBlogPostId,\\r\\n\\tgetBlogPostFontSizeLevel,\\r\\n\\tsetBlogPostFontSizeLevel,\\r\\n};\\r\\n\\r\\nexport default LocalStorageService;\\r\\nexport {\\r\\n\\tgetCookiesConsent,\\r\\n\\tsetCookiesConsent,\\r\\n\\tgetReadBlogPostIds,\\r\\n\\taddReadBlogPostId,\\r\\n\\tgetBlogPostFontSizeLevel,\\r\\n\\tsetBlogPostFontSizeLevel,\\r\\n};\\r\\n\";","export default \"import axios from \\\"axios\\\";\\r\\n\\r\\nconst getClientIp = () => axios.get(\\\"https://1.1.1.1/cdn-cgi/trace\\\");\\r\\n\\r\\nconst exports = { getClientIp };\\r\\nexport default exports;\\r\\nexport { getClientIp };\\r\\n\";","export default \"import toc from \\\"markdown-toc-unlazy\\\";\\r\\n\\r\\nconst generateTocJsonFromMarkdown = (markdown) => toc(markdown).json;\\r\\n\\r\\nconst MarkdownTocUtils = {\\r\\n\\tgenerateTocJsonFromMarkdown,\\r\\n};\\r\\nexport default MarkdownTocUtils;\\r\\nexport { generateTocJsonFromMarkdown };\\r\\n\";","export default \"const isScrollToTopButtonVisible = () =>\\r\\n\\tdocument.scrollingElement && document.scrollingElement.scrollTop >= document.scrollingElement.offsetHeight * 0.75;\\r\\n\\r\\nconst isScrolledToBottom = () =>\\r\\n\\tMath.abs(\\r\\n\\t\\tdocument.scrollingElement.scrollTop +\\r\\n\\t\\t\\tdocument.scrollingElement.offsetHeight -\\r\\n\\t\\t\\tdocument.scrollingElement.scrollHeight\\r\\n\\t) < 20;\\r\\n\\r\\nconst scrollToElement = (element, delay) =>\\r\\n\\tsetTimeout(() => {\\r\\n\\t\\tif (\\r\\n\\t\\t\\t// element.getBoundingClientRect().top means how much window's top is above the element's top\\r\\n\\t\\t\\t(isScrolledToBottom() && element.getBoundingClientRect().top < 0) ||\\r\\n\\t\\t\\t(!isScrolledToBottom() && Math.abs(element.getBoundingClientRect().top) > 20)\\r\\n\\t\\t) {\\r\\n\\t\\t\\telement.scrollIntoView(true);\\r\\n\\t\\t\\tscrollToElement(element, 250);\\r\\n\\t\\t}\\r\\n\\t}, delay);\\r\\n\\r\\nconst ScrollUtils = {\\r\\n\\tisScrollToTopButtonVisible,\\r\\n\\tisScrolledToBottom,\\r\\n\\tscrollToElement,\\r\\n};\\r\\n\\r\\nexport default ScrollUtils;\\r\\nexport { isScrollToTopButtonVisible, isScrolledToBottom, scrollToElement };\\r\\n\";","export default \"import React from \\\"react\\\";\\r\\n\\r\\nif (process.env.NODE_ENV === \\\"development\\\") {\\r\\n\\tconst whyDidYouRender = require(\\\"@welldone-software/why-did-you-render\\\");\\r\\n\\twhyDidYouRender(React, {\\r\\n\\t\\ttrackAllPureComponents: true,\\r\\n\\t});\\r\\n}\\r\\n\";"],"sourceRoot":""}